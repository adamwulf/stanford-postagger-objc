//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/graph/DirectedMultiGraph.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpGraphDirectedMultiGraph")
#ifdef RESTRICT_EduStanfordNlpGraphDirectedMultiGraph
#define INCLUDE_ALL_EduStanfordNlpGraphDirectedMultiGraph 0
#else
#define INCLUDE_ALL_EduStanfordNlpGraphDirectedMultiGraph 1
#endif
#undef RESTRICT_EduStanfordNlpGraphDirectedMultiGraph

#if !defined (EduStanfordNlpGraphDirectedMultiGraph_) && (INCLUDE_ALL_EduStanfordNlpGraphDirectedMultiGraph || defined(INCLUDE_EduStanfordNlpGraphDirectedMultiGraph))
#define EduStanfordNlpGraphDirectedMultiGraph_

#define RESTRICT_EduStanfordNlpGraphGraph 1
#define INCLUDE_EduStanfordNlpGraphGraph 1
#include "edu/stanford/nlp/graph/Graph.h"

@class EduStanfordNlpUtilMapFactory;
@protocol JavaLangIterable;
@protocol JavaUtilCollection;
@protocol JavaUtilIterator;
@protocol JavaUtilList;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface EduStanfordNlpGraphDirectedMultiGraph : NSObject < EduStanfordNlpGraphGraph > {
 @public
  id<JavaUtilMap> outgoingEdges_;
  id<JavaUtilMap> incomingEdges_;
  EduStanfordNlpUtilMapFactory *outerMapFactory_;
  EduStanfordNlpUtilMapFactory *innerMapFactory_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithEduStanfordNlpGraphDirectedMultiGraph:(EduStanfordNlpGraphDirectedMultiGraph *)graph;

- (instancetype)initWithEduStanfordNlpUtilMapFactory:(EduStanfordNlpUtilMapFactory *)outerMapFactory
                    withEduStanfordNlpUtilMapFactory:(EduStanfordNlpUtilMapFactory *)innerMapFactory;

- (void)addWithId:(id)source
           withId:(id)dest
           withId:(id)data;

- (jboolean)addVertexWithId:(id)v;

- (void)clear;

- (jboolean)containsVertexWithId:(id)v;

- (id<JavaUtilList>)convertPathWithJavaUtilList:(id<JavaUtilList>)nodes
                                    withBoolean:(jboolean)directionSensitive;

- (void)deleteDuplicateEdges;

- (id<JavaLangIterable>)edgeIterable;

- (id<JavaUtilIterator>)edgeIterator;

- (jboolean)isEqual:(id)that;

- (id<JavaUtilList>)getAllEdges;

- (id<JavaUtilSet>)getAllVertices;

- (id<JavaUtilSet>)getChildrenWithId:(id)vertex;

- (id<JavaUtilList>)getConnectedComponents;

- (id<JavaUtilList>)getEdgesWithId:(id)source
                            withId:(id)dest;

- (id<JavaUtilList>)getIncomingEdgesWithId:(id)v;

- (jint)getInDegreeWithId:(id)vertex;

- (id<JavaUtilSet>)getNeighborsWithId:(id)v;

- (jint)getNumEdges;

- (jint)getNumVertices;

- (jint)getOutDegreeWithId:(id)vertex;

- (id<JavaUtilList>)getOutgoingEdgesWithId:(id)v;

- (id<JavaUtilSet>)getParentsWithId:(id)vertex;

- (id<JavaUtilList>)getShortestPathWithId:(id)node1
                                   withId:(id)node2;

- (id<JavaUtilList>)getShortestPathWithId:(id)node1
                                   withId:(id)node2
                              withBoolean:(jboolean)directionSensitive;

- (id<JavaUtilList>)getShortestPathEdgesWithId:(id)node1
                                        withId:(id)node2;

- (id<JavaUtilList>)getShortestPathEdgesWithId:(id)node1
                                        withId:(id)node2
                                   withBoolean:(jboolean)directionSensitive;

- (NSUInteger)hash;

- (id<JavaLangIterable>)incomingEdgeIterableWithId:(id)vertex;

- (id<JavaUtilIterator>)incomingEdgeIteratorWithId:(id)vertex;

- (jboolean)isEdgeWithId:(id)source
                  withId:(id)dest;

- (jboolean)isEmpty;

- (jboolean)isNeighborWithId:(id)source
                      withId:(id)dest;

- (id<JavaLangIterable>)outgoingEdgeIterableWithId:(id)vertex;

- (id<JavaUtilIterator>)outgoingEdgeIteratorWithId:(id)vertex;

- (jboolean)removeEdgeWithId:(id)source
                      withId:(id)dest
                      withId:(id)data;

- (jboolean)removeEdgesWithId:(id)source
                       withId:(id)dest;

- (jboolean)removeVertexWithId:(id)vertex;

- (jboolean)removeVerticesWithJavaUtilCollection:(id<JavaUtilCollection>)vertices;

- (void)removeZeroDegreeNodes;

- (id<JavaUtilMap>)toMap;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpGraphDirectedMultiGraph)

J2OBJC_FIELD_SETTER(EduStanfordNlpGraphDirectedMultiGraph, outgoingEdges_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduStanfordNlpGraphDirectedMultiGraph, incomingEdges_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduStanfordNlpGraphDirectedMultiGraph, outerMapFactory_, EduStanfordNlpUtilMapFactory *)
J2OBJC_FIELD_SETTER(EduStanfordNlpGraphDirectedMultiGraph, innerMapFactory_, EduStanfordNlpUtilMapFactory *)

FOUNDATION_EXPORT void EduStanfordNlpGraphDirectedMultiGraph_init(EduStanfordNlpGraphDirectedMultiGraph *self);

FOUNDATION_EXPORT EduStanfordNlpGraphDirectedMultiGraph *new_EduStanfordNlpGraphDirectedMultiGraph_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpGraphDirectedMultiGraph *create_EduStanfordNlpGraphDirectedMultiGraph_init();

FOUNDATION_EXPORT void EduStanfordNlpGraphDirectedMultiGraph_initWithEduStanfordNlpUtilMapFactory_withEduStanfordNlpUtilMapFactory_(EduStanfordNlpGraphDirectedMultiGraph *self, EduStanfordNlpUtilMapFactory *outerMapFactory, EduStanfordNlpUtilMapFactory *innerMapFactory);

FOUNDATION_EXPORT EduStanfordNlpGraphDirectedMultiGraph *new_EduStanfordNlpGraphDirectedMultiGraph_initWithEduStanfordNlpUtilMapFactory_withEduStanfordNlpUtilMapFactory_(EduStanfordNlpUtilMapFactory *outerMapFactory, EduStanfordNlpUtilMapFactory *innerMapFactory) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpGraphDirectedMultiGraph *create_EduStanfordNlpGraphDirectedMultiGraph_initWithEduStanfordNlpUtilMapFactory_withEduStanfordNlpUtilMapFactory_(EduStanfordNlpUtilMapFactory *outerMapFactory, EduStanfordNlpUtilMapFactory *innerMapFactory);

FOUNDATION_EXPORT void EduStanfordNlpGraphDirectedMultiGraph_initWithEduStanfordNlpGraphDirectedMultiGraph_(EduStanfordNlpGraphDirectedMultiGraph *self, EduStanfordNlpGraphDirectedMultiGraph *graph);

FOUNDATION_EXPORT EduStanfordNlpGraphDirectedMultiGraph *new_EduStanfordNlpGraphDirectedMultiGraph_initWithEduStanfordNlpGraphDirectedMultiGraph_(EduStanfordNlpGraphDirectedMultiGraph *graph) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpGraphDirectedMultiGraph *create_EduStanfordNlpGraphDirectedMultiGraph_initWithEduStanfordNlpGraphDirectedMultiGraph_(EduStanfordNlpGraphDirectedMultiGraph *graph);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpGraphDirectedMultiGraph)

#endif

#if !defined (EduStanfordNlpGraphDirectedMultiGraph_EdgeIterator_) && (INCLUDE_ALL_EduStanfordNlpGraphDirectedMultiGraph || defined(INCLUDE_EduStanfordNlpGraphDirectedMultiGraph_EdgeIterator))
#define EduStanfordNlpGraphDirectedMultiGraph_EdgeIterator_

#define RESTRICT_JavaUtilIterator 1
#define INCLUDE_JavaUtilIterator 1
#include "java/util/Iterator.h"

@class EduStanfordNlpGraphDirectedMultiGraph;
@protocol JavaUtilFunctionConsumer;
@protocol JavaUtilMap;

@interface EduStanfordNlpGraphDirectedMultiGraph_EdgeIterator : NSObject < JavaUtilIterator >

#pragma mark Public

- (instancetype)initWithEduStanfordNlpGraphDirectedMultiGraph:(EduStanfordNlpGraphDirectedMultiGraph *)graph;

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)source
                             withId:(id)startVertex;

- (jboolean)hasNext;

- (id)next;

- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpGraphDirectedMultiGraph_EdgeIterator)

FOUNDATION_EXPORT void EduStanfordNlpGraphDirectedMultiGraph_EdgeIterator_initWithEduStanfordNlpGraphDirectedMultiGraph_(EduStanfordNlpGraphDirectedMultiGraph_EdgeIterator *self, EduStanfordNlpGraphDirectedMultiGraph *graph);

FOUNDATION_EXPORT EduStanfordNlpGraphDirectedMultiGraph_EdgeIterator *new_EduStanfordNlpGraphDirectedMultiGraph_EdgeIterator_initWithEduStanfordNlpGraphDirectedMultiGraph_(EduStanfordNlpGraphDirectedMultiGraph *graph) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpGraphDirectedMultiGraph_EdgeIterator *create_EduStanfordNlpGraphDirectedMultiGraph_EdgeIterator_initWithEduStanfordNlpGraphDirectedMultiGraph_(EduStanfordNlpGraphDirectedMultiGraph *graph);

FOUNDATION_EXPORT void EduStanfordNlpGraphDirectedMultiGraph_EdgeIterator_initWithJavaUtilMap_withId_(EduStanfordNlpGraphDirectedMultiGraph_EdgeIterator *self, id<JavaUtilMap> source, id startVertex);

FOUNDATION_EXPORT EduStanfordNlpGraphDirectedMultiGraph_EdgeIterator *new_EduStanfordNlpGraphDirectedMultiGraph_EdgeIterator_initWithJavaUtilMap_withId_(id<JavaUtilMap> source, id startVertex) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpGraphDirectedMultiGraph_EdgeIterator *create_EduStanfordNlpGraphDirectedMultiGraph_EdgeIterator_initWithJavaUtilMap_withId_(id<JavaUtilMap> source, id startVertex);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpGraphDirectedMultiGraph_EdgeIterator)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpGraphDirectedMultiGraph")
