//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/IndexedWord.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpLingIndexedWord")
#ifdef RESTRICT_EduStanfordNlpLingIndexedWord
#define INCLUDE_ALL_EduStanfordNlpLingIndexedWord 0
#else
#define INCLUDE_ALL_EduStanfordNlpLingIndexedWord 1
#endif
#undef RESTRICT_EduStanfordNlpLingIndexedWord

#if !defined (EduStanfordNlpLingIndexedWord_) && (INCLUDE_ALL_EduStanfordNlpLingIndexedWord || defined(INCLUDE_EduStanfordNlpLingIndexedWord))
#define EduStanfordNlpLingIndexedWord_

#define RESTRICT_EduStanfordNlpLingAbstractCoreLabel 1
#define INCLUDE_EduStanfordNlpLingAbstractCoreLabel 1
#include "edu/stanford/nlp/ling/AbstractCoreLabel.h"

#define RESTRICT_JavaLangComparable 1
#define INCLUDE_JavaLangComparable 1
#include "java/lang/Comparable.h"

@class EduStanfordNlpLingCoreLabel;
@class EduStanfordNlpLingCoreLabel_OutputFormat;
@class IOSClass;
@protocol EduStanfordNlpLingLabel;
@protocol EduStanfordNlpLingLabelFactory;
@protocol JavaUtilSet;

@interface EduStanfordNlpLingIndexedWord : NSObject < EduStanfordNlpLingAbstractCoreLabel, JavaLangComparable >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithEduStanfordNlpLingCoreLabel:(EduStanfordNlpLingCoreLabel *)w;

- (instancetype)initWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)w;

- (instancetype)initWithNSString:(NSString *)docID
                         withInt:(jint)sentenceIndex
                         withInt:(jint)index;

- (EduStanfordNlpLingCoreLabel *)backingLabel;

- (jint)beginPosition;

- (jint)compareToWithId:(EduStanfordNlpLingIndexedWord *)w;

- (jboolean)containsKeyWithIOSClass:(IOSClass *)key;

- (jint)copyCount OBJC_METHOD_FAMILY_NONE;

- (NSString *)docID;

- (jint)endPosition;

- (jboolean)isEqual:(id)o;

+ (id<EduStanfordNlpLingLabelFactory>)factory;

- (id)getWithIOSClass:(IOSClass *)key;

- (EduStanfordNlpLingIndexedWord *)getOriginal;

- (NSString *)getStringWithIOSClass:(IOSClass *)key;

- (NSString *)getStringWithIOSClass:(IOSClass *)key
                       withNSString:(NSString *)def;

- (jboolean)hasWithIOSClass:(IOSClass *)key;

- (NSUInteger)hash;

- (jint)index;

- (jboolean)isCopyWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)otherWord;

- (id<JavaUtilSet>)keySet;

- (id<EduStanfordNlpLingLabelFactory>)labelFactory;

- (NSString *)lemma;

- (EduStanfordNlpLingIndexedWord *)makeCopy;

- (EduStanfordNlpLingIndexedWord *)makeCopyWithInt:(jint)count;

- (EduStanfordNlpLingIndexedWord *)makeSoftCopy;

- (EduStanfordNlpLingIndexedWord *)makeSoftCopyWithInt:(jint)count;

- (NSString *)ner;

- (NSString *)originalText;

- (jdouble)pseudoPosition;

- (id)removeWithIOSClass:(IOSClass *)key;

- (jint)sentIndex;

- (id)setWithIOSClass:(IOSClass *)key
               withId:(id)value;

- (void)setBeginPositionWithInt:(jint)beginPos;

- (void)setCopyCountWithInt:(jint)count;

- (void)setDocIDWithNSString:(NSString *)docID;

- (void)setEndPositionWithInt:(jint)endPos;

- (void)setFromStringWithNSString:(NSString *)labelStr;

- (void)setIndexWithInt:(jint)index;

- (void)setLemmaWithNSString:(NSString *)lemma;

- (void)setNERWithNSString:(NSString *)ner;

- (void)setOriginalTextWithNSString:(NSString *)originalText;

- (void)setPseudoPositionWithDouble:(jdouble)position;

- (void)setSentIndexWithInt:(jint)sentIndex;

- (void)setTagWithNSString:(NSString *)tag;

- (void)setValueWithNSString:(NSString *)value;

- (void)setWordWithNSString:(NSString *)word;

- (jint)size;

- (NSString *)tag;

- (NSString *)toPrimes;

- (NSString *)description;

- (NSString *)toStringWithEduStanfordNlpLingCoreLabel_OutputFormat:(EduStanfordNlpLingCoreLabel_OutputFormat *)format;

- (NSString *)value;

- (NSString *)word;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpLingIndexedWord)

inline EduStanfordNlpLingIndexedWord *EduStanfordNlpLingIndexedWord_get_NO_WORD();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpLingIndexedWord *EduStanfordNlpLingIndexedWord_NO_WORD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingIndexedWord, NO_WORD, EduStanfordNlpLingIndexedWord *)

FOUNDATION_EXPORT void EduStanfordNlpLingIndexedWord_init(EduStanfordNlpLingIndexedWord *self);

FOUNDATION_EXPORT EduStanfordNlpLingIndexedWord *new_EduStanfordNlpLingIndexedWord_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingIndexedWord *create_EduStanfordNlpLingIndexedWord_init();

FOUNDATION_EXPORT void EduStanfordNlpLingIndexedWord_initWithEduStanfordNlpLingLabel_(EduStanfordNlpLingIndexedWord *self, id<EduStanfordNlpLingLabel> w);

FOUNDATION_EXPORT EduStanfordNlpLingIndexedWord *new_EduStanfordNlpLingIndexedWord_initWithEduStanfordNlpLingLabel_(id<EduStanfordNlpLingLabel> w) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingIndexedWord *create_EduStanfordNlpLingIndexedWord_initWithEduStanfordNlpLingLabel_(id<EduStanfordNlpLingLabel> w);

FOUNDATION_EXPORT void EduStanfordNlpLingIndexedWord_initWithEduStanfordNlpLingCoreLabel_(EduStanfordNlpLingIndexedWord *self, EduStanfordNlpLingCoreLabel *w);

FOUNDATION_EXPORT EduStanfordNlpLingIndexedWord *new_EduStanfordNlpLingIndexedWord_initWithEduStanfordNlpLingCoreLabel_(EduStanfordNlpLingCoreLabel *w) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingIndexedWord *create_EduStanfordNlpLingIndexedWord_initWithEduStanfordNlpLingCoreLabel_(EduStanfordNlpLingCoreLabel *w);

FOUNDATION_EXPORT void EduStanfordNlpLingIndexedWord_initWithNSString_withInt_withInt_(EduStanfordNlpLingIndexedWord *self, NSString *docID, jint sentenceIndex, jint index);

FOUNDATION_EXPORT EduStanfordNlpLingIndexedWord *new_EduStanfordNlpLingIndexedWord_initWithNSString_withInt_withInt_(NSString *docID, jint sentenceIndex, jint index) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingIndexedWord *create_EduStanfordNlpLingIndexedWord_initWithNSString_withInt_withInt_(NSString *docID, jint sentenceIndex, jint index);

FOUNDATION_EXPORT id<EduStanfordNlpLingLabelFactory> EduStanfordNlpLingIndexedWord_factory();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingIndexedWord)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpLingIndexedWord")
