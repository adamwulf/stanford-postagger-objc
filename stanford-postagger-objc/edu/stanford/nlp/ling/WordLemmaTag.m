//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/WordLemmaTag.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/ling/LabelFactory.h"
#include "edu/stanford/nlp/ling/WordLemmaTag.h"
#include "edu/stanford/nlp/ling/WordLemmaTagFactory.h"
#include "edu/stanford/nlp/ling/WordTag.h"
#include "edu/stanford/nlp/process/Morphology.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"

@interface EduStanfordNlpLingWordLemmaTag () {
 @public
  NSString *word_;
  NSString *lemma_;
  NSString *tag_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpLingWordLemmaTag, word_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingWordLemmaTag, lemma_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingWordLemmaTag, tag_, NSString *)

inline NSString *EduStanfordNlpLingWordLemmaTag_get_DIVIDER();
static NSString *EduStanfordNlpLingWordLemmaTag_DIVIDER = @"/";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingWordLemmaTag, DIVIDER, NSString *)

inline jlong EduStanfordNlpLingWordLemmaTag_get_serialVersionUID();
#define EduStanfordNlpLingWordLemmaTag_serialVersionUID -5993410244163988138LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpLingWordLemmaTag, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpLingWordLemmaTag_setTagWithNSString_(EduStanfordNlpLingWordLemmaTag *self, NSString *tag);

@implementation EduStanfordNlpLingWordLemmaTag

- (instancetype)initWithNSString:(NSString *)word {
  EduStanfordNlpLingWordLemmaTag_initWithNSString_(self, word);
  return self;
}

- (instancetype)initWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)word {
  EduStanfordNlpLingWordLemmaTag_initWithEduStanfordNlpLingLabel_(self, word);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingWordLemmaTag_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)word
                    withNSString:(NSString *)tag {
  EduStanfordNlpLingWordLemmaTag_initWithNSString_withNSString_(self, word, tag);
  return self;
}

- (instancetype)initWithNSString:(NSString *)word
                    withNSString:(NSString *)lemma
                    withNSString:(NSString *)tag {
  EduStanfordNlpLingWordLemmaTag_initWithNSString_withNSString_withNSString_(self, word, lemma, tag);
  return self;
}

- (instancetype)initWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)word
                    withEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)tag {
  EduStanfordNlpLingWordLemmaTag_initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_(self, word, tag);
  return self;
}

- (NSString *)value {
  return word_;
}

- (NSString *)word {
  return [self value];
}

- (void)setValueWithNSString:(NSString *)value {
  word_ = value;
}

- (void)setWordWithNSString:(NSString *)word {
  [self setValueWithNSString:word];
}

- (void)setLemmaWithNSString:(NSString *)lemma {
  self->lemma_ = lemma;
}

- (void)setTagWithNSString:(NSString *)tag {
  EduStanfordNlpLingWordLemmaTag_setTagWithNSString_(self, tag);
}

- (NSString *)tag {
  return tag_;
}

- (NSString *)lemma {
  return lemma_;
}

- (NSString *)description {
  return [self toStringWithNSString:EduStanfordNlpLingWordLemmaTag_DIVIDER];
}

- (NSString *)toStringWithNSString:(NSString *)divider {
  return JreStrcat("$$$$$", [self word], divider, lemma_, divider, tag_);
}

- (void)setFromStringWithNSString:(NSString *)labelStr {
  [self setFromStringWithNSString:labelStr withNSString:EduStanfordNlpLingWordLemmaTag_DIVIDER];
}

- (void)setFromStringWithNSString:(NSString *)labelStr
                     withNSString:(NSString *)divider {
  jint first = [((NSString *) nil_chk(labelStr)) indexOfString:divider];
  jint second = [labelStr lastIndexOfString:divider];
  if (first == second) {
    [self setWordWithNSString:[labelStr substring:0 endIndex:first]];
    EduStanfordNlpLingWordLemmaTag_setTagWithNSString_(self, [labelStr substring:first + 1]);
    [self setLemmaWithNSString:[((EduStanfordNlpLingWordTag *) nil_chk(EduStanfordNlpProcessMorphology_stemStaticWithNSString_withNSString_([labelStr substring:0 endIndex:first], [labelStr substring:first + 1]))) word]];
  }
  else if (first >= 0) {
    [self setWordWithNSString:[labelStr substring:0 endIndex:first]];
    [self setLemmaWithNSString:[labelStr substring:first + 1 endIndex:second]];
    EduStanfordNlpLingWordLemmaTag_setTagWithNSString_(self, [labelStr substring:second + 1]);
  }
  else {
    [self setWordWithNSString:labelStr];
    [self setLemmaWithNSString:nil];
    EduStanfordNlpLingWordLemmaTag_setTagWithNSString_(self, nil);
  }
}

- (jboolean)isEqual:(id)o {
  if (self == o) return true;
  if (!([o isKindOfClass:[EduStanfordNlpLingWordLemmaTag class]])) return false;
  EduStanfordNlpLingWordLemmaTag *other = (EduStanfordNlpLingWordLemmaTag *) cast_chk(o, [EduStanfordNlpLingWordLemmaTag class]);
  return [((NSString *) nil_chk([self word])) isEqual:[((EduStanfordNlpLingWordLemmaTag *) nil_chk(other)) word]] && [((NSString *) nil_chk([self lemma])) isEqual:[other lemma]] && [((NSString *) nil_chk([self tag])) isEqual:[other tag]];
}

- (NSUInteger)hash {
  jint result;
  result = (word_ != nil ? ((jint) [word_ hash]) : 3);
  result = 29 * result + (tag_ != nil ? ((jint) [tag_ hash]) : 0);
  result = 29 * result + (lemma_ != nil ? ((jint) [lemma_ hash]) : 0);
  return result;
}

- (jint)compareToWithId:(EduStanfordNlpLingWordLemmaTag *)wordLemmaTag {
  (void) cast_chk(wordLemmaTag, [EduStanfordNlpLingWordLemmaTag class]);
  jint first = [((NSString *) nil_chk([self word])) compareToWithId:[((EduStanfordNlpLingWordLemmaTag *) nil_chk(wordLemmaTag)) word]];
  if (first != 0) return first;
  jint second = [((NSString *) nil_chk([self lemma])) compareToWithId:[wordLemmaTag lemma]];
  if (second != 0) return second;
  else return [((NSString *) nil_chk([self tag])) compareToWithId:[wordLemmaTag tag]];
}

- (id<EduStanfordNlpLingLabelFactory>)labelFactory {
  return new_EduStanfordNlpLingWordLemmaTagFactory_init();
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduStanfordNlpLingWordLemmaTag_mainWithNSStringArray_(args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 8, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 13, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingLabelFactory;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 16, 17, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithEduStanfordNlpLingLabel:);
  methods[2].selector = @selector(init);
  methods[3].selector = @selector(initWithNSString:withNSString:);
  methods[4].selector = @selector(initWithNSString:withNSString:withNSString:);
  methods[5].selector = @selector(initWithEduStanfordNlpLingLabel:withEduStanfordNlpLingLabel:);
  methods[6].selector = @selector(value);
  methods[7].selector = @selector(word);
  methods[8].selector = @selector(setValueWithNSString:);
  methods[9].selector = @selector(setWordWithNSString:);
  methods[10].selector = @selector(setLemmaWithNSString:);
  methods[11].selector = @selector(setTagWithNSString:);
  methods[12].selector = @selector(tag);
  methods[13].selector = @selector(lemma);
  methods[14].selector = @selector(description);
  methods[15].selector = @selector(toStringWithNSString:);
  methods[16].selector = @selector(setFromStringWithNSString:);
  methods[17].selector = @selector(setFromStringWithNSString:withNSString:);
  methods[18].selector = @selector(isEqual:);
  methods[19].selector = @selector(hash);
  methods[20].selector = @selector(compareToWithId:);
  methods[21].selector = @selector(labelFactory);
  methods[22].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "word_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "lemma_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "tag_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "DIVIDER", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 18, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpLingWordLemmaTag_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LEduStanfordNlpLingLabel;", "LNSString;LNSString;", "LNSString;LNSString;LNSString;", "LEduStanfordNlpLingLabel;LEduStanfordNlpLingLabel;", "setValue", "setWord", "setLemma", "setTag", "toString", "setFromString", "equals", "LNSObject;", "hashCode", "compareTo", "LEduStanfordNlpLingWordLemmaTag;", "main", "[LNSString;", &EduStanfordNlpLingWordLemmaTag_DIVIDER, "Ljava/lang/Object;Ledu/stanford/nlp/ling/Label;Ljava/lang/Comparable<Ledu/stanford/nlp/ling/WordLemmaTag;>;Ledu/stanford/nlp/ling/HasWord;Ledu/stanford/nlp/ling/HasTag;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingWordLemmaTag = { "WordLemmaTag", "edu.stanford.nlp.ling", ptrTable, methods, fields, 7, 0x1, 23, 5, -1, -1, -1, 19, -1 };
  return &_EduStanfordNlpLingWordLemmaTag;
}

@end

void EduStanfordNlpLingWordLemmaTag_initWithNSString_(EduStanfordNlpLingWordLemmaTag *self, NSString *word) {
  NSObject_init(self);
  self->word_ = word;
  self->lemma_ = nil;
  EduStanfordNlpLingWordLemmaTag_setTagWithNSString_(self, nil);
}

EduStanfordNlpLingWordLemmaTag *new_EduStanfordNlpLingWordLemmaTag_initWithNSString_(NSString *word) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingWordLemmaTag, initWithNSString_, word)
}

EduStanfordNlpLingWordLemmaTag *create_EduStanfordNlpLingWordLemmaTag_initWithNSString_(NSString *word) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingWordLemmaTag, initWithNSString_, word)
}

void EduStanfordNlpLingWordLemmaTag_initWithEduStanfordNlpLingLabel_(EduStanfordNlpLingWordLemmaTag *self, id<EduStanfordNlpLingLabel> word) {
  EduStanfordNlpLingWordLemmaTag_initWithNSString_(self, [((id<EduStanfordNlpLingLabel>) nil_chk(word)) value]);
}

EduStanfordNlpLingWordLemmaTag *new_EduStanfordNlpLingWordLemmaTag_initWithEduStanfordNlpLingLabel_(id<EduStanfordNlpLingLabel> word) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingWordLemmaTag, initWithEduStanfordNlpLingLabel_, word)
}

EduStanfordNlpLingWordLemmaTag *create_EduStanfordNlpLingWordLemmaTag_initWithEduStanfordNlpLingLabel_(id<EduStanfordNlpLingLabel> word) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingWordLemmaTag, initWithEduStanfordNlpLingLabel_, word)
}

void EduStanfordNlpLingWordLemmaTag_init(EduStanfordNlpLingWordLemmaTag *self) {
  NSObject_init(self);
}

EduStanfordNlpLingWordLemmaTag *new_EduStanfordNlpLingWordLemmaTag_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingWordLemmaTag, init)
}

EduStanfordNlpLingWordLemmaTag *create_EduStanfordNlpLingWordLemmaTag_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingWordLemmaTag, init)
}

void EduStanfordNlpLingWordLemmaTag_initWithNSString_withNSString_(EduStanfordNlpLingWordLemmaTag *self, NSString *word, NSString *tag) {
  NSObject_init(self);
  EduStanfordNlpLingWordTag *wT = new_EduStanfordNlpLingWordTag_initWithNSString_withNSString_(word, tag);
  self->word_ = word;
  self->lemma_ = [((EduStanfordNlpLingWordTag *) nil_chk(EduStanfordNlpProcessMorphology_stemStaticWithEduStanfordNlpLingWordTag_(wT))) word];
  EduStanfordNlpLingWordLemmaTag_setTagWithNSString_(self, tag);
}

EduStanfordNlpLingWordLemmaTag *new_EduStanfordNlpLingWordLemmaTag_initWithNSString_withNSString_(NSString *word, NSString *tag) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingWordLemmaTag, initWithNSString_withNSString_, word, tag)
}

EduStanfordNlpLingWordLemmaTag *create_EduStanfordNlpLingWordLemmaTag_initWithNSString_withNSString_(NSString *word, NSString *tag) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingWordLemmaTag, initWithNSString_withNSString_, word, tag)
}

void EduStanfordNlpLingWordLemmaTag_initWithNSString_withNSString_withNSString_(EduStanfordNlpLingWordLemmaTag *self, NSString *word, NSString *lemma, NSString *tag) {
  EduStanfordNlpLingWordLemmaTag_initWithNSString_(self, word);
  self->lemma_ = lemma;
  EduStanfordNlpLingWordLemmaTag_setTagWithNSString_(self, tag);
}

EduStanfordNlpLingWordLemmaTag *new_EduStanfordNlpLingWordLemmaTag_initWithNSString_withNSString_withNSString_(NSString *word, NSString *lemma, NSString *tag) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingWordLemmaTag, initWithNSString_withNSString_withNSString_, word, lemma, tag)
}

EduStanfordNlpLingWordLemmaTag *create_EduStanfordNlpLingWordLemmaTag_initWithNSString_withNSString_withNSString_(NSString *word, NSString *lemma, NSString *tag) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingWordLemmaTag, initWithNSString_withNSString_withNSString_, word, lemma, tag)
}

void EduStanfordNlpLingWordLemmaTag_initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_(EduStanfordNlpLingWordLemmaTag *self, id<EduStanfordNlpLingLabel> word, id<EduStanfordNlpLingLabel> tag) {
  EduStanfordNlpLingWordLemmaTag_initWithEduStanfordNlpLingLabel_(self, word);
  EduStanfordNlpLingWordTag *wT = new_EduStanfordNlpLingWordTag_initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_(word, tag);
  self->lemma_ = [((EduStanfordNlpLingWordTag *) nil_chk(EduStanfordNlpProcessMorphology_stemStaticWithEduStanfordNlpLingWordTag_(wT))) word];
  EduStanfordNlpLingWordLemmaTag_setTagWithNSString_(self, [((id<EduStanfordNlpLingLabel>) nil_chk(tag)) value]);
}

EduStanfordNlpLingWordLemmaTag *new_EduStanfordNlpLingWordLemmaTag_initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_(id<EduStanfordNlpLingLabel> word, id<EduStanfordNlpLingLabel> tag) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingWordLemmaTag, initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_, word, tag)
}

EduStanfordNlpLingWordLemmaTag *create_EduStanfordNlpLingWordLemmaTag_initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_(id<EduStanfordNlpLingLabel> word, id<EduStanfordNlpLingLabel> tag) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingWordLemmaTag, initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_, word, tag)
}

void EduStanfordNlpLingWordLemmaTag_setTagWithNSString_(EduStanfordNlpLingWordLemmaTag *self, NSString *tag) {
  self->tag_ = tag;
}

void EduStanfordNlpLingWordLemmaTag_mainWithNSStringArray_(IOSObjectArray *args) {
  EduStanfordNlpLingWordLemmaTag_initialize();
  EduStanfordNlpLingWordLemmaTag *wLT = new_EduStanfordNlpLingWordLemmaTag_init();
  [wLT setFromStringWithNSString:@"hunter/NN"];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:[wLT word]];
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:[wLT lemma]];
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:[wLT tag]];
  EduStanfordNlpLingWordLemmaTag *wLT2 = new_EduStanfordNlpLingWordLemmaTag_init();
  [wLT2 setFromStringWithNSString:@"bought/buy/V"];
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:[wLT2 word]];
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:[wLT2 lemma]];
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:[wLT2 tag]];
  EduStanfordNlpLingWordLemmaTag *wLT3 = new_EduStanfordNlpLingWordLemmaTag_init();
  [wLT2 setFromStringWithNSString:@"life"];
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:[wLT3 word]];
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:[wLT3 lemma]];
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:[wLT3 tag]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingWordLemmaTag)
