//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/Sentence.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpLingSentence")
#ifdef RESTRICT_EduStanfordNlpLingSentence
#define INCLUDE_ALL_EduStanfordNlpLingSentence 0
#else
#define INCLUDE_ALL_EduStanfordNlpLingSentence 1
#endif
#undef RESTRICT_EduStanfordNlpLingSentence

#if !defined (EduStanfordNlpLingSentence_) && (INCLUDE_ALL_EduStanfordNlpLingSentence || defined(INCLUDE_EduStanfordNlpLingSentence))
#define EduStanfordNlpLingSentence_

@class IOSObjectArray;
@class JavaUtilArrayList;
@protocol JavaUtilList;

@interface EduStanfordNlpLingSentence : NSObject

#pragma mark Public

+ (NSString *)extractNgramWithJavaUtilList:(id<JavaUtilList>)list
                                   withInt:(jint)start
                                   withInt:(jint)end;

+ (NSString *)listToOriginalTextStringWithJavaUtilList:(id<JavaUtilList>)list;

+ (NSString *)listToOriginalTextStringWithJavaUtilList:(id<JavaUtilList>)list
                                           withBoolean:(jboolean)printBeforeBeforeStart;

+ (NSString *)listToStringWithJavaUtilList:(id<JavaUtilList>)list;

+ (NSString *)listToStringWithJavaUtilList:(id<JavaUtilList>)list
                               withBoolean:(jboolean)justValue;

+ (NSString *)listToStringWithJavaUtilList:(id<JavaUtilList>)list
                               withBoolean:(jboolean)justValue
                              withNSString:(NSString *)separator;

+ (id<JavaUtilList>)toCoreLabelListWithJavaUtilList:(id<JavaUtilList>)words;

+ (id<JavaUtilList>)toCoreLabelListWithNSStringArray:(IOSObjectArray *)words;

+ (JavaUtilArrayList *)toTaggedListWithJavaUtilList:(id<JavaUtilList>)lex
                                   withJavaUtilList:(id<JavaUtilList>)tags;

+ (JavaUtilArrayList *)toUntaggedListWithJavaUtilList:(id<JavaUtilList>)lex;

+ (JavaUtilArrayList *)toUntaggedListWithNSStringArray:(IOSObjectArray *)words;

+ (id<JavaUtilList>)toWordListWithNSStringArray:(IOSObjectArray *)words;

+ (NSString *)wordToStringWithId:(id)o
                     withBoolean:(jboolean)justValue;

+ (NSString *)wordToStringWithId:(id)o
                     withBoolean:(jboolean)justValue
                    withNSString:(NSString *)separator;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingSentence)

FOUNDATION_EXPORT JavaUtilArrayList *EduStanfordNlpLingSentence_toTaggedListWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> lex, id<JavaUtilList> tags);

FOUNDATION_EXPORT JavaUtilArrayList *EduStanfordNlpLingSentence_toUntaggedListWithJavaUtilList_(id<JavaUtilList> lex);

FOUNDATION_EXPORT JavaUtilArrayList *EduStanfordNlpLingSentence_toUntaggedListWithNSStringArray_(IOSObjectArray *words);

FOUNDATION_EXPORT id<JavaUtilList> EduStanfordNlpLingSentence_toWordListWithNSStringArray_(IOSObjectArray *words);

FOUNDATION_EXPORT id<JavaUtilList> EduStanfordNlpLingSentence_toCoreLabelListWithNSStringArray_(IOSObjectArray *words);

FOUNDATION_EXPORT id<JavaUtilList> EduStanfordNlpLingSentence_toCoreLabelListWithJavaUtilList_(id<JavaUtilList> words);

FOUNDATION_EXPORT NSString *EduStanfordNlpLingSentence_listToStringWithJavaUtilList_(id<JavaUtilList> list);

FOUNDATION_EXPORT NSString *EduStanfordNlpLingSentence_listToStringWithJavaUtilList_withBoolean_(id<JavaUtilList> list, jboolean justValue);

FOUNDATION_EXPORT NSString *EduStanfordNlpLingSentence_listToStringWithJavaUtilList_withBoolean_withNSString_(id<JavaUtilList> list, jboolean justValue, NSString *separator);

FOUNDATION_EXPORT NSString *EduStanfordNlpLingSentence_listToOriginalTextStringWithJavaUtilList_(id<JavaUtilList> list);

FOUNDATION_EXPORT NSString *EduStanfordNlpLingSentence_listToOriginalTextStringWithJavaUtilList_withBoolean_(id<JavaUtilList> list, jboolean printBeforeBeforeStart);

FOUNDATION_EXPORT NSString *EduStanfordNlpLingSentence_wordToStringWithId_withBoolean_(id o, jboolean justValue);

FOUNDATION_EXPORT NSString *EduStanfordNlpLingSentence_wordToStringWithId_withBoolean_withNSString_(id o, jboolean justValue, NSString *separator);

FOUNDATION_EXPORT NSString *EduStanfordNlpLingSentence_extractNgramWithJavaUtilList_withInt_withInt_(id<JavaUtilList> list, jint start, jint end);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingSentence)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpLingSentence")
