//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/CoreAnnotations.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/CoreAnnotations.h"
#include "edu/stanford/nlp/ling/CoreLabel.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/ling/MultiTokenTag.h"
#include "edu/stanford/nlp/util/CoreMap.h"
#include "edu/stanford/nlp/util/ErasureUtils.h"
#include "edu/stanford/nlp/util/IntPair.h"
#include "edu/stanford/nlp/util/Pair.h"
#include "java/lang/Boolean.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/util/Calendar.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/SortedSet.h"

@interface EduStanfordNlpLingCoreAnnotations ()

- (instancetype)init;

@end

__attribute__((unused)) static void EduStanfordNlpLingCoreAnnotations_init(EduStanfordNlpLingCoreAnnotations *self);

__attribute__((unused)) static EduStanfordNlpLingCoreAnnotations *new_EduStanfordNlpLingCoreAnnotations_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingCoreAnnotations *create_EduStanfordNlpLingCoreAnnotations_init();

__attribute__((unused)) static void EduStanfordNlpLingCoreAnnotations_SRL_ID_initWithNSString_withInt_(EduStanfordNlpLingCoreAnnotations_SRL_ID *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static EduStanfordNlpLingCoreAnnotations_SRL_ID *new_EduStanfordNlpLingCoreAnnotations_SRL_ID_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@implementation EduStanfordNlpLingCoreAnnotations

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpLingCoreAnnotations_TextAnnotation;LEduStanfordNlpLingCoreAnnotations_LemmaAnnotation;LEduStanfordNlpLingCoreAnnotations_PartOfSpeechAnnotation;LEduStanfordNlpLingCoreAnnotations_NamedEntityTagAnnotation;LEduStanfordNlpLingCoreAnnotations_StackedNamedEntityTagAnnotation;LEduStanfordNlpLingCoreAnnotations_TrueCaseAnnotation;LEduStanfordNlpLingCoreAnnotations_TrueCaseTextAnnotation;LEduStanfordNlpLingCoreAnnotations_TokensAnnotation;LEduStanfordNlpLingCoreAnnotations_GenericTokensAnnotation;LEduStanfordNlpLingCoreAnnotations_SentencesAnnotation;LEduStanfordNlpLingCoreAnnotations_QuotationsAnnotation;LEduStanfordNlpLingCoreAnnotations_QuotationIndexAnnotation;LEduStanfordNlpLingCoreAnnotations_SentenceBeginAnnotation;LEduStanfordNlpLingCoreAnnotations_SentenceEndAnnotation;LEduStanfordNlpLingCoreAnnotations_ParagraphsAnnotation;LEduStanfordNlpLingCoreAnnotations_TokenBeginAnnotation;LEduStanfordNlpLingCoreAnnotations_TokenEndAnnotation;LEduStanfordNlpLingCoreAnnotations_CalendarAnnotation;LEduStanfordNlpLingCoreAnnotations_DocIDAnnotation;LEduStanfordNlpLingCoreAnnotations_IndexAnnotation;LEduStanfordNlpLingCoreAnnotations_BeginIndexAnnotation;LEduStanfordNlpLingCoreAnnotations_EndIndexAnnotation;LEduStanfordNlpLingCoreAnnotations_ForcedSentenceUntilEndAnnotation;LEduStanfordNlpLingCoreAnnotations_ForcedSentenceEndAnnotation;LEduStanfordNlpLingCoreAnnotations_SentenceIndexAnnotation;LEduStanfordNlpLingCoreAnnotations_LineNumberAnnotation;LEduStanfordNlpLingCoreAnnotations_ValueAnnotation;LEduStanfordNlpLingCoreAnnotations_CategoryAnnotation;LEduStanfordNlpLingCoreAnnotations_OriginalTextAnnotation;LEduStanfordNlpLingCoreAnnotations_BeforeAnnotation;LEduStanfordNlpLingCoreAnnotations_AfterAnnotation;LEduStanfordNlpLingCoreAnnotations_CoarseTagAnnotation;LEduStanfordNlpLingCoreAnnotations_CoNLLDepAnnotation;LEduStanfordNlpLingCoreAnnotations_CoNLLPredicateAnnotation;LEduStanfordNlpLingCoreAnnotations_CoNLLSRLAnnotation;LEduStanfordNlpLingCoreAnnotations_CoNLLDepTypeAnnotation;LEduStanfordNlpLingCoreAnnotations_CoNLLUTokenSpanAnnotation;LEduStanfordNlpLingCoreAnnotations_CoNLLUSecondaryDepsAnnotation;LEduStanfordNlpLingCoreAnnotations_CoNLLUFeats;LEduStanfordNlpLingCoreAnnotations_CoNLLUMisc;LEduStanfordNlpLingCoreAnnotations_CoNLLDepParentIndexAnnotation;LEduStanfordNlpLingCoreAnnotations_IDFAnnotation;LEduStanfordNlpLingCoreAnnotations_ArgumentAnnotation;LEduStanfordNlpLingCoreAnnotations_MarkingAnnotation;LEduStanfordNlpLingCoreAnnotations_SemanticHeadWordAnnotation;LEduStanfordNlpLingCoreAnnotations_SemanticHeadTagAnnotation;LEduStanfordNlpLingCoreAnnotations_VerbSenseAnnotation;LEduStanfordNlpLingCoreAnnotations_CategoryFunctionalTagAnnotation;LEduStanfordNlpLingCoreAnnotations_NERIDAnnotation;LEduStanfordNlpLingCoreAnnotations_NormalizedNamedEntityTagAnnotation;LEduStanfordNlpLingCoreAnnotations_SRL_ID;LEduStanfordNlpLingCoreAnnotations_SRLIDAnnotation;LEduStanfordNlpLingCoreAnnotations_ShapeAnnotation;LEduStanfordNlpLingCoreAnnotations_LeftTermAnnotation;LEduStanfordNlpLingCoreAnnotations_ParentAnnotation;LEduStanfordNlpLingCoreAnnotations_INAnnotation;LEduStanfordNlpLingCoreAnnotations_SpanAnnotation;LEduStanfordNlpLingCoreAnnotations_AnswerAnnotation;LEduStanfordNlpLingCoreAnnotations_GoldAnswerAnnotation;LEduStanfordNlpLingCoreAnnotations_FeaturesAnnotation;LEduStanfordNlpLingCoreAnnotations_InterpretationAnnotation;LEduStanfordNlpLingCoreAnnotations_RoleAnnotation;LEduStanfordNlpLingCoreAnnotations_GazetteerAnnotation;LEduStanfordNlpLingCoreAnnotations_StemAnnotation;LEduStanfordNlpLingCoreAnnotations_PolarityAnnotation;LEduStanfordNlpLingCoreAnnotations_MorphoNumAnnotation;LEduStanfordNlpLingCoreAnnotations_MorphoPersAnnotation;LEduStanfordNlpLingCoreAnnotations_MorphoGenAnnotation;LEduStanfordNlpLingCoreAnnotations_MorphoCaseAnnotation;LEduStanfordNlpLingCoreAnnotations_ChineseCharAnnotation;LEduStanfordNlpLingCoreAnnotations_ChineseOrigSegAnnotation;LEduStanfordNlpLingCoreAnnotations_ChineseSegAnnotation;LEduStanfordNlpLingCoreAnnotations_ChineseIsSegmentedAnnotation;LEduStanfordNlpLingCoreAnnotations_CharacterOffsetBeginAnnotation;LEduStanfordNlpLingCoreAnnotations_CharacterOffsetEndAnnotation;LEduStanfordNlpLingCoreAnnotations_CostMagnificationAnnotation;LEduStanfordNlpLingCoreAnnotations_WordSenseAnnotation;LEduStanfordNlpLingCoreAnnotations_SRLInstancesAnnotation;LEduStanfordNlpLingCoreAnnotations_NumTxtSentencesAnnotation;LEduStanfordNlpLingCoreAnnotations_TagLabelAnnotation;LEduStanfordNlpLingCoreAnnotations_DomainAnnotation;LEduStanfordNlpLingCoreAnnotations_PositionAnnotation;LEduStanfordNlpLingCoreAnnotations_CharAnnotation;LEduStanfordNlpLingCoreAnnotations_UnknownAnnotation;LEduStanfordNlpLingCoreAnnotations_IDAnnotation;LEduStanfordNlpLingCoreAnnotations_GazAnnotation;LEduStanfordNlpLingCoreAnnotations_PossibleAnswersAnnotation;LEduStanfordNlpLingCoreAnnotations_DistSimAnnotation;LEduStanfordNlpLingCoreAnnotations_AbbrAnnotation;LEduStanfordNlpLingCoreAnnotations_ChunkAnnotation;LEduStanfordNlpLingCoreAnnotations_GovernorAnnotation;LEduStanfordNlpLingCoreAnnotations_AbgeneAnnotation;LEduStanfordNlpLingCoreAnnotations_GeniaAnnotation;LEduStanfordNlpLingCoreAnnotations_AbstrAnnotation;LEduStanfordNlpLingCoreAnnotations_FreqAnnotation;LEduStanfordNlpLingCoreAnnotations_DictAnnotation;LEduStanfordNlpLingCoreAnnotations_WebAnnotation;LEduStanfordNlpLingCoreAnnotations_FemaleGazAnnotation;LEduStanfordNlpLingCoreAnnotations_MaleGazAnnotation;LEduStanfordNlpLingCoreAnnotations_LastGazAnnotation;LEduStanfordNlpLingCoreAnnotations_IsURLAnnotation;LEduStanfordNlpLingCoreAnnotations_LinkAnnotation;LEduStanfordNlpLingCoreAnnotations_MentionsAnnotation;LEduStanfordNlpLingCoreAnnotations_EntityTypeAnnotation;LEduStanfordNlpLingCoreAnnotations_IsDateRangeAnnotation;LEduStanfordNlpLingCoreAnnotations_PredictedAnswerAnnotation;LEduStanfordNlpLingCoreAnnotations_OriginalCharAnnotation;LEduStanfordNlpLingCoreAnnotations_UTypeAnnotation;LEduStanfordNlpLingCoreAnnotations_EntityRuleAnnotation;LEduStanfordNlpLingCoreAnnotations_SectionAnnotation;LEduStanfordNlpLingCoreAnnotations_SectionDateAnnotation;LEduStanfordNlpLingCoreAnnotations_SectionIDAnnotation;LEduStanfordNlpLingCoreAnnotations_SectionStartAnnotation;LEduStanfordNlpLingCoreAnnotations_SectionEndAnnotation;LEduStanfordNlpLingCoreAnnotations_WordPositionAnnotation;LEduStanfordNlpLingCoreAnnotations_ParaPositionAnnotation;LEduStanfordNlpLingCoreAnnotations_SentencePositionAnnotation;LEduStanfordNlpLingCoreAnnotations_SentenceIDAnnotation;LEduStanfordNlpLingCoreAnnotations_EntityClassAnnotation;LEduStanfordNlpLingCoreAnnotations_AnswerObjectAnnotation;LEduStanfordNlpLingCoreAnnotations_BestCliquesAnnotation;LEduStanfordNlpLingCoreAnnotations_BestFullAnnotation;LEduStanfordNlpLingCoreAnnotations_LastTaggedAnnotation;LEduStanfordNlpLingCoreAnnotations_LabelAnnotation;LEduStanfordNlpLingCoreAnnotations_NeighborsAnnotation;LEduStanfordNlpLingCoreAnnotations_ContextsAnnotation;LEduStanfordNlpLingCoreAnnotations_DependentsAnnotation;LEduStanfordNlpLingCoreAnnotations_WordFormAnnotation;LEduStanfordNlpLingCoreAnnotations_TrueTagAnnotation;LEduStanfordNlpLingCoreAnnotations_SubcategorizationAnnotation;LEduStanfordNlpLingCoreAnnotations_BagOfWordsAnnotation;LEduStanfordNlpLingCoreAnnotations_HeightAnnotation;LEduStanfordNlpLingCoreAnnotations_LengthAnnotation;LEduStanfordNlpLingCoreAnnotations_LBeginAnnotation;LEduStanfordNlpLingCoreAnnotations_LMiddleAnnotation;LEduStanfordNlpLingCoreAnnotations_LEndAnnotation;LEduStanfordNlpLingCoreAnnotations_D2_LBeginAnnotation;LEduStanfordNlpLingCoreAnnotations_D2_LMiddleAnnotation;LEduStanfordNlpLingCoreAnnotations_D2_LEndAnnotation;LEduStanfordNlpLingCoreAnnotations_UBlockAnnotation;LEduStanfordNlpLingCoreAnnotations_SpaceBeforeAnnotation;LEduStanfordNlpLingCoreAnnotations_StateAnnotation;LEduStanfordNlpLingCoreAnnotations_PrevChildAnnotation;LEduStanfordNlpLingCoreAnnotations_FirstChildAnnotation;LEduStanfordNlpLingCoreAnnotations_UnaryAnnotation;LEduStanfordNlpLingCoreAnnotations_DoAnnotation;LEduStanfordNlpLingCoreAnnotations_HaveAnnotation;LEduStanfordNlpLingCoreAnnotations_BeAnnotation;LEduStanfordNlpLingCoreAnnotations_NotAnnotation;LEduStanfordNlpLingCoreAnnotations_PercentAnnotation;LEduStanfordNlpLingCoreAnnotations_GrandparentAnnotation;LEduStanfordNlpLingCoreAnnotations_HeadWordStringAnnotation;LEduStanfordNlpLingCoreAnnotations_MonthAnnotation;LEduStanfordNlpLingCoreAnnotations_DayAnnotation;LEduStanfordNlpLingCoreAnnotations_YearAnnotation;LEduStanfordNlpLingCoreAnnotations_PriorAnnotation;LEduStanfordNlpLingCoreAnnotations_SemanticWordAnnotation;LEduStanfordNlpLingCoreAnnotations_SemanticTagAnnotation;LEduStanfordNlpLingCoreAnnotations_CovertIDAnnotation;LEduStanfordNlpLingCoreAnnotations_ArgDescendentAnnotation;LEduStanfordNlpLingCoreAnnotations_XmlElementAnnotation;LEduStanfordNlpLingCoreAnnotations_XmlContextAnnotation;LEduStanfordNlpLingCoreAnnotations_TopicAnnotation;LEduStanfordNlpLingCoreAnnotations_WordnetSynAnnotation;LEduStanfordNlpLingCoreAnnotations_PhraseWordsTagAnnotation;LEduStanfordNlpLingCoreAnnotations_PhraseWordsAnnotation;LEduStanfordNlpLingCoreAnnotations_ProtoAnnotation;LEduStanfordNlpLingCoreAnnotations_CommonWordsAnnotation;LEduStanfordNlpLingCoreAnnotations_DocDateAnnotation;LEduStanfordNlpLingCoreAnnotations_DocTypeAnnotation;LEduStanfordNlpLingCoreAnnotations_DocSourceTypeAnnotation;LEduStanfordNlpLingCoreAnnotations_DocTitleAnnotation;LEduStanfordNlpLingCoreAnnotations_LocationAnnotation;LEduStanfordNlpLingCoreAnnotations_AuthorAnnotation;LEduStanfordNlpLingCoreAnnotations_NumericTypeAnnotation;LEduStanfordNlpLingCoreAnnotations_NumericValueAnnotation;LEduStanfordNlpLingCoreAnnotations_NumericObjectAnnotation;LEduStanfordNlpLingCoreAnnotations_NumericCompositeValueAnnotation;LEduStanfordNlpLingCoreAnnotations_NumericCompositeTypeAnnotation;LEduStanfordNlpLingCoreAnnotations_NumericCompositeObjectAnnotation;LEduStanfordNlpLingCoreAnnotations_NumerizedTokensAnnotation;LEduStanfordNlpLingCoreAnnotations_UseMarkedDiscourseAnnotation;LEduStanfordNlpLingCoreAnnotations_UtteranceAnnotation;LEduStanfordNlpLingCoreAnnotations_SpeakerAnnotation;LEduStanfordNlpLingCoreAnnotations_ParagraphAnnotation;LEduStanfordNlpLingCoreAnnotations_MentionTokenAnnotation;LEduStanfordNlpLingCoreAnnotations_LeftChildrenNodeAnnotation;LEduStanfordNlpLingCoreAnnotations_ExceptionAnnotation;LEduStanfordNlpLingCoreAnnotations_AntecedentAnnotation;LEduStanfordNlpLingCoreAnnotations_LabelWeightAnnotation;LEduStanfordNlpLingCoreAnnotations_ColumnDataClassifierAnnotation;LEduStanfordNlpLingCoreAnnotations_LabelIDAnnotation;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations = { "CoreAnnotations", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 0, -1, -1, -1 };
  return &_EduStanfordNlpLingCoreAnnotations;
}

@end

void EduStanfordNlpLingCoreAnnotations_init(EduStanfordNlpLingCoreAnnotations *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations *new_EduStanfordNlpLingCoreAnnotations_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations, init)
}

EduStanfordNlpLingCoreAnnotations *create_EduStanfordNlpLingCoreAnnotations_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations)

@implementation EduStanfordNlpLingCoreAnnotations_TextAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_TextAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_TextAnnotation = { "TextAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_TextAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_TextAnnotation_init(EduStanfordNlpLingCoreAnnotations_TextAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_TextAnnotation *new_EduStanfordNlpLingCoreAnnotations_TextAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_TextAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_TextAnnotation *create_EduStanfordNlpLingCoreAnnotations_TextAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_TextAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_TextAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_LemmaAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_LemmaAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_LemmaAnnotation = { "LemmaAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_LemmaAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_LemmaAnnotation_init(EduStanfordNlpLingCoreAnnotations_LemmaAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_LemmaAnnotation *new_EduStanfordNlpLingCoreAnnotations_LemmaAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_LemmaAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_LemmaAnnotation *create_EduStanfordNlpLingCoreAnnotations_LemmaAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_LemmaAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_LemmaAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_PartOfSpeechAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_PartOfSpeechAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_PartOfSpeechAnnotation = { "PartOfSpeechAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_PartOfSpeechAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_PartOfSpeechAnnotation_init(EduStanfordNlpLingCoreAnnotations_PartOfSpeechAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_PartOfSpeechAnnotation *new_EduStanfordNlpLingCoreAnnotations_PartOfSpeechAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_PartOfSpeechAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_PartOfSpeechAnnotation *create_EduStanfordNlpLingCoreAnnotations_PartOfSpeechAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_PartOfSpeechAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_PartOfSpeechAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_NamedEntityTagAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_NamedEntityTagAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_NamedEntityTagAnnotation = { "NamedEntityTagAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_NamedEntityTagAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_NamedEntityTagAnnotation_init(EduStanfordNlpLingCoreAnnotations_NamedEntityTagAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_NamedEntityTagAnnotation *new_EduStanfordNlpLingCoreAnnotations_NamedEntityTagAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_NamedEntityTagAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_NamedEntityTagAnnotation *create_EduStanfordNlpLingCoreAnnotations_NamedEntityTagAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_NamedEntityTagAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_NamedEntityTagAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_StackedNamedEntityTagAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_StackedNamedEntityTagAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_StackedNamedEntityTagAnnotation = { "StackedNamedEntityTagAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_StackedNamedEntityTagAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_StackedNamedEntityTagAnnotation_init(EduStanfordNlpLingCoreAnnotations_StackedNamedEntityTagAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_StackedNamedEntityTagAnnotation *new_EduStanfordNlpLingCoreAnnotations_StackedNamedEntityTagAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_StackedNamedEntityTagAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_StackedNamedEntityTagAnnotation *create_EduStanfordNlpLingCoreAnnotations_StackedNamedEntityTagAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_StackedNamedEntityTagAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_StackedNamedEntityTagAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_TrueCaseAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_TrueCaseAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_TrueCaseAnnotation = { "TrueCaseAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_TrueCaseAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_TrueCaseAnnotation_init(EduStanfordNlpLingCoreAnnotations_TrueCaseAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_TrueCaseAnnotation *new_EduStanfordNlpLingCoreAnnotations_TrueCaseAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_TrueCaseAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_TrueCaseAnnotation *create_EduStanfordNlpLingCoreAnnotations_TrueCaseAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_TrueCaseAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_TrueCaseAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_TrueCaseTextAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_TrueCaseTextAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_TrueCaseTextAnnotation = { "TrueCaseTextAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_TrueCaseTextAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_TrueCaseTextAnnotation_init(EduStanfordNlpLingCoreAnnotations_TrueCaseTextAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_TrueCaseTextAnnotation *new_EduStanfordNlpLingCoreAnnotations_TrueCaseTextAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_TrueCaseTextAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_TrueCaseTextAnnotation *create_EduStanfordNlpLingCoreAnnotations_TrueCaseTextAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_TrueCaseTextAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_TrueCaseTextAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_TokensAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(JavaUtilList_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_TokensAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/List<Ledu/stanford/nlp/ling/CoreLabel;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/List<Ledu/stanford/nlp/ling/CoreLabel;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_TokensAnnotation = { "TokensAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_TokensAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_TokensAnnotation_init(EduStanfordNlpLingCoreAnnotations_TokensAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_TokensAnnotation *new_EduStanfordNlpLingCoreAnnotations_TokensAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_TokensAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_TokensAnnotation *create_EduStanfordNlpLingCoreAnnotations_TokensAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_TokensAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_TokensAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_GenericTokensAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(JavaUtilList_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_GenericTokensAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/List<Ledu/stanford/nlp/util/CoreMap;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/List<Ledu/stanford/nlp/util/CoreMap;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_GenericTokensAnnotation = { "GenericTokensAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_GenericTokensAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_GenericTokensAnnotation_init(EduStanfordNlpLingCoreAnnotations_GenericTokensAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_GenericTokensAnnotation *new_EduStanfordNlpLingCoreAnnotations_GenericTokensAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_GenericTokensAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_GenericTokensAnnotation *create_EduStanfordNlpLingCoreAnnotations_GenericTokensAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_GenericTokensAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_GenericTokensAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_SentencesAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(JavaUtilList_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_SentencesAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/List<Ledu/stanford/nlp/util/CoreMap;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/List<Ledu/stanford/nlp/util/CoreMap;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SentencesAnnotation = { "SentencesAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SentencesAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_SentencesAnnotation_init(EduStanfordNlpLingCoreAnnotations_SentencesAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_SentencesAnnotation *new_EduStanfordNlpLingCoreAnnotations_SentencesAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SentencesAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_SentencesAnnotation *create_EduStanfordNlpLingCoreAnnotations_SentencesAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_SentencesAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SentencesAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_QuotationsAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(JavaUtilList_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_QuotationsAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/List<Ledu/stanford/nlp/util/CoreMap;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/List<Ledu/stanford/nlp/util/CoreMap;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_QuotationsAnnotation = { "QuotationsAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_QuotationsAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_QuotationsAnnotation_init(EduStanfordNlpLingCoreAnnotations_QuotationsAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_QuotationsAnnotation *new_EduStanfordNlpLingCoreAnnotations_QuotationsAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_QuotationsAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_QuotationsAnnotation *create_EduStanfordNlpLingCoreAnnotations_QuotationsAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_QuotationsAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_QuotationsAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_QuotationIndexAnnotation

- (IOSClass *)getType {
  return JavaLangInteger_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_QuotationIndexAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Integer;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_QuotationIndexAnnotation = { "QuotationIndexAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_QuotationIndexAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_QuotationIndexAnnotation_init(EduStanfordNlpLingCoreAnnotations_QuotationIndexAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_QuotationIndexAnnotation *new_EduStanfordNlpLingCoreAnnotations_QuotationIndexAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_QuotationIndexAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_QuotationIndexAnnotation *create_EduStanfordNlpLingCoreAnnotations_QuotationIndexAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_QuotationIndexAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_QuotationIndexAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_SentenceBeginAnnotation

- (IOSClass *)getType {
  return JavaLangInteger_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_SentenceBeginAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Integer;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SentenceBeginAnnotation = { "SentenceBeginAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SentenceBeginAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_SentenceBeginAnnotation_init(EduStanfordNlpLingCoreAnnotations_SentenceBeginAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_SentenceBeginAnnotation *new_EduStanfordNlpLingCoreAnnotations_SentenceBeginAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SentenceBeginAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_SentenceBeginAnnotation *create_EduStanfordNlpLingCoreAnnotations_SentenceBeginAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_SentenceBeginAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SentenceBeginAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_SentenceEndAnnotation

- (IOSClass *)getType {
  return JavaLangInteger_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_SentenceEndAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Integer;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SentenceEndAnnotation = { "SentenceEndAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SentenceEndAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_SentenceEndAnnotation_init(EduStanfordNlpLingCoreAnnotations_SentenceEndAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_SentenceEndAnnotation *new_EduStanfordNlpLingCoreAnnotations_SentenceEndAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SentenceEndAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_SentenceEndAnnotation *create_EduStanfordNlpLingCoreAnnotations_SentenceEndAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_SentenceEndAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SentenceEndAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_ParagraphsAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(JavaUtilList_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_ParagraphsAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/List<Ledu/stanford/nlp/util/CoreMap;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/List<Ledu/stanford/nlp/util/CoreMap;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_ParagraphsAnnotation = { "ParagraphsAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_ParagraphsAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_ParagraphsAnnotation_init(EduStanfordNlpLingCoreAnnotations_ParagraphsAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_ParagraphsAnnotation *new_EduStanfordNlpLingCoreAnnotations_ParagraphsAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_ParagraphsAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_ParagraphsAnnotation *create_EduStanfordNlpLingCoreAnnotations_ParagraphsAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_ParagraphsAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_ParagraphsAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_TokenBeginAnnotation

- (IOSClass *)getType {
  return JavaLangInteger_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_TokenBeginAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Integer;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_TokenBeginAnnotation = { "TokenBeginAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_TokenBeginAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_TokenBeginAnnotation_init(EduStanfordNlpLingCoreAnnotations_TokenBeginAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_TokenBeginAnnotation *new_EduStanfordNlpLingCoreAnnotations_TokenBeginAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_TokenBeginAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_TokenBeginAnnotation *create_EduStanfordNlpLingCoreAnnotations_TokenBeginAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_TokenBeginAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_TokenBeginAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_TokenEndAnnotation

- (IOSClass *)getType {
  return JavaLangInteger_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_TokenEndAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Integer;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_TokenEndAnnotation = { "TokenEndAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_TokenEndAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_TokenEndAnnotation_init(EduStanfordNlpLingCoreAnnotations_TokenEndAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_TokenEndAnnotation *new_EduStanfordNlpLingCoreAnnotations_TokenEndAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_TokenEndAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_TokenEndAnnotation *create_EduStanfordNlpLingCoreAnnotations_TokenEndAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_TokenEndAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_TokenEndAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_CalendarAnnotation

- (IOSClass *)getType {
  return JavaUtilCalendar_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_CalendarAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/Calendar;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/Calendar;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_CalendarAnnotation = { "CalendarAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_CalendarAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_CalendarAnnotation_init(EduStanfordNlpLingCoreAnnotations_CalendarAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_CalendarAnnotation *new_EduStanfordNlpLingCoreAnnotations_CalendarAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_CalendarAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_CalendarAnnotation *create_EduStanfordNlpLingCoreAnnotations_CalendarAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_CalendarAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_CalendarAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_DocIDAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_DocIDAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_DocIDAnnotation = { "DocIDAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_DocIDAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_DocIDAnnotation_init(EduStanfordNlpLingCoreAnnotations_DocIDAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_DocIDAnnotation *new_EduStanfordNlpLingCoreAnnotations_DocIDAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_DocIDAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_DocIDAnnotation *create_EduStanfordNlpLingCoreAnnotations_DocIDAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_DocIDAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_DocIDAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_IndexAnnotation

- (IOSClass *)getType {
  return JavaLangInteger_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_IndexAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Integer;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_IndexAnnotation = { "IndexAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_IndexAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_IndexAnnotation_init(EduStanfordNlpLingCoreAnnotations_IndexAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_IndexAnnotation *new_EduStanfordNlpLingCoreAnnotations_IndexAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_IndexAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_IndexAnnotation *create_EduStanfordNlpLingCoreAnnotations_IndexAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_IndexAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_IndexAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_BeginIndexAnnotation

- (IOSClass *)getType {
  return JavaLangInteger_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_BeginIndexAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Integer;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_BeginIndexAnnotation = { "BeginIndexAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_BeginIndexAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_BeginIndexAnnotation_init(EduStanfordNlpLingCoreAnnotations_BeginIndexAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_BeginIndexAnnotation *new_EduStanfordNlpLingCoreAnnotations_BeginIndexAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_BeginIndexAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_BeginIndexAnnotation *create_EduStanfordNlpLingCoreAnnotations_BeginIndexAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_BeginIndexAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_BeginIndexAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_EndIndexAnnotation

- (IOSClass *)getType {
  return JavaLangInteger_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_EndIndexAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Integer;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_EndIndexAnnotation = { "EndIndexAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_EndIndexAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_EndIndexAnnotation_init(EduStanfordNlpLingCoreAnnotations_EndIndexAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_EndIndexAnnotation *new_EduStanfordNlpLingCoreAnnotations_EndIndexAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_EndIndexAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_EndIndexAnnotation *create_EduStanfordNlpLingCoreAnnotations_EndIndexAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_EndIndexAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_EndIndexAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_ForcedSentenceUntilEndAnnotation

- (IOSClass *)getType {
  return JavaLangBoolean_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_ForcedSentenceUntilEndAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Boolean;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_ForcedSentenceUntilEndAnnotation = { "ForcedSentenceUntilEndAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_ForcedSentenceUntilEndAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_ForcedSentenceUntilEndAnnotation_init(EduStanfordNlpLingCoreAnnotations_ForcedSentenceUntilEndAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_ForcedSentenceUntilEndAnnotation *new_EduStanfordNlpLingCoreAnnotations_ForcedSentenceUntilEndAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_ForcedSentenceUntilEndAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_ForcedSentenceUntilEndAnnotation *create_EduStanfordNlpLingCoreAnnotations_ForcedSentenceUntilEndAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_ForcedSentenceUntilEndAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_ForcedSentenceUntilEndAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_ForcedSentenceEndAnnotation

- (IOSClass *)getType {
  return JavaLangBoolean_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_ForcedSentenceEndAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Boolean;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_ForcedSentenceEndAnnotation = { "ForcedSentenceEndAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_ForcedSentenceEndAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_ForcedSentenceEndAnnotation_init(EduStanfordNlpLingCoreAnnotations_ForcedSentenceEndAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_ForcedSentenceEndAnnotation *new_EduStanfordNlpLingCoreAnnotations_ForcedSentenceEndAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_ForcedSentenceEndAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_ForcedSentenceEndAnnotation *create_EduStanfordNlpLingCoreAnnotations_ForcedSentenceEndAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_ForcedSentenceEndAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_ForcedSentenceEndAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_SentenceIndexAnnotation

- (IOSClass *)getType {
  return JavaLangInteger_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_SentenceIndexAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Integer;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SentenceIndexAnnotation = { "SentenceIndexAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SentenceIndexAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_SentenceIndexAnnotation_init(EduStanfordNlpLingCoreAnnotations_SentenceIndexAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_SentenceIndexAnnotation *new_EduStanfordNlpLingCoreAnnotations_SentenceIndexAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SentenceIndexAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_SentenceIndexAnnotation *create_EduStanfordNlpLingCoreAnnotations_SentenceIndexAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_SentenceIndexAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SentenceIndexAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_LineNumberAnnotation

- (IOSClass *)getType {
  return JavaLangInteger_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_LineNumberAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Integer;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_LineNumberAnnotation = { "LineNumberAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_LineNumberAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_LineNumberAnnotation_init(EduStanfordNlpLingCoreAnnotations_LineNumberAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_LineNumberAnnotation *new_EduStanfordNlpLingCoreAnnotations_LineNumberAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_LineNumberAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_LineNumberAnnotation *create_EduStanfordNlpLingCoreAnnotations_LineNumberAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_LineNumberAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_LineNumberAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_ValueAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_ValueAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_ValueAnnotation = { "ValueAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_ValueAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_ValueAnnotation_init(EduStanfordNlpLingCoreAnnotations_ValueAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_ValueAnnotation *new_EduStanfordNlpLingCoreAnnotations_ValueAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_ValueAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_ValueAnnotation *create_EduStanfordNlpLingCoreAnnotations_ValueAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_ValueAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_ValueAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_CategoryAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_CategoryAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_CategoryAnnotation = { "CategoryAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_CategoryAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_CategoryAnnotation_init(EduStanfordNlpLingCoreAnnotations_CategoryAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_CategoryAnnotation *new_EduStanfordNlpLingCoreAnnotations_CategoryAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_CategoryAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_CategoryAnnotation *create_EduStanfordNlpLingCoreAnnotations_CategoryAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_CategoryAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_CategoryAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_OriginalTextAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_OriginalTextAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_OriginalTextAnnotation = { "OriginalTextAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_OriginalTextAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_OriginalTextAnnotation_init(EduStanfordNlpLingCoreAnnotations_OriginalTextAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_OriginalTextAnnotation *new_EduStanfordNlpLingCoreAnnotations_OriginalTextAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_OriginalTextAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_OriginalTextAnnotation *create_EduStanfordNlpLingCoreAnnotations_OriginalTextAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_OriginalTextAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_OriginalTextAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_BeforeAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_BeforeAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_BeforeAnnotation = { "BeforeAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_BeforeAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_BeforeAnnotation_init(EduStanfordNlpLingCoreAnnotations_BeforeAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_BeforeAnnotation *new_EduStanfordNlpLingCoreAnnotations_BeforeAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_BeforeAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_BeforeAnnotation *create_EduStanfordNlpLingCoreAnnotations_BeforeAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_BeforeAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_BeforeAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_AfterAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_AfterAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_AfterAnnotation = { "AfterAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_AfterAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_AfterAnnotation_init(EduStanfordNlpLingCoreAnnotations_AfterAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_AfterAnnotation *new_EduStanfordNlpLingCoreAnnotations_AfterAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_AfterAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_AfterAnnotation *create_EduStanfordNlpLingCoreAnnotations_AfterAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_AfterAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_AfterAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_CoarseTagAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_CoarseTagAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_CoarseTagAnnotation = { "CoarseTagAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_CoarseTagAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_CoarseTagAnnotation_init(EduStanfordNlpLingCoreAnnotations_CoarseTagAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_CoarseTagAnnotation *new_EduStanfordNlpLingCoreAnnotations_CoarseTagAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_CoarseTagAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_CoarseTagAnnotation *create_EduStanfordNlpLingCoreAnnotations_CoarseTagAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_CoarseTagAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_CoarseTagAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_CoNLLDepAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilCoreMap_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_CoNLLDepAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ledu/stanford/nlp/util/CoreMap;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ledu/stanford/nlp/util/CoreMap;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_CoNLLDepAnnotation = { "CoNLLDepAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_CoNLLDepAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_CoNLLDepAnnotation_init(EduStanfordNlpLingCoreAnnotations_CoNLLDepAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_CoNLLDepAnnotation *new_EduStanfordNlpLingCoreAnnotations_CoNLLDepAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_CoNLLDepAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_CoNLLDepAnnotation *create_EduStanfordNlpLingCoreAnnotations_CoNLLDepAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_CoNLLDepAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_CoNLLDepAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_CoNLLPredicateAnnotation

- (IOSClass *)getType {
  return JavaLangBoolean_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_CoNLLPredicateAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Boolean;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_CoNLLPredicateAnnotation = { "CoNLLPredicateAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_CoNLLPredicateAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_CoNLLPredicateAnnotation_init(EduStanfordNlpLingCoreAnnotations_CoNLLPredicateAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_CoNLLPredicateAnnotation *new_EduStanfordNlpLingCoreAnnotations_CoNLLPredicateAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_CoNLLPredicateAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_CoNLLPredicateAnnotation *create_EduStanfordNlpLingCoreAnnotations_CoNLLPredicateAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_CoNLLPredicateAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_CoNLLPredicateAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_CoNLLSRLAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(JavaUtilMap_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_CoNLLSRLAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/String;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_CoNLLSRLAnnotation = { "CoNLLSRLAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_CoNLLSRLAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_CoNLLSRLAnnotation_init(EduStanfordNlpLingCoreAnnotations_CoNLLSRLAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_CoNLLSRLAnnotation *new_EduStanfordNlpLingCoreAnnotations_CoNLLSRLAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_CoNLLSRLAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_CoNLLSRLAnnotation *create_EduStanfordNlpLingCoreAnnotations_CoNLLSRLAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_CoNLLSRLAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_CoNLLSRLAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_CoNLLDepTypeAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_CoNLLDepTypeAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_CoNLLDepTypeAnnotation = { "CoNLLDepTypeAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_CoNLLDepTypeAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_CoNLLDepTypeAnnotation_init(EduStanfordNlpLingCoreAnnotations_CoNLLDepTypeAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_CoNLLDepTypeAnnotation *new_EduStanfordNlpLingCoreAnnotations_CoNLLDepTypeAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_CoNLLDepTypeAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_CoNLLDepTypeAnnotation *create_EduStanfordNlpLingCoreAnnotations_CoNLLDepTypeAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_CoNLLDepTypeAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_CoNLLDepTypeAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_CoNLLUTokenSpanAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(EduStanfordNlpUtilPair_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_CoNLLUTokenSpanAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ledu/stanford/nlp/util/IntPair;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ledu/stanford/nlp/util/IntPair;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_CoNLLUTokenSpanAnnotation = { "CoNLLUTokenSpanAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_CoNLLUTokenSpanAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_CoNLLUTokenSpanAnnotation_init(EduStanfordNlpLingCoreAnnotations_CoNLLUTokenSpanAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_CoNLLUTokenSpanAnnotation *new_EduStanfordNlpLingCoreAnnotations_CoNLLUTokenSpanAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_CoNLLUTokenSpanAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_CoNLLUTokenSpanAnnotation *create_EduStanfordNlpLingCoreAnnotations_CoNLLUTokenSpanAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_CoNLLUTokenSpanAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_CoNLLUTokenSpanAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_CoNLLUSecondaryDepsAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(EduStanfordNlpUtilPair_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_CoNLLUSecondaryDepsAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/HashMap<Ljava/lang/Integer;Ljava/lang/String;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/HashMap<Ljava/lang/Integer;Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_CoNLLUSecondaryDepsAnnotation = { "CoNLLUSecondaryDepsAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_CoNLLUSecondaryDepsAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_CoNLLUSecondaryDepsAnnotation_init(EduStanfordNlpLingCoreAnnotations_CoNLLUSecondaryDepsAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_CoNLLUSecondaryDepsAnnotation *new_EduStanfordNlpLingCoreAnnotations_CoNLLUSecondaryDepsAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_CoNLLUSecondaryDepsAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_CoNLLUSecondaryDepsAnnotation *create_EduStanfordNlpLingCoreAnnotations_CoNLLUSecondaryDepsAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_CoNLLUSecondaryDepsAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_CoNLLUSecondaryDepsAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_CoNLLUFeats

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(JavaUtilHashMap_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_CoNLLUFeats_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/String;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_CoNLLUFeats = { "CoNLLUFeats", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_CoNLLUFeats;
}

@end

void EduStanfordNlpLingCoreAnnotations_CoNLLUFeats_init(EduStanfordNlpLingCoreAnnotations_CoNLLUFeats *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_CoNLLUFeats *new_EduStanfordNlpLingCoreAnnotations_CoNLLUFeats_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_CoNLLUFeats, init)
}

EduStanfordNlpLingCoreAnnotations_CoNLLUFeats *create_EduStanfordNlpLingCoreAnnotations_CoNLLUFeats_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_CoNLLUFeats, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_CoNLLUFeats)

@implementation EduStanfordNlpLingCoreAnnotations_CoNLLUMisc

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_CoNLLUMisc_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_CoNLLUMisc = { "CoNLLUMisc", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_CoNLLUMisc;
}

@end

void EduStanfordNlpLingCoreAnnotations_CoNLLUMisc_init(EduStanfordNlpLingCoreAnnotations_CoNLLUMisc *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_CoNLLUMisc *new_EduStanfordNlpLingCoreAnnotations_CoNLLUMisc_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_CoNLLUMisc, init)
}

EduStanfordNlpLingCoreAnnotations_CoNLLUMisc *create_EduStanfordNlpLingCoreAnnotations_CoNLLUMisc_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_CoNLLUMisc, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_CoNLLUMisc)

@implementation EduStanfordNlpLingCoreAnnotations_CoNLLDepParentIndexAnnotation

- (IOSClass *)getType {
  return JavaLangInteger_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_CoNLLDepParentIndexAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Integer;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_CoNLLDepParentIndexAnnotation = { "CoNLLDepParentIndexAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_CoNLLDepParentIndexAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_CoNLLDepParentIndexAnnotation_init(EduStanfordNlpLingCoreAnnotations_CoNLLDepParentIndexAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_CoNLLDepParentIndexAnnotation *new_EduStanfordNlpLingCoreAnnotations_CoNLLDepParentIndexAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_CoNLLDepParentIndexAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_CoNLLDepParentIndexAnnotation *create_EduStanfordNlpLingCoreAnnotations_CoNLLDepParentIndexAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_CoNLLDepParentIndexAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_CoNLLDepParentIndexAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_IDFAnnotation

- (IOSClass *)getType {
  return JavaLangDouble_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_IDFAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Double;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Double;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_IDFAnnotation = { "IDFAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_IDFAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_IDFAnnotation_init(EduStanfordNlpLingCoreAnnotations_IDFAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_IDFAnnotation *new_EduStanfordNlpLingCoreAnnotations_IDFAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_IDFAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_IDFAnnotation *create_EduStanfordNlpLingCoreAnnotations_IDFAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_IDFAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_IDFAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_ArgumentAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_ArgumentAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_ArgumentAnnotation = { "ArgumentAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_ArgumentAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_ArgumentAnnotation_init(EduStanfordNlpLingCoreAnnotations_ArgumentAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_ArgumentAnnotation *new_EduStanfordNlpLingCoreAnnotations_ArgumentAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_ArgumentAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_ArgumentAnnotation *create_EduStanfordNlpLingCoreAnnotations_ArgumentAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_ArgumentAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_ArgumentAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_MarkingAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_MarkingAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_MarkingAnnotation = { "MarkingAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_MarkingAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_MarkingAnnotation_init(EduStanfordNlpLingCoreAnnotations_MarkingAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_MarkingAnnotation *new_EduStanfordNlpLingCoreAnnotations_MarkingAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_MarkingAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_MarkingAnnotation *create_EduStanfordNlpLingCoreAnnotations_MarkingAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_MarkingAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_MarkingAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_SemanticHeadWordAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_SemanticHeadWordAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SemanticHeadWordAnnotation = { "SemanticHeadWordAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SemanticHeadWordAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_SemanticHeadWordAnnotation_init(EduStanfordNlpLingCoreAnnotations_SemanticHeadWordAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_SemanticHeadWordAnnotation *new_EduStanfordNlpLingCoreAnnotations_SemanticHeadWordAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SemanticHeadWordAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_SemanticHeadWordAnnotation *create_EduStanfordNlpLingCoreAnnotations_SemanticHeadWordAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_SemanticHeadWordAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SemanticHeadWordAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_SemanticHeadTagAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_SemanticHeadTagAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SemanticHeadTagAnnotation = { "SemanticHeadTagAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SemanticHeadTagAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_SemanticHeadTagAnnotation_init(EduStanfordNlpLingCoreAnnotations_SemanticHeadTagAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_SemanticHeadTagAnnotation *new_EduStanfordNlpLingCoreAnnotations_SemanticHeadTagAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SemanticHeadTagAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_SemanticHeadTagAnnotation *create_EduStanfordNlpLingCoreAnnotations_SemanticHeadTagAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_SemanticHeadTagAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SemanticHeadTagAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_VerbSenseAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_VerbSenseAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_VerbSenseAnnotation = { "VerbSenseAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_VerbSenseAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_VerbSenseAnnotation_init(EduStanfordNlpLingCoreAnnotations_VerbSenseAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_VerbSenseAnnotation *new_EduStanfordNlpLingCoreAnnotations_VerbSenseAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_VerbSenseAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_VerbSenseAnnotation *create_EduStanfordNlpLingCoreAnnotations_VerbSenseAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_VerbSenseAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_VerbSenseAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_CategoryFunctionalTagAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_CategoryFunctionalTagAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_CategoryFunctionalTagAnnotation = { "CategoryFunctionalTagAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_CategoryFunctionalTagAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_CategoryFunctionalTagAnnotation_init(EduStanfordNlpLingCoreAnnotations_CategoryFunctionalTagAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_CategoryFunctionalTagAnnotation *new_EduStanfordNlpLingCoreAnnotations_CategoryFunctionalTagAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_CategoryFunctionalTagAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_CategoryFunctionalTagAnnotation *create_EduStanfordNlpLingCoreAnnotations_CategoryFunctionalTagAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_CategoryFunctionalTagAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_CategoryFunctionalTagAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_NERIDAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_NERIDAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_NERIDAnnotation = { "NERIDAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_NERIDAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_NERIDAnnotation_init(EduStanfordNlpLingCoreAnnotations_NERIDAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_NERIDAnnotation *new_EduStanfordNlpLingCoreAnnotations_NERIDAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_NERIDAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_NERIDAnnotation *create_EduStanfordNlpLingCoreAnnotations_NERIDAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_NERIDAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_NERIDAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_NormalizedNamedEntityTagAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_NormalizedNamedEntityTagAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_NormalizedNamedEntityTagAnnotation = { "NormalizedNamedEntityTagAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_NormalizedNamedEntityTagAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_NormalizedNamedEntityTagAnnotation_init(EduStanfordNlpLingCoreAnnotations_NormalizedNamedEntityTagAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_NormalizedNamedEntityTagAnnotation *new_EduStanfordNlpLingCoreAnnotations_NormalizedNamedEntityTagAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_NormalizedNamedEntityTagAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_NormalizedNamedEntityTagAnnotation *create_EduStanfordNlpLingCoreAnnotations_NormalizedNamedEntityTagAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_NormalizedNamedEntityTagAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_NormalizedNamedEntityTagAnnotation)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpLingCoreAnnotations_SRL_ID)

EduStanfordNlpLingCoreAnnotations_SRL_ID *EduStanfordNlpLingCoreAnnotations_SRL_ID_values_[4];

@implementation EduStanfordNlpLingCoreAnnotations_SRL_ID

+ (IOSObjectArray *)values {
  return EduStanfordNlpLingCoreAnnotations_SRL_ID_values();
}

+ (EduStanfordNlpLingCoreAnnotations_SRL_ID *)valueOfWithNSString:(NSString *)name {
  return EduStanfordNlpLingCoreAnnotations_SRL_ID_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LEduStanfordNlpLingCoreAnnotations_SRL_ID;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingCoreAnnotations_SRL_ID;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ARG", "LEduStanfordNlpLingCoreAnnotations_SRL_ID;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "NO", "LEduStanfordNlpLingCoreAnnotations_SRL_ID;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "ALL_NO", "LEduStanfordNlpLingCoreAnnotations_SRL_ID;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "REL", "LEduStanfordNlpLingCoreAnnotations_SRL_ID;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(EduStanfordNlpLingCoreAnnotations_SRL_ID, ARG), &JreEnum(EduStanfordNlpLingCoreAnnotations_SRL_ID, NO), &JreEnum(EduStanfordNlpLingCoreAnnotations_SRL_ID, ALL_NO), &JreEnum(EduStanfordNlpLingCoreAnnotations_SRL_ID, REL), "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Enum<Ledu/stanford/nlp/ling/CoreAnnotations$SRL_ID;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SRL_ID = { "SRL_ID", "edu.stanford.nlp.ling", ptrTable, methods, fields, 7, 0x4019, 2, 4, 6, -1, -1, 7, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SRL_ID;
}

+ (void)initialize {
  if (self == [EduStanfordNlpLingCoreAnnotations_SRL_ID class]) {
    JreEnum(EduStanfordNlpLingCoreAnnotations_SRL_ID, ARG) = new_EduStanfordNlpLingCoreAnnotations_SRL_ID_initWithNSString_withInt_(@"ARG", 0);
    JreEnum(EduStanfordNlpLingCoreAnnotations_SRL_ID, NO) = new_EduStanfordNlpLingCoreAnnotations_SRL_ID_initWithNSString_withInt_(@"NO", 1);
    JreEnum(EduStanfordNlpLingCoreAnnotations_SRL_ID, ALL_NO) = new_EduStanfordNlpLingCoreAnnotations_SRL_ID_initWithNSString_withInt_(@"ALL_NO", 2);
    JreEnum(EduStanfordNlpLingCoreAnnotations_SRL_ID, REL) = new_EduStanfordNlpLingCoreAnnotations_SRL_ID_initWithNSString_withInt_(@"REL", 3);
    J2OBJC_SET_INITIALIZED(EduStanfordNlpLingCoreAnnotations_SRL_ID)
  }
}

@end

void EduStanfordNlpLingCoreAnnotations_SRL_ID_initWithNSString_withInt_(EduStanfordNlpLingCoreAnnotations_SRL_ID *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

EduStanfordNlpLingCoreAnnotations_SRL_ID *new_EduStanfordNlpLingCoreAnnotations_SRL_ID_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SRL_ID, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *EduStanfordNlpLingCoreAnnotations_SRL_ID_values() {
  EduStanfordNlpLingCoreAnnotations_SRL_ID_initialize();
  return [IOSObjectArray arrayWithObjects:EduStanfordNlpLingCoreAnnotations_SRL_ID_values_ count:4 type:EduStanfordNlpLingCoreAnnotations_SRL_ID_class_()];
}

EduStanfordNlpLingCoreAnnotations_SRL_ID *EduStanfordNlpLingCoreAnnotations_SRL_ID_valueOfWithNSString_(NSString *name) {
  EduStanfordNlpLingCoreAnnotations_SRL_ID_initialize();
  for (int i = 0; i < 4; i++) {
    EduStanfordNlpLingCoreAnnotations_SRL_ID *e = EduStanfordNlpLingCoreAnnotations_SRL_ID_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

EduStanfordNlpLingCoreAnnotations_SRL_ID *EduStanfordNlpLingCoreAnnotations_SRL_ID_fromOrdinal(NSUInteger ordinal) {
  EduStanfordNlpLingCoreAnnotations_SRL_ID_initialize();
  if (ordinal >= 4) {
    return nil;
  }
  return EduStanfordNlpLingCoreAnnotations_SRL_ID_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SRL_ID)

@implementation EduStanfordNlpLingCoreAnnotations_SRLIDAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpLingCoreAnnotations_SRL_ID_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_SRLIDAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ledu/stanford/nlp/ling/CoreAnnotations$SRL_ID;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ledu/stanford/nlp/ling/CoreAnnotations$SRL_ID;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SRLIDAnnotation = { "SRLIDAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SRLIDAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_SRLIDAnnotation_init(EduStanfordNlpLingCoreAnnotations_SRLIDAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_SRLIDAnnotation *new_EduStanfordNlpLingCoreAnnotations_SRLIDAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SRLIDAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_SRLIDAnnotation *create_EduStanfordNlpLingCoreAnnotations_SRLIDAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_SRLIDAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SRLIDAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_ShapeAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_ShapeAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_ShapeAnnotation = { "ShapeAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_ShapeAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_ShapeAnnotation_init(EduStanfordNlpLingCoreAnnotations_ShapeAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_ShapeAnnotation *new_EduStanfordNlpLingCoreAnnotations_ShapeAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_ShapeAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_ShapeAnnotation *create_EduStanfordNlpLingCoreAnnotations_ShapeAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_ShapeAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_ShapeAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_LeftTermAnnotation

- (IOSClass *)getType {
  return JavaLangInteger_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_LeftTermAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Integer;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_LeftTermAnnotation = { "LeftTermAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_LeftTermAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_LeftTermAnnotation_init(EduStanfordNlpLingCoreAnnotations_LeftTermAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_LeftTermAnnotation *new_EduStanfordNlpLingCoreAnnotations_LeftTermAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_LeftTermAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_LeftTermAnnotation *create_EduStanfordNlpLingCoreAnnotations_LeftTermAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_LeftTermAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_LeftTermAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_ParentAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_ParentAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_ParentAnnotation = { "ParentAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_ParentAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_ParentAnnotation_init(EduStanfordNlpLingCoreAnnotations_ParentAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_ParentAnnotation *new_EduStanfordNlpLingCoreAnnotations_ParentAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_ParentAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_ParentAnnotation *create_EduStanfordNlpLingCoreAnnotations_ParentAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_ParentAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_ParentAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_INAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_INAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_INAnnotation = { "INAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_INAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_INAnnotation_init(EduStanfordNlpLingCoreAnnotations_INAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_INAnnotation *new_EduStanfordNlpLingCoreAnnotations_INAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_INAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_INAnnotation *create_EduStanfordNlpLingCoreAnnotations_INAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_INAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_INAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_SpanAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilIntPair_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_SpanAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ledu/stanford/nlp/util/IntPair;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ledu/stanford/nlp/util/IntPair;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SpanAnnotation = { "SpanAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SpanAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_SpanAnnotation_init(EduStanfordNlpLingCoreAnnotations_SpanAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_SpanAnnotation *new_EduStanfordNlpLingCoreAnnotations_SpanAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SpanAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_SpanAnnotation *create_EduStanfordNlpLingCoreAnnotations_SpanAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_SpanAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SpanAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_AnswerAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_AnswerAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_AnswerAnnotation = { "AnswerAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_AnswerAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_AnswerAnnotation_init(EduStanfordNlpLingCoreAnnotations_AnswerAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_AnswerAnnotation *new_EduStanfordNlpLingCoreAnnotations_AnswerAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_AnswerAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_AnswerAnnotation *create_EduStanfordNlpLingCoreAnnotations_AnswerAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_AnswerAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_AnswerAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_GoldAnswerAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_GoldAnswerAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_GoldAnswerAnnotation = { "GoldAnswerAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_GoldAnswerAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_GoldAnswerAnnotation_init(EduStanfordNlpLingCoreAnnotations_GoldAnswerAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_GoldAnswerAnnotation *new_EduStanfordNlpLingCoreAnnotations_GoldAnswerAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_GoldAnswerAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_GoldAnswerAnnotation *create_EduStanfordNlpLingCoreAnnotations_GoldAnswerAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_GoldAnswerAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_GoldAnswerAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_FeaturesAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_FeaturesAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_FeaturesAnnotation = { "FeaturesAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_FeaturesAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_FeaturesAnnotation_init(EduStanfordNlpLingCoreAnnotations_FeaturesAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_FeaturesAnnotation *new_EduStanfordNlpLingCoreAnnotations_FeaturesAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_FeaturesAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_FeaturesAnnotation *create_EduStanfordNlpLingCoreAnnotations_FeaturesAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_FeaturesAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_FeaturesAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_InterpretationAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_InterpretationAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_InterpretationAnnotation = { "InterpretationAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_InterpretationAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_InterpretationAnnotation_init(EduStanfordNlpLingCoreAnnotations_InterpretationAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_InterpretationAnnotation *new_EduStanfordNlpLingCoreAnnotations_InterpretationAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_InterpretationAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_InterpretationAnnotation *create_EduStanfordNlpLingCoreAnnotations_InterpretationAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_InterpretationAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_InterpretationAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_RoleAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_RoleAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_RoleAnnotation = { "RoleAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_RoleAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_RoleAnnotation_init(EduStanfordNlpLingCoreAnnotations_RoleAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_RoleAnnotation *new_EduStanfordNlpLingCoreAnnotations_RoleAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_RoleAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_RoleAnnotation *create_EduStanfordNlpLingCoreAnnotations_RoleAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_RoleAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_RoleAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_GazetteerAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(JavaUtilList_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_GazetteerAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/List<Ljava/lang/String;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/List<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_GazetteerAnnotation = { "GazetteerAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_GazetteerAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_GazetteerAnnotation_init(EduStanfordNlpLingCoreAnnotations_GazetteerAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_GazetteerAnnotation *new_EduStanfordNlpLingCoreAnnotations_GazetteerAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_GazetteerAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_GazetteerAnnotation *create_EduStanfordNlpLingCoreAnnotations_GazetteerAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_GazetteerAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_GazetteerAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_StemAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_StemAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_StemAnnotation = { "StemAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_StemAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_StemAnnotation_init(EduStanfordNlpLingCoreAnnotations_StemAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_StemAnnotation *new_EduStanfordNlpLingCoreAnnotations_StemAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_StemAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_StemAnnotation *create_EduStanfordNlpLingCoreAnnotations_StemAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_StemAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_StemAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_PolarityAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_PolarityAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_PolarityAnnotation = { "PolarityAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_PolarityAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_PolarityAnnotation_init(EduStanfordNlpLingCoreAnnotations_PolarityAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_PolarityAnnotation *new_EduStanfordNlpLingCoreAnnotations_PolarityAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_PolarityAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_PolarityAnnotation *create_EduStanfordNlpLingCoreAnnotations_PolarityAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_PolarityAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_PolarityAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_MorphoNumAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_MorphoNumAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_MorphoNumAnnotation = { "MorphoNumAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_MorphoNumAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_MorphoNumAnnotation_init(EduStanfordNlpLingCoreAnnotations_MorphoNumAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_MorphoNumAnnotation *new_EduStanfordNlpLingCoreAnnotations_MorphoNumAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_MorphoNumAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_MorphoNumAnnotation *create_EduStanfordNlpLingCoreAnnotations_MorphoNumAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_MorphoNumAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_MorphoNumAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_MorphoPersAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_MorphoPersAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_MorphoPersAnnotation = { "MorphoPersAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_MorphoPersAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_MorphoPersAnnotation_init(EduStanfordNlpLingCoreAnnotations_MorphoPersAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_MorphoPersAnnotation *new_EduStanfordNlpLingCoreAnnotations_MorphoPersAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_MorphoPersAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_MorphoPersAnnotation *create_EduStanfordNlpLingCoreAnnotations_MorphoPersAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_MorphoPersAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_MorphoPersAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_MorphoGenAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_MorphoGenAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_MorphoGenAnnotation = { "MorphoGenAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_MorphoGenAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_MorphoGenAnnotation_init(EduStanfordNlpLingCoreAnnotations_MorphoGenAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_MorphoGenAnnotation *new_EduStanfordNlpLingCoreAnnotations_MorphoGenAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_MorphoGenAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_MorphoGenAnnotation *create_EduStanfordNlpLingCoreAnnotations_MorphoGenAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_MorphoGenAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_MorphoGenAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_MorphoCaseAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_MorphoCaseAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_MorphoCaseAnnotation = { "MorphoCaseAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_MorphoCaseAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_MorphoCaseAnnotation_init(EduStanfordNlpLingCoreAnnotations_MorphoCaseAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_MorphoCaseAnnotation *new_EduStanfordNlpLingCoreAnnotations_MorphoCaseAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_MorphoCaseAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_MorphoCaseAnnotation *create_EduStanfordNlpLingCoreAnnotations_MorphoCaseAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_MorphoCaseAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_MorphoCaseAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_ChineseCharAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_ChineseCharAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_ChineseCharAnnotation = { "ChineseCharAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_ChineseCharAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_ChineseCharAnnotation_init(EduStanfordNlpLingCoreAnnotations_ChineseCharAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_ChineseCharAnnotation *new_EduStanfordNlpLingCoreAnnotations_ChineseCharAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_ChineseCharAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_ChineseCharAnnotation *create_EduStanfordNlpLingCoreAnnotations_ChineseCharAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_ChineseCharAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_ChineseCharAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_ChineseOrigSegAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_ChineseOrigSegAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_ChineseOrigSegAnnotation = { "ChineseOrigSegAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_ChineseOrigSegAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_ChineseOrigSegAnnotation_init(EduStanfordNlpLingCoreAnnotations_ChineseOrigSegAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_ChineseOrigSegAnnotation *new_EduStanfordNlpLingCoreAnnotations_ChineseOrigSegAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_ChineseOrigSegAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_ChineseOrigSegAnnotation *create_EduStanfordNlpLingCoreAnnotations_ChineseOrigSegAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_ChineseOrigSegAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_ChineseOrigSegAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_ChineseSegAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_ChineseSegAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_ChineseSegAnnotation = { "ChineseSegAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_ChineseSegAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_ChineseSegAnnotation_init(EduStanfordNlpLingCoreAnnotations_ChineseSegAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_ChineseSegAnnotation *new_EduStanfordNlpLingCoreAnnotations_ChineseSegAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_ChineseSegAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_ChineseSegAnnotation *create_EduStanfordNlpLingCoreAnnotations_ChineseSegAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_ChineseSegAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_ChineseSegAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_ChineseIsSegmentedAnnotation

- (IOSClass *)getType {
  return JavaLangBoolean_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_ChineseIsSegmentedAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Boolean;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_ChineseIsSegmentedAnnotation = { "ChineseIsSegmentedAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_ChineseIsSegmentedAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_ChineseIsSegmentedAnnotation_init(EduStanfordNlpLingCoreAnnotations_ChineseIsSegmentedAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_ChineseIsSegmentedAnnotation *new_EduStanfordNlpLingCoreAnnotations_ChineseIsSegmentedAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_ChineseIsSegmentedAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_ChineseIsSegmentedAnnotation *create_EduStanfordNlpLingCoreAnnotations_ChineseIsSegmentedAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_ChineseIsSegmentedAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_ChineseIsSegmentedAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_CharacterOffsetBeginAnnotation

- (IOSClass *)getType {
  return JavaLangInteger_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_CharacterOffsetBeginAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Integer;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_CharacterOffsetBeginAnnotation = { "CharacterOffsetBeginAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_CharacterOffsetBeginAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_CharacterOffsetBeginAnnotation_init(EduStanfordNlpLingCoreAnnotations_CharacterOffsetBeginAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_CharacterOffsetBeginAnnotation *new_EduStanfordNlpLingCoreAnnotations_CharacterOffsetBeginAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_CharacterOffsetBeginAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_CharacterOffsetBeginAnnotation *create_EduStanfordNlpLingCoreAnnotations_CharacterOffsetBeginAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_CharacterOffsetBeginAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_CharacterOffsetBeginAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_CharacterOffsetEndAnnotation

- (IOSClass *)getType {
  return JavaLangInteger_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_CharacterOffsetEndAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Integer;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_CharacterOffsetEndAnnotation = { "CharacterOffsetEndAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_CharacterOffsetEndAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_CharacterOffsetEndAnnotation_init(EduStanfordNlpLingCoreAnnotations_CharacterOffsetEndAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_CharacterOffsetEndAnnotation *new_EduStanfordNlpLingCoreAnnotations_CharacterOffsetEndAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_CharacterOffsetEndAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_CharacterOffsetEndAnnotation *create_EduStanfordNlpLingCoreAnnotations_CharacterOffsetEndAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_CharacterOffsetEndAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_CharacterOffsetEndAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_CostMagnificationAnnotation

- (IOSClass *)getType {
  return JavaLangDouble_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_CostMagnificationAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Double;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Double;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_CostMagnificationAnnotation = { "CostMagnificationAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_CostMagnificationAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_CostMagnificationAnnotation_init(EduStanfordNlpLingCoreAnnotations_CostMagnificationAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_CostMagnificationAnnotation *new_EduStanfordNlpLingCoreAnnotations_CostMagnificationAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_CostMagnificationAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_CostMagnificationAnnotation *create_EduStanfordNlpLingCoreAnnotations_CostMagnificationAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_CostMagnificationAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_CostMagnificationAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_WordSenseAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_WordSenseAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_WordSenseAnnotation = { "WordSenseAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_WordSenseAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_WordSenseAnnotation_init(EduStanfordNlpLingCoreAnnotations_WordSenseAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_WordSenseAnnotation *new_EduStanfordNlpLingCoreAnnotations_WordSenseAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_WordSenseAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_WordSenseAnnotation *create_EduStanfordNlpLingCoreAnnotations_WordSenseAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_WordSenseAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_WordSenseAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_SRLInstancesAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(JavaUtilList_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_SRLInstancesAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/List<Ljava/util/List<Ledu/stanford/nlp/util/Pair<Ljava/lang/String;Ledu/stanford/nlp/util/Pair;>;>;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/List<Ljava/util/List<Ledu/stanford/nlp/util/Pair<Ljava/lang/String;Ledu/stanford/nlp/util/Pair;>;>;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SRLInstancesAnnotation = { "SRLInstancesAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SRLInstancesAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_SRLInstancesAnnotation_init(EduStanfordNlpLingCoreAnnotations_SRLInstancesAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_SRLInstancesAnnotation *new_EduStanfordNlpLingCoreAnnotations_SRLInstancesAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SRLInstancesAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_SRLInstancesAnnotation *create_EduStanfordNlpLingCoreAnnotations_SRLInstancesAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_SRLInstancesAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SRLInstancesAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_NumTxtSentencesAnnotation

- (IOSClass *)getType {
  return JavaLangInteger_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_NumTxtSentencesAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Integer;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_NumTxtSentencesAnnotation = { "NumTxtSentencesAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_NumTxtSentencesAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_NumTxtSentencesAnnotation_init(EduStanfordNlpLingCoreAnnotations_NumTxtSentencesAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_NumTxtSentencesAnnotation *new_EduStanfordNlpLingCoreAnnotations_NumTxtSentencesAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_NumTxtSentencesAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_NumTxtSentencesAnnotation *create_EduStanfordNlpLingCoreAnnotations_NumTxtSentencesAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_NumTxtSentencesAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_NumTxtSentencesAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_TagLabelAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpLingLabel_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_TagLabelAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ledu/stanford/nlp/ling/Label;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ledu/stanford/nlp/ling/Label;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_TagLabelAnnotation = { "TagLabelAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_TagLabelAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_TagLabelAnnotation_init(EduStanfordNlpLingCoreAnnotations_TagLabelAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_TagLabelAnnotation *new_EduStanfordNlpLingCoreAnnotations_TagLabelAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_TagLabelAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_TagLabelAnnotation *create_EduStanfordNlpLingCoreAnnotations_TagLabelAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_TagLabelAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_TagLabelAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_DomainAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_DomainAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_DomainAnnotation = { "DomainAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_DomainAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_DomainAnnotation_init(EduStanfordNlpLingCoreAnnotations_DomainAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_DomainAnnotation *new_EduStanfordNlpLingCoreAnnotations_DomainAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_DomainAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_DomainAnnotation *create_EduStanfordNlpLingCoreAnnotations_DomainAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_DomainAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_DomainAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_PositionAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_PositionAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_PositionAnnotation = { "PositionAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_PositionAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_PositionAnnotation_init(EduStanfordNlpLingCoreAnnotations_PositionAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_PositionAnnotation *new_EduStanfordNlpLingCoreAnnotations_PositionAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_PositionAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_PositionAnnotation *create_EduStanfordNlpLingCoreAnnotations_PositionAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_PositionAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_PositionAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_CharAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_CharAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_CharAnnotation = { "CharAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_CharAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_CharAnnotation_init(EduStanfordNlpLingCoreAnnotations_CharAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_CharAnnotation *new_EduStanfordNlpLingCoreAnnotations_CharAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_CharAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_CharAnnotation *create_EduStanfordNlpLingCoreAnnotations_CharAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_CharAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_CharAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_UnknownAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_UnknownAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_UnknownAnnotation = { "UnknownAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_UnknownAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_UnknownAnnotation_init(EduStanfordNlpLingCoreAnnotations_UnknownAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_UnknownAnnotation *new_EduStanfordNlpLingCoreAnnotations_UnknownAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_UnknownAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_UnknownAnnotation *create_EduStanfordNlpLingCoreAnnotations_UnknownAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_UnknownAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_UnknownAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_IDAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_IDAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_IDAnnotation = { "IDAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_IDAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_IDAnnotation_init(EduStanfordNlpLingCoreAnnotations_IDAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_IDAnnotation *new_EduStanfordNlpLingCoreAnnotations_IDAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_IDAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_IDAnnotation *create_EduStanfordNlpLingCoreAnnotations_IDAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_IDAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_IDAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_GazAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_GazAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_GazAnnotation = { "GazAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_GazAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_GazAnnotation_init(EduStanfordNlpLingCoreAnnotations_GazAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_GazAnnotation *new_EduStanfordNlpLingCoreAnnotations_GazAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_GazAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_GazAnnotation *create_EduStanfordNlpLingCoreAnnotations_GazAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_GazAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_GazAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_PossibleAnswersAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_PossibleAnswersAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_PossibleAnswersAnnotation = { "PossibleAnswersAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_PossibleAnswersAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_PossibleAnswersAnnotation_init(EduStanfordNlpLingCoreAnnotations_PossibleAnswersAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_PossibleAnswersAnnotation *new_EduStanfordNlpLingCoreAnnotations_PossibleAnswersAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_PossibleAnswersAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_PossibleAnswersAnnotation *create_EduStanfordNlpLingCoreAnnotations_PossibleAnswersAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_PossibleAnswersAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_PossibleAnswersAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_DistSimAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_DistSimAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_DistSimAnnotation = { "DistSimAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_DistSimAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_DistSimAnnotation_init(EduStanfordNlpLingCoreAnnotations_DistSimAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_DistSimAnnotation *new_EduStanfordNlpLingCoreAnnotations_DistSimAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_DistSimAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_DistSimAnnotation *create_EduStanfordNlpLingCoreAnnotations_DistSimAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_DistSimAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_DistSimAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_AbbrAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_AbbrAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_AbbrAnnotation = { "AbbrAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_AbbrAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_AbbrAnnotation_init(EduStanfordNlpLingCoreAnnotations_AbbrAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_AbbrAnnotation *new_EduStanfordNlpLingCoreAnnotations_AbbrAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_AbbrAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_AbbrAnnotation *create_EduStanfordNlpLingCoreAnnotations_AbbrAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_AbbrAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_AbbrAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_ChunkAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_ChunkAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_ChunkAnnotation = { "ChunkAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_ChunkAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_ChunkAnnotation_init(EduStanfordNlpLingCoreAnnotations_ChunkAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_ChunkAnnotation *new_EduStanfordNlpLingCoreAnnotations_ChunkAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_ChunkAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_ChunkAnnotation *create_EduStanfordNlpLingCoreAnnotations_ChunkAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_ChunkAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_ChunkAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_GovernorAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_GovernorAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_GovernorAnnotation = { "GovernorAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_GovernorAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_GovernorAnnotation_init(EduStanfordNlpLingCoreAnnotations_GovernorAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_GovernorAnnotation *new_EduStanfordNlpLingCoreAnnotations_GovernorAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_GovernorAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_GovernorAnnotation *create_EduStanfordNlpLingCoreAnnotations_GovernorAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_GovernorAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_GovernorAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_AbgeneAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_AbgeneAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_AbgeneAnnotation = { "AbgeneAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_AbgeneAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_AbgeneAnnotation_init(EduStanfordNlpLingCoreAnnotations_AbgeneAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_AbgeneAnnotation *new_EduStanfordNlpLingCoreAnnotations_AbgeneAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_AbgeneAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_AbgeneAnnotation *create_EduStanfordNlpLingCoreAnnotations_AbgeneAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_AbgeneAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_AbgeneAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_GeniaAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_GeniaAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_GeniaAnnotation = { "GeniaAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_GeniaAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_GeniaAnnotation_init(EduStanfordNlpLingCoreAnnotations_GeniaAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_GeniaAnnotation *new_EduStanfordNlpLingCoreAnnotations_GeniaAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_GeniaAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_GeniaAnnotation *create_EduStanfordNlpLingCoreAnnotations_GeniaAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_GeniaAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_GeniaAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_AbstrAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_AbstrAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_AbstrAnnotation = { "AbstrAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_AbstrAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_AbstrAnnotation_init(EduStanfordNlpLingCoreAnnotations_AbstrAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_AbstrAnnotation *new_EduStanfordNlpLingCoreAnnotations_AbstrAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_AbstrAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_AbstrAnnotation *create_EduStanfordNlpLingCoreAnnotations_AbstrAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_AbstrAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_AbstrAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_FreqAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_FreqAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_FreqAnnotation = { "FreqAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_FreqAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_FreqAnnotation_init(EduStanfordNlpLingCoreAnnotations_FreqAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_FreqAnnotation *new_EduStanfordNlpLingCoreAnnotations_FreqAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_FreqAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_FreqAnnotation *create_EduStanfordNlpLingCoreAnnotations_FreqAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_FreqAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_FreqAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_DictAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_DictAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_DictAnnotation = { "DictAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_DictAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_DictAnnotation_init(EduStanfordNlpLingCoreAnnotations_DictAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_DictAnnotation *new_EduStanfordNlpLingCoreAnnotations_DictAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_DictAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_DictAnnotation *create_EduStanfordNlpLingCoreAnnotations_DictAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_DictAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_DictAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_WebAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_WebAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_WebAnnotation = { "WebAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_WebAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_WebAnnotation_init(EduStanfordNlpLingCoreAnnotations_WebAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_WebAnnotation *new_EduStanfordNlpLingCoreAnnotations_WebAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_WebAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_WebAnnotation *create_EduStanfordNlpLingCoreAnnotations_WebAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_WebAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_WebAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_FemaleGazAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_FemaleGazAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_FemaleGazAnnotation = { "FemaleGazAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_FemaleGazAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_FemaleGazAnnotation_init(EduStanfordNlpLingCoreAnnotations_FemaleGazAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_FemaleGazAnnotation *new_EduStanfordNlpLingCoreAnnotations_FemaleGazAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_FemaleGazAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_FemaleGazAnnotation *create_EduStanfordNlpLingCoreAnnotations_FemaleGazAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_FemaleGazAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_FemaleGazAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_MaleGazAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_MaleGazAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_MaleGazAnnotation = { "MaleGazAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_MaleGazAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_MaleGazAnnotation_init(EduStanfordNlpLingCoreAnnotations_MaleGazAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_MaleGazAnnotation *new_EduStanfordNlpLingCoreAnnotations_MaleGazAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_MaleGazAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_MaleGazAnnotation *create_EduStanfordNlpLingCoreAnnotations_MaleGazAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_MaleGazAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_MaleGazAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_LastGazAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_LastGazAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_LastGazAnnotation = { "LastGazAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_LastGazAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_LastGazAnnotation_init(EduStanfordNlpLingCoreAnnotations_LastGazAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_LastGazAnnotation *new_EduStanfordNlpLingCoreAnnotations_LastGazAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_LastGazAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_LastGazAnnotation *create_EduStanfordNlpLingCoreAnnotations_LastGazAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_LastGazAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_LastGazAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_IsURLAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_IsURLAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_IsURLAnnotation = { "IsURLAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_IsURLAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_IsURLAnnotation_init(EduStanfordNlpLingCoreAnnotations_IsURLAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_IsURLAnnotation *new_EduStanfordNlpLingCoreAnnotations_IsURLAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_IsURLAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_IsURLAnnotation *create_EduStanfordNlpLingCoreAnnotations_IsURLAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_IsURLAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_IsURLAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_LinkAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_LinkAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_LinkAnnotation = { "LinkAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_LinkAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_LinkAnnotation_init(EduStanfordNlpLingCoreAnnotations_LinkAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_LinkAnnotation *new_EduStanfordNlpLingCoreAnnotations_LinkAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_LinkAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_LinkAnnotation *create_EduStanfordNlpLingCoreAnnotations_LinkAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_LinkAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_LinkAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_MentionsAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(JavaUtilList_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_MentionsAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/List<Ledu/stanford/nlp/util/CoreMap;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/List<Ledu/stanford/nlp/util/CoreMap;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_MentionsAnnotation = { "MentionsAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_MentionsAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_MentionsAnnotation_init(EduStanfordNlpLingCoreAnnotations_MentionsAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_MentionsAnnotation *new_EduStanfordNlpLingCoreAnnotations_MentionsAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_MentionsAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_MentionsAnnotation *create_EduStanfordNlpLingCoreAnnotations_MentionsAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_MentionsAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_MentionsAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_EntityTypeAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_EntityTypeAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_EntityTypeAnnotation = { "EntityTypeAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_EntityTypeAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_EntityTypeAnnotation_init(EduStanfordNlpLingCoreAnnotations_EntityTypeAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_EntityTypeAnnotation *new_EduStanfordNlpLingCoreAnnotations_EntityTypeAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_EntityTypeAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_EntityTypeAnnotation *create_EduStanfordNlpLingCoreAnnotations_EntityTypeAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_EntityTypeAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_EntityTypeAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_IsDateRangeAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_IsDateRangeAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_IsDateRangeAnnotation = { "IsDateRangeAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_IsDateRangeAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_IsDateRangeAnnotation_init(EduStanfordNlpLingCoreAnnotations_IsDateRangeAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_IsDateRangeAnnotation *new_EduStanfordNlpLingCoreAnnotations_IsDateRangeAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_IsDateRangeAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_IsDateRangeAnnotation *create_EduStanfordNlpLingCoreAnnotations_IsDateRangeAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_IsDateRangeAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_IsDateRangeAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_PredictedAnswerAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_PredictedAnswerAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_PredictedAnswerAnnotation = { "PredictedAnswerAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_PredictedAnswerAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_PredictedAnswerAnnotation_init(EduStanfordNlpLingCoreAnnotations_PredictedAnswerAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_PredictedAnswerAnnotation *new_EduStanfordNlpLingCoreAnnotations_PredictedAnswerAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_PredictedAnswerAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_PredictedAnswerAnnotation *create_EduStanfordNlpLingCoreAnnotations_PredictedAnswerAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_PredictedAnswerAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_PredictedAnswerAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_OriginalCharAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_OriginalCharAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_OriginalCharAnnotation = { "OriginalCharAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_OriginalCharAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_OriginalCharAnnotation_init(EduStanfordNlpLingCoreAnnotations_OriginalCharAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_OriginalCharAnnotation *new_EduStanfordNlpLingCoreAnnotations_OriginalCharAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_OriginalCharAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_OriginalCharAnnotation *create_EduStanfordNlpLingCoreAnnotations_OriginalCharAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_OriginalCharAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_OriginalCharAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_UTypeAnnotation

- (IOSClass *)getType {
  return JavaLangInteger_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_UTypeAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Integer;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_UTypeAnnotation = { "UTypeAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_UTypeAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_UTypeAnnotation_init(EduStanfordNlpLingCoreAnnotations_UTypeAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_UTypeAnnotation *new_EduStanfordNlpLingCoreAnnotations_UTypeAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_UTypeAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_UTypeAnnotation *create_EduStanfordNlpLingCoreAnnotations_UTypeAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_UTypeAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_UTypeAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_EntityRuleAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_EntityRuleAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_EntityRuleAnnotation = { "EntityRuleAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_EntityRuleAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_EntityRuleAnnotation_init(EduStanfordNlpLingCoreAnnotations_EntityRuleAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_EntityRuleAnnotation *new_EduStanfordNlpLingCoreAnnotations_EntityRuleAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_EntityRuleAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_EntityRuleAnnotation *create_EduStanfordNlpLingCoreAnnotations_EntityRuleAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_EntityRuleAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_EntityRuleAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_SectionAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_SectionAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SectionAnnotation = { "SectionAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SectionAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_SectionAnnotation_init(EduStanfordNlpLingCoreAnnotations_SectionAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_SectionAnnotation *new_EduStanfordNlpLingCoreAnnotations_SectionAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SectionAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_SectionAnnotation *create_EduStanfordNlpLingCoreAnnotations_SectionAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_SectionAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SectionAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_SectionDateAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_SectionDateAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SectionDateAnnotation = { "SectionDateAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SectionDateAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_SectionDateAnnotation_init(EduStanfordNlpLingCoreAnnotations_SectionDateAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_SectionDateAnnotation *new_EduStanfordNlpLingCoreAnnotations_SectionDateAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SectionDateAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_SectionDateAnnotation *create_EduStanfordNlpLingCoreAnnotations_SectionDateAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_SectionDateAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SectionDateAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_SectionIDAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_SectionIDAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SectionIDAnnotation = { "SectionIDAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SectionIDAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_SectionIDAnnotation_init(EduStanfordNlpLingCoreAnnotations_SectionIDAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_SectionIDAnnotation *new_EduStanfordNlpLingCoreAnnotations_SectionIDAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SectionIDAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_SectionIDAnnotation *create_EduStanfordNlpLingCoreAnnotations_SectionIDAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_SectionIDAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SectionIDAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_SectionStartAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilCoreMap_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_SectionStartAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ledu/stanford/nlp/util/CoreMap;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ledu/stanford/nlp/util/CoreMap;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SectionStartAnnotation = { "SectionStartAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SectionStartAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_SectionStartAnnotation_init(EduStanfordNlpLingCoreAnnotations_SectionStartAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_SectionStartAnnotation *new_EduStanfordNlpLingCoreAnnotations_SectionStartAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SectionStartAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_SectionStartAnnotation *create_EduStanfordNlpLingCoreAnnotations_SectionStartAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_SectionStartAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SectionStartAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_SectionEndAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_SectionEndAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SectionEndAnnotation = { "SectionEndAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SectionEndAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_SectionEndAnnotation_init(EduStanfordNlpLingCoreAnnotations_SectionEndAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_SectionEndAnnotation *new_EduStanfordNlpLingCoreAnnotations_SectionEndAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SectionEndAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_SectionEndAnnotation *create_EduStanfordNlpLingCoreAnnotations_SectionEndAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_SectionEndAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SectionEndAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_WordPositionAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_WordPositionAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_WordPositionAnnotation = { "WordPositionAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_WordPositionAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_WordPositionAnnotation_init(EduStanfordNlpLingCoreAnnotations_WordPositionAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_WordPositionAnnotation *new_EduStanfordNlpLingCoreAnnotations_WordPositionAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_WordPositionAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_WordPositionAnnotation *create_EduStanfordNlpLingCoreAnnotations_WordPositionAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_WordPositionAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_WordPositionAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_ParaPositionAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_ParaPositionAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_ParaPositionAnnotation = { "ParaPositionAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_ParaPositionAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_ParaPositionAnnotation_init(EduStanfordNlpLingCoreAnnotations_ParaPositionAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_ParaPositionAnnotation *new_EduStanfordNlpLingCoreAnnotations_ParaPositionAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_ParaPositionAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_ParaPositionAnnotation *create_EduStanfordNlpLingCoreAnnotations_ParaPositionAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_ParaPositionAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_ParaPositionAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_SentencePositionAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_SentencePositionAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SentencePositionAnnotation = { "SentencePositionAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SentencePositionAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_SentencePositionAnnotation_init(EduStanfordNlpLingCoreAnnotations_SentencePositionAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_SentencePositionAnnotation *new_EduStanfordNlpLingCoreAnnotations_SentencePositionAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SentencePositionAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_SentencePositionAnnotation *create_EduStanfordNlpLingCoreAnnotations_SentencePositionAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_SentencePositionAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SentencePositionAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_SentenceIDAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_SentenceIDAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SentenceIDAnnotation = { "SentenceIDAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SentenceIDAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_SentenceIDAnnotation_init(EduStanfordNlpLingCoreAnnotations_SentenceIDAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_SentenceIDAnnotation *new_EduStanfordNlpLingCoreAnnotations_SentenceIDAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SentenceIDAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_SentenceIDAnnotation *create_EduStanfordNlpLingCoreAnnotations_SentenceIDAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_SentenceIDAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SentenceIDAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_EntityClassAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_EntityClassAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_EntityClassAnnotation = { "EntityClassAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_EntityClassAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_EntityClassAnnotation_init(EduStanfordNlpLingCoreAnnotations_EntityClassAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_EntityClassAnnotation *new_EduStanfordNlpLingCoreAnnotations_EntityClassAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_EntityClassAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_EntityClassAnnotation *create_EduStanfordNlpLingCoreAnnotations_EntityClassAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_EntityClassAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_EntityClassAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_AnswerObjectAnnotation

- (IOSClass *)getType {
  return NSObject_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_AnswerObjectAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Object;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_AnswerObjectAnnotation = { "AnswerObjectAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_AnswerObjectAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_AnswerObjectAnnotation_init(EduStanfordNlpLingCoreAnnotations_AnswerObjectAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_AnswerObjectAnnotation *new_EduStanfordNlpLingCoreAnnotations_AnswerObjectAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_AnswerObjectAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_AnswerObjectAnnotation *create_EduStanfordNlpLingCoreAnnotations_AnswerObjectAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_AnswerObjectAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_AnswerObjectAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_BestCliquesAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_BestCliquesAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_BestCliquesAnnotation = { "BestCliquesAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_BestCliquesAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_BestCliquesAnnotation_init(EduStanfordNlpLingCoreAnnotations_BestCliquesAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_BestCliquesAnnotation *new_EduStanfordNlpLingCoreAnnotations_BestCliquesAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_BestCliquesAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_BestCliquesAnnotation *create_EduStanfordNlpLingCoreAnnotations_BestCliquesAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_BestCliquesAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_BestCliquesAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_BestFullAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_BestFullAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_BestFullAnnotation = { "BestFullAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_BestFullAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_BestFullAnnotation_init(EduStanfordNlpLingCoreAnnotations_BestFullAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_BestFullAnnotation *new_EduStanfordNlpLingCoreAnnotations_BestFullAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_BestFullAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_BestFullAnnotation *create_EduStanfordNlpLingCoreAnnotations_BestFullAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_BestFullAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_BestFullAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_LastTaggedAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_LastTaggedAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_LastTaggedAnnotation = { "LastTaggedAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_LastTaggedAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_LastTaggedAnnotation_init(EduStanfordNlpLingCoreAnnotations_LastTaggedAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_LastTaggedAnnotation *new_EduStanfordNlpLingCoreAnnotations_LastTaggedAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_LastTaggedAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_LastTaggedAnnotation *create_EduStanfordNlpLingCoreAnnotations_LastTaggedAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_LastTaggedAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_LastTaggedAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_LabelAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_LabelAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_LabelAnnotation = { "LabelAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_LabelAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_LabelAnnotation_init(EduStanfordNlpLingCoreAnnotations_LabelAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_LabelAnnotation *new_EduStanfordNlpLingCoreAnnotations_LabelAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_LabelAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_LabelAnnotation *create_EduStanfordNlpLingCoreAnnotations_LabelAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_LabelAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_LabelAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_NeighborsAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(JavaUtilList_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_NeighborsAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/List<Ledu/stanford/nlp/util/Pair<Ledu/stanford/nlp/ling/WordLemmaTag;Ljava/lang/String;>;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/List<Ledu/stanford/nlp/util/Pair<Ledu/stanford/nlp/ling/WordLemmaTag;Ljava/lang/String;>;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_NeighborsAnnotation = { "NeighborsAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_NeighborsAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_NeighborsAnnotation_init(EduStanfordNlpLingCoreAnnotations_NeighborsAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_NeighborsAnnotation *new_EduStanfordNlpLingCoreAnnotations_NeighborsAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_NeighborsAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_NeighborsAnnotation *create_EduStanfordNlpLingCoreAnnotations_NeighborsAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_NeighborsAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_NeighborsAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_ContextsAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(JavaUtilList_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_ContextsAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/List<Ledu/stanford/nlp/util/Pair<Ljava/lang/String;Ljava/lang/String;>;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/List<Ledu/stanford/nlp/util/Pair<Ljava/lang/String;Ljava/lang/String;>;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_ContextsAnnotation = { "ContextsAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_ContextsAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_ContextsAnnotation_init(EduStanfordNlpLingCoreAnnotations_ContextsAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_ContextsAnnotation *new_EduStanfordNlpLingCoreAnnotations_ContextsAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_ContextsAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_ContextsAnnotation *create_EduStanfordNlpLingCoreAnnotations_ContextsAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_ContextsAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_ContextsAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_DependentsAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(JavaUtilList_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_DependentsAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/List<Ledu/stanford/nlp/util/Pair<Ledu/stanford/nlp/util/Triple<Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;>;Ljava/lang/String;>;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/List<Ledu/stanford/nlp/util/Pair<Ledu/stanford/nlp/util/Triple<Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;>;Ljava/lang/String;>;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_DependentsAnnotation = { "DependentsAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_DependentsAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_DependentsAnnotation_init(EduStanfordNlpLingCoreAnnotations_DependentsAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_DependentsAnnotation *new_EduStanfordNlpLingCoreAnnotations_DependentsAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_DependentsAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_DependentsAnnotation *create_EduStanfordNlpLingCoreAnnotations_DependentsAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_DependentsAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_DependentsAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_WordFormAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_WordFormAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_WordFormAnnotation = { "WordFormAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_WordFormAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_WordFormAnnotation_init(EduStanfordNlpLingCoreAnnotations_WordFormAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_WordFormAnnotation *new_EduStanfordNlpLingCoreAnnotations_WordFormAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_WordFormAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_WordFormAnnotation *create_EduStanfordNlpLingCoreAnnotations_WordFormAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_WordFormAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_WordFormAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_TrueTagAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_TrueTagAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_TrueTagAnnotation = { "TrueTagAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_TrueTagAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_TrueTagAnnotation_init(EduStanfordNlpLingCoreAnnotations_TrueTagAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_TrueTagAnnotation *new_EduStanfordNlpLingCoreAnnotations_TrueTagAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_TrueTagAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_TrueTagAnnotation *create_EduStanfordNlpLingCoreAnnotations_TrueTagAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_TrueTagAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_TrueTagAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_SubcategorizationAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_SubcategorizationAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SubcategorizationAnnotation = { "SubcategorizationAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SubcategorizationAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_SubcategorizationAnnotation_init(EduStanfordNlpLingCoreAnnotations_SubcategorizationAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_SubcategorizationAnnotation *new_EduStanfordNlpLingCoreAnnotations_SubcategorizationAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SubcategorizationAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_SubcategorizationAnnotation *create_EduStanfordNlpLingCoreAnnotations_SubcategorizationAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_SubcategorizationAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SubcategorizationAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_BagOfWordsAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(JavaUtilList_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_BagOfWordsAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/List<Ledu/stanford/nlp/util/Pair<Ljava/lang/String;Ljava/lang/String;>;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/List<Ledu/stanford/nlp/util/Pair<Ljava/lang/String;Ljava/lang/String;>;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_BagOfWordsAnnotation = { "BagOfWordsAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_BagOfWordsAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_BagOfWordsAnnotation_init(EduStanfordNlpLingCoreAnnotations_BagOfWordsAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_BagOfWordsAnnotation *new_EduStanfordNlpLingCoreAnnotations_BagOfWordsAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_BagOfWordsAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_BagOfWordsAnnotation *create_EduStanfordNlpLingCoreAnnotations_BagOfWordsAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_BagOfWordsAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_BagOfWordsAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_HeightAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_HeightAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_HeightAnnotation = { "HeightAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_HeightAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_HeightAnnotation_init(EduStanfordNlpLingCoreAnnotations_HeightAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_HeightAnnotation *new_EduStanfordNlpLingCoreAnnotations_HeightAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_HeightAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_HeightAnnotation *create_EduStanfordNlpLingCoreAnnotations_HeightAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_HeightAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_HeightAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_LengthAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_LengthAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_LengthAnnotation = { "LengthAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_LengthAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_LengthAnnotation_init(EduStanfordNlpLingCoreAnnotations_LengthAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_LengthAnnotation *new_EduStanfordNlpLingCoreAnnotations_LengthAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_LengthAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_LengthAnnotation *create_EduStanfordNlpLingCoreAnnotations_LengthAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_LengthAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_LengthAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_LBeginAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_LBeginAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_LBeginAnnotation = { "LBeginAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_LBeginAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_LBeginAnnotation_init(EduStanfordNlpLingCoreAnnotations_LBeginAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_LBeginAnnotation *new_EduStanfordNlpLingCoreAnnotations_LBeginAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_LBeginAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_LBeginAnnotation *create_EduStanfordNlpLingCoreAnnotations_LBeginAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_LBeginAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_LBeginAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_LMiddleAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_LMiddleAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_LMiddleAnnotation = { "LMiddleAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_LMiddleAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_LMiddleAnnotation_init(EduStanfordNlpLingCoreAnnotations_LMiddleAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_LMiddleAnnotation *new_EduStanfordNlpLingCoreAnnotations_LMiddleAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_LMiddleAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_LMiddleAnnotation *create_EduStanfordNlpLingCoreAnnotations_LMiddleAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_LMiddleAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_LMiddleAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_LEndAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_LEndAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_LEndAnnotation = { "LEndAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_LEndAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_LEndAnnotation_init(EduStanfordNlpLingCoreAnnotations_LEndAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_LEndAnnotation *new_EduStanfordNlpLingCoreAnnotations_LEndAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_LEndAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_LEndAnnotation *create_EduStanfordNlpLingCoreAnnotations_LEndAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_LEndAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_LEndAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_D2_LBeginAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_D2_LBeginAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_D2_LBeginAnnotation = { "D2_LBeginAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_D2_LBeginAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_D2_LBeginAnnotation_init(EduStanfordNlpLingCoreAnnotations_D2_LBeginAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_D2_LBeginAnnotation *new_EduStanfordNlpLingCoreAnnotations_D2_LBeginAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_D2_LBeginAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_D2_LBeginAnnotation *create_EduStanfordNlpLingCoreAnnotations_D2_LBeginAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_D2_LBeginAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_D2_LBeginAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_D2_LMiddleAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_D2_LMiddleAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_D2_LMiddleAnnotation = { "D2_LMiddleAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_D2_LMiddleAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_D2_LMiddleAnnotation_init(EduStanfordNlpLingCoreAnnotations_D2_LMiddleAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_D2_LMiddleAnnotation *new_EduStanfordNlpLingCoreAnnotations_D2_LMiddleAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_D2_LMiddleAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_D2_LMiddleAnnotation *create_EduStanfordNlpLingCoreAnnotations_D2_LMiddleAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_D2_LMiddleAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_D2_LMiddleAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_D2_LEndAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_D2_LEndAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_D2_LEndAnnotation = { "D2_LEndAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_D2_LEndAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_D2_LEndAnnotation_init(EduStanfordNlpLingCoreAnnotations_D2_LEndAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_D2_LEndAnnotation *new_EduStanfordNlpLingCoreAnnotations_D2_LEndAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_D2_LEndAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_D2_LEndAnnotation *create_EduStanfordNlpLingCoreAnnotations_D2_LEndAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_D2_LEndAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_D2_LEndAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_UBlockAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_UBlockAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_UBlockAnnotation = { "UBlockAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_UBlockAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_UBlockAnnotation_init(EduStanfordNlpLingCoreAnnotations_UBlockAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_UBlockAnnotation *new_EduStanfordNlpLingCoreAnnotations_UBlockAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_UBlockAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_UBlockAnnotation *create_EduStanfordNlpLingCoreAnnotations_UBlockAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_UBlockAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_UBlockAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_SpaceBeforeAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_SpaceBeforeAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SpaceBeforeAnnotation = { "SpaceBeforeAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SpaceBeforeAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_SpaceBeforeAnnotation_init(EduStanfordNlpLingCoreAnnotations_SpaceBeforeAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_SpaceBeforeAnnotation *new_EduStanfordNlpLingCoreAnnotations_SpaceBeforeAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SpaceBeforeAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_SpaceBeforeAnnotation *create_EduStanfordNlpLingCoreAnnotations_SpaceBeforeAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_SpaceBeforeAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SpaceBeforeAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_StateAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpLingCoreLabel_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_StateAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ledu/stanford/nlp/ling/CoreLabel;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ledu/stanford/nlp/ling/CoreLabel;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_StateAnnotation = { "StateAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_StateAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_StateAnnotation_init(EduStanfordNlpLingCoreAnnotations_StateAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_StateAnnotation *new_EduStanfordNlpLingCoreAnnotations_StateAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_StateAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_StateAnnotation *create_EduStanfordNlpLingCoreAnnotations_StateAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_StateAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_StateAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_PrevChildAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_PrevChildAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_PrevChildAnnotation = { "PrevChildAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_PrevChildAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_PrevChildAnnotation_init(EduStanfordNlpLingCoreAnnotations_PrevChildAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_PrevChildAnnotation *new_EduStanfordNlpLingCoreAnnotations_PrevChildAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_PrevChildAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_PrevChildAnnotation *create_EduStanfordNlpLingCoreAnnotations_PrevChildAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_PrevChildAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_PrevChildAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_FirstChildAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_FirstChildAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_FirstChildAnnotation = { "FirstChildAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_FirstChildAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_FirstChildAnnotation_init(EduStanfordNlpLingCoreAnnotations_FirstChildAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_FirstChildAnnotation *new_EduStanfordNlpLingCoreAnnotations_FirstChildAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_FirstChildAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_FirstChildAnnotation *create_EduStanfordNlpLingCoreAnnotations_FirstChildAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_FirstChildAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_FirstChildAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_UnaryAnnotation

- (IOSClass *)getType {
  return JavaLangBoolean_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_UnaryAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Boolean;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_UnaryAnnotation = { "UnaryAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_UnaryAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_UnaryAnnotation_init(EduStanfordNlpLingCoreAnnotations_UnaryAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_UnaryAnnotation *new_EduStanfordNlpLingCoreAnnotations_UnaryAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_UnaryAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_UnaryAnnotation *create_EduStanfordNlpLingCoreAnnotations_UnaryAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_UnaryAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_UnaryAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_DoAnnotation

- (IOSClass *)getType {
  return JavaLangBoolean_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_DoAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Boolean;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_DoAnnotation = { "DoAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_DoAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_DoAnnotation_init(EduStanfordNlpLingCoreAnnotations_DoAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_DoAnnotation *new_EduStanfordNlpLingCoreAnnotations_DoAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_DoAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_DoAnnotation *create_EduStanfordNlpLingCoreAnnotations_DoAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_DoAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_DoAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_HaveAnnotation

- (IOSClass *)getType {
  return JavaLangBoolean_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_HaveAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Boolean;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_HaveAnnotation = { "HaveAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_HaveAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_HaveAnnotation_init(EduStanfordNlpLingCoreAnnotations_HaveAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_HaveAnnotation *new_EduStanfordNlpLingCoreAnnotations_HaveAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_HaveAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_HaveAnnotation *create_EduStanfordNlpLingCoreAnnotations_HaveAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_HaveAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_HaveAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_BeAnnotation

- (IOSClass *)getType {
  return JavaLangBoolean_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_BeAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Boolean;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_BeAnnotation = { "BeAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_BeAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_BeAnnotation_init(EduStanfordNlpLingCoreAnnotations_BeAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_BeAnnotation *new_EduStanfordNlpLingCoreAnnotations_BeAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_BeAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_BeAnnotation *create_EduStanfordNlpLingCoreAnnotations_BeAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_BeAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_BeAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_NotAnnotation

- (IOSClass *)getType {
  return JavaLangBoolean_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_NotAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Boolean;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_NotAnnotation = { "NotAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_NotAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_NotAnnotation_init(EduStanfordNlpLingCoreAnnotations_NotAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_NotAnnotation *new_EduStanfordNlpLingCoreAnnotations_NotAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_NotAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_NotAnnotation *create_EduStanfordNlpLingCoreAnnotations_NotAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_NotAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_NotAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_PercentAnnotation

- (IOSClass *)getType {
  return JavaLangBoolean_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_PercentAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Boolean;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_PercentAnnotation = { "PercentAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_PercentAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_PercentAnnotation_init(EduStanfordNlpLingCoreAnnotations_PercentAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_PercentAnnotation *new_EduStanfordNlpLingCoreAnnotations_PercentAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_PercentAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_PercentAnnotation *create_EduStanfordNlpLingCoreAnnotations_PercentAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_PercentAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_PercentAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_GrandparentAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_GrandparentAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_GrandparentAnnotation = { "GrandparentAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_GrandparentAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_GrandparentAnnotation_init(EduStanfordNlpLingCoreAnnotations_GrandparentAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_GrandparentAnnotation *new_EduStanfordNlpLingCoreAnnotations_GrandparentAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_GrandparentAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_GrandparentAnnotation *create_EduStanfordNlpLingCoreAnnotations_GrandparentAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_GrandparentAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_GrandparentAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_HeadWordStringAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_HeadWordStringAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_HeadWordStringAnnotation = { "HeadWordStringAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_HeadWordStringAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_HeadWordStringAnnotation_init(EduStanfordNlpLingCoreAnnotations_HeadWordStringAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_HeadWordStringAnnotation *new_EduStanfordNlpLingCoreAnnotations_HeadWordStringAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_HeadWordStringAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_HeadWordStringAnnotation *create_EduStanfordNlpLingCoreAnnotations_HeadWordStringAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_HeadWordStringAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_HeadWordStringAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_MonthAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_MonthAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_MonthAnnotation = { "MonthAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_MonthAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_MonthAnnotation_init(EduStanfordNlpLingCoreAnnotations_MonthAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_MonthAnnotation *new_EduStanfordNlpLingCoreAnnotations_MonthAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_MonthAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_MonthAnnotation *create_EduStanfordNlpLingCoreAnnotations_MonthAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_MonthAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_MonthAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_DayAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_DayAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_DayAnnotation = { "DayAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_DayAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_DayAnnotation_init(EduStanfordNlpLingCoreAnnotations_DayAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_DayAnnotation *new_EduStanfordNlpLingCoreAnnotations_DayAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_DayAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_DayAnnotation *create_EduStanfordNlpLingCoreAnnotations_DayAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_DayAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_DayAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_YearAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_YearAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_YearAnnotation = { "YearAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_YearAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_YearAnnotation_init(EduStanfordNlpLingCoreAnnotations_YearAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_YearAnnotation *new_EduStanfordNlpLingCoreAnnotations_YearAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_YearAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_YearAnnotation *create_EduStanfordNlpLingCoreAnnotations_YearAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_YearAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_YearAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_PriorAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(JavaUtilMap_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_PriorAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/Map<Ljava/lang/String;Ljava/lang/Double;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/Map<Ljava/lang/String;Ljava/lang/Double;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_PriorAnnotation = { "PriorAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_PriorAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_PriorAnnotation_init(EduStanfordNlpLingCoreAnnotations_PriorAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_PriorAnnotation *new_EduStanfordNlpLingCoreAnnotations_PriorAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_PriorAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_PriorAnnotation *create_EduStanfordNlpLingCoreAnnotations_PriorAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_PriorAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_PriorAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_SemanticWordAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_SemanticWordAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SemanticWordAnnotation = { "SemanticWordAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SemanticWordAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_SemanticWordAnnotation_init(EduStanfordNlpLingCoreAnnotations_SemanticWordAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_SemanticWordAnnotation *new_EduStanfordNlpLingCoreAnnotations_SemanticWordAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SemanticWordAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_SemanticWordAnnotation *create_EduStanfordNlpLingCoreAnnotations_SemanticWordAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_SemanticWordAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SemanticWordAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_SemanticTagAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_SemanticTagAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SemanticTagAnnotation = { "SemanticTagAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SemanticTagAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_SemanticTagAnnotation_init(EduStanfordNlpLingCoreAnnotations_SemanticTagAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_SemanticTagAnnotation *new_EduStanfordNlpLingCoreAnnotations_SemanticTagAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SemanticTagAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_SemanticTagAnnotation *create_EduStanfordNlpLingCoreAnnotations_SemanticTagAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_SemanticTagAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SemanticTagAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_CovertIDAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(JavaUtilList_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_CovertIDAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/List<Ledu/stanford/nlp/util/IntPair;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/List<Ledu/stanford/nlp/util/IntPair;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_CovertIDAnnotation = { "CovertIDAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_CovertIDAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_CovertIDAnnotation_init(EduStanfordNlpLingCoreAnnotations_CovertIDAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_CovertIDAnnotation *new_EduStanfordNlpLingCoreAnnotations_CovertIDAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_CovertIDAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_CovertIDAnnotation *create_EduStanfordNlpLingCoreAnnotations_CovertIDAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_CovertIDAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_CovertIDAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_ArgDescendentAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(EduStanfordNlpUtilPair_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_ArgDescendentAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ledu/stanford/nlp/util/Pair<Ljava/lang/String;Ljava/lang/Double;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ledu/stanford/nlp/util/Pair<Ljava/lang/String;Ljava/lang/Double;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_ArgDescendentAnnotation = { "ArgDescendentAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_ArgDescendentAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_ArgDescendentAnnotation_init(EduStanfordNlpLingCoreAnnotations_ArgDescendentAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_ArgDescendentAnnotation *new_EduStanfordNlpLingCoreAnnotations_ArgDescendentAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_ArgDescendentAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_ArgDescendentAnnotation *create_EduStanfordNlpLingCoreAnnotations_ArgDescendentAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_ArgDescendentAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_ArgDescendentAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_XmlElementAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_XmlElementAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_XmlElementAnnotation = { "XmlElementAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_XmlElementAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_XmlElementAnnotation_init(EduStanfordNlpLingCoreAnnotations_XmlElementAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_XmlElementAnnotation *new_EduStanfordNlpLingCoreAnnotations_XmlElementAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_XmlElementAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_XmlElementAnnotation *create_EduStanfordNlpLingCoreAnnotations_XmlElementAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_XmlElementAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_XmlElementAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_XmlContextAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(JavaUtilList_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_XmlContextAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/List<Ljava/lang/String;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/List<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_XmlContextAnnotation = { "XmlContextAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_XmlContextAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_XmlContextAnnotation_init(EduStanfordNlpLingCoreAnnotations_XmlContextAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_XmlContextAnnotation *new_EduStanfordNlpLingCoreAnnotations_XmlContextAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_XmlContextAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_XmlContextAnnotation *create_EduStanfordNlpLingCoreAnnotations_XmlContextAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_XmlContextAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_XmlContextAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_TopicAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_TopicAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_TopicAnnotation = { "TopicAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_TopicAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_TopicAnnotation_init(EduStanfordNlpLingCoreAnnotations_TopicAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_TopicAnnotation *new_EduStanfordNlpLingCoreAnnotations_TopicAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_TopicAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_TopicAnnotation *create_EduStanfordNlpLingCoreAnnotations_TopicAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_TopicAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_TopicAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_WordnetSynAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_WordnetSynAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_WordnetSynAnnotation = { "WordnetSynAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_WordnetSynAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_WordnetSynAnnotation_init(EduStanfordNlpLingCoreAnnotations_WordnetSynAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_WordnetSynAnnotation *new_EduStanfordNlpLingCoreAnnotations_WordnetSynAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_WordnetSynAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_WordnetSynAnnotation *create_EduStanfordNlpLingCoreAnnotations_WordnetSynAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_WordnetSynAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_WordnetSynAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_PhraseWordsTagAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_PhraseWordsTagAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_PhraseWordsTagAnnotation = { "PhraseWordsTagAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_PhraseWordsTagAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_PhraseWordsTagAnnotation_init(EduStanfordNlpLingCoreAnnotations_PhraseWordsTagAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_PhraseWordsTagAnnotation *new_EduStanfordNlpLingCoreAnnotations_PhraseWordsTagAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_PhraseWordsTagAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_PhraseWordsTagAnnotation *create_EduStanfordNlpLingCoreAnnotations_PhraseWordsTagAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_PhraseWordsTagAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_PhraseWordsTagAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_PhraseWordsAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(JavaUtilList_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_PhraseWordsAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/List<Ljava/lang/String;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/List<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_PhraseWordsAnnotation = { "PhraseWordsAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_PhraseWordsAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_PhraseWordsAnnotation_init(EduStanfordNlpLingCoreAnnotations_PhraseWordsAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_PhraseWordsAnnotation *new_EduStanfordNlpLingCoreAnnotations_PhraseWordsAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_PhraseWordsAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_PhraseWordsAnnotation *create_EduStanfordNlpLingCoreAnnotations_PhraseWordsAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_PhraseWordsAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_PhraseWordsAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_ProtoAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_ProtoAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_ProtoAnnotation = { "ProtoAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_ProtoAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_ProtoAnnotation_init(EduStanfordNlpLingCoreAnnotations_ProtoAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_ProtoAnnotation *new_EduStanfordNlpLingCoreAnnotations_ProtoAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_ProtoAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_ProtoAnnotation *create_EduStanfordNlpLingCoreAnnotations_ProtoAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_ProtoAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_ProtoAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_CommonWordsAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_CommonWordsAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_CommonWordsAnnotation = { "CommonWordsAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_CommonWordsAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_CommonWordsAnnotation_init(EduStanfordNlpLingCoreAnnotations_CommonWordsAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_CommonWordsAnnotation *new_EduStanfordNlpLingCoreAnnotations_CommonWordsAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_CommonWordsAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_CommonWordsAnnotation *create_EduStanfordNlpLingCoreAnnotations_CommonWordsAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_CommonWordsAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_CommonWordsAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_DocDateAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_DocDateAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_DocDateAnnotation = { "DocDateAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_DocDateAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_DocDateAnnotation_init(EduStanfordNlpLingCoreAnnotations_DocDateAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_DocDateAnnotation *new_EduStanfordNlpLingCoreAnnotations_DocDateAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_DocDateAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_DocDateAnnotation *create_EduStanfordNlpLingCoreAnnotations_DocDateAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_DocDateAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_DocDateAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_DocTypeAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_DocTypeAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_DocTypeAnnotation = { "DocTypeAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_DocTypeAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_DocTypeAnnotation_init(EduStanfordNlpLingCoreAnnotations_DocTypeAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_DocTypeAnnotation *new_EduStanfordNlpLingCoreAnnotations_DocTypeAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_DocTypeAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_DocTypeAnnotation *create_EduStanfordNlpLingCoreAnnotations_DocTypeAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_DocTypeAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_DocTypeAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_DocSourceTypeAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_DocSourceTypeAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_DocSourceTypeAnnotation = { "DocSourceTypeAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_DocSourceTypeAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_DocSourceTypeAnnotation_init(EduStanfordNlpLingCoreAnnotations_DocSourceTypeAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_DocSourceTypeAnnotation *new_EduStanfordNlpLingCoreAnnotations_DocSourceTypeAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_DocSourceTypeAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_DocSourceTypeAnnotation *create_EduStanfordNlpLingCoreAnnotations_DocSourceTypeAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_DocSourceTypeAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_DocSourceTypeAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_DocTitleAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_DocTitleAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_DocTitleAnnotation = { "DocTitleAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_DocTitleAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_DocTitleAnnotation_init(EduStanfordNlpLingCoreAnnotations_DocTitleAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_DocTitleAnnotation *new_EduStanfordNlpLingCoreAnnotations_DocTitleAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_DocTitleAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_DocTitleAnnotation *create_EduStanfordNlpLingCoreAnnotations_DocTitleAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_DocTitleAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_DocTitleAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_LocationAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_LocationAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_LocationAnnotation = { "LocationAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_LocationAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_LocationAnnotation_init(EduStanfordNlpLingCoreAnnotations_LocationAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_LocationAnnotation *new_EduStanfordNlpLingCoreAnnotations_LocationAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_LocationAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_LocationAnnotation *create_EduStanfordNlpLingCoreAnnotations_LocationAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_LocationAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_LocationAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_AuthorAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_AuthorAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_AuthorAnnotation = { "AuthorAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_AuthorAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_AuthorAnnotation_init(EduStanfordNlpLingCoreAnnotations_AuthorAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_AuthorAnnotation *new_EduStanfordNlpLingCoreAnnotations_AuthorAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_AuthorAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_AuthorAnnotation *create_EduStanfordNlpLingCoreAnnotations_AuthorAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_AuthorAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_AuthorAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_NumericTypeAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_NumericTypeAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_NumericTypeAnnotation = { "NumericTypeAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_NumericTypeAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_NumericTypeAnnotation_init(EduStanfordNlpLingCoreAnnotations_NumericTypeAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_NumericTypeAnnotation *new_EduStanfordNlpLingCoreAnnotations_NumericTypeAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_NumericTypeAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_NumericTypeAnnotation *create_EduStanfordNlpLingCoreAnnotations_NumericTypeAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_NumericTypeAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_NumericTypeAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_NumericValueAnnotation

- (IOSClass *)getType {
  return NSNumber_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_NumericValueAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Number;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_NumericValueAnnotation = { "NumericValueAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_NumericValueAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_NumericValueAnnotation_init(EduStanfordNlpLingCoreAnnotations_NumericValueAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_NumericValueAnnotation *new_EduStanfordNlpLingCoreAnnotations_NumericValueAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_NumericValueAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_NumericValueAnnotation *create_EduStanfordNlpLingCoreAnnotations_NumericValueAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_NumericValueAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_NumericValueAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_NumericObjectAnnotation

- (IOSClass *)getType {
  return NSObject_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_NumericObjectAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Object;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_NumericObjectAnnotation = { "NumericObjectAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_NumericObjectAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_NumericObjectAnnotation_init(EduStanfordNlpLingCoreAnnotations_NumericObjectAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_NumericObjectAnnotation *new_EduStanfordNlpLingCoreAnnotations_NumericObjectAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_NumericObjectAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_NumericObjectAnnotation *create_EduStanfordNlpLingCoreAnnotations_NumericObjectAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_NumericObjectAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_NumericObjectAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_NumericCompositeValueAnnotation

- (IOSClass *)getType {
  return NSNumber_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_NumericCompositeValueAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Number;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_NumericCompositeValueAnnotation = { "NumericCompositeValueAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_NumericCompositeValueAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_NumericCompositeValueAnnotation_init(EduStanfordNlpLingCoreAnnotations_NumericCompositeValueAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_NumericCompositeValueAnnotation *new_EduStanfordNlpLingCoreAnnotations_NumericCompositeValueAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_NumericCompositeValueAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_NumericCompositeValueAnnotation *create_EduStanfordNlpLingCoreAnnotations_NumericCompositeValueAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_NumericCompositeValueAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_NumericCompositeValueAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_NumericCompositeTypeAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_NumericCompositeTypeAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_NumericCompositeTypeAnnotation = { "NumericCompositeTypeAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_NumericCompositeTypeAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_NumericCompositeTypeAnnotation_init(EduStanfordNlpLingCoreAnnotations_NumericCompositeTypeAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_NumericCompositeTypeAnnotation *new_EduStanfordNlpLingCoreAnnotations_NumericCompositeTypeAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_NumericCompositeTypeAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_NumericCompositeTypeAnnotation *create_EduStanfordNlpLingCoreAnnotations_NumericCompositeTypeAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_NumericCompositeTypeAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_NumericCompositeTypeAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_NumericCompositeObjectAnnotation

- (IOSClass *)getType {
  return NSObject_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_NumericCompositeObjectAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Object;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_NumericCompositeObjectAnnotation = { "NumericCompositeObjectAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_NumericCompositeObjectAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_NumericCompositeObjectAnnotation_init(EduStanfordNlpLingCoreAnnotations_NumericCompositeObjectAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_NumericCompositeObjectAnnotation *new_EduStanfordNlpLingCoreAnnotations_NumericCompositeObjectAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_NumericCompositeObjectAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_NumericCompositeObjectAnnotation *create_EduStanfordNlpLingCoreAnnotations_NumericCompositeObjectAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_NumericCompositeObjectAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_NumericCompositeObjectAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_NumerizedTokensAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(JavaUtilList_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_NumerizedTokensAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/List<Ledu/stanford/nlp/util/CoreMap;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/List<Ledu/stanford/nlp/util/CoreMap;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_NumerizedTokensAnnotation = { "NumerizedTokensAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_NumerizedTokensAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_NumerizedTokensAnnotation_init(EduStanfordNlpLingCoreAnnotations_NumerizedTokensAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_NumerizedTokensAnnotation *new_EduStanfordNlpLingCoreAnnotations_NumerizedTokensAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_NumerizedTokensAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_NumerizedTokensAnnotation *create_EduStanfordNlpLingCoreAnnotations_NumerizedTokensAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_NumerizedTokensAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_NumerizedTokensAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_UseMarkedDiscourseAnnotation

- (IOSClass *)getType {
  return JavaLangBoolean_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_UseMarkedDiscourseAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Boolean;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_UseMarkedDiscourseAnnotation = { "UseMarkedDiscourseAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_UseMarkedDiscourseAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_UseMarkedDiscourseAnnotation_init(EduStanfordNlpLingCoreAnnotations_UseMarkedDiscourseAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_UseMarkedDiscourseAnnotation *new_EduStanfordNlpLingCoreAnnotations_UseMarkedDiscourseAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_UseMarkedDiscourseAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_UseMarkedDiscourseAnnotation *create_EduStanfordNlpLingCoreAnnotations_UseMarkedDiscourseAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_UseMarkedDiscourseAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_UseMarkedDiscourseAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_UtteranceAnnotation

- (IOSClass *)getType {
  return JavaLangInteger_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_UtteranceAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Integer;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_UtteranceAnnotation = { "UtteranceAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_UtteranceAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_UtteranceAnnotation_init(EduStanfordNlpLingCoreAnnotations_UtteranceAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_UtteranceAnnotation *new_EduStanfordNlpLingCoreAnnotations_UtteranceAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_UtteranceAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_UtteranceAnnotation *create_EduStanfordNlpLingCoreAnnotations_UtteranceAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_UtteranceAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_UtteranceAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_SpeakerAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_SpeakerAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_SpeakerAnnotation = { "SpeakerAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_SpeakerAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_SpeakerAnnotation_init(EduStanfordNlpLingCoreAnnotations_SpeakerAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_SpeakerAnnotation *new_EduStanfordNlpLingCoreAnnotations_SpeakerAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_SpeakerAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_SpeakerAnnotation *create_EduStanfordNlpLingCoreAnnotations_SpeakerAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_SpeakerAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_SpeakerAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_ParagraphAnnotation

- (IOSClass *)getType {
  return JavaLangInteger_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_ParagraphAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Integer;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_ParagraphAnnotation = { "ParagraphAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_ParagraphAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_ParagraphAnnotation_init(EduStanfordNlpLingCoreAnnotations_ParagraphAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_ParagraphAnnotation *new_EduStanfordNlpLingCoreAnnotations_ParagraphAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_ParagraphAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_ParagraphAnnotation *create_EduStanfordNlpLingCoreAnnotations_ParagraphAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_ParagraphAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_ParagraphAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_MentionTokenAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpLingMultiTokenTag_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_MentionTokenAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ledu/stanford/nlp/ling/MultiTokenTag;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ledu/stanford/nlp/ling/MultiTokenTag;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_MentionTokenAnnotation = { "MentionTokenAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_MentionTokenAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_MentionTokenAnnotation_init(EduStanfordNlpLingCoreAnnotations_MentionTokenAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_MentionTokenAnnotation *new_EduStanfordNlpLingCoreAnnotations_MentionTokenAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_MentionTokenAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_MentionTokenAnnotation *create_EduStanfordNlpLingCoreAnnotations_MentionTokenAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_MentionTokenAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_MentionTokenAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_LeftChildrenNodeAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(JavaUtilSortedSet_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_LeftChildrenNodeAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/SortedSet<Ledu/stanford/nlp/util/Pair<Ledu/stanford/nlp/ling/CoreLabel;Ljava/lang/String;>;>;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/SortedSet<Ledu/stanford/nlp/util/Pair<Ledu/stanford/nlp/ling/CoreLabel;Ljava/lang/String;>;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_LeftChildrenNodeAnnotation = { "LeftChildrenNodeAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_LeftChildrenNodeAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_LeftChildrenNodeAnnotation_init(EduStanfordNlpLingCoreAnnotations_LeftChildrenNodeAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_LeftChildrenNodeAnnotation *new_EduStanfordNlpLingCoreAnnotations_LeftChildrenNodeAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_LeftChildrenNodeAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_LeftChildrenNodeAnnotation *create_EduStanfordNlpLingCoreAnnotations_LeftChildrenNodeAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_LeftChildrenNodeAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_LeftChildrenNodeAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_ExceptionAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(NSException_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_ExceptionAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Throwable;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Throwable;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_ExceptionAnnotation = { "ExceptionAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_ExceptionAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_ExceptionAnnotation_init(EduStanfordNlpLingCoreAnnotations_ExceptionAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_ExceptionAnnotation *new_EduStanfordNlpLingCoreAnnotations_ExceptionAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_ExceptionAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_ExceptionAnnotation *create_EduStanfordNlpLingCoreAnnotations_ExceptionAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_ExceptionAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_ExceptionAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_AntecedentAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_AntecedentAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_AntecedentAnnotation = { "AntecedentAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_AntecedentAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_AntecedentAnnotation_init(EduStanfordNlpLingCoreAnnotations_AntecedentAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_AntecedentAnnotation *new_EduStanfordNlpLingCoreAnnotations_AntecedentAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_AntecedentAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_AntecedentAnnotation *create_EduStanfordNlpLingCoreAnnotations_AntecedentAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_AntecedentAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_AntecedentAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_LabelWeightAnnotation

- (IOSClass *)getType {
  return JavaLangDouble_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_LabelWeightAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Double;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Double;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_LabelWeightAnnotation = { "LabelWeightAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_LabelWeightAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_LabelWeightAnnotation_init(EduStanfordNlpLingCoreAnnotations_LabelWeightAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_LabelWeightAnnotation *new_EduStanfordNlpLingCoreAnnotations_LabelWeightAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_LabelWeightAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_LabelWeightAnnotation *create_EduStanfordNlpLingCoreAnnotations_LabelWeightAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_LabelWeightAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_LabelWeightAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_ColumnDataClassifierAnnotation

- (IOSClass *)getType {
  return NSString_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_ColumnDataClassifierAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/String;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_ColumnDataClassifierAnnotation = { "ColumnDataClassifierAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_ColumnDataClassifierAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_ColumnDataClassifierAnnotation_init(EduStanfordNlpLingCoreAnnotations_ColumnDataClassifierAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_ColumnDataClassifierAnnotation *new_EduStanfordNlpLingCoreAnnotations_ColumnDataClassifierAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_ColumnDataClassifierAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_ColumnDataClassifierAnnotation *create_EduStanfordNlpLingCoreAnnotations_ColumnDataClassifierAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_ColumnDataClassifierAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_ColumnDataClassifierAnnotation)

@implementation EduStanfordNlpLingCoreAnnotations_LabelIDAnnotation

- (IOSClass *)getType {
  return JavaLangInteger_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingCoreAnnotations_LabelIDAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/lang/Integer;>;", "LEduStanfordNlpLingCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingCoreAnnotations_LabelIDAnnotation = { "LabelIDAnnotation", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpLingCoreAnnotations_LabelIDAnnotation;
}

@end

void EduStanfordNlpLingCoreAnnotations_LabelIDAnnotation_init(EduStanfordNlpLingCoreAnnotations_LabelIDAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpLingCoreAnnotations_LabelIDAnnotation *new_EduStanfordNlpLingCoreAnnotations_LabelIDAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingCoreAnnotations_LabelIDAnnotation, init)
}

EduStanfordNlpLingCoreAnnotations_LabelIDAnnotation *create_EduStanfordNlpLingCoreAnnotations_LabelIDAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingCoreAnnotations_LabelIDAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingCoreAnnotations_LabelIDAnnotation)
