//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/HasContext.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/HasContext.h"

@interface EduStanfordNlpLingHasContext : NSObject

@end

@implementation EduStanfordNlpLingHasContext

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 3, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(before);
  methods[1].selector = @selector(setBeforeWithNSString:);
  methods[2].selector = @selector(originalText);
  methods[3].selector = @selector(setOriginalTextWithNSString:);
  methods[4].selector = @selector(after);
  methods[5].selector = @selector(setAfterWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setBefore", "LNSString;", "setOriginalText", "setAfter" };
  static const J2ObjcClassInfo _EduStanfordNlpLingHasContext = { "HasContext", "edu.stanford.nlp.ling", ptrTable, methods, NULL, 7, 0x609, 6, 0, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingHasContext;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(EduStanfordNlpLingHasContext)
