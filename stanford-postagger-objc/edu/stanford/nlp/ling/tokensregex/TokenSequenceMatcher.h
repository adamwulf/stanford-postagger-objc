//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/tokensregex/TokenSequenceMatcher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexTokenSequenceMatcher")
#ifdef RESTRICT_EduStanfordNlpLingTokensregexTokenSequenceMatcher
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexTokenSequenceMatcher 0
#else
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexTokenSequenceMatcher 1
#endif
#undef RESTRICT_EduStanfordNlpLingTokensregexTokenSequenceMatcher

#if !defined (EduStanfordNlpLingTokensregexTokenSequenceMatcher_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTokenSequenceMatcher || defined(INCLUDE_EduStanfordNlpLingTokensregexTokenSequenceMatcher))
#define EduStanfordNlpLingTokensregexTokenSequenceMatcher_

#define RESTRICT_EduStanfordNlpLingTokensregexCoreMapSequenceMatcher 1
#define INCLUDE_EduStanfordNlpLingTokensregexCoreMapSequenceMatcher 1
#include "edu/stanford/nlp/ling/tokensregex/CoreMapSequenceMatcher.h"

@class EduStanfordNlpLingTokensregexSequencePattern;
@protocol EduStanfordNlpUtilCoreMap;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexTokenSequenceMatcher : EduStanfordNlpLingTokensregexCoreMapSequenceMatcher

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexSequencePattern:(EduStanfordNlpLingTokensregexSequencePattern *)pattern
                                                    withJavaUtilList:(id<JavaUtilList>)tokens;

- (id<EduStanfordNlpUtilCoreMap>)getWithInt:(jint)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTokenSequenceMatcher)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTokenSequenceMatcher_initWithEduStanfordNlpLingTokensregexSequencePattern_withJavaUtilList_(EduStanfordNlpLingTokensregexTokenSequenceMatcher *self, EduStanfordNlpLingTokensregexSequencePattern *pattern, id<JavaUtilList> tokens);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTokenSequenceMatcher *new_EduStanfordNlpLingTokensregexTokenSequenceMatcher_initWithEduStanfordNlpLingTokensregexSequencePattern_withJavaUtilList_(EduStanfordNlpLingTokensregexSequencePattern *pattern, id<JavaUtilList> tokens) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTokenSequenceMatcher *create_EduStanfordNlpLingTokensregexTokenSequenceMatcher_initWithEduStanfordNlpLingTokensregexSequencePattern_withJavaUtilList_(EduStanfordNlpLingTokensregexSequencePattern *pattern, id<JavaUtilList> tokens);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTokenSequenceMatcher)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexTokenSequenceMatcher")
