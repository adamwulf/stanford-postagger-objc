//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/tokensregex/CoreMapNodePattern.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexCoreMapNodePattern")
#ifdef RESTRICT_EduStanfordNlpLingTokensregexCoreMapNodePattern
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexCoreMapNodePattern 0
#else
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexCoreMapNodePattern 1
#endif
#undef RESTRICT_EduStanfordNlpLingTokensregexCoreMapNodePattern

#if !defined (EduStanfordNlpLingTokensregexCoreMapNodePattern_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexCoreMapNodePattern || defined(INCLUDE_EduStanfordNlpLingTokensregexCoreMapNodePattern))
#define EduStanfordNlpLingTokensregexCoreMapNodePattern_

#define RESTRICT_EduStanfordNlpLingTokensregexComplexNodePattern 1
#define INCLUDE_EduStanfordNlpLingTokensregexComplexNodePattern 1
#include "edu/stanford/nlp/ling/tokensregex/ComplexNodePattern.h"

@class EduStanfordNlpLingTokensregexCoreMapNodePattern_AttributesEqualMatchChecker;
@class EduStanfordNlpLingTokensregexEnv;
@class EduStanfordNlpLingTokensregexNodePattern;
@class IOSClass;
@class IOSObjectArray;
@class JavaUtilRegexPattern;
@protocol JavaUtilList;
@protocol JavaUtilMap;

@interface EduStanfordNlpLingTokensregexCoreMapNodePattern : EduStanfordNlpLingTokensregexComplexNodePattern

#pragma mark Public

- (instancetype)initWithIOSClass:(IOSClass *)key
withEduStanfordNlpLingTokensregexNodePattern:(EduStanfordNlpLingTokensregexNodePattern *)pattern;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)annotationPatterns;

- (instancetype)initWithEduStanfordNlpUtilPairArray:(IOSObjectArray *)annotationPatterns;

+ (EduStanfordNlpLingTokensregexCoreMapNodePattern *)valueOfWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                 withJavaUtilMap:(id<JavaUtilMap>)attributes;

+ (EduStanfordNlpLingTokensregexCoreMapNodePattern *)valueOfWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                    withNSString:(NSString *)textAnnotationPattern;

+ (EduStanfordNlpLingTokensregexCoreMapNodePattern *)valueOfWithJavaUtilMap:(id<JavaUtilMap>)attributes;

+ (EduStanfordNlpLingTokensregexCoreMapNodePattern *)valueOfWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)textAnnotationPattern;

+ (EduStanfordNlpLingTokensregexCoreMapNodePattern *)valueOfWithNSString:(NSString *)textAnnotationPattern;

+ (EduStanfordNlpLingTokensregexCoreMapNodePattern *)valueOfWithNSString:(NSString *)textAnnotationPattern
                                                                 withInt:(jint)flags;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpLingTokensregexCoreMapNodePattern)

inline EduStanfordNlpLingTokensregexCoreMapNodePattern_AttributesEqualMatchChecker *EduStanfordNlpLingTokensregexCoreMapNodePattern_get_TEXT_ATTR_EQUAL_CHECKER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpLingTokensregexCoreMapNodePattern_AttributesEqualMatchChecker *EduStanfordNlpLingTokensregexCoreMapNodePattern_TEXT_ATTR_EQUAL_CHECKER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexCoreMapNodePattern, TEXT_ATTR_EQUAL_CHECKER, EduStanfordNlpLingTokensregexCoreMapNodePattern_AttributesEqualMatchChecker *)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexCoreMapNodePattern_initWithJavaUtilList_(EduStanfordNlpLingTokensregexCoreMapNodePattern *self, id<JavaUtilList> annotationPatterns);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexCoreMapNodePattern *new_EduStanfordNlpLingTokensregexCoreMapNodePattern_initWithJavaUtilList_(id<JavaUtilList> annotationPatterns) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexCoreMapNodePattern *create_EduStanfordNlpLingTokensregexCoreMapNodePattern_initWithJavaUtilList_(id<JavaUtilList> annotationPatterns);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexCoreMapNodePattern_initWithEduStanfordNlpUtilPairArray_(EduStanfordNlpLingTokensregexCoreMapNodePattern *self, IOSObjectArray *annotationPatterns);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexCoreMapNodePattern *new_EduStanfordNlpLingTokensregexCoreMapNodePattern_initWithEduStanfordNlpUtilPairArray_(IOSObjectArray *annotationPatterns) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexCoreMapNodePattern *create_EduStanfordNlpLingTokensregexCoreMapNodePattern_initWithEduStanfordNlpUtilPairArray_(IOSObjectArray *annotationPatterns);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexCoreMapNodePattern_initWithIOSClass_withEduStanfordNlpLingTokensregexNodePattern_(EduStanfordNlpLingTokensregexCoreMapNodePattern *self, IOSClass *key, EduStanfordNlpLingTokensregexNodePattern *pattern);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexCoreMapNodePattern *new_EduStanfordNlpLingTokensregexCoreMapNodePattern_initWithIOSClass_withEduStanfordNlpLingTokensregexNodePattern_(IOSClass *key, EduStanfordNlpLingTokensregexNodePattern *pattern) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexCoreMapNodePattern *create_EduStanfordNlpLingTokensregexCoreMapNodePattern_initWithIOSClass_withEduStanfordNlpLingTokensregexNodePattern_(IOSClass *key, EduStanfordNlpLingTokensregexNodePattern *pattern);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexCoreMapNodePattern *EduStanfordNlpLingTokensregexCoreMapNodePattern_valueOfWithNSString_(NSString *textAnnotationPattern);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexCoreMapNodePattern *EduStanfordNlpLingTokensregexCoreMapNodePattern_valueOfWithNSString_withInt_(NSString *textAnnotationPattern, jint flags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexCoreMapNodePattern *EduStanfordNlpLingTokensregexCoreMapNodePattern_valueOfWithEduStanfordNlpLingTokensregexEnv_withNSString_(EduStanfordNlpLingTokensregexEnv *env, NSString *textAnnotationPattern);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexCoreMapNodePattern *EduStanfordNlpLingTokensregexCoreMapNodePattern_valueOfWithJavaUtilRegexPattern_(JavaUtilRegexPattern *textAnnotationPattern);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexCoreMapNodePattern *EduStanfordNlpLingTokensregexCoreMapNodePattern_valueOfWithJavaUtilMap_(id<JavaUtilMap> attributes);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexCoreMapNodePattern *EduStanfordNlpLingTokensregexCoreMapNodePattern_valueOfWithEduStanfordNlpLingTokensregexEnv_withJavaUtilMap_(EduStanfordNlpLingTokensregexEnv *env, id<JavaUtilMap> attributes);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexCoreMapNodePattern)

#endif

#if !defined (EduStanfordNlpLingTokensregexCoreMapNodePattern_AttributesEqualMatchChecker_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexCoreMapNodePattern || defined(INCLUDE_EduStanfordNlpLingTokensregexCoreMapNodePattern_AttributesEqualMatchChecker))
#define EduStanfordNlpLingTokensregexCoreMapNodePattern_AttributesEqualMatchChecker_

#define RESTRICT_EduStanfordNlpLingTokensregexSequencePattern 1
#define INCLUDE_EduStanfordNlpLingTokensregexSequencePattern_NodesMatchChecker 1
#include "edu/stanford/nlp/ling/tokensregex/SequencePattern.h"

@class IOSObjectArray;
@protocol EduStanfordNlpUtilCoreMap;
@protocol JavaUtilCollection;

@interface EduStanfordNlpLingTokensregexCoreMapNodePattern_AttributesEqualMatchChecker : NSObject < EduStanfordNlpLingTokensregexSequencePattern_NodesMatchChecker > {
 @public
  id<JavaUtilCollection> keys_;
}

#pragma mark Public

- (instancetype)initWithIOSClassArray:(IOSObjectArray *)keys;

- (jboolean)matchesWithId:(id<EduStanfordNlpUtilCoreMap>)o1
                   withId:(id<EduStanfordNlpUtilCoreMap>)o2;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexCoreMapNodePattern_AttributesEqualMatchChecker)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexCoreMapNodePattern_AttributesEqualMatchChecker, keys_, id<JavaUtilCollection>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexCoreMapNodePattern_AttributesEqualMatchChecker_initWithIOSClassArray_(EduStanfordNlpLingTokensregexCoreMapNodePattern_AttributesEqualMatchChecker *self, IOSObjectArray *keys);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexCoreMapNodePattern_AttributesEqualMatchChecker *new_EduStanfordNlpLingTokensregexCoreMapNodePattern_AttributesEqualMatchChecker_initWithIOSClassArray_(IOSObjectArray *keys) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexCoreMapNodePattern_AttributesEqualMatchChecker *create_EduStanfordNlpLingTokensregexCoreMapNodePattern_AttributesEqualMatchChecker_initWithIOSClassArray_(IOSObjectArray *keys);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexCoreMapNodePattern_AttributesEqualMatchChecker)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexCoreMapNodePattern")
