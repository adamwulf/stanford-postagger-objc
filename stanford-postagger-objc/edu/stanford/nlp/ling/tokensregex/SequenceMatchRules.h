//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/tokensregex/SequenceMatchRules.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules")
#ifdef RESTRICT_EduStanfordNlpLingTokensregexSequenceMatchRules
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules 0
#else
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules 1
#endif
#undef RESTRICT_EduStanfordNlpLingTokensregexSequenceMatchRules
#ifdef INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule
#define INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_MultiSequencePatternExtractRule
#define INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule
#define INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_BasicSequenceExtractRule
#define INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListExtractRule
#define INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapExtractRule
#define INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_ListExtractRule
#define INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_FilterExtractRule
#define INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_TextPatternExtractRuleCreator
#define INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_MultiTokenPatternExtractRuleCreator
#define INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_TokenPatternExtractRuleCreator
#define INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_CompositeExtractRuleCreator
#define INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule
#define INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_Rule 1
#define INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_AssignmentRule
#define INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_Rule 1
#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_

@class EduStanfordNlpLingTokensregexEnv;
@class EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor;
@class EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule;
@class EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator;
@class EduStanfordNlpLingTokensregexSequenceMatchRules_AssignmentRule;
@class EduStanfordNlpLingTokensregexSequenceMatchRules_CompositeExtractRuleCreator;
@class EduStanfordNlpLingTokensregexSequenceMatchRules_MultiTokenPatternExtractRuleCreator;
@class EduStanfordNlpLingTokensregexSequenceMatchRules_TextPatternExtractRuleCreator;
@class EduStanfordNlpLingTokensregexSequenceMatchRules_TokenPatternExtractRuleCreator;
@class EduStanfordNlpLingTokensregexSequencePattern_PatternExpr;
@class EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue;
@protocol EduStanfordNlpLingTokensregexSequenceMatchRules_Rule;
@protocol EduStanfordNlpLingTokensregexTypesAssignableExpression;
@protocol EduStanfordNlpLingTokensregexTypesExpression;
@protocol JavaUtilList;
@protocol JavaUtilMap;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules : NSObject

#pragma mark Public

- (instancetype)init;

+ (EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *)createAnnotationExtractorWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                  withEduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule:(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)r;

+ (EduStanfordNlpLingTokensregexSequenceMatchRules_AssignmentRule *)createAssignmentRuleWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                  withEduStanfordNlpLingTokensregexTypesAssignableExpression:(id<EduStanfordNlpLingTokensregexTypesAssignableExpression>)var
                                                                            withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)result;

+ (EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)createExtractionRuleWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                                                       withNSString:(NSString *)ruleType
                                                                                                                             withId:(id)pattern
                                                                                   withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)result;

+ (EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)createMultiTokenPatternRuleWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                 withEduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule:(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)template_
                                                                                                                          withJavaUtilList:(id<JavaUtilList>)patterns;

+ (id<EduStanfordNlpLingTokensregexSequenceMatchRules_Rule>)createRuleWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                          withEduStanfordNlpLingTokensregexTypesExpressions_CompositeValue:(EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue *)cv;

+ (EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)createTextPatternRuleWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                                                        withNSString:(NSString *)expr
                                                                                    withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)result;

+ (EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)createTokenPatternRuleWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                         withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr:(EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *)expr
                                                                                     withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)result;

#pragma mark Protected

+ (EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)createExtractionRuleWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                                                    withJavaUtilMap:(id<JavaUtilMap>)attributes;

+ (EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator *)lookupExtractRuleCreatorWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                                                                  withNSString:(NSString *)ruleType;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules)

inline NSString *EduStanfordNlpLingTokensregexSequenceMatchRules_get_COMPOSITE_RULE_TYPE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexSequenceMatchRules_COMPOSITE_RULE_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexSequenceMatchRules, COMPOSITE_RULE_TYPE, NSString *)

inline NSString *EduStanfordNlpLingTokensregexSequenceMatchRules_get_TOKEN_PATTERN_RULE_TYPE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexSequenceMatchRules_TOKEN_PATTERN_RULE_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexSequenceMatchRules, TOKEN_PATTERN_RULE_TYPE, NSString *)

inline NSString *EduStanfordNlpLingTokensregexSequenceMatchRules_get_TEXT_PATTERN_RULE_TYPE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexSequenceMatchRules_TEXT_PATTERN_RULE_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexSequenceMatchRules, TEXT_PATTERN_RULE_TYPE, NSString *)

inline NSString *EduStanfordNlpLingTokensregexSequenceMatchRules_get_FILTER_RULE_TYPE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexSequenceMatchRules_FILTER_RULE_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexSequenceMatchRules, FILTER_RULE_TYPE, NSString *)

inline EduStanfordNlpLingTokensregexSequenceMatchRules_TokenPatternExtractRuleCreator *EduStanfordNlpLingTokensregexSequenceMatchRules_get_TOKEN_PATTERN_EXTRACT_RULE_CREATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_TokenPatternExtractRuleCreator *EduStanfordNlpLingTokensregexSequenceMatchRules_TOKEN_PATTERN_EXTRACT_RULE_CREATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexSequenceMatchRules, TOKEN_PATTERN_EXTRACT_RULE_CREATOR, EduStanfordNlpLingTokensregexSequenceMatchRules_TokenPatternExtractRuleCreator *)

inline EduStanfordNlpLingTokensregexSequenceMatchRules_CompositeExtractRuleCreator *EduStanfordNlpLingTokensregexSequenceMatchRules_get_COMPOSITE_EXTRACT_RULE_CREATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_CompositeExtractRuleCreator *EduStanfordNlpLingTokensregexSequenceMatchRules_COMPOSITE_EXTRACT_RULE_CREATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexSequenceMatchRules, COMPOSITE_EXTRACT_RULE_CREATOR, EduStanfordNlpLingTokensregexSequenceMatchRules_CompositeExtractRuleCreator *)

inline EduStanfordNlpLingTokensregexSequenceMatchRules_TextPatternExtractRuleCreator *EduStanfordNlpLingTokensregexSequenceMatchRules_get_TEXT_PATTERN_EXTRACT_RULE_CREATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_TextPatternExtractRuleCreator *EduStanfordNlpLingTokensregexSequenceMatchRules_TEXT_PATTERN_EXTRACT_RULE_CREATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexSequenceMatchRules, TEXT_PATTERN_EXTRACT_RULE_CREATOR, EduStanfordNlpLingTokensregexSequenceMatchRules_TextPatternExtractRuleCreator *)

inline EduStanfordNlpLingTokensregexSequenceMatchRules_MultiTokenPatternExtractRuleCreator *EduStanfordNlpLingTokensregexSequenceMatchRules_get_MULTI_TOKEN_PATTERN_EXTRACT_RULE_CREATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_MultiTokenPatternExtractRuleCreator *EduStanfordNlpLingTokensregexSequenceMatchRules_MULTI_TOKEN_PATTERN_EXTRACT_RULE_CREATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexSequenceMatchRules, MULTI_TOKEN_PATTERN_EXTRACT_RULE_CREATOR, EduStanfordNlpLingTokensregexSequenceMatchRules_MultiTokenPatternExtractRuleCreator *)

inline EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator *EduStanfordNlpLingTokensregexSequenceMatchRules_get_DEFAULT_EXTRACT_RULE_CREATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator *EduStanfordNlpLingTokensregexSequenceMatchRules_DEFAULT_EXTRACT_RULE_CREATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexSequenceMatchRules, DEFAULT_EXTRACT_RULE_CREATOR, EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator *)

inline id<JavaUtilMap> EduStanfordNlpLingTokensregexSequenceMatchRules_get_registeredRuleTypes();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilMap> EduStanfordNlpLingTokensregexSequenceMatchRules_registeredRuleTypes;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexSequenceMatchRules, registeredRuleTypes, id<JavaUtilMap>)

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_AssignmentRule *EduStanfordNlpLingTokensregexSequenceMatchRules_createAssignmentRuleWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesAssignableExpression_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexEnv *env, id<EduStanfordNlpLingTokensregexTypesAssignableExpression> var, id<EduStanfordNlpLingTokensregexTypesExpression> result);

FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexSequenceMatchRules_Rule> EduStanfordNlpLingTokensregexSequenceMatchRules_createRuleWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesExpressions_CompositeValue_(EduStanfordNlpLingTokensregexEnv *env, EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue *cv);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *EduStanfordNlpLingTokensregexSequenceMatchRules_createExtractionRuleWithEduStanfordNlpLingTokensregexEnv_withJavaUtilMap_(EduStanfordNlpLingTokensregexEnv *env, id<JavaUtilMap> attributes);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *EduStanfordNlpLingTokensregexSequenceMatchRules_createExtractionRuleWithEduStanfordNlpLingTokensregexEnv_withNSString_withId_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexEnv *env, NSString *ruleType, id pattern, id<EduStanfordNlpLingTokensregexTypesExpression> result);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator *EduStanfordNlpLingTokensregexSequenceMatchRules_lookupExtractRuleCreatorWithEduStanfordNlpLingTokensregexEnv_withNSString_(EduStanfordNlpLingTokensregexEnv *env, NSString *ruleType);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *EduStanfordNlpLingTokensregexSequenceMatchRules_createTokenPatternRuleWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexEnv *env, EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *expr, id<EduStanfordNlpLingTokensregexTypesExpression> result);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *EduStanfordNlpLingTokensregexSequenceMatchRules_createTextPatternRuleWithEduStanfordNlpLingTokensregexEnv_withNSString_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexEnv *env, NSString *expr, id<EduStanfordNlpLingTokensregexTypesExpression> result);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *EduStanfordNlpLingTokensregexSequenceMatchRules_createMultiTokenPatternRuleWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule_withJavaUtilList_(EduStanfordNlpLingTokensregexEnv *env, EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *template_, id<JavaUtilList> patterns);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *EduStanfordNlpLingTokensregexSequenceMatchRules_createAnnotationExtractorWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule_(EduStanfordNlpLingTokensregexEnv *env, EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *r);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_init(EduStanfordNlpLingTokensregexSequenceMatchRules *self);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules *new_EduStanfordNlpLingTokensregexSequenceMatchRules_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules *create_EduStanfordNlpLingTokensregexSequenceMatchRules_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_Rule_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_Rule))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_Rule_

@protocol EduStanfordNlpLingTokensregexSequenceMatchRules_Rule < JavaObject >

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_Rule)

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_Rule)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_AssignmentRule_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_AssignmentRule))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_AssignmentRule_

@class EduStanfordNlpLingTokensregexEnv;
@protocol EduStanfordNlpLingTokensregexTypesAssignableExpression;
@protocol EduStanfordNlpLingTokensregexTypesExpression;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_AssignmentRule : NSObject < EduStanfordNlpLingTokensregexSequenceMatchRules_Rule > {
 @public
  id<EduStanfordNlpLingTokensregexTypesExpression> expr_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexTypesAssignableExpression:(id<EduStanfordNlpLingTokensregexTypesAssignableExpression>)varExpr
                              withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)value;

- (void)evaluateWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_AssignmentRule)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_AssignmentRule, expr_, id<EduStanfordNlpLingTokensregexTypesExpression>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_AssignmentRule_initWithEduStanfordNlpLingTokensregexTypesAssignableExpression_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexSequenceMatchRules_AssignmentRule *self, id<EduStanfordNlpLingTokensregexTypesAssignableExpression> varExpr, id<EduStanfordNlpLingTokensregexTypesExpression> value);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_AssignmentRule *new_EduStanfordNlpLingTokensregexSequenceMatchRules_AssignmentRule_initWithEduStanfordNlpLingTokensregexTypesAssignableExpression_withEduStanfordNlpLingTokensregexTypesExpression_(id<EduStanfordNlpLingTokensregexTypesAssignableExpression> varExpr, id<EduStanfordNlpLingTokensregexTypesExpression> value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_AssignmentRule *create_EduStanfordNlpLingTokensregexSequenceMatchRules_AssignmentRule_initWithEduStanfordNlpLingTokensregexTypesAssignableExpression_withEduStanfordNlpLingTokensregexTypesExpression_(id<EduStanfordNlpLingTokensregexTypesAssignableExpression> varExpr, id<EduStanfordNlpLingTokensregexTypesExpression> value);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_AssignmentRule)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule_

@protocol JavaUtilList;

@protocol EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule < JavaObject >

- (jboolean)extractWithId:(id)inArg
         withJavaUtilList:(id<JavaUtilList>)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule)

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule_

#define RESTRICT_JavaUtilFunctionPredicate 1
#define INCLUDE_JavaUtilFunctionPredicate 1
#include "java/util/function/Predicate.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class EduStanfordNlpLingTokensregexEnv;
@class EduStanfordNlpLingTokensregexMatchedExpression;
@class EduStanfordNlpLingTokensregexSequenceMatcher_FindType;
@class IOSClass;
@protocol EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule;
@protocol EduStanfordNlpLingTokensregexTypesExpression;
@protocol JavaUtilList;
@protocol JavaUtilMap;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule : NSObject < EduStanfordNlpLingTokensregexSequenceMatchRules_Rule, EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule, JavaUtilFunctionPredicate, JavaIoSerializable > {
 @public
  NSString *name_;
  jint stage_;
  jdouble priority_;
  jdouble weight_;
  IOSClass *annotationField_;
  IOSClass *tokensAnnotationField_;
  id<JavaUtilList> tokensResultAnnotationField_;
  id<JavaUtilList> resultAnnotationField_;
  IOSClass *resultNestedAnnotationField_;
  EduStanfordNlpLingTokensregexSequenceMatcher_FindType *matchFindType_;
  jint matchedExpressionGroup_;
  jboolean matchWithResults_;
  NSString *ruleType_;
  jboolean isComposite_;
  jboolean includeNested_;
  jboolean active_;
  id<EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule> extractRule_;
  id<JavaUtilFunctionPredicate> filterRule_;
  id pattern_;
  id<EduStanfordNlpLingTokensregexTypesExpression> result_;
}

#pragma mark Public

- (instancetype)init;

- (jboolean)extractWithId:(id)inArg
         withJavaUtilList:(id<JavaUtilList>)outArg;

- (jboolean)hasTokensRegexPattern;

- (jboolean)isMostlyCompatibleWithEduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule:(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)aer;

- (jboolean)testWithId:(EduStanfordNlpLingTokensregexMatchedExpression *)obj;

- (void)updateWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                   withJavaUtilMap:(id<JavaUtilMap>)attributes;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule, name_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule, annotationField_, IOSClass *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule, tokensAnnotationField_, IOSClass *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule, tokensResultAnnotationField_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule, resultAnnotationField_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule, resultNestedAnnotationField_, IOSClass *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule, matchFindType_, EduStanfordNlpLingTokensregexSequenceMatcher_FindType *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule, ruleType_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule, extractRule_, id<EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule, filterRule_, id<JavaUtilFunctionPredicate>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule, pattern_, id)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule, result_, id<EduStanfordNlpLingTokensregexTypesExpression>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule_init(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *self);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *new_EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *create_EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator_

@class EduStanfordNlpLingTokensregexEnv;
@class EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule;
@protocol JavaUtilMap;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator : NSObject

#pragma mark Public

- (instancetype)init;

- (EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)createWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env;

- (EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)createWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                                      withJavaUtilMap:(id<JavaUtilMap>)attributes;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator_init(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator *self);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator *new_EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator *create_EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_CompositeExtractRuleCreator_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_CompositeExtractRuleCreator))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_CompositeExtractRuleCreator_

@class EduStanfordNlpLingTokensregexEnv;
@class EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule;
@class EduStanfordNlpLingTokensregexSequencePattern_PatternExpr;
@class EduStanfordNlpLingTokensregexTokenSequencePattern;
@protocol EduStanfordNlpLingTokensregexTypesExpression;
@protocol JavaUtilMap;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_CompositeExtractRuleCreator : EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator

#pragma mark Public

- (instancetype)init;

- (EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)createWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                                      withJavaUtilMap:(id<JavaUtilMap>)attributes;

#pragma mark Protected

- (EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)createWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                         withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr:(EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *)expr
                                                                     withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)result;

- (void)updateExtractRuleWithEduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule:(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)r
                                                              withEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                      withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr:(EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *)expr
                                                  withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)action
                                                  withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)result;

- (void)updateExtractRuleWithEduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule:(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)r
                                                              withEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                             withEduStanfordNlpLingTokensregexTokenSequencePattern:(EduStanfordNlpLingTokensregexTokenSequencePattern *)pattern
                                                  withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)action
                                                  withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)result;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_CompositeExtractRuleCreator)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_CompositeExtractRuleCreator_init(EduStanfordNlpLingTokensregexSequenceMatchRules_CompositeExtractRuleCreator *self);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_CompositeExtractRuleCreator *new_EduStanfordNlpLingTokensregexSequenceMatchRules_CompositeExtractRuleCreator_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_CompositeExtractRuleCreator *create_EduStanfordNlpLingTokensregexSequenceMatchRules_CompositeExtractRuleCreator_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_CompositeExtractRuleCreator)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_TokenPatternExtractRuleCreator_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_TokenPatternExtractRuleCreator))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_TokenPatternExtractRuleCreator_

@class EduStanfordNlpLingTokensregexEnv;
@class EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule;
@class EduStanfordNlpLingTokensregexSequencePattern_PatternExpr;
@class EduStanfordNlpLingTokensregexTokenSequencePattern;
@protocol EduStanfordNlpLingTokensregexTypesExpression;
@protocol JavaUtilMap;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_TokenPatternExtractRuleCreator : EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator

#pragma mark Public

- (instancetype)init;

- (EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)createWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                                      withJavaUtilMap:(id<JavaUtilMap>)attributes;

#pragma mark Protected

- (EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)createWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                         withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr:(EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *)expr
                                                                     withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)result;

- (void)updateExtractRuleWithEduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule:(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)r
                                                              withEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                      withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr:(EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *)expr
                                                  withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)action
                                                  withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)result;

- (void)updateExtractRuleWithEduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule:(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)r
                                                              withEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                             withEduStanfordNlpLingTokensregexTokenSequencePattern:(EduStanfordNlpLingTokensregexTokenSequencePattern *)pattern
                                                  withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)action
                                                  withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)result;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_TokenPatternExtractRuleCreator)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_TokenPatternExtractRuleCreator_init(EduStanfordNlpLingTokensregexSequenceMatchRules_TokenPatternExtractRuleCreator *self);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_TokenPatternExtractRuleCreator *new_EduStanfordNlpLingTokensregexSequenceMatchRules_TokenPatternExtractRuleCreator_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_TokenPatternExtractRuleCreator *create_EduStanfordNlpLingTokensregexSequenceMatchRules_TokenPatternExtractRuleCreator_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_TokenPatternExtractRuleCreator)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_MultiTokenPatternExtractRuleCreator_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_MultiTokenPatternExtractRuleCreator))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_MultiTokenPatternExtractRuleCreator_

@class EduStanfordNlpLingTokensregexEnv;
@class EduStanfordNlpLingTokensregexMultiPatternMatcher;
@class EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule;
@protocol EduStanfordNlpLingTokensregexTypesExpression;
@protocol JavaUtilList;
@protocol JavaUtilMap;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_MultiTokenPatternExtractRuleCreator : EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator

#pragma mark Public

- (instancetype)init;

- (EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)createWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                                      withJavaUtilMap:(id<JavaUtilMap>)attributes;

#pragma mark Protected

- (EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)createWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                            withEduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule:(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)aerTemplate
                                                                                                     withJavaUtilList:(id<JavaUtilList>)patterns;

- (void)updateExtractRuleWithEduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule:(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)r
                                                              withEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                              withEduStanfordNlpLingTokensregexMultiPatternMatcher:(EduStanfordNlpLingTokensregexMultiPatternMatcher *)pattern
                                                  withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)action
                                                  withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)result;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_MultiTokenPatternExtractRuleCreator)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_MultiTokenPatternExtractRuleCreator_init(EduStanfordNlpLingTokensregexSequenceMatchRules_MultiTokenPatternExtractRuleCreator *self);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_MultiTokenPatternExtractRuleCreator *new_EduStanfordNlpLingTokensregexSequenceMatchRules_MultiTokenPatternExtractRuleCreator_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_MultiTokenPatternExtractRuleCreator *create_EduStanfordNlpLingTokensregexSequenceMatchRules_MultiTokenPatternExtractRuleCreator_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_MultiTokenPatternExtractRuleCreator)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_TextPatternExtractRuleCreator_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_TextPatternExtractRuleCreator))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_TextPatternExtractRuleCreator_

@class EduStanfordNlpLingTokensregexEnv;
@class EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule;
@protocol EduStanfordNlpLingTokensregexTypesExpression;
@protocol JavaUtilMap;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_TextPatternExtractRuleCreator : EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRuleCreator

#pragma mark Public

- (instancetype)init;

- (EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)createWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                                      withJavaUtilMap:(id<JavaUtilMap>)attributes;

#pragma mark Protected

- (EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)createWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                                         withNSString:(NSString *)expr
                                                                     withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)result;

- (void)updateExtractRuleWithEduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule:(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationExtractRule *)r
                                                              withEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                      withNSString:(NSString *)expr
                                                  withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)action
                                                  withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)result;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_TextPatternExtractRuleCreator)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_TextPatternExtractRuleCreator_init(EduStanfordNlpLingTokensregexSequenceMatchRules_TextPatternExtractRuleCreator *self);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_TextPatternExtractRuleCreator *new_EduStanfordNlpLingTokensregexSequenceMatchRules_TextPatternExtractRuleCreator_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_TextPatternExtractRuleCreator *create_EduStanfordNlpLingTokensregexSequenceMatchRules_TextPatternExtractRuleCreator_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_TextPatternExtractRuleCreator)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationMatchedFilter_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationMatchedFilter))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationMatchedFilter_

#define RESTRICT_JavaUtilFunctionPredicate 1
#define INCLUDE_JavaUtilFunctionPredicate 1
#include "java/util/function/Predicate.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class EduStanfordNlpLingTokensregexMatchedExpression;
@class EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationMatchedFilter : NSObject < JavaUtilFunctionPredicate, JavaIoSerializable > {
 @public
  EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *extractor_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor:(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *)extractor;

- (jboolean)testWithId:(EduStanfordNlpLingTokensregexMatchedExpression *)me;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationMatchedFilter)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationMatchedFilter, extractor_, EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationMatchedFilter_initWithEduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor_(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationMatchedFilter *self, EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *extractor);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationMatchedFilter *new_EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationMatchedFilter_initWithEduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor_(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *extractor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationMatchedFilter *create_EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationMatchedFilter_initWithEduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor_(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *extractor);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_AnnotationMatchedFilter)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchResultExtractor_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchResultExtractor))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchResultExtractor_

#define RESTRICT_JavaUtilFunctionFunction 1
#define INCLUDE_JavaUtilFunctionFunction 1
#include "java/util/function/Function.h"

@class EduStanfordNlpLingTokensregexEnv;
@protocol EduStanfordNlpLingTokensregexTypesExpression;
@protocol EduStanfordNlpLingTokensregexTypesValue;
@protocol JavaUtilRegexMatchResult;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchResultExtractor : NSObject < JavaUtilFunctionFunction > {
 @public
  EduStanfordNlpLingTokensregexEnv *env_;
  id<EduStanfordNlpLingTokensregexTypesExpression> action_;
  id<EduStanfordNlpLingTokensregexTypesExpression> result_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
        withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)result;

- (instancetype)initWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
        withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)action
        withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)result;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithId:(id<JavaUtilRegexMatchResult>)matchResult;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchResultExtractor)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchResultExtractor, env_, EduStanfordNlpLingTokensregexEnv *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchResultExtractor, action_, id<EduStanfordNlpLingTokensregexTypesExpression>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchResultExtractor, result_, id<EduStanfordNlpLingTokensregexTypesExpression>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchResultExtractor_initWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchResultExtractor *self, EduStanfordNlpLingTokensregexEnv *env, id<EduStanfordNlpLingTokensregexTypesExpression> action, id<EduStanfordNlpLingTokensregexTypesExpression> result);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchResultExtractor *new_EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchResultExtractor_initWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexEnv *env, id<EduStanfordNlpLingTokensregexTypesExpression> action, id<EduStanfordNlpLingTokensregexTypesExpression> result) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchResultExtractor *create_EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchResultExtractor_initWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexEnv *env, id<EduStanfordNlpLingTokensregexTypesExpression> action, id<EduStanfordNlpLingTokensregexTypesExpression> result);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchResultExtractor_initWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchResultExtractor *self, EduStanfordNlpLingTokensregexEnv *env, id<EduStanfordNlpLingTokensregexTypesExpression> result);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchResultExtractor *new_EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchResultExtractor_initWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexEnv *env, id<EduStanfordNlpLingTokensregexTypesExpression> result) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchResultExtractor *create_EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchResultExtractor_initWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexEnv *env, id<EduStanfordNlpLingTokensregexTypesExpression> result);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchResultExtractor)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchResultExtractor_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchResultExtractor))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchResultExtractor_

#define RESTRICT_JavaUtilFunctionFunction 1
#define INCLUDE_JavaUtilFunctionFunction 1
#include "java/util/function/Function.h"

@class EduStanfordNlpLingTokensregexEnv;
@protocol EduStanfordNlpLingTokensregexSequenceMatchResult;
@protocol EduStanfordNlpLingTokensregexTypesExpression;
@protocol EduStanfordNlpLingTokensregexTypesValue;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchResultExtractor : NSObject < JavaUtilFunctionFunction > {
 @public
  EduStanfordNlpLingTokensregexEnv *env_;
  id<EduStanfordNlpLingTokensregexTypesExpression> action_;
  id<EduStanfordNlpLingTokensregexTypesExpression> result_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
        withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)result;

- (instancetype)initWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
        withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)action
        withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)result;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithId:(id<EduStanfordNlpLingTokensregexSequenceMatchResult>)matchResult;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchResultExtractor)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchResultExtractor, env_, EduStanfordNlpLingTokensregexEnv *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchResultExtractor, action_, id<EduStanfordNlpLingTokensregexTypesExpression>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchResultExtractor, result_, id<EduStanfordNlpLingTokensregexTypesExpression>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchResultExtractor_initWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchResultExtractor *self, EduStanfordNlpLingTokensregexEnv *env, id<EduStanfordNlpLingTokensregexTypesExpression> action, id<EduStanfordNlpLingTokensregexTypesExpression> result);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchResultExtractor *new_EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchResultExtractor_initWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexEnv *env, id<EduStanfordNlpLingTokensregexTypesExpression> action, id<EduStanfordNlpLingTokensregexTypesExpression> result) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchResultExtractor *create_EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchResultExtractor_initWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexEnv *env, id<EduStanfordNlpLingTokensregexTypesExpression> action, id<EduStanfordNlpLingTokensregexTypesExpression> result);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchResultExtractor_initWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchResultExtractor *self, EduStanfordNlpLingTokensregexEnv *env, id<EduStanfordNlpLingTokensregexTypesExpression> result);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchResultExtractor *new_EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchResultExtractor_initWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexEnv *env, id<EduStanfordNlpLingTokensregexTypesExpression> result) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchResultExtractor *create_EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchResultExtractor_initWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexEnv *env, id<EduStanfordNlpLingTokensregexTypesExpression> result);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchResultExtractor)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_FilterExtractRule_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_FilterExtractRule))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_FilterExtractRule_

@class IOSObjectArray;
@protocol EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule;
@protocol JavaUtilFunctionPredicate;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_FilterExtractRule : NSObject < EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule > {
 @public
  id<JavaUtilFunctionPredicate> filter_;
  id<EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule> rule_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)filter
withEduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule:(id<EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule>)rule;

- (instancetype)initWithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)filter
withEduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRuleArray:(IOSObjectArray *)rules;

- (jboolean)extractWithId:(id)inArg
         withJavaUtilList:(id<JavaUtilList>)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_FilterExtractRule)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_FilterExtractRule, filter_, id<JavaUtilFunctionPredicate>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_FilterExtractRule, rule_, id<EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_FilterExtractRule_initWithJavaUtilFunctionPredicate_withEduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule_(EduStanfordNlpLingTokensregexSequenceMatchRules_FilterExtractRule *self, id<JavaUtilFunctionPredicate> filter, id<EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule> rule);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_FilterExtractRule *new_EduStanfordNlpLingTokensregexSequenceMatchRules_FilterExtractRule_initWithJavaUtilFunctionPredicate_withEduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule_(id<JavaUtilFunctionPredicate> filter, id<EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule> rule) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_FilterExtractRule *create_EduStanfordNlpLingTokensregexSequenceMatchRules_FilterExtractRule_initWithJavaUtilFunctionPredicate_withEduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule_(id<JavaUtilFunctionPredicate> filter, id<EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule> rule);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_FilterExtractRule_initWithJavaUtilFunctionPredicate_withEduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRuleArray_(EduStanfordNlpLingTokensregexSequenceMatchRules_FilterExtractRule *self, id<JavaUtilFunctionPredicate> filter, IOSObjectArray *rules);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_FilterExtractRule *new_EduStanfordNlpLingTokensregexSequenceMatchRules_FilterExtractRule_initWithJavaUtilFunctionPredicate_withEduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRuleArray_(id<JavaUtilFunctionPredicate> filter, IOSObjectArray *rules) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_FilterExtractRule *create_EduStanfordNlpLingTokensregexSequenceMatchRules_FilterExtractRule_initWithJavaUtilFunctionPredicate_withEduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRuleArray_(id<JavaUtilFunctionPredicate> filter, IOSObjectArray *rules);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_FilterExtractRule)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_ListExtractRule_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_ListExtractRule))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_ListExtractRule_

@class IOSObjectArray;
@protocol JavaUtilCollection;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_ListExtractRule : NSObject < EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule > {
 @public
  id<JavaUtilList> rules_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)rules;

- (instancetype)initWithEduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRuleArray:(IOSObjectArray *)rules;

- (void)addRulesWithJavaUtilCollection:(id<JavaUtilCollection>)rules;

- (void)addRulesWithEduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRuleArray:(IOSObjectArray *)rules;

- (jboolean)extractWithId:(id)inArg
         withJavaUtilList:(id<JavaUtilList>)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_ListExtractRule)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_ListExtractRule, rules_, id<JavaUtilList>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_ListExtractRule_initWithJavaUtilCollection_(EduStanfordNlpLingTokensregexSequenceMatchRules_ListExtractRule *self, id<JavaUtilCollection> rules);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_ListExtractRule *new_EduStanfordNlpLingTokensregexSequenceMatchRules_ListExtractRule_initWithJavaUtilCollection_(id<JavaUtilCollection> rules) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_ListExtractRule *create_EduStanfordNlpLingTokensregexSequenceMatchRules_ListExtractRule_initWithJavaUtilCollection_(id<JavaUtilCollection> rules);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_ListExtractRule_initWithEduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRuleArray_(EduStanfordNlpLingTokensregexSequenceMatchRules_ListExtractRule *self, IOSObjectArray *rules);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_ListExtractRule *new_EduStanfordNlpLingTokensregexSequenceMatchRules_ListExtractRule_initWithEduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRuleArray_(IOSObjectArray *rules) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_ListExtractRule *create_EduStanfordNlpLingTokensregexSequenceMatchRules_ListExtractRule_initWithEduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRuleArray_(IOSObjectArray *rules);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_ListExtractRule)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapExtractRule_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapExtractRule))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapExtractRule_

@class EduStanfordNlpLingTokensregexEnv;
@class IOSClass;
@protocol EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule;
@protocol EduStanfordNlpUtilCoreMap;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapExtractRule : NSObject < EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule > {
 @public
  EduStanfordNlpLingTokensregexEnv *env_;
  IOSClass *annotationField_;
  id<EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule> extractRule_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                            withIOSClass:(IOSClass *)annotationField
withEduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule:(id<EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule>)extractRule;

- (jboolean)extractWithId:(id<EduStanfordNlpUtilCoreMap>)cm
         withJavaUtilList:(id<JavaUtilList>)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapExtractRule)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapExtractRule, env_, EduStanfordNlpLingTokensregexEnv *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapExtractRule, annotationField_, IOSClass *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapExtractRule, extractRule_, id<EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapExtractRule_initWithEduStanfordNlpLingTokensregexEnv_withIOSClass_withEduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule_(EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapExtractRule *self, EduStanfordNlpLingTokensregexEnv *env, IOSClass *annotationField, id<EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule> extractRule);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapExtractRule *new_EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapExtractRule_initWithEduStanfordNlpLingTokensregexEnv_withIOSClass_withEduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule_(EduStanfordNlpLingTokensregexEnv *env, IOSClass *annotationField, id<EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule> extractRule) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapExtractRule *create_EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapExtractRule_initWithEduStanfordNlpLingTokensregexEnv_withIOSClass_withEduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule_(EduStanfordNlpLingTokensregexEnv *env, IOSClass *annotationField, id<EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule> extractRule);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapExtractRule)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListExtractRule_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListExtractRule))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListExtractRule_

@protocol EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule;
@protocol EduStanfordNlpUtilCoreMap;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListExtractRule : NSObject < EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule > {
 @public
  id<EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule> extractRule_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule:(id<EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule>)extractRule;

- (jboolean)extractWithId:(id<EduStanfordNlpUtilCoreMap>)cm
         withJavaUtilList:(id<JavaUtilList>)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListExtractRule)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListExtractRule, extractRule_, id<EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListExtractRule_initWithEduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule_(EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListExtractRule *self, id<EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule> extractRule);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListExtractRule *new_EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListExtractRule_initWithEduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule_(id<EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule> extractRule) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListExtractRule *create_EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListExtractRule_initWithEduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule_(id<EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule> extractRule);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListExtractRule)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_BasicSequenceExtractRule_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_BasicSequenceExtractRule))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_BasicSequenceExtractRule_

@class EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_BasicSequenceExtractRule : NSObject < EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule > {
 @public
  EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *extractor_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor:(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *)extractor;

- (jboolean)extractWithId:(id<JavaUtilList>)seq
         withJavaUtilList:(id<JavaUtilList>)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_BasicSequenceExtractRule)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_BasicSequenceExtractRule, extractor_, EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_BasicSequenceExtractRule_initWithEduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor_(EduStanfordNlpLingTokensregexSequenceMatchRules_BasicSequenceExtractRule *self, EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *extractor);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_BasicSequenceExtractRule *new_EduStanfordNlpLingTokensregexSequenceMatchRules_BasicSequenceExtractRule_initWithEduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor_(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *extractor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_BasicSequenceExtractRule *create_EduStanfordNlpLingTokensregexSequenceMatchRules_BasicSequenceExtractRule_initWithEduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor_(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *extractor);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_BasicSequenceExtractRule)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule_

#define RESTRICT_JavaUtilFunctionFunction 1
#define INCLUDE_JavaUtilFunctionFunction 1
#include "java/util/function/Function.h"

@class EduStanfordNlpLingTokensregexEnv;
@class EduStanfordNlpLingTokensregexSequenceMatcher_FindType;
@class EduStanfordNlpLingTokensregexSequencePattern;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule : NSObject < EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule, JavaUtilFunctionFunction > {
 @public
  EduStanfordNlpLingTokensregexSequencePattern *pattern_;
  id<JavaUtilFunctionFunction> extractor_;
  EduStanfordNlpLingTokensregexSequenceMatcher_FindType *findType_;
  jboolean matchWithResult_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                            withNSString:(NSString *)regex
                            withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)extractor;

- (instancetype)initWithEduStanfordNlpLingTokensregexSequencePattern:(EduStanfordNlpLingTokensregexSequencePattern *)p
                                        withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)extractor;

- (instancetype)initWithEduStanfordNlpLingTokensregexSequencePattern:(EduStanfordNlpLingTokensregexSequencePattern *)p
                                        withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)extractor
           withEduStanfordNlpLingTokensregexSequenceMatcher_FindType:(EduStanfordNlpLingTokensregexSequenceMatcher_FindType *)findType
                                                         withBoolean:(jboolean)matchWithResult;

- (id)applyWithId:(id<JavaUtilList>)seq;

- (jboolean)extractWithId:(id<JavaUtilList>)seq
         withJavaUtilList:(id<JavaUtilList>)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule, pattern_, EduStanfordNlpLingTokensregexSequencePattern *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule, extractor_, id<JavaUtilFunctionFunction>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule, findType_, EduStanfordNlpLingTokensregexSequenceMatcher_FindType *)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule_initWithEduStanfordNlpLingTokensregexEnv_withNSString_withJavaUtilFunctionFunction_(EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule *self, EduStanfordNlpLingTokensregexEnv *env, NSString *regex, id<JavaUtilFunctionFunction> extractor);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule *new_EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule_initWithEduStanfordNlpLingTokensregexEnv_withNSString_withJavaUtilFunctionFunction_(EduStanfordNlpLingTokensregexEnv *env, NSString *regex, id<JavaUtilFunctionFunction> extractor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule *create_EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule_initWithEduStanfordNlpLingTokensregexEnv_withNSString_withJavaUtilFunctionFunction_(EduStanfordNlpLingTokensregexEnv *env, NSString *regex, id<JavaUtilFunctionFunction> extractor);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule_initWithEduStanfordNlpLingTokensregexSequencePattern_withJavaUtilFunctionFunction_(EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule *self, EduStanfordNlpLingTokensregexSequencePattern *p, id<JavaUtilFunctionFunction> extractor);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule *new_EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule_initWithEduStanfordNlpLingTokensregexSequencePattern_withJavaUtilFunctionFunction_(EduStanfordNlpLingTokensregexSequencePattern *p, id<JavaUtilFunctionFunction> extractor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule *create_EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule_initWithEduStanfordNlpLingTokensregexSequencePattern_withJavaUtilFunctionFunction_(EduStanfordNlpLingTokensregexSequencePattern *p, id<JavaUtilFunctionFunction> extractor);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule_initWithEduStanfordNlpLingTokensregexSequencePattern_withJavaUtilFunctionFunction_withEduStanfordNlpLingTokensregexSequenceMatcher_FindType_withBoolean_(EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule *self, EduStanfordNlpLingTokensregexSequencePattern *p, id<JavaUtilFunctionFunction> extractor, EduStanfordNlpLingTokensregexSequenceMatcher_FindType *findType, jboolean matchWithResult);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule *new_EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule_initWithEduStanfordNlpLingTokensregexSequencePattern_withJavaUtilFunctionFunction_withEduStanfordNlpLingTokensregexSequenceMatcher_FindType_withBoolean_(EduStanfordNlpLingTokensregexSequencePattern *p, id<JavaUtilFunctionFunction> extractor, EduStanfordNlpLingTokensregexSequenceMatcher_FindType *findType, jboolean matchWithResult) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule *create_EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule_initWithEduStanfordNlpLingTokensregexSequencePattern_withJavaUtilFunctionFunction_withEduStanfordNlpLingTokensregexSequenceMatcher_FindType_withBoolean_(EduStanfordNlpLingTokensregexSequencePattern *p, id<JavaUtilFunctionFunction> extractor, EduStanfordNlpLingTokensregexSequenceMatcher_FindType *findType, jboolean matchWithResult);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_SequencePatternExtractRule)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_MultiSequencePatternExtractRule_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_MultiSequencePatternExtractRule))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_MultiSequencePatternExtractRule_

#define RESTRICT_JavaUtilFunctionFunction 1
#define INCLUDE_JavaUtilFunctionFunction 1
#include "java/util/function/Function.h"

@class EduStanfordNlpLingTokensregexMultiPatternMatcher;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_MultiSequencePatternExtractRule : NSObject < EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule, JavaUtilFunctionFunction > {
 @public
  EduStanfordNlpLingTokensregexMultiPatternMatcher *matcher_;
  id<JavaUtilFunctionFunction> extractor_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexMultiPatternMatcher:(EduStanfordNlpLingTokensregexMultiPatternMatcher *)matcher
                                            withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)extractor;

- (id)applyWithId:(id<JavaUtilList>)seq;

- (jboolean)extractWithId:(id<JavaUtilList>)seq
         withJavaUtilList:(id<JavaUtilList>)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_MultiSequencePatternExtractRule)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_MultiSequencePatternExtractRule, matcher_, EduStanfordNlpLingTokensregexMultiPatternMatcher *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_MultiSequencePatternExtractRule, extractor_, id<JavaUtilFunctionFunction>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_MultiSequencePatternExtractRule_initWithEduStanfordNlpLingTokensregexMultiPatternMatcher_withJavaUtilFunctionFunction_(EduStanfordNlpLingTokensregexSequenceMatchRules_MultiSequencePatternExtractRule *self, EduStanfordNlpLingTokensregexMultiPatternMatcher *matcher, id<JavaUtilFunctionFunction> extractor);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_MultiSequencePatternExtractRule *new_EduStanfordNlpLingTokensregexSequenceMatchRules_MultiSequencePatternExtractRule_initWithEduStanfordNlpLingTokensregexMultiPatternMatcher_withJavaUtilFunctionFunction_(EduStanfordNlpLingTokensregexMultiPatternMatcher *matcher, id<JavaUtilFunctionFunction> extractor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_MultiSequencePatternExtractRule *create_EduStanfordNlpLingTokensregexSequenceMatchRules_MultiSequencePatternExtractRule_initWithEduStanfordNlpLingTokensregexMultiPatternMatcher_withJavaUtilFunctionFunction_(EduStanfordNlpLingTokensregexMultiPatternMatcher *matcher, id<JavaUtilFunctionFunction> extractor);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_MultiSequencePatternExtractRule)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule_

#define RESTRICT_JavaUtilFunctionFunction 1
#define INCLUDE_JavaUtilFunctionFunction 1
#include "java/util/function/Function.h"

@class EduStanfordNlpLingTokensregexEnv;
@class JavaUtilRegexPattern;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule : NSObject < EduStanfordNlpLingTokensregexSequenceMatchRules_ExtractRule, JavaUtilFunctionFunction > {
 @public
  JavaUtilRegexPattern *pattern_;
  id<JavaUtilFunctionFunction> extractor_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                            withNSString:(NSString *)regex
                            withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)extractor;

- (instancetype)initWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                            withNSString:(NSString *)regex
                            withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)extractor
                                             withBoolean:(jboolean)addWordBoundaries;

- (instancetype)initWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)pattern
                withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)extractor;

- (instancetype)initWithNSString:(NSString *)regex
    withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)extractor;

- (id)applyWithId:(NSString *)str;

- (jboolean)extractWithId:(NSString *)str
         withJavaUtilList:(id<JavaUtilList>)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule, pattern_, JavaUtilRegexPattern *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule, extractor_, id<JavaUtilFunctionFunction>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule_initWithJavaUtilRegexPattern_withJavaUtilFunctionFunction_(EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule *self, JavaUtilRegexPattern *pattern, id<JavaUtilFunctionFunction> extractor);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule *new_EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule_initWithJavaUtilRegexPattern_withJavaUtilFunctionFunction_(JavaUtilRegexPattern *pattern, id<JavaUtilFunctionFunction> extractor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule *create_EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule_initWithJavaUtilRegexPattern_withJavaUtilFunctionFunction_(JavaUtilRegexPattern *pattern, id<JavaUtilFunctionFunction> extractor);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule_initWithEduStanfordNlpLingTokensregexEnv_withNSString_withJavaUtilFunctionFunction_(EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule *self, EduStanfordNlpLingTokensregexEnv *env, NSString *regex, id<JavaUtilFunctionFunction> extractor);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule *new_EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule_initWithEduStanfordNlpLingTokensregexEnv_withNSString_withJavaUtilFunctionFunction_(EduStanfordNlpLingTokensregexEnv *env, NSString *regex, id<JavaUtilFunctionFunction> extractor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule *create_EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule_initWithEduStanfordNlpLingTokensregexEnv_withNSString_withJavaUtilFunctionFunction_(EduStanfordNlpLingTokensregexEnv *env, NSString *regex, id<JavaUtilFunctionFunction> extractor);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule_initWithNSString_withJavaUtilFunctionFunction_(EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule *self, NSString *regex, id<JavaUtilFunctionFunction> extractor);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule *new_EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule_initWithNSString_withJavaUtilFunctionFunction_(NSString *regex, id<JavaUtilFunctionFunction> extractor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule *create_EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule_initWithNSString_withJavaUtilFunctionFunction_(NSString *regex, id<JavaUtilFunctionFunction> extractor);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule_initWithEduStanfordNlpLingTokensregexEnv_withNSString_withJavaUtilFunctionFunction_withBoolean_(EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule *self, EduStanfordNlpLingTokensregexEnv *env, NSString *regex, id<JavaUtilFunctionFunction> extractor, jboolean addWordBoundaries);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule *new_EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule_initWithEduStanfordNlpLingTokensregexEnv_withNSString_withJavaUtilFunctionFunction_withBoolean_(EduStanfordNlpLingTokensregexEnv *env, NSString *regex, id<JavaUtilFunctionFunction> extractor, jboolean addWordBoundaries) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule *create_EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule_initWithEduStanfordNlpLingTokensregexEnv_withNSString_withJavaUtilFunctionFunction_withBoolean_(EduStanfordNlpLingTokensregexEnv *env, NSString *regex, id<JavaUtilFunctionFunction> extractor, jboolean addWordBoundaries);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_StringPatternExtractRule)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchedExpressionExtractor_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchedExpressionExtractor))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchedExpressionExtractor_

#define RESTRICT_JavaUtilFunctionFunction 1
#define INCLUDE_JavaUtilFunctionFunction 1
#include "java/util/function/Function.h"

@class EduStanfordNlpLingTokensregexMatchedExpression;
@class EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor;
@protocol JavaUtilRegexMatchResult;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchedExpressionExtractor : NSObject < JavaUtilFunctionFunction > {
 @public
  EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *extractor_;
  jint group_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor:(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *)extractor
                                                                                         withInt:(jint)group;

- (EduStanfordNlpLingTokensregexMatchedExpression *)applyWithId:(id<JavaUtilRegexMatchResult>)matched;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchedExpressionExtractor)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchedExpressionExtractor, extractor_, EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchedExpressionExtractor_initWithEduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor_withInt_(EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchedExpressionExtractor *self, EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *extractor, jint group);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchedExpressionExtractor *new_EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchedExpressionExtractor_initWithEduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor_withInt_(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *extractor, jint group) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchedExpressionExtractor *create_EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchedExpressionExtractor_initWithEduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor_withInt_(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *extractor, jint group);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_StringMatchedExpressionExtractor)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchedExpressionExtractor_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchedExpressionExtractor))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchedExpressionExtractor_

#define RESTRICT_JavaUtilFunctionFunction 1
#define INCLUDE_JavaUtilFunctionFunction 1
#include "java/util/function/Function.h"

@class EduStanfordNlpLingTokensregexMatchedExpression;
@class EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor;
@protocol EduStanfordNlpLingTokensregexSequenceMatchResult;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchedExpressionExtractor : NSObject < JavaUtilFunctionFunction > {
 @public
  EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *extractor_;
  jint group_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor:(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *)extractor
                                                                                         withInt:(jint)group;

- (EduStanfordNlpLingTokensregexMatchedExpression *)applyWithId:(id<EduStanfordNlpLingTokensregexSequenceMatchResult>)matched;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchedExpressionExtractor)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchedExpressionExtractor, extractor_, EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchedExpressionExtractor_initWithEduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor_withInt_(EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchedExpressionExtractor *self, EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *extractor, jint group);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchedExpressionExtractor *new_EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchedExpressionExtractor_initWithEduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor_withInt_(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *extractor, jint group) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchedExpressionExtractor *create_EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchedExpressionExtractor_initWithEduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor_withInt_(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *extractor, jint group);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_SequenceMatchedExpressionExtractor)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapFunctionApplier_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapFunctionApplier))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapFunctionApplier_

#define RESTRICT_JavaUtilFunctionFunction 1
#define INCLUDE_JavaUtilFunctionFunction 1
#include "java/util/function/Function.h"

@class EduStanfordNlpLingTokensregexEnv;
@class IOSClass;
@protocol EduStanfordNlpUtilCoreMap;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapFunctionApplier : NSObject < JavaUtilFunctionFunction > {
 @public
  EduStanfordNlpLingTokensregexEnv *env_;
  IOSClass *annotationField_;
  id<JavaUtilFunctionFunction> func_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                            withIOSClass:(IOSClass *)annotationField
                            withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)func;

- (id)applyWithId:(id<EduStanfordNlpUtilCoreMap>)cm;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapFunctionApplier)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapFunctionApplier, env_, EduStanfordNlpLingTokensregexEnv *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapFunctionApplier, annotationField_, IOSClass *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapFunctionApplier, func_, id<JavaUtilFunctionFunction>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapFunctionApplier_initWithEduStanfordNlpLingTokensregexEnv_withIOSClass_withJavaUtilFunctionFunction_(EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapFunctionApplier *self, EduStanfordNlpLingTokensregexEnv *env, IOSClass *annotationField, id<JavaUtilFunctionFunction> func);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapFunctionApplier *new_EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapFunctionApplier_initWithEduStanfordNlpLingTokensregexEnv_withIOSClass_withJavaUtilFunctionFunction_(EduStanfordNlpLingTokensregexEnv *env, IOSClass *annotationField, id<JavaUtilFunctionFunction> func) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapFunctionApplier *create_EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapFunctionApplier_initWithEduStanfordNlpLingTokensregexEnv_withIOSClass_withJavaUtilFunctionFunction_(EduStanfordNlpLingTokensregexEnv *env, IOSClass *annotationField, id<JavaUtilFunctionFunction> func);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapFunctionApplier)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListFunctionApplier_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListFunctionApplier))
#define EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListFunctionApplier_

#define RESTRICT_JavaUtilFunctionFunction 1
#define INCLUDE_JavaUtilFunctionFunction 1
#include "java/util/function/Function.h"

@class EduStanfordNlpLingTokensregexEnv;
@protocol EduStanfordNlpUtilCoreMap;

@interface EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListFunctionApplier : NSObject < JavaUtilFunctionFunction > {
 @public
  EduStanfordNlpLingTokensregexEnv *env_;
  id<JavaUtilFunctionFunction> func_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                            withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)func;

- (id)applyWithId:(id<EduStanfordNlpUtilCoreMap>)cm;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListFunctionApplier)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListFunctionApplier, env_, EduStanfordNlpLingTokensregexEnv *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListFunctionApplier, func_, id<JavaUtilFunctionFunction>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListFunctionApplier_initWithEduStanfordNlpLingTokensregexEnv_withJavaUtilFunctionFunction_(EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListFunctionApplier *self, EduStanfordNlpLingTokensregexEnv *env, id<JavaUtilFunctionFunction> func);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListFunctionApplier *new_EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListFunctionApplier_initWithEduStanfordNlpLingTokensregexEnv_withJavaUtilFunctionFunction_(EduStanfordNlpLingTokensregexEnv *env, id<JavaUtilFunctionFunction> func) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListFunctionApplier *create_EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListFunctionApplier_initWithEduStanfordNlpLingTokensregexEnv_withJavaUtilFunctionFunction_(EduStanfordNlpLingTokensregexEnv *env, id<JavaUtilFunctionFunction> func);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatchRules_CoreMapToListFunctionApplier)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatchRules")
