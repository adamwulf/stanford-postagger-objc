//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/tokensregex/SequenceMatcher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatcher")
#ifdef RESTRICT_EduStanfordNlpLingTokensregexSequenceMatcher
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatcher 0
#else
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatcher 1
#endif
#undef RESTRICT_EduStanfordNlpLingTokensregexSequenceMatcher
#ifdef INCLUDE_EduStanfordNlpLingTokensregexSequenceMatcher_GroupMatchReplacement
#define INCLUDE_EduStanfordNlpLingTokensregexSequenceMatcher_MatchReplacement 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexSequenceMatcher_NamedGroupMatchReplacement
#define INCLUDE_EduStanfordNlpLingTokensregexSequenceMatcher_MatchReplacement 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexSequenceMatcher_BasicMatchReplacement
#define INCLUDE_EduStanfordNlpLingTokensregexSequenceMatcher_MatchReplacement 1
#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatcher_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatcher || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatcher))
#define EduStanfordNlpLingTokensregexSequenceMatcher_

#define RESTRICT_EduStanfordNlpLingTokensregexBasicSequenceMatchResult 1
#define INCLUDE_EduStanfordNlpLingTokensregexBasicSequenceMatchResult 1
#include "edu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult.h"

@class EduStanfordNlpLingTokensregexSequenceMatchResult_MatchedGroupInfo;
@class EduStanfordNlpLingTokensregexSequenceMatcher_FindType;
@class EduStanfordNlpLingTokensregexSequenceMatcher_MatchedStates;
@class EduStanfordNlpLingTokensregexSequencePattern;
@protocol JavaLangIterable;
@protocol JavaUtilIterator;
@protocol JavaUtilList;
@protocol JavaUtilSet;

@interface EduStanfordNlpLingTokensregexSequenceMatcher : EduStanfordNlpLingTokensregexBasicSequenceMatchResult {
 @public
  jboolean includeEmptyMatches_;
  jboolean matchingCompleted_;
  jboolean matched_;
  jboolean matchWithResult_;
  jint nextMatchStart_;
  jint regionStart_;
  jint regionEnd_;
  EduStanfordNlpLingTokensregexSequenceMatcher_FindType *findType_;
  id<JavaUtilIterator> curMatchIter_;
  EduStanfordNlpLingTokensregexSequenceMatcher_MatchedStates *curMatchStates_;
  id<JavaUtilSet> prevMatchedSignatures_;
  jint branchLimit_;
}

#pragma mark Public

- (jint)endWithInt:(jint)group;

- (jboolean)find;

- (jboolean)findWithInt:(jint)start;

- (id<JavaLangIterable>)findAllNonOverlapping;

- (id)getWithInt:(jint)i;

- (EduStanfordNlpLingTokensregexSequenceMatcher_FindType *)getFindType;

- (EduStanfordNlpLingTokensregexSequenceMatchResult_MatchedGroupInfo *)groupInfoWithInt:(jint)group;

- (id)groupMatchResultWithInt:(jint)group
                      withInt:(jint)index;

- (id<JavaUtilList>)groupMatchResultsWithInt:(jint)group;

- (id<JavaUtilList>)groupNodesWithInt:(jint)group;

- (id)groupValueWithInt:(jint)group;

- (jboolean)isMatchWithResult;

- (jboolean)matches;

- (id)nodeMatchResultWithInt:(jint)index;

- (void)regionWithInt:(jint)start
              withInt:(jint)end;

- (jint)regionEnd;

- (jint)regionStart;

- (id<JavaUtilList>)replaceAllWithJavaUtilList:(id<JavaUtilList>)replacement;

- (id<JavaUtilList>)replaceAllExtendedWithJavaUtilList:(id<JavaUtilList>)replacement;

- (id<JavaUtilList>)replaceFirstWithJavaUtilList:(id<JavaUtilList>)replacement;

- (id<JavaUtilList>)replaceFirstExtendedWithJavaUtilList:(id<JavaUtilList>)replacement;

- (void)reset;

- (void)setBranchLimitWithInt:(jint)blimit;

- (void)setFindTypeWithEduStanfordNlpLingTokensregexSequenceMatcher_FindType:(EduStanfordNlpLingTokensregexSequenceMatcher_FindType *)findType;

- (void)setMatchWithResultWithBoolean:(jboolean)matchWithResult;

- (jint)startWithInt:(jint)group;

- (EduStanfordNlpLingTokensregexBasicSequenceMatchResult *)toBasicSequenceMatchResult;

#pragma mark Protected

- (instancetype)initWithEduStanfordNlpLingTokensregexSequencePattern:(EduStanfordNlpLingTokensregexSequencePattern *)pattern
                                                    withJavaUtilList:(id<JavaUtilList>)elements;

- (jboolean)findWithInt:(jint)start
            withBoolean:(jboolean)matchStart;

- (jboolean)find0WithInt:(jint)start
             withBoolean:(jboolean)matchStart;

- (jboolean)findMatchStartWithInt:(jint)start
                      withBoolean:(jboolean)matchAllTokens;

- (jboolean)findMatchStartBacktrackingWithInt:(jint)start
                                  withBoolean:(jboolean)matchAllTokens;

- (jboolean)findMatchStartNoBacktrackingWithInt:(jint)start
                                    withBoolean:(jboolean)matchAllTokens;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatcher)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatcher, findType_, EduStanfordNlpLingTokensregexSequenceMatcher_FindType *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatcher, curMatchIter_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatcher, curMatchStates_, EduStanfordNlpLingTokensregexSequenceMatcher_MatchedStates *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatcher, prevMatchedSignatures_, id<JavaUtilSet>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatcher_initWithEduStanfordNlpLingTokensregexSequencePattern_withJavaUtilList_(EduStanfordNlpLingTokensregexSequenceMatcher *self, EduStanfordNlpLingTokensregexSequencePattern *pattern, id<JavaUtilList> elements);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatcher *new_EduStanfordNlpLingTokensregexSequenceMatcher_initWithEduStanfordNlpLingTokensregexSequencePattern_withJavaUtilList_(EduStanfordNlpLingTokensregexSequencePattern *pattern, id<JavaUtilList> elements) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatcher *create_EduStanfordNlpLingTokensregexSequenceMatcher_initWithEduStanfordNlpLingTokensregexSequencePattern_withJavaUtilList_(EduStanfordNlpLingTokensregexSequencePattern *pattern, id<JavaUtilList> elements);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatcher)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatcher_FindType_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatcher || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatcher_FindType))
#define EduStanfordNlpLingTokensregexSequenceMatcher_FindType_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, EduStanfordNlpLingTokensregexSequenceMatcher_FindType_Enum) {
  EduStanfordNlpLingTokensregexSequenceMatcher_FindType_Enum_FIND_NONOVERLAPPING = 0,
  EduStanfordNlpLingTokensregexSequenceMatcher_FindType_Enum_FIND_ALL = 1,
};

@interface EduStanfordNlpLingTokensregexSequenceMatcher_FindType : JavaLangEnum < NSCopying >

#pragma mark Public

+ (EduStanfordNlpLingTokensregexSequenceMatcher_FindType *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatcher_FindType)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatcher_FindType *EduStanfordNlpLingTokensregexSequenceMatcher_FindType_values_[];

inline EduStanfordNlpLingTokensregexSequenceMatcher_FindType *EduStanfordNlpLingTokensregexSequenceMatcher_FindType_get_FIND_NONOVERLAPPING();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpLingTokensregexSequenceMatcher_FindType, FIND_NONOVERLAPPING)

inline EduStanfordNlpLingTokensregexSequenceMatcher_FindType *EduStanfordNlpLingTokensregexSequenceMatcher_FindType_get_FIND_ALL();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpLingTokensregexSequenceMatcher_FindType, FIND_ALL)

FOUNDATION_EXPORT IOSObjectArray *EduStanfordNlpLingTokensregexSequenceMatcher_FindType_values();

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatcher_FindType *EduStanfordNlpLingTokensregexSequenceMatcher_FindType_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatcher_FindType *EduStanfordNlpLingTokensregexSequenceMatcher_FindType_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatcher_FindType)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatcher_MatchReplacement_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatcher || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatcher_MatchReplacement))
#define EduStanfordNlpLingTokensregexSequenceMatcher_MatchReplacement_

@protocol EduStanfordNlpLingTokensregexSequenceMatchResult;
@protocol JavaUtilList;

@protocol EduStanfordNlpLingTokensregexSequenceMatcher_MatchReplacement < JavaObject >

- (void)appendWithEduStanfordNlpLingTokensregexSequenceMatchResult:(id<EduStanfordNlpLingTokensregexSequenceMatchResult>)match
                                                  withJavaUtilList:(id<JavaUtilList>)list;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatcher_MatchReplacement)

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatcher_MatchReplacement)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatcher_BasicMatchReplacement_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatcher || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatcher_BasicMatchReplacement))
#define EduStanfordNlpLingTokensregexSequenceMatcher_BasicMatchReplacement_

@class IOSObjectArray;
@protocol EduStanfordNlpLingTokensregexSequenceMatchResult;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexSequenceMatcher_BasicMatchReplacement : NSObject < EduStanfordNlpLingTokensregexSequenceMatcher_MatchReplacement > {
 @public
  id<JavaUtilList> replacement_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)replacement;

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)replacement;

- (void)appendWithEduStanfordNlpLingTokensregexSequenceMatchResult:(id<EduStanfordNlpLingTokensregexSequenceMatchResult>)match
                                                  withJavaUtilList:(id<JavaUtilList>)list;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatcher_BasicMatchReplacement)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatcher_BasicMatchReplacement, replacement_, id<JavaUtilList>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatcher_BasicMatchReplacement_initWithNSObjectArray_(EduStanfordNlpLingTokensregexSequenceMatcher_BasicMatchReplacement *self, IOSObjectArray *replacement);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatcher_BasicMatchReplacement *new_EduStanfordNlpLingTokensregexSequenceMatcher_BasicMatchReplacement_initWithNSObjectArray_(IOSObjectArray *replacement) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatcher_BasicMatchReplacement *create_EduStanfordNlpLingTokensregexSequenceMatcher_BasicMatchReplacement_initWithNSObjectArray_(IOSObjectArray *replacement);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatcher_BasicMatchReplacement_initWithJavaUtilList_(EduStanfordNlpLingTokensregexSequenceMatcher_BasicMatchReplacement *self, id<JavaUtilList> replacement);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatcher_BasicMatchReplacement *new_EduStanfordNlpLingTokensregexSequenceMatcher_BasicMatchReplacement_initWithJavaUtilList_(id<JavaUtilList> replacement) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatcher_BasicMatchReplacement *create_EduStanfordNlpLingTokensregexSequenceMatcher_BasicMatchReplacement_initWithJavaUtilList_(id<JavaUtilList> replacement);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatcher_BasicMatchReplacement)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatcher_NamedGroupMatchReplacement_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatcher || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatcher_NamedGroupMatchReplacement))
#define EduStanfordNlpLingTokensregexSequenceMatcher_NamedGroupMatchReplacement_

@protocol EduStanfordNlpLingTokensregexSequenceMatchResult;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexSequenceMatcher_NamedGroupMatchReplacement : NSObject < EduStanfordNlpLingTokensregexSequenceMatcher_MatchReplacement > {
 @public
  NSString *groupName_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)groupName;

- (void)appendWithEduStanfordNlpLingTokensregexSequenceMatchResult:(id<EduStanfordNlpLingTokensregexSequenceMatchResult>)match
                                                  withJavaUtilList:(id<JavaUtilList>)list;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatcher_NamedGroupMatchReplacement)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatcher_NamedGroupMatchReplacement, groupName_, NSString *)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatcher_NamedGroupMatchReplacement_initWithNSString_(EduStanfordNlpLingTokensregexSequenceMatcher_NamedGroupMatchReplacement *self, NSString *groupName);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatcher_NamedGroupMatchReplacement *new_EduStanfordNlpLingTokensregexSequenceMatcher_NamedGroupMatchReplacement_initWithNSString_(NSString *groupName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatcher_NamedGroupMatchReplacement *create_EduStanfordNlpLingTokensregexSequenceMatcher_NamedGroupMatchReplacement_initWithNSString_(NSString *groupName);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatcher_NamedGroupMatchReplacement)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatcher_GroupMatchReplacement_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatcher || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatcher_GroupMatchReplacement))
#define EduStanfordNlpLingTokensregexSequenceMatcher_GroupMatchReplacement_

@protocol EduStanfordNlpLingTokensregexSequenceMatchResult;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexSequenceMatcher_GroupMatchReplacement : NSObject < EduStanfordNlpLingTokensregexSequenceMatcher_MatchReplacement > {
 @public
  jint group_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)group;

- (void)appendWithEduStanfordNlpLingTokensregexSequenceMatchResult:(id<EduStanfordNlpLingTokensregexSequenceMatchResult>)match
                                                  withJavaUtilList:(id<JavaUtilList>)list;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatcher_GroupMatchReplacement)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatcher_GroupMatchReplacement_initWithInt_(EduStanfordNlpLingTokensregexSequenceMatcher_GroupMatchReplacement *self, jint group);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatcher_GroupMatchReplacement *new_EduStanfordNlpLingTokensregexSequenceMatcher_GroupMatchReplacement_initWithInt_(jint group) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatcher_GroupMatchReplacement *create_EduStanfordNlpLingTokensregexSequenceMatcher_GroupMatchReplacement_initWithInt_(jint group);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatcher_GroupMatchReplacement)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatcher_BranchState_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatcher || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatcher_BranchState))
#define EduStanfordNlpLingTokensregexSequenceMatcher_BranchState_

@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface EduStanfordNlpLingTokensregexSequenceMatcher_BranchState : NSObject {
 @public
  jint bid_;
  EduStanfordNlpLingTokensregexSequenceMatcher_BranchState *parent_;
  id<JavaUtilMap> matchedGroups_;
  id<JavaUtilMap> matchedResults_;
  id<JavaUtilMap> matchStateInfo_;
  id<JavaUtilSet> bidsToCollapse_;
  id<JavaUtilSet> collapsedBids_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)bid;

- (instancetype)initWithInt:(jint)bid
withEduStanfordNlpLingTokensregexSequenceMatcher_BranchState:(EduStanfordNlpLingTokensregexSequenceMatcher_BranchState *)parent;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatcher_BranchState)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatcher_BranchState, parent_, EduStanfordNlpLingTokensregexSequenceMatcher_BranchState *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatcher_BranchState, matchedGroups_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatcher_BranchState, matchedResults_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatcher_BranchState, matchStateInfo_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatcher_BranchState, bidsToCollapse_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatcher_BranchState, collapsedBids_, id<JavaUtilSet>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatcher_BranchState_initWithInt_(EduStanfordNlpLingTokensregexSequenceMatcher_BranchState *self, jint bid);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatcher_BranchState *new_EduStanfordNlpLingTokensregexSequenceMatcher_BranchState_initWithInt_(jint bid) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatcher_BranchState *create_EduStanfordNlpLingTokensregexSequenceMatcher_BranchState_initWithInt_(jint bid);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatcher_BranchState_initWithInt_withEduStanfordNlpLingTokensregexSequenceMatcher_BranchState_(EduStanfordNlpLingTokensregexSequenceMatcher_BranchState *self, jint bid, EduStanfordNlpLingTokensregexSequenceMatcher_BranchState *parent);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatcher_BranchState *new_EduStanfordNlpLingTokensregexSequenceMatcher_BranchState_initWithInt_withEduStanfordNlpLingTokensregexSequenceMatcher_BranchState_(jint bid, EduStanfordNlpLingTokensregexSequenceMatcher_BranchState *parent) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatcher_BranchState *create_EduStanfordNlpLingTokensregexSequenceMatcher_BranchState_initWithInt_withEduStanfordNlpLingTokensregexSequenceMatcher_BranchState_(jint bid, EduStanfordNlpLingTokensregexSequenceMatcher_BranchState *parent);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatcher_BranchState)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatcher_BranchStates_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatcher || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatcher_BranchStates))
#define EduStanfordNlpLingTokensregexSequenceMatcher_BranchStates_

@class EduStanfordNlpLingTokensregexBasicSequenceMatchResult_MatchedGroup;
@class EduStanfordNlpLingTokensregexSequenceMatcher_BranchState;
@class EduStanfordNlpLingTokensregexSequencePattern_State;
@class EduStanfordNlpUtilHashIndex;
@class IOSIntArray;
@protocol EduStanfordNlpUtilHasInterval;
@protocol JavaUtilCollection;
@protocol JavaUtilMap;

@interface EduStanfordNlpLingTokensregexSequenceMatcher_BranchStates : NSObject {
 @public
  EduStanfordNlpUtilHashIndex *bidIndex_;
  id<JavaUtilMap> branchStates_;
  id<JavaUtilCollection> activeMatchedStates_;
}

#pragma mark Protected

- (void)addBidsToCollapseWithInt:(jint)bid
                    withIntArray:(IOSIntArray *)bids;

- (void)clearGroupStartWithInt:(jint)bid
                       withInt:(jint)captureGroupId;

- (void)clearMatchedCountWithInt:(jint)bid
withEduStanfordNlpLingTokensregexSequencePattern_State:(EduStanfordNlpLingTokensregexSequencePattern_State *)node;

- (jint)endMatchedCountIncWithInt:(jint)bid
withEduStanfordNlpLingTokensregexSequencePattern_State:(EduStanfordNlpLingTokensregexSequencePattern_State *)node;

- (jint)getBidWithInt:(jint)parent
              withInt:(jint)child;

- (jint)getBranchIdWithInt:(jint)bid
                   withInt:(jint)nextBranchIndex
                   withInt:(jint)nextTotal;

- (EduStanfordNlpLingTokensregexSequenceMatcher_BranchState *)getBranchStateWithInt:(jint)bid;

- (EduStanfordNlpLingTokensregexSequenceMatcher_BranchState *)getBranchStateWithInt:(jint)bid
                                                                        withBoolean:(jboolean)add;

- (EduStanfordNlpLingTokensregexBasicSequenceMatchResult_MatchedGroup *)getMatchedGroupWithInt:(jint)bid
                                                                                       withInt:(jint)groupId;

- (id<JavaUtilMap>)getMatchedGroupsWithInt:(jint)bid
                               withBoolean:(jboolean)add;

- (id<EduStanfordNlpUtilHasInterval>)getMatchedIntervalWithInt:(jint)bid
        withEduStanfordNlpLingTokensregexSequencePattern_State:(EduStanfordNlpLingTokensregexSequencePattern_State *)node;

- (id)getMatchedResultWithInt:(jint)bid
                      withInt:(jint)index;

- (id<JavaUtilMap>)getMatchedResultsWithInt:(jint)bid
                                withBoolean:(jboolean)add;

- (id<JavaUtilMap>)getMatchStateInfoWithInt:(jint)bid
                                withBoolean:(jboolean)add;

- (id)getMatchStateInfoWithInt:(jint)bid
withEduStanfordNlpLingTokensregexSequencePattern_State:(EduStanfordNlpLingTokensregexSequencePattern_State *)node;

- (jint)newBidWithInt:(jint)parent
              withInt:(jint)child OBJC_METHOD_FAMILY_NONE;

- (void)removeMatchStateInfoWithInt:(jint)bid
withEduStanfordNlpLingTokensregexSequencePattern_State:(EduStanfordNlpLingTokensregexSequencePattern_State *)node;

- (void)setGroupEndWithInt:(jint)bid
                   withInt:(jint)captureGroupId
                   withInt:(jint)curPosition
                    withId:(id)value;

- (void)setGroupStartWithInt:(jint)bid
                     withInt:(jint)captureGroupId
                     withInt:(jint)curPosition;

- (void)setMatchedIntervalWithInt:(jint)bid
withEduStanfordNlpLingTokensregexSequencePattern_State:(EduStanfordNlpLingTokensregexSequencePattern_State *)node
withEduStanfordNlpUtilHasInterval:(id<EduStanfordNlpUtilHasInterval>)interval;

- (void)setMatchedResultWithInt:(jint)bid
                        withInt:(jint)index
                         withId:(id)obj;

- (void)setMatchStateInfoWithInt:(jint)bid
withEduStanfordNlpLingTokensregexSequencePattern_State:(EduStanfordNlpLingTokensregexSequencePattern_State *)node
                          withId:(id)obj;

- (jint)size;

- (void)startMatchedCountDecWithInt:(jint)bid
withEduStanfordNlpLingTokensregexSequencePattern_State:(EduStanfordNlpLingTokensregexSequencePattern_State *)node;

- (void)startMatchedCountIncWithInt:(jint)bid
withEduStanfordNlpLingTokensregexSequencePattern_State:(EduStanfordNlpLingTokensregexSequencePattern_State *)node;

- (void)startMatchedCountIncWithInt:(jint)bid
withEduStanfordNlpLingTokensregexSequencePattern_State:(EduStanfordNlpLingTokensregexSequencePattern_State *)node
                            withInt:(jint)initialValue
                            withInt:(jint)delta;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatcher_BranchStates)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatcher_BranchStates, bidIndex_, EduStanfordNlpUtilHashIndex *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatcher_BranchStates, branchStates_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatcher_BranchStates, activeMatchedStates_, id<JavaUtilCollection>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatcher_BranchStates_init(EduStanfordNlpLingTokensregexSequenceMatcher_BranchStates *self);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatcher_BranchStates *new_EduStanfordNlpLingTokensregexSequenceMatcher_BranchStates_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatcher_BranchStates *create_EduStanfordNlpLingTokensregexSequenceMatcher_BranchStates_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatcher_BranchStates)

#endif

#if !defined (EduStanfordNlpLingTokensregexSequenceMatcher_MatchedStates_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatcher || defined(INCLUDE_EduStanfordNlpLingTokensregexSequenceMatcher_MatchedStates))
#define EduStanfordNlpLingTokensregexSequenceMatcher_MatchedStates_

@class EduStanfordNlpLingTokensregexSequenceMatcher;
@class EduStanfordNlpLingTokensregexSequenceMatcher_BranchStates;
@class EduStanfordNlpLingTokensregexSequencePattern_State;
@protocol JavaUtilCollection;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexSequenceMatcher_MatchedStates : NSObject {
 @public
  EduStanfordNlpLingTokensregexSequenceMatcher *matcher_;
  EduStanfordNlpLingTokensregexSequenceMatcher_BranchStates *branchStates_;
  id<JavaUtilList> oldStates_;
  id<JavaUtilList> states_;
  jint curPosition_;
}

#pragma mark Protected

- (instancetype)initWithEduStanfordNlpLingTokensregexSequenceMatcher:(EduStanfordNlpLingTokensregexSequenceMatcher *)matcher
              withEduStanfordNlpLingTokensregexSequencePattern_State:(EduStanfordNlpLingTokensregexSequencePattern_State *)state;

- (void)addStateWithInt:(jint)bid
withEduStanfordNlpLingTokensregexSequencePattern_State:(EduStanfordNlpLingTokensregexSequencePattern_State *)state;

- (void)addStatesWithInt:(jint)bid
  withJavaUtilCollection:(id<JavaUtilCollection>)newStates;

- (jint)branchSize;

- (void)clearGroupStartWithInt:(jint)bid
                       withInt:(jint)captureGroupId;

- (jint)compareMatchesWithInt:(jint)bid1
                      withInt:(jint)bid2;

- (id<JavaUtilList>)elements;

- (id)get;

- (EduStanfordNlpLingTokensregexSequenceMatcher_BranchStates *)getBranchStates;

- (void)setGroupEndWithInt:(jint)bid
                   withInt:(jint)captureGroupId
                   withInt:(jint)position
                    withId:(id)value;

- (void)setGroupEndWithInt:(jint)bid
                   withInt:(jint)captureGroupId
                    withId:(id)value;

- (void)setGroupStartWithInt:(jint)bid
                     withInt:(jint)captureGroupId;

- (jint)size;

- (EduStanfordNlpLingTokensregexSequenceMatcher_MatchedStates *)splitWithInt:(jint)branchLimit;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatcher_MatchedStates)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatcher_MatchedStates, matcher_, EduStanfordNlpLingTokensregexSequenceMatcher *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatcher_MatchedStates, branchStates_, EduStanfordNlpLingTokensregexSequenceMatcher_BranchStates *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatcher_MatchedStates, oldStates_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexSequenceMatcher_MatchedStates, states_, id<JavaUtilList>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexSequenceMatcher_MatchedStates_initWithEduStanfordNlpLingTokensregexSequenceMatcher_withEduStanfordNlpLingTokensregexSequencePattern_State_(EduStanfordNlpLingTokensregexSequenceMatcher_MatchedStates *self, EduStanfordNlpLingTokensregexSequenceMatcher *matcher, EduStanfordNlpLingTokensregexSequencePattern_State *state);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatcher_MatchedStates *new_EduStanfordNlpLingTokensregexSequenceMatcher_MatchedStates_initWithEduStanfordNlpLingTokensregexSequenceMatcher_withEduStanfordNlpLingTokensregexSequencePattern_State_(EduStanfordNlpLingTokensregexSequenceMatcher *matcher, EduStanfordNlpLingTokensregexSequencePattern_State *state) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexSequenceMatcher_MatchedStates *create_EduStanfordNlpLingTokensregexSequenceMatcher_MatchedStates_initWithEduStanfordNlpLingTokensregexSequenceMatcher_withEduStanfordNlpLingTokensregexSequencePattern_State_(EduStanfordNlpLingTokensregexSequenceMatcher *matcher, EduStanfordNlpLingTokensregexSequencePattern_State *state);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexSequenceMatcher_MatchedStates)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexSequenceMatcher")
