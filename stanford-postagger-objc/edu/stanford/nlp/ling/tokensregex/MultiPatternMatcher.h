//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/tokensregex/MultiPatternMatcher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexMultiPatternMatcher")
#ifdef RESTRICT_EduStanfordNlpLingTokensregexMultiPatternMatcher
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexMultiPatternMatcher 0
#else
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexMultiPatternMatcher 1
#endif
#undef RESTRICT_EduStanfordNlpLingTokensregexMultiPatternMatcher
#ifdef INCLUDE_EduStanfordNlpLingTokensregexMultiPatternMatcher_BasicSequencePatternTrigger
#define INCLUDE_EduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger 1
#endif

#if !defined (EduStanfordNlpLingTokensregexMultiPatternMatcher_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexMultiPatternMatcher || defined(INCLUDE_EduStanfordNlpLingTokensregexMultiPatternMatcher))
#define EduStanfordNlpLingTokensregexMultiPatternMatcher_

@class EduStanfordNlpLingTokensregexSequenceMatcher_FindType;
@class IOSObjectArray;
@protocol EduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger;
@protocol JavaLangIterable;
@protocol JavaUtilCollection;
@protocol JavaUtilComparator;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexMultiPatternMatcher : NSObject {
 @public
  id<JavaUtilCollection> patterns_;
  id<EduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger> patternTrigger_;
  jboolean matchWithResult_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)patterns;

- (instancetype)initWithEduStanfordNlpLingTokensregexSequencePatternArray:(IOSObjectArray *)patterns;

- (instancetype)initWithEduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger:(id<EduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger>)patternTrigger
                                                                         withJavaUtilCollection:(id<JavaUtilCollection>)patterns;

- (instancetype)initWithEduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger:(id<EduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger>)patternTrigger
                                          withEduStanfordNlpLingTokensregexSequencePatternArray:(IOSObjectArray *)patterns;

- (id<JavaUtilList>)findWithJavaUtilList:(id<JavaUtilList>)elements
withEduStanfordNlpLingTokensregexSequenceMatcher_FindType:(EduStanfordNlpLingTokensregexSequenceMatcher_FindType *)findType;

- (id<JavaLangIterable>)findAllNonOverlappingMatchesPerPatternWithJavaUtilList:(id<JavaUtilList>)elements;

- (id<JavaUtilList>)findNonOverlappingWithJavaUtilList:(id<JavaUtilList>)elements;

- (id<JavaUtilList>)findNonOverlappingWithJavaUtilList:(id<JavaUtilList>)elements
                                withJavaUtilComparator:(id<JavaUtilComparator>)cmp;

- (id<JavaUtilList>)findNonOverlappingMaxScoreWithJavaUtilList:(id<JavaUtilList>)elements;

- (id<JavaUtilList>)findNonOverlappingMaxScoreWithJavaUtilList:(id<JavaUtilList>)elements
                                  withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)scorer;

- (id<JavaUtilCollection>)getTriggeredPatternsWithJavaUtilList:(id<JavaUtilList>)elements;

- (jboolean)isMatchWithResult;

- (void)setMatchWithResultWithBoolean:(jboolean)matchWithResult;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexMultiPatternMatcher)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexMultiPatternMatcher, patterns_, id<JavaUtilCollection>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexMultiPatternMatcher, patternTrigger_, id<EduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexMultiPatternMatcher_initWithEduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger_withJavaUtilCollection_(EduStanfordNlpLingTokensregexMultiPatternMatcher *self, id<EduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger> patternTrigger, id<JavaUtilCollection> patterns);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexMultiPatternMatcher *new_EduStanfordNlpLingTokensregexMultiPatternMatcher_initWithEduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger_withJavaUtilCollection_(id<EduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger> patternTrigger, id<JavaUtilCollection> patterns) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexMultiPatternMatcher *create_EduStanfordNlpLingTokensregexMultiPatternMatcher_initWithEduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger_withJavaUtilCollection_(id<EduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger> patternTrigger, id<JavaUtilCollection> patterns);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexMultiPatternMatcher_initWithEduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger_withEduStanfordNlpLingTokensregexSequencePatternArray_(EduStanfordNlpLingTokensregexMultiPatternMatcher *self, id<EduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger> patternTrigger, IOSObjectArray *patterns);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexMultiPatternMatcher *new_EduStanfordNlpLingTokensregexMultiPatternMatcher_initWithEduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger_withEduStanfordNlpLingTokensregexSequencePatternArray_(id<EduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger> patternTrigger, IOSObjectArray *patterns) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexMultiPatternMatcher *create_EduStanfordNlpLingTokensregexMultiPatternMatcher_initWithEduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger_withEduStanfordNlpLingTokensregexSequencePatternArray_(id<EduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger> patternTrigger, IOSObjectArray *patterns);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexMultiPatternMatcher_initWithJavaUtilCollection_(EduStanfordNlpLingTokensregexMultiPatternMatcher *self, id<JavaUtilCollection> patterns);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexMultiPatternMatcher *new_EduStanfordNlpLingTokensregexMultiPatternMatcher_initWithJavaUtilCollection_(id<JavaUtilCollection> patterns) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexMultiPatternMatcher *create_EduStanfordNlpLingTokensregexMultiPatternMatcher_initWithJavaUtilCollection_(id<JavaUtilCollection> patterns);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexMultiPatternMatcher_initWithEduStanfordNlpLingTokensregexSequencePatternArray_(EduStanfordNlpLingTokensregexMultiPatternMatcher *self, IOSObjectArray *patterns);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexMultiPatternMatcher *new_EduStanfordNlpLingTokensregexMultiPatternMatcher_initWithEduStanfordNlpLingTokensregexSequencePatternArray_(IOSObjectArray *patterns) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexMultiPatternMatcher *create_EduStanfordNlpLingTokensregexMultiPatternMatcher_initWithEduStanfordNlpLingTokensregexSequencePatternArray_(IOSObjectArray *patterns);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexMultiPatternMatcher)

#endif

#if !defined (EduStanfordNlpLingTokensregexMultiPatternMatcher_NodePatternTrigger_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexMultiPatternMatcher || defined(INCLUDE_EduStanfordNlpLingTokensregexMultiPatternMatcher_NodePatternTrigger))
#define EduStanfordNlpLingTokensregexMultiPatternMatcher_NodePatternTrigger_

#define RESTRICT_JavaUtilFunctionFunction 1
#define INCLUDE_JavaUtilFunctionFunction 1
#include "java/util/function/Function.h"

@protocol JavaUtilCollection;

@protocol EduStanfordNlpLingTokensregexMultiPatternMatcher_NodePatternTrigger < JavaUtilFunctionFunction, JavaObject >

- (id<JavaUtilCollection>)applyWithId:(id)arg0;

@end

@interface EduStanfordNlpLingTokensregexMultiPatternMatcher_NodePatternTrigger : NSObject < EduStanfordNlpLingTokensregexMultiPatternMatcher_NodePatternTrigger >

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexMultiPatternMatcher_NodePatternTrigger)

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexMultiPatternMatcher_NodePatternTrigger)

#endif

#if !defined (EduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexMultiPatternMatcher || defined(INCLUDE_EduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger))
#define EduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger_

#define RESTRICT_JavaUtilFunctionFunction 1
#define INCLUDE_JavaUtilFunctionFunction 1
#include "java/util/function/Function.h"

@protocol JavaUtilCollection;
@protocol JavaUtilList;

@protocol EduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger < JavaUtilFunctionFunction, JavaObject >

- (id<JavaUtilCollection>)applyWithId:(id<JavaUtilList>)arg0;

@end

@interface EduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger : NSObject < EduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger >

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger)

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger)

#endif

#if !defined (EduStanfordNlpLingTokensregexMultiPatternMatcher_BasicSequencePatternTrigger_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexMultiPatternMatcher || defined(INCLUDE_EduStanfordNlpLingTokensregexMultiPatternMatcher_BasicSequencePatternTrigger))
#define EduStanfordNlpLingTokensregexMultiPatternMatcher_BasicSequencePatternTrigger_

@protocol EduStanfordNlpLingTokensregexMultiPatternMatcher_NodePatternTrigger;
@protocol JavaUtilCollection;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexMultiPatternMatcher_BasicSequencePatternTrigger : NSObject < EduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger > {
 @public
  id<EduStanfordNlpLingTokensregexMultiPatternMatcher_NodePatternTrigger> trigger_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexMultiPatternMatcher_NodePatternTrigger:(id<EduStanfordNlpLingTokensregexMultiPatternMatcher_NodePatternTrigger>)trigger;

- (id<JavaUtilCollection>)applyWithId:(id<JavaUtilList>)elements;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexMultiPatternMatcher_BasicSequencePatternTrigger)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexMultiPatternMatcher_BasicSequencePatternTrigger, trigger_, id<EduStanfordNlpLingTokensregexMultiPatternMatcher_NodePatternTrigger>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexMultiPatternMatcher_BasicSequencePatternTrigger_initWithEduStanfordNlpLingTokensregexMultiPatternMatcher_NodePatternTrigger_(EduStanfordNlpLingTokensregexMultiPatternMatcher_BasicSequencePatternTrigger *self, id<EduStanfordNlpLingTokensregexMultiPatternMatcher_NodePatternTrigger> trigger);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexMultiPatternMatcher_BasicSequencePatternTrigger *new_EduStanfordNlpLingTokensregexMultiPatternMatcher_BasicSequencePatternTrigger_initWithEduStanfordNlpLingTokensregexMultiPatternMatcher_NodePatternTrigger_(id<EduStanfordNlpLingTokensregexMultiPatternMatcher_NodePatternTrigger> trigger) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexMultiPatternMatcher_BasicSequencePatternTrigger *create_EduStanfordNlpLingTokensregexMultiPatternMatcher_BasicSequencePatternTrigger_initWithEduStanfordNlpLingTokensregexMultiPatternMatcher_NodePatternTrigger_(id<EduStanfordNlpLingTokensregexMultiPatternMatcher_NodePatternTrigger> trigger);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexMultiPatternMatcher_BasicSequencePatternTrigger)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexMultiPatternMatcher")
