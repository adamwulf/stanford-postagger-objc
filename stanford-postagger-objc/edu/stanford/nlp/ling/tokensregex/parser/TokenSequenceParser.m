//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/tokensregex/CoreMapExpressionExtractor.h"
#include "edu/stanford/nlp/ling/tokensregex/CoreMapExpressionNodePattern.h"
#include "edu/stanford/nlp/ling/tokensregex/CoreMapNodePattern.h"
#include "edu/stanford/nlp/ling/tokensregex/CoreMapSequenceMatchAction.h"
#include "edu/stanford/nlp/ling/tokensregex/Env.h"
#include "edu/stanford/nlp/ling/tokensregex/MultiCoreMapNodePattern.h"
#include "edu/stanford/nlp/ling/tokensregex/MultiNodePattern.h"
#include "edu/stanford/nlp/ling/tokensregex/NodePattern.h"
#include "edu/stanford/nlp/ling/tokensregex/SequenceMatchAction.h"
#include "edu/stanford/nlp/ling/tokensregex/SequenceMatchRules.h"
#include "edu/stanford/nlp/ling/tokensregex/SequencePattern.h"
#include "edu/stanford/nlp/ling/tokensregex/TokenSequencePattern.h"
#include "edu/stanford/nlp/ling/tokensregex/parser/ParseException.h"
#include "edu/stanford/nlp/ling/tokensregex/parser/SimpleCharStream.h"
#include "edu/stanford/nlp/ling/tokensregex/parser/Token.h"
#include "edu/stanford/nlp/ling/tokensregex/parser/TokenMgrError.h"
#include "edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParseException.h"
#include "edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser.h"
#include "edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserConstants.h"
#include "edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserTokenManager.h"
#include "edu/stanford/nlp/ling/tokensregex/types/AssignableExpression.h"
#include "edu/stanford/nlp/ling/tokensregex/types/Expression.h"
#include "edu/stanford/nlp/ling/tokensregex/types/Expressions.h"
#include "edu/stanford/nlp/ling/tokensregex/types/Value.h"
#include "edu/stanford/nlp/util/ArrayMap.h"
#include "edu/stanford/nlp/util/Pair.h"
#include "java/io/InputStream.h"
#include "java/io/Reader.h"
#include "java/io/StringReader.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/Double.h"
#include "java/lang/Error.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@class EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess;

@interface EduStanfordNlpLingTokensregexParserTokenSequenceParser () {
 @public
  jint jj_ntk_;
  EduStanfordNlpLingTokensregexParserToken *jj_scanpos_, *jj_lastpos_;
  jint jj_la_;
  jint jj_gen_;
  IOSIntArray *jj_la1_;
  IOSObjectArray *jj_2_rtns_;
  jboolean jj_rescan_;
  jint jj_gc_;
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *jj_ls_;
  id<JavaUtilList> jj_expentries_;
  IOSIntArray *jj_expentry_;
  jint jj_kind_;
  IOSIntArray *jj_lasttokens_;
  jint jj_endpos_;
}

+ (JavaLangInteger *)parseIntegerWithNSString:(NSString *)str;

+ (JavaLangLong *)parseLongIntegerWithNSString:(NSString *)str;

- (NSString *)parseQuotedStringWithNSString:(NSString *)str;

- (void)appendSpecialTokensWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
        withEduStanfordNlpLingTokensregexParserToken:(EduStanfordNlpLingTokensregexParserToken *)st;

- (NSString *)getStringFromTokensWithEduStanfordNlpLingTokensregexParserToken:(EduStanfordNlpLingTokensregexParserToken *)head
                                 withEduStanfordNlpLingTokensregexParserToken:(EduStanfordNlpLingTokensregexParserToken *)tail
                                                                  withBoolean:(jboolean)includeSpecial;

- (jboolean)jj_2_1WithInt:(jint)xla;

- (jboolean)jj_2_2WithInt:(jint)xla;

- (jboolean)jj_2_3WithInt:(jint)xla;

- (jboolean)jj_2_4WithInt:(jint)xla;

- (jboolean)jj_2_5WithInt:(jint)xla;

- (jboolean)jj_2_6WithInt:(jint)xla;

- (jboolean)jj_2_7WithInt:(jint)xla;

- (jboolean)jj_2_8WithInt:(jint)xla;

- (jboolean)jj_2_9WithInt:(jint)xla;

- (jboolean)jj_2_10WithInt:(jint)xla;

- (jboolean)jj_2_11WithInt:(jint)xla;

- (jboolean)jj_2_12WithInt:(jint)xla;

- (jboolean)jj_2_13WithInt:(jint)xla;

- (jboolean)jj_2_14WithInt:(jint)xla;

- (jboolean)jj_2_15WithInt:(jint)xla;

- (jboolean)jj_2_16WithInt:(jint)xla;

- (jboolean)jj_2_17WithInt:(jint)xla;

- (jboolean)jj_2_18WithInt:(jint)xla;

- (jboolean)jj_2_19WithInt:(jint)xla;

- (jboolean)jj_2_20WithInt:(jint)xla;

- (jboolean)jj_2_21WithInt:(jint)xla;

- (jboolean)jj_2_22WithInt:(jint)xla;

- (jboolean)jj_2_23WithInt:(jint)xla;

- (jboolean)jj_2_24WithInt:(jint)xla;

- (jboolean)jj_2_25WithInt:(jint)xla;

- (jboolean)jj_2_26WithInt:(jint)xla;

- (jboolean)jj_2_27WithInt:(jint)xla;

- (jboolean)jj_2_28WithInt:(jint)xla;

- (jboolean)jj_2_29WithInt:(jint)xla;

- (jboolean)jj_2_30WithInt:(jint)xla;

- (jboolean)jj_2_31WithInt:(jint)xla;

- (jboolean)jj_2_32WithInt:(jint)xla;

- (jboolean)jj_2_33WithInt:(jint)xla;

- (jboolean)jj_2_34WithInt:(jint)xla;

- (jboolean)jj_2_35WithInt:(jint)xla;

- (jboolean)jj_3_14;

- (jboolean)jj_3R_73;

- (jboolean)jj_3R_51;

- (jboolean)jj_3R_129;

- (jboolean)jj_3R_50;

- (jboolean)jj_3R_32;

- (jboolean)jj_3R_60;

- (jboolean)jj_3R_128;

- (jboolean)jj_3R_121;

- (jboolean)jj_3R_112;

- (jboolean)jj_3R_108;

- (jboolean)jj_3R_90;

- (jboolean)jj_3R_52;

- (jboolean)jj_3R_33;

- (jboolean)jj_3R_49;

- (jboolean)jj_3R_66;

- (jboolean)jj_3R_65;

- (jboolean)jj_3R_64;

- (jboolean)jj_3R_135;

- (jboolean)jj_3R_63;

- (jboolean)jj_3R_42;

- (jboolean)jj_3R_62;

- (jboolean)jj_3R_107;

- (jboolean)jj_3R_89;

- (jboolean)jj_3R_72;

- (jboolean)jj_3R_88;

- (jboolean)jj_3R_71;

- (jboolean)jj_3R_80;

- (jboolean)jj_3R_79;

- (jboolean)jj_3R_78;

- (jboolean)jj_3R_77;

- (jboolean)jj_3R_76;

- (jboolean)jj_3R_67;

- (jboolean)jj_3R_75;

- (jboolean)jj_3R_126;

- (jboolean)jj_3R_125;

- (jboolean)jj_3R_81;

- (jboolean)jj_3R_39;

- (jboolean)jj_3_28;

- (jboolean)jj_3R_124;

- (jboolean)jj_3_27;

- (jboolean)jj_3R_123;

- (jboolean)jj_3R_122;

- (jboolean)jj_3R_118;

- (jboolean)jj_3R_22;

- (jboolean)jj_3R_96;

- (jboolean)jj_3R_115;

- (jboolean)jj_3R_95;

- (jboolean)jj_3R_117;

- (jboolean)jj_3R_134;

- (jboolean)jj_3R_45;

- (jboolean)jj_3R_131;

- (jboolean)jj_3R_106;

- (jboolean)jj_3R_44;

- (jboolean)jj_3R_105;

- (jboolean)jj_3R_26;

- (jboolean)jj_3R_104;

- (jboolean)jj_3R_103;

- (jboolean)jj_3R_74;

- (jboolean)jj_3R_102;

- (jboolean)jj_3R_101;

- (jboolean)jj_3R_61;

- (jboolean)jj_3R_97;

- (jboolean)jj_3R_120;

- (jboolean)jj_3R_87;

- (jboolean)jj_3R_40;

- (jboolean)jj_3R_127;

- (jboolean)jj_3_35;

- (jboolean)jj_3R_30;

- (jboolean)jj_3R_133;

- (jboolean)jj_3R_119;

- (jboolean)jj_3_34;

- (jboolean)jj_3R_111;

- (jboolean)jj_3_13;

- (jboolean)jj_3_12;

- (jboolean)jj_3_11;

- (jboolean)jj_3_10;

- (jboolean)jj_3_9;

- (jboolean)jj_3_8;

- (jboolean)jj_3R_110;

- (jboolean)jj_3R_98;

- (jboolean)jj_3R_31;

- (jboolean)jj_3R_70;

- (jboolean)jj_3R_132;

- (jboolean)jj_3R_59;

- (jboolean)jj_3R_38;

- (jboolean)jj_3R_58;

- (jboolean)jj_3R_57;

- (jboolean)jj_3R_23;

- (jboolean)jj_3R_56;

- (jboolean)jj_3R_21;

- (jboolean)jj_3R_48;

- (jboolean)jj_3R_37;

- (jboolean)jj_3_7;

- (jboolean)jj_3_6;

- (jboolean)jj_3R_29;

- (jboolean)jj_3_5;

- (jboolean)jj_3R_100;

- (jboolean)jj_3R_20;

- (jboolean)jj_3_4;

- (jboolean)jj_3R_94;

- (jboolean)jj_3_33;

- (jboolean)jj_3R_86;

- (jboolean)jj_3R_85;

- (jboolean)jj_3_3;

- (jboolean)jj_3_2;

- (jboolean)jj_3_1;

- (jboolean)jj_3R_93;

- (jboolean)jj_3R_83;

- (jboolean)jj_3R_69;

- (jboolean)jj_3R_84;

- (jboolean)jj_3R_68;

- (jboolean)jj_3R_54;

- (jboolean)jj_3R_53;

- (jboolean)jj_3R_35;

- (jboolean)jj_3R_92;

- (jboolean)jj_3R_91;

- (jboolean)jj_3R_82;

- (jboolean)jj_3_32;

- (jboolean)jj_3_26;

- (jboolean)jj_3_31;

- (jboolean)jj_3_30;

- (jboolean)jj_3R_34;

- (jboolean)jj_3R_55;

- (jboolean)jj_3_25;

- (jboolean)jj_3R_99;

- (jboolean)jj_3R_47;

- (jboolean)jj_3R_130;

- (jboolean)jj_3R_28;

- (jboolean)jj_3R_36;

- (jboolean)jj_3R_46;

- (jboolean)jj_3R_27;

- (jboolean)jj_3_24;

- (jboolean)jj_3_23;

- (jboolean)jj_3_22;

- (jboolean)jj_3R_41;

- (jboolean)jj_3_21;

- (jboolean)jj_3R_24;

- (jboolean)jj_3_20;

- (jboolean)jj_3R_114;

- (jboolean)jj_3_19;

- (jboolean)jj_3_18;

- (jboolean)jj_3R_43;

- (jboolean)jj_3_17;

- (jboolean)jj_3R_113;

- (jboolean)jj_3R_25;

- (jboolean)jj_3R_116;

- (jboolean)jj_3_29;

- (jboolean)jj_3_16;

- (jboolean)jj_3R_109;

- (jboolean)jj_3_15;

+ (void)jj_la1_init_0;

+ (void)jj_la1_init_1;

- (EduStanfordNlpLingTokensregexParserToken *)jj_consume_tokenWithInt:(jint)kind;

- (jboolean)jj_scan_tokenWithInt:(jint)kind;

- (jint)jj_ntk;

- (void)jj_add_error_tokenWithInt:(jint)kind
                          withInt:(jint)pos;

- (void)jj_rescan_token;

- (void)jj_saveWithInt:(jint)index
               withInt:(jint)xla;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexParserTokenSequenceParser, jj_scanpos_, EduStanfordNlpLingTokensregexParserToken *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexParserTokenSequenceParser, jj_lastpos_, EduStanfordNlpLingTokensregexParserToken *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexParserTokenSequenceParser, jj_la1_, IOSIntArray *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexParserTokenSequenceParser, jj_2_rtns_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexParserTokenSequenceParser, jj_ls_, EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexParserTokenSequenceParser, jj_expentries_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexParserTokenSequenceParser, jj_expentry_, IOSIntArray *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexParserTokenSequenceParser, jj_lasttokens_, IOSIntArray *)

inline IOSIntArray *EduStanfordNlpLingTokensregexParserTokenSequenceParser_get_jj_la1_0();
inline IOSIntArray *EduStanfordNlpLingTokensregexParserTokenSequenceParser_set_jj_la1_0(IOSIntArray *value);
static IOSIntArray *EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_la1_0;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpLingTokensregexParserTokenSequenceParser, jj_la1_0, IOSIntArray *)

inline IOSIntArray *EduStanfordNlpLingTokensregexParserTokenSequenceParser_get_jj_la1_1();
inline IOSIntArray *EduStanfordNlpLingTokensregexParserTokenSequenceParser_set_jj_la1_1(IOSIntArray *value);
static IOSIntArray *EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_la1_1;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpLingTokensregexParserTokenSequenceParser, jj_la1_1, IOSIntArray *)

__attribute__((unused)) static JavaLangInteger *EduStanfordNlpLingTokensregexParserTokenSequenceParser_parseIntegerWithNSString_(NSString *str);

__attribute__((unused)) static JavaLangLong *EduStanfordNlpLingTokensregexParserTokenSequenceParser_parseLongIntegerWithNSString_(NSString *str);

__attribute__((unused)) static NSString *EduStanfordNlpLingTokensregexParserTokenSequenceParser_parseQuotedStringWithNSString_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, NSString *str);

__attribute__((unused)) static void EduStanfordNlpLingTokensregexParserTokenSequenceParser_appendSpecialTokensWithJavaLangStringBuilder_withEduStanfordNlpLingTokensregexParserToken_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, JavaLangStringBuilder *sb, EduStanfordNlpLingTokensregexParserToken *st);

__attribute__((unused)) static NSString *EduStanfordNlpLingTokensregexParserTokenSequenceParser_getStringFromTokensWithEduStanfordNlpLingTokensregexParserToken_withEduStanfordNlpLingTokensregexParserToken_withBoolean_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexParserToken *head, EduStanfordNlpLingTokensregexParserToken *tail, jboolean includeSpecial);

__attribute__((unused)) static id<JavaUtilList> EduStanfordNlpLingTokensregexParserTokenSequenceParser_RuleListWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexSequenceMatchRules_Rule> EduStanfordNlpLingTokensregexParserTokenSequenceParser_RuleWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexSequenceMatchRules_Rule> EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionExtractorRuleWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexSequenceMatchRules_Rule> EduStanfordNlpLingTokensregexParserTokenSequenceParser_AssignmentRuleWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexTypesAssignableExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_AssignableExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static jint EduStanfordNlpLingTokensregexParserTokenSequenceParser_Index(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_FunctionCallExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexTypesValue> EduStanfordNlpLingTokensregexParserTokenSequenceParser_ValueExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue *EduStanfordNlpLingTokensregexParserTokenSequenceParser_CompositeFieldValueWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<JavaUtilMap> EduStanfordNlpLingTokensregexParserTokenSequenceParser_FieldValueWithEduStanfordNlpLingTokensregexEnv_withJavaUtilMap_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env, id<JavaUtilMap> attributes);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexTypesValue> EduStanfordNlpLingTokensregexParserTokenSequenceParser_BasicValueWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexTypesAssignableExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_AssignableVarWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_VarOrRegexVarWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_MethodCallExpressionWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env, id<EduStanfordNlpLingTokensregexTypesExpression> parent);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexTypesAssignableExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_AssignableNestedVarExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_NestedVarExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_NestedFunctionCallExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_ListExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_ListExpression2WithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_BasicCondExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_CondGroupWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_CondExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_CaseExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static NSString *EduStanfordNlpLingTokensregexParserTokenSequenceParser_StringRegexWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexBasicWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexRepeatTimesWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env, EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *expr);

__attribute__((unused)) static EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexDisjConjWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexGroupWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static EduStanfordNlpLingTokensregexNodePattern *EduStanfordNlpLingTokensregexParserTokenSequenceParser_BracketedNodeWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqVarWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqBackRefWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static EduStanfordNlpLingTokensregexNodePattern *EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static EduStanfordNlpLingTokensregexNodePattern *EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeDisjConjWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static EduStanfordNlpLingTokensregexNodePattern *EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeGroupWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static EduStanfordNlpLingTokensregexNodePattern *EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeBasicWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static EduStanfordNlpLingTokensregexNodePattern *EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapNodeWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<JavaUtilMap> EduStanfordNlpLingTokensregexParserTokenSequenceParser_AttrValueWithEduStanfordNlpLingTokensregexEnv_withJavaUtilMap_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env, id<JavaUtilMap> attributes);

__attribute__((unused)) static EduStanfordNlpLingTokensregexNodePattern *EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapWordPatternWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static EduStanfordNlpLingTokensregexMultiNodePattern *EduStanfordNlpLingTokensregexParserTokenSequenceParser_MultiNodePatternWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static NSString *EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapVarValueWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static EduStanfordNlpLingTokensregexNodePattern *EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapVarNodePatternWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static EduStanfordNlpLingTokensregexNodePattern *EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapExprNodePatternWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static EduStanfordNlpUtilPair *EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexWithActionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexSequenceMatchAction> EduStanfordNlpLingTokensregexParserTokenSequenceParser_ActionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<EduStanfordNlpLingTokensregexSequenceMatchAction> EduStanfordNlpLingTokensregexParserTokenSequenceParser_AnnotateActionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<JavaUtilMap> EduStanfordNlpLingTokensregexParserTokenSequenceParser_SetAttrValuesWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env);

__attribute__((unused)) static id<JavaUtilMap> EduStanfordNlpLingTokensregexParserTokenSequenceParser_SetAttrValueWithEduStanfordNlpLingTokensregexEnv_withJavaUtilMap_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env, id<JavaUtilMap> attributes);

__attribute__((unused)) static EduStanfordNlpLingTokensregexParserToken *EduStanfordNlpLingTokensregexParserTokenSequenceParser_NumberToken(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static EduStanfordNlpLingTokensregexParserToken *EduStanfordNlpLingTokensregexParserTokenSequenceParser_IntegerToken(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static EduStanfordNlpLingTokensregexParserToken *EduStanfordNlpLingTokensregexParserTokenSequenceParser_CmpToken(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static EduStanfordNlpLingTokensregexParserToken *EduStanfordNlpLingTokensregexParserTokenSequenceParser_RelaxedStringToken(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static NSString *EduStanfordNlpLingTokensregexParserTokenSequenceParser_RelaxedString(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_1WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_2WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_3WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_4WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_5WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_6WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_7WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_8WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_9WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_10WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_11WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_12WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_13WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_14WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_15WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_16WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_17WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_18WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_19WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_20WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_21WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_22WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_23WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_24WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_25WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_26WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_27WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_28WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_29WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_30WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_31WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_32WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_33WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_34WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_35WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_14(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_73(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_51(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_129(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_50(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_32(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_60(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_128(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_121(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_112(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_108(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_90(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_52(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_33(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_49(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_66(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_65(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_64(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_135(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_63(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_42(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_62(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_107(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_89(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_72(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_88(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_71(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_80(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_79(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_78(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_77(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_76(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_67(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_75(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_126(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_125(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_81(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_39(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_28(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_124(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_27(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_123(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_122(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_118(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_22(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_96(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_115(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_95(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_117(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_134(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_45(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_131(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_106(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_44(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_105(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_26(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_104(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_103(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_74(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_102(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_101(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_61(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_97(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_120(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_87(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_40(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_127(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_35(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_30(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_133(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_119(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_34(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_111(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_13(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_12(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_11(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_10(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_9(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_8(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_110(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_98(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_31(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_70(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_132(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_59(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_38(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_58(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_57(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_23(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_56(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_21(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_48(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_37(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_7(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_6(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_29(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_5(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_100(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_20(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_4(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_94(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_33(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_86(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_85(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_3(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_2(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_1(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_93(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_83(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_69(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_84(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_68(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_54(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_53(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_35(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_92(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_91(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_82(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_32(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_26(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_31(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_30(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_34(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_55(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_25(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_99(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_47(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_130(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_28(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_36(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_46(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_27(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_24(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_23(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_22(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_41(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_21(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_24(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_20(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_114(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_19(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_18(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_43(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_17(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_113(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_25(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_116(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_29(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_16(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_109(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_15(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static void EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_la1_init_0();

__attribute__((unused)) static void EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_la1_init_1();

__attribute__((unused)) static EduStanfordNlpLingTokensregexParserToken *EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint kind);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint kind);

__attribute__((unused)) static jint EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static void EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_add_error_tokenWithInt_withInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint kind, jint pos);

__attribute__((unused)) static void EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_rescan_token(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self);

__attribute__((unused)) static void EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint index, jint xla);

@interface EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess : JavaLangError

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess_init(EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *self);

__attribute__((unused)) static EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *create_EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpLingTokensregexParserTokenSequenceParser)

@implementation EduStanfordNlpLingTokensregexParserTokenSequenceParser

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (EduStanfordNlpLingTokensregexCoreMapExpressionExtractor *)getExpressionExtractorWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                                       withJavaIoReader:(JavaIoReader *)r {
  @try {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser *p = new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithJavaIoReader_(r);
    id<JavaUtilList> rules = EduStanfordNlpLingTokensregexParserTokenSequenceParser_RuleListWithEduStanfordNlpLingTokensregexEnv_(p, env);
    return new_EduStanfordNlpLingTokensregexCoreMapExpressionExtractor_initWithEduStanfordNlpLingTokensregexEnv_withJavaUtilList_(env, rules);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenMgrError *error) {
    @throw new_EduStanfordNlpLingTokensregexParserTokenSequenceParseException_initWithNSString_(JreStrcat("$@", @"Parsing failed. Error: ", error));
  }
}

- (void)updateExpressionExtractorWithEduStanfordNlpLingTokensregexCoreMapExpressionExtractor:(EduStanfordNlpLingTokensregexCoreMapExpressionExtractor *)extractor
                                                                            withJavaIoReader:(JavaIoReader *)r {
  @try {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser *p = new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithJavaIoReader_(r);
    id<JavaUtilList> rules = EduStanfordNlpLingTokensregexParserTokenSequenceParser_RuleListWithEduStanfordNlpLingTokensregexEnv_(p, [((EduStanfordNlpLingTokensregexCoreMapExpressionExtractor *) nil_chk(extractor)) getEnv]);
    [extractor appendRulesWithJavaUtilList:rules];
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenMgrError *error) {
    @throw new_EduStanfordNlpLingTokensregexParserTokenSequenceParseException_initWithNSString_(JreStrcat("$@", @"Parsing failed. Error: ", error));
  }
}

- (EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *)parseSequenceWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                                   withNSString:(NSString *)s {
  @try {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser *p = new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithJavaIoReader_(new_JavaIoStringReader_initWithNSString_(s));
    return EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexWithEduStanfordNlpLingTokensregexEnv_(p, env);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenMgrError *error) {
    @throw new_EduStanfordNlpLingTokensregexParserTokenSequenceParseException_initWithNSString_(JreStrcat("$@", @"Parsing failed. Error: ", error));
  }
}

- (EduStanfordNlpUtilPair *)parseSequenceWithActionWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                           withNSString:(NSString *)s {
  @try {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser *p = new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithJavaIoReader_(new_JavaIoStringReader_initWithNSString_(s));
    return EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexWithActionWithEduStanfordNlpLingTokensregexEnv_(p, env);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenMgrError *error) {
    @throw new_EduStanfordNlpLingTokensregexParserTokenSequenceParseException_initWithNSString_(JreStrcat("$@", @"Parsing failed. Error: ", error));
  }
}

- (EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *)parseNodeWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                               withNSString:(NSString *)s {
  @try {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser *p = new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithJavaIoReader_(new_JavaIoStringReader_initWithNSString_(s));
    EduStanfordNlpLingTokensregexNodePattern *n = EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeWithEduStanfordNlpLingTokensregexEnv_(p, env);
    return new_EduStanfordNlpLingTokensregexSequencePattern_NodePatternExpr_initWithEduStanfordNlpLingTokensregexNodePattern_(n);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenMgrError *error) {
    @throw new_EduStanfordNlpLingTokensregexParserTokenSequenceParseException_initWithNSString_(JreStrcat("$@", @"Parsing failed. Error: ", error));
  }
}

+ (JavaLangInteger *)parseIntegerWithNSString:(NSString *)str {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_parseIntegerWithNSString_(str);
}

+ (JavaLangLong *)parseLongIntegerWithNSString:(NSString *)str {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_parseLongIntegerWithNSString_(str);
}

- (NSString *)parseQuotedStringWithNSString:(NSString *)str {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_parseQuotedStringWithNSString_(self, str);
}

- (void)appendSpecialTokensWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
        withEduStanfordNlpLingTokensregexParserToken:(EduStanfordNlpLingTokensregexParserToken *)st {
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_appendSpecialTokensWithJavaLangStringBuilder_withEduStanfordNlpLingTokensregexParserToken_(self, sb, st);
}

- (NSString *)getStringFromTokensWithEduStanfordNlpLingTokensregexParserToken:(EduStanfordNlpLingTokensregexParserToken *)head
                                 withEduStanfordNlpLingTokensregexParserToken:(EduStanfordNlpLingTokensregexParserToken *)tail
                                                                  withBoolean:(jboolean)includeSpecial {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_getStringFromTokensWithEduStanfordNlpLingTokensregexParserToken_withEduStanfordNlpLingTokensregexParserToken_withBoolean_(self, head, tail, includeSpecial);
}

- (id<JavaUtilList>)RuleListWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_RuleListWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<EduStanfordNlpLingTokensregexSequenceMatchRules_Rule>)RuleWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_RuleWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<EduStanfordNlpLingTokensregexSequenceMatchRules_Rule>)ExpressionExtractorRuleWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionExtractorRuleWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<EduStanfordNlpLingTokensregexSequenceMatchRules_Rule>)AssignmentRuleWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_AssignmentRuleWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<EduStanfordNlpLingTokensregexTypesAssignableExpression>)AssignableExpressionWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_AssignableExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<EduStanfordNlpLingTokensregexTypesExpression>)ExpressionWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (jint)Index {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_Index(self);
}

- (id<EduStanfordNlpLingTokensregexTypesExpression>)FunctionCallExpressionWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_FunctionCallExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)ValueExpressionWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_ValueExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue *)CompositeFieldValueWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_CompositeFieldValueWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<JavaUtilMap>)FieldValueWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                  withJavaUtilMap:(id<JavaUtilMap>)attributes {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_FieldValueWithEduStanfordNlpLingTokensregexEnv_withJavaUtilMap_(self, env, attributes);
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)BasicValueWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_BasicValueWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<EduStanfordNlpLingTokensregexTypesAssignableExpression>)AssignableVarWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_AssignableVarWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<EduStanfordNlpLingTokensregexTypesExpression>)VarOrRegexVarWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_VarOrRegexVarWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<EduStanfordNlpLingTokensregexTypesExpression>)MethodCallExpressionWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                            withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)parent {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_MethodCallExpressionWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesExpression_(self, env, parent);
}

- (id<EduStanfordNlpLingTokensregexTypesAssignableExpression>)AssignableNestedVarExpressionWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_AssignableNestedVarExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<EduStanfordNlpLingTokensregexTypesExpression>)NestedVarExpressionWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_NestedVarExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<EduStanfordNlpLingTokensregexTypesExpression>)NestedFunctionCallExpressionWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_NestedFunctionCallExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<EduStanfordNlpLingTokensregexTypesExpression>)ListExpressionWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_ListExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<EduStanfordNlpLingTokensregexTypesExpression>)ListExpression2WithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_ListExpression2WithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<EduStanfordNlpLingTokensregexTypesExpression>)BasicCondExpressionWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_BasicCondExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<EduStanfordNlpLingTokensregexTypesExpression>)CondGroupWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_CondGroupWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<EduStanfordNlpLingTokensregexTypesExpression>)CondExpressionWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_CondExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<EduStanfordNlpLingTokensregexTypesExpression>)CaseExpressionWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_CaseExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (NSString *)StringRegexWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_StringRegexWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *)SeqRegexWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id)StringNumberValueWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  EduStanfordNlpLingTokensregexParserToken *tok = nil;
  switch ((jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : jj_ntk_) {
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR:
    tok = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR);
    {
      return EduStanfordNlpLingTokensregexParserTokenSequenceParser_parseQuotedStringWithNSString_(self, ((EduStanfordNlpLingTokensregexParserToken *) nil_chk(tok))->image_);
    }
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_INT:
    tok = EduStanfordNlpLingTokensregexParserTokenSequenceParser_IntegerToken(self);
    {
      return EduStanfordNlpLingTokensregexParserTokenSequenceParser_parseIntegerWithNSString_(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(tok))->image_);
    }
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_LONGINT:
    tok = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_LONGINT);
    {
      return EduStanfordNlpLingTokensregexParserTokenSequenceParser_parseLongIntegerWithNSString_(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(tok))->image_);
    }
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REAL:
    tok = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REAL);
    {
      return JavaLangDouble_valueOfWithNSString_(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(tok))->image_);
    }
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(jj_la1_), 26) = jj_gen_;
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
  }
  @throw new_JavaLangError_initWithNSString_(@"Missing return statement in function");
}

- (EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *)SeqRegexBasicWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexBasicWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *)SeqRegexRepeatTimesWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                         withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr:(EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *)expr {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexRepeatTimesWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_(self, env, expr);
}

- (EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *)SeqRegexDisjWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  id<JavaUtilList> children = new_JavaUtilArrayList_init();
  EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *expr;
  expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexBasicWithEduStanfordNlpLingTokensregexEnv_(self, env);
  [children addWithId:expr];
  while (true) {
    switch ((jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : jj_ntk_) {
      case 37:
      case 45:
      ;
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(jj_la1_), 34) = jj_gen_;
      goto break_label_13;
    }
    switch ((jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : jj_ntk_) {
      case 45:
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 45);
      break;
      case 37:
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 37);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(jj_la1_), 35) = jj_gen_;
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
      @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
    }
    expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexBasicWithEduStanfordNlpLingTokensregexEnv_(self, env);
    [children addWithId:expr];
  }
  break_label_13: ;
  if ([children size] == 1) {
    {
      return [children getWithInt:0];
    }
  }
  else {
    {
      return new_EduStanfordNlpLingTokensregexSequencePattern_OrPatternExpr_initWithJavaUtilList_(children);
    }
  }
  @throw new_JavaLangError_initWithNSString_(@"Missing return statement in function");
}

- (EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *)SeqRegexDisjConjWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexDisjConjWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *)SeqRegexGroupWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexGroupWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (EduStanfordNlpLingTokensregexNodePattern *)BracketedNodeWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_BracketedNodeWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *)SeqVarWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqVarWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *)SeqBackRefWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqBackRefWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (EduStanfordNlpLingTokensregexNodePattern *)NodeWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (EduStanfordNlpLingTokensregexNodePattern *)NodeDisjWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  id<JavaUtilList> children = new_JavaUtilArrayList_init();
  EduStanfordNlpLingTokensregexNodePattern *child;
  child = EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeGroupWithEduStanfordNlpLingTokensregexEnv_(self, env);
  [children addWithId:child];
  while (true) {
    switch ((jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : jj_ntk_) {
      case 37:
      case 45:
      ;
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(jj_la1_), 42) = jj_gen_;
      goto break_label_15;
    }
    switch ((jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : jj_ntk_) {
      case 45:
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 45);
      break;
      case 37:
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 37);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(jj_la1_), 43) = jj_gen_;
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
      @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
    }
    child = EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeGroupWithEduStanfordNlpLingTokensregexEnv_(self, env);
    [children addWithId:child];
  }
  break_label_15: ;
  if ([children size] == 1) {
    return child;
  }
  else {
    return new_EduStanfordNlpLingTokensregexNodePattern_DisjNodePattern_initWithJavaUtilList_(children);
  }
  @throw new_JavaLangError_initWithNSString_(@"Missing return statement in function");
}

- (EduStanfordNlpLingTokensregexNodePattern *)NodeConjWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  EduStanfordNlpLingTokensregexNodePattern *child;
  id<JavaUtilList> children = new_JavaUtilArrayList_init();
  child = EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeGroupWithEduStanfordNlpLingTokensregexEnv_(self, env);
  [children addWithId:child];
  while (true) {
    switch ((jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : jj_ntk_) {
      case 36:
      case 46:
      ;
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(jj_la1_), 44) = jj_gen_;
      goto break_label_16;
    }
    switch ((jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : jj_ntk_) {
      case 46:
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 46);
      break;
      case 36:
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 36);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(jj_la1_), 45) = jj_gen_;
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
      @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
    }
    child = EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeGroupWithEduStanfordNlpLingTokensregexEnv_(self, env);
    [children addWithId:child];
  }
  break_label_16: ;
  if ([children size] == 1) {
    return child;
  }
  else {
    return new_EduStanfordNlpLingTokensregexNodePattern_ConjNodePattern_initWithJavaUtilList_(children);
  }
  @throw new_JavaLangError_initWithNSString_(@"Missing return statement in function");
}

- (EduStanfordNlpLingTokensregexNodePattern *)NodeDisjConjWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeDisjConjWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (EduStanfordNlpLingTokensregexNodePattern *)NodeGroupWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeGroupWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (EduStanfordNlpLingTokensregexNodePattern *)NodeBasicWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeBasicWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (EduStanfordNlpLingTokensregexNodePattern *)CoreMapNodeWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapNodeWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<JavaUtilMap>)AttrValueWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                 withJavaUtilMap:(id<JavaUtilMap>)attributes {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_AttrValueWithEduStanfordNlpLingTokensregexEnv_withJavaUtilMap_(self, env, attributes);
}

- (EduStanfordNlpLingTokensregexNodePattern *)CoreMapWordPatternWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapWordPatternWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (EduStanfordNlpLingTokensregexMultiNodePattern *)MultiNodePatternWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_MultiNodePatternWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (NSString *)CoreMapVarValueWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapVarValueWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (EduStanfordNlpLingTokensregexNodePattern *)CoreMapVarNodePatternWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapVarNodePatternWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (EduStanfordNlpLingTokensregexNodePattern *)CoreMapExprNodePatternWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapExprNodePatternWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (EduStanfordNlpUtilPair *)SeqRegexWithActionWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexWithActionWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<EduStanfordNlpLingTokensregexSequenceMatchAction>)ActionWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_ActionWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<EduStanfordNlpLingTokensregexSequenceMatchAction>)AnnotateActionWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_AnnotateActionWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<JavaUtilMap>)SetAttrValuesWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_SetAttrValuesWithEduStanfordNlpLingTokensregexEnv_(self, env);
}

- (id<JavaUtilMap>)SetAttrValueWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                    withJavaUtilMap:(id<JavaUtilMap>)attributes {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_SetAttrValueWithEduStanfordNlpLingTokensregexEnv_withJavaUtilMap_(self, env, attributes);
}

- (EduStanfordNlpLingTokensregexParserToken *)NumberToken {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_NumberToken(self);
}

- (EduStanfordNlpLingTokensregexParserToken *)IntegerToken {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_IntegerToken(self);
}

- (EduStanfordNlpLingTokensregexParserToken *)CmpToken {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_CmpToken(self);
}

- (EduStanfordNlpLingTokensregexParserToken *)RelaxedStringToken {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_RelaxedStringToken(self);
}

- (NSString *)RelaxedString {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_RelaxedString(self);
}

- (NSString *)RelaxedStringNoIdentifier {
  EduStanfordNlpLingTokensregexParserToken *value = nil;
  value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR);
  {
    return EduStanfordNlpLingTokensregexParserTokenSequenceParser_parseQuotedStringWithNSString_(self, ((EduStanfordNlpLingTokensregexParserToken *) nil_chk(value))->image_);
  }
}

- (jboolean)jj_2_1WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_1WithInt_(self, xla);
}

- (jboolean)jj_2_2WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_2WithInt_(self, xla);
}

- (jboolean)jj_2_3WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_3WithInt_(self, xla);
}

- (jboolean)jj_2_4WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_4WithInt_(self, xla);
}

- (jboolean)jj_2_5WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_5WithInt_(self, xla);
}

- (jboolean)jj_2_6WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_6WithInt_(self, xla);
}

- (jboolean)jj_2_7WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_7WithInt_(self, xla);
}

- (jboolean)jj_2_8WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_8WithInt_(self, xla);
}

- (jboolean)jj_2_9WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_9WithInt_(self, xla);
}

- (jboolean)jj_2_10WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_10WithInt_(self, xla);
}

- (jboolean)jj_2_11WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_11WithInt_(self, xla);
}

- (jboolean)jj_2_12WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_12WithInt_(self, xla);
}

- (jboolean)jj_2_13WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_13WithInt_(self, xla);
}

- (jboolean)jj_2_14WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_14WithInt_(self, xla);
}

- (jboolean)jj_2_15WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_15WithInt_(self, xla);
}

- (jboolean)jj_2_16WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_16WithInt_(self, xla);
}

- (jboolean)jj_2_17WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_17WithInt_(self, xla);
}

- (jboolean)jj_2_18WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_18WithInt_(self, xla);
}

- (jboolean)jj_2_19WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_19WithInt_(self, xla);
}

- (jboolean)jj_2_20WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_20WithInt_(self, xla);
}

- (jboolean)jj_2_21WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_21WithInt_(self, xla);
}

- (jboolean)jj_2_22WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_22WithInt_(self, xla);
}

- (jboolean)jj_2_23WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_23WithInt_(self, xla);
}

- (jboolean)jj_2_24WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_24WithInt_(self, xla);
}

- (jboolean)jj_2_25WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_25WithInt_(self, xla);
}

- (jboolean)jj_2_26WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_26WithInt_(self, xla);
}

- (jboolean)jj_2_27WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_27WithInt_(self, xla);
}

- (jboolean)jj_2_28WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_28WithInt_(self, xla);
}

- (jboolean)jj_2_29WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_29WithInt_(self, xla);
}

- (jboolean)jj_2_30WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_30WithInt_(self, xla);
}

- (jboolean)jj_2_31WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_31WithInt_(self, xla);
}

- (jboolean)jj_2_32WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_32WithInt_(self, xla);
}

- (jboolean)jj_2_33WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_33WithInt_(self, xla);
}

- (jboolean)jj_2_34WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_34WithInt_(self, xla);
}

- (jboolean)jj_2_35WithInt:(jint)xla {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_35WithInt_(self, xla);
}

- (jboolean)jj_3_14 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_14(self);
}

- (jboolean)jj_3R_73 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_73(self);
}

- (jboolean)jj_3R_51 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_51(self);
}

- (jboolean)jj_3R_129 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_129(self);
}

- (jboolean)jj_3R_50 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_50(self);
}

- (jboolean)jj_3R_32 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_32(self);
}

- (jboolean)jj_3R_60 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_60(self);
}

- (jboolean)jj_3R_128 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_128(self);
}

- (jboolean)jj_3R_121 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_121(self);
}

- (jboolean)jj_3R_112 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_112(self);
}

- (jboolean)jj_3R_108 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_108(self);
}

- (jboolean)jj_3R_90 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_90(self);
}

- (jboolean)jj_3R_52 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_52(self);
}

- (jboolean)jj_3R_33 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_33(self);
}

- (jboolean)jj_3R_49 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_49(self);
}

- (jboolean)jj_3R_66 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_66(self);
}

- (jboolean)jj_3R_65 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_65(self);
}

- (jboolean)jj_3R_64 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_64(self);
}

- (jboolean)jj_3R_135 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_135(self);
}

- (jboolean)jj_3R_63 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_63(self);
}

- (jboolean)jj_3R_42 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_42(self);
}

- (jboolean)jj_3R_62 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_62(self);
}

- (jboolean)jj_3R_107 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_107(self);
}

- (jboolean)jj_3R_89 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_89(self);
}

- (jboolean)jj_3R_72 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_72(self);
}

- (jboolean)jj_3R_88 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_88(self);
}

- (jboolean)jj_3R_71 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_71(self);
}

- (jboolean)jj_3R_80 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_80(self);
}

- (jboolean)jj_3R_79 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_79(self);
}

- (jboolean)jj_3R_78 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_78(self);
}

- (jboolean)jj_3R_77 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_77(self);
}

- (jboolean)jj_3R_76 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_76(self);
}

- (jboolean)jj_3R_67 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_67(self);
}

- (jboolean)jj_3R_75 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_75(self);
}

- (jboolean)jj_3R_126 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_126(self);
}

- (jboolean)jj_3R_125 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_125(self);
}

- (jboolean)jj_3R_81 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_81(self);
}

- (jboolean)jj_3R_39 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_39(self);
}

- (jboolean)jj_3_28 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_28(self);
}

- (jboolean)jj_3R_124 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_124(self);
}

- (jboolean)jj_3_27 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_27(self);
}

- (jboolean)jj_3R_123 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_123(self);
}

- (jboolean)jj_3R_122 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_122(self);
}

- (jboolean)jj_3R_118 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_118(self);
}

- (jboolean)jj_3R_22 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_22(self);
}

- (jboolean)jj_3R_96 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_96(self);
}

- (jboolean)jj_3R_115 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_115(self);
}

- (jboolean)jj_3R_95 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_95(self);
}

- (jboolean)jj_3R_117 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_117(self);
}

- (jboolean)jj_3R_134 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_134(self);
}

- (jboolean)jj_3R_45 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_45(self);
}

- (jboolean)jj_3R_131 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_131(self);
}

- (jboolean)jj_3R_106 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_106(self);
}

- (jboolean)jj_3R_44 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_44(self);
}

- (jboolean)jj_3R_105 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_105(self);
}

- (jboolean)jj_3R_26 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_26(self);
}

- (jboolean)jj_3R_104 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_104(self);
}

- (jboolean)jj_3R_103 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_103(self);
}

- (jboolean)jj_3R_74 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_74(self);
}

- (jboolean)jj_3R_102 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_102(self);
}

- (jboolean)jj_3R_101 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_101(self);
}

- (jboolean)jj_3R_61 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_61(self);
}

- (jboolean)jj_3R_97 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_97(self);
}

- (jboolean)jj_3R_120 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_120(self);
}

- (jboolean)jj_3R_87 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_87(self);
}

- (jboolean)jj_3R_40 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_40(self);
}

- (jboolean)jj_3R_127 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_127(self);
}

- (jboolean)jj_3_35 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_35(self);
}

- (jboolean)jj_3R_30 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_30(self);
}

- (jboolean)jj_3R_133 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_133(self);
}

- (jboolean)jj_3R_119 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_119(self);
}

- (jboolean)jj_3_34 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_34(self);
}

- (jboolean)jj_3R_111 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_111(self);
}

- (jboolean)jj_3_13 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_13(self);
}

- (jboolean)jj_3_12 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_12(self);
}

- (jboolean)jj_3_11 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_11(self);
}

- (jboolean)jj_3_10 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_10(self);
}

- (jboolean)jj_3_9 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_9(self);
}

- (jboolean)jj_3_8 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_8(self);
}

- (jboolean)jj_3R_110 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_110(self);
}

- (jboolean)jj_3R_98 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_98(self);
}

- (jboolean)jj_3R_31 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_31(self);
}

- (jboolean)jj_3R_70 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_70(self);
}

- (jboolean)jj_3R_132 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_132(self);
}

- (jboolean)jj_3R_59 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_59(self);
}

- (jboolean)jj_3R_38 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_38(self);
}

- (jboolean)jj_3R_58 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_58(self);
}

- (jboolean)jj_3R_57 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_57(self);
}

- (jboolean)jj_3R_23 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_23(self);
}

- (jboolean)jj_3R_56 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_56(self);
}

- (jboolean)jj_3R_21 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_21(self);
}

- (jboolean)jj_3R_48 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_48(self);
}

- (jboolean)jj_3R_37 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_37(self);
}

- (jboolean)jj_3_7 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_7(self);
}

- (jboolean)jj_3_6 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_6(self);
}

- (jboolean)jj_3R_29 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_29(self);
}

- (jboolean)jj_3_5 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_5(self);
}

- (jboolean)jj_3R_100 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_100(self);
}

- (jboolean)jj_3R_20 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_20(self);
}

- (jboolean)jj_3_4 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_4(self);
}

- (jboolean)jj_3R_94 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_94(self);
}

- (jboolean)jj_3_33 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_33(self);
}

- (jboolean)jj_3R_86 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_86(self);
}

- (jboolean)jj_3R_85 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_85(self);
}

- (jboolean)jj_3_3 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_3(self);
}

- (jboolean)jj_3_2 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_2(self);
}

- (jboolean)jj_3_1 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_1(self);
}

- (jboolean)jj_3R_93 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_93(self);
}

- (jboolean)jj_3R_83 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_83(self);
}

- (jboolean)jj_3R_69 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_69(self);
}

- (jboolean)jj_3R_84 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_84(self);
}

- (jboolean)jj_3R_68 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_68(self);
}

- (jboolean)jj_3R_54 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_54(self);
}

- (jboolean)jj_3R_53 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_53(self);
}

- (jboolean)jj_3R_35 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_35(self);
}

- (jboolean)jj_3R_92 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_92(self);
}

- (jboolean)jj_3R_91 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_91(self);
}

- (jboolean)jj_3R_82 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_82(self);
}

- (jboolean)jj_3_32 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_32(self);
}

- (jboolean)jj_3_26 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_26(self);
}

- (jboolean)jj_3_31 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_31(self);
}

- (jboolean)jj_3_30 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_30(self);
}

- (jboolean)jj_3R_34 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_34(self);
}

- (jboolean)jj_3R_55 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_55(self);
}

- (jboolean)jj_3_25 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_25(self);
}

- (jboolean)jj_3R_99 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_99(self);
}

- (jboolean)jj_3R_47 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_47(self);
}

- (jboolean)jj_3R_130 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_130(self);
}

- (jboolean)jj_3R_28 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_28(self);
}

- (jboolean)jj_3R_36 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_36(self);
}

- (jboolean)jj_3R_46 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_46(self);
}

- (jboolean)jj_3R_27 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_27(self);
}

- (jboolean)jj_3_24 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_24(self);
}

- (jboolean)jj_3_23 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_23(self);
}

- (jboolean)jj_3_22 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_22(self);
}

- (jboolean)jj_3R_41 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_41(self);
}

- (jboolean)jj_3_21 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_21(self);
}

- (jboolean)jj_3R_24 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_24(self);
}

- (jboolean)jj_3_20 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_20(self);
}

- (jboolean)jj_3R_114 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_114(self);
}

- (jboolean)jj_3_19 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_19(self);
}

- (jboolean)jj_3_18 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_18(self);
}

- (jboolean)jj_3R_43 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_43(self);
}

- (jboolean)jj_3_17 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_17(self);
}

- (jboolean)jj_3R_113 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_113(self);
}

- (jboolean)jj_3R_25 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_25(self);
}

- (jboolean)jj_3R_116 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_116(self);
}

- (jboolean)jj_3_29 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_29(self);
}

- (jboolean)jj_3_16 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_16(self);
}

- (jboolean)jj_3R_109 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_109(self);
}

- (jboolean)jj_3_15 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_15(self);
}

+ (void)jj_la1_init_0 {
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_la1_init_0();
}

+ (void)jj_la1_init_1 {
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_la1_init_1();
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)stream {
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithJavaIoInputStream_(self, stream);
  return self;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)stream
                             withNSString:(NSString *)encoding {
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithJavaIoInputStream_withNSString_(self, stream, encoding);
  return self;
}

- (void)ReInitWithJavaIoInputStream:(JavaIoInputStream *)stream {
  [self ReInitWithJavaIoInputStream:stream withNSString:nil];
}

- (void)ReInitWithJavaIoInputStream:(JavaIoInputStream *)stream
                       withNSString:(NSString *)encoding {
  @try {
    [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(jj_input_stream_)) ReInitWithJavaIoInputStream:stream withNSString:encoding withInt:1 withInt:1];
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
  [((EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *) nil_chk(token_source_)) ReInitWithEduStanfordNlpLingTokensregexParserSimpleCharStream:jj_input_stream_];
  token_ = new_EduStanfordNlpLingTokensregexParserToken_init();
  jj_ntk_ = -1;
  jj_gen_ = 0;
  for (jint i = 0; i < 71; i++) *IOSIntArray_GetRef(nil_chk(jj_la1_), i) = -1;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(jj_2_rtns_))->size_; i++) (void) IOSObjectArray_SetAndConsume(jj_2_rtns_, i, new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls_init());
}

- (instancetype)initWithJavaIoReader:(JavaIoReader *)stream {
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithJavaIoReader_(self, stream);
  return self;
}

- (void)ReInitWithJavaIoReader:(JavaIoReader *)stream {
  [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(jj_input_stream_)) ReInitWithJavaIoReader:stream withInt:1 withInt:1];
  [((EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *) nil_chk(token_source_)) ReInitWithEduStanfordNlpLingTokensregexParserSimpleCharStream:jj_input_stream_];
  token_ = new_EduStanfordNlpLingTokensregexParserToken_init();
  jj_ntk_ = -1;
  jj_gen_ = 0;
  for (jint i = 0; i < 71; i++) *IOSIntArray_GetRef(nil_chk(jj_la1_), i) = -1;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(jj_2_rtns_))->size_; i++) (void) IOSObjectArray_SetAndConsume(jj_2_rtns_, i, new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls_init());
}

- (instancetype)initWithEduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager:(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *)tm {
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithEduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_(self, tm);
  return self;
}

- (void)ReInitWithEduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager:(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *)tm {
  token_source_ = tm;
  token_ = new_EduStanfordNlpLingTokensregexParserToken_init();
  jj_ntk_ = -1;
  jj_gen_ = 0;
  for (jint i = 0; i < 71; i++) *IOSIntArray_GetRef(nil_chk(jj_la1_), i) = -1;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(jj_2_rtns_))->size_; i++) (void) IOSObjectArray_SetAndConsume(jj_2_rtns_, i, new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls_init());
}

- (EduStanfordNlpLingTokensregexParserToken *)jj_consume_tokenWithInt:(jint)kind {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, kind);
}

- (jboolean)jj_scan_tokenWithInt:(jint)kind {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, kind);
}

- (EduStanfordNlpLingTokensregexParserToken *)getNextToken {
  if (((EduStanfordNlpLingTokensregexParserToken *) nil_chk(token_))->next_ != nil) token_ = token_->next_;
  else token_ = token_->next_ = [((EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *) nil_chk(token_source_)) getNextToken];
  jj_ntk_ = -1;
  jj_gen_++;
  return token_;
}

- (EduStanfordNlpLingTokensregexParserToken *)getTokenWithInt:(jint)index {
  EduStanfordNlpLingTokensregexParserToken *t = token_;
  for (jint i = 0; i < index; i++) {
    if (((EduStanfordNlpLingTokensregexParserToken *) nil_chk(t))->next_ != nil) t = t->next_;
    else t = t->next_ = [((EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *) nil_chk(token_source_)) getNextToken];
  }
  return t;
}

- (jint)jj_ntk {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self);
}

- (void)jj_add_error_tokenWithInt:(jint)kind
                          withInt:(jint)pos {
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_add_error_tokenWithInt_withInt_(self, kind, pos);
}

- (EduStanfordNlpLingTokensregexParserParseException *)generateParseException {
  [((id<JavaUtilList>) nil_chk(jj_expentries_)) clear];
  IOSBooleanArray *la1tokens = [IOSBooleanArray newArrayWithLength:55];
  if (jj_kind_ >= 0) {
    *IOSBooleanArray_GetRef(la1tokens, jj_kind_) = true;
    jj_kind_ = -1;
  }
  for (jint i = 0; i < 71; i++) {
    if (IOSIntArray_Get(nil_chk(jj_la1_), i) == jj_gen_) {
      for (jint j = 0; j < 32; j++) {
        if ((IOSIntArray_Get(nil_chk(EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_la1_0), i) & (JreLShift32(1, j))) != 0) {
          *IOSBooleanArray_GetRef(la1tokens, j) = true;
        }
        if ((IOSIntArray_Get(nil_chk(EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_la1_1), i) & (JreLShift32(1, j))) != 0) {
          *IOSBooleanArray_GetRef(la1tokens, 32 + j) = true;
        }
      }
    }
  }
  for (jint i = 0; i < 55; i++) {
    if (IOSBooleanArray_Get(la1tokens, i)) {
      jj_expentry_ = [IOSIntArray newArrayWithLength:1];
      *IOSIntArray_GetRef(jj_expentry_, 0) = i;
      [((id<JavaUtilList>) nil_chk(jj_expentries_)) addWithId:jj_expentry_];
    }
  }
  jj_endpos_ = 0;
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_rescan_token(self);
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_add_error_tokenWithInt_withInt_(self, 0, 0);
  IOSObjectArray *exptokseq = [IOSObjectArray newArrayWithLength:[((id<JavaUtilList>) nil_chk(jj_expentries_)) size] type:IOSClass_intArray(1)];
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(jj_expentries_)) size]; i++) {
    (void) IOSObjectArray_Set(exptokseq, i, [((id<JavaUtilList>) nil_chk(jj_expentries_)) getWithInt:i]);
  }
  return new_EduStanfordNlpLingTokensregexParserParseException_initWithEduStanfordNlpLingTokensregexParserToken_withIntArray2_withNSStringArray_(token_, exptokseq, JreLoadStatic(EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants, tokenImage));
}

- (void)enable_tracing {
}

- (void)disable_tracing {
}

- (void)jj_rescan_token {
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_rescan_token(self);
}

- (void)jj_saveWithInt:(jint)index
               withInt:(jint)xla {
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, index, xla);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexCoreMapExpressionExtractor;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexSequencePattern_PatternExpr;", 0x1, 5, 6, 2, -1, -1, -1 },
    { NULL, "LEduStanfordNlpUtilPair;", 0x1, 7, 6, 2, 8, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexSequencePattern_PatternExpr;", 0x1, 9, 6, 2, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0xa, 10, 11, -1, -1, -1, -1 },
    { NULL, "LJavaLangLong;", 0xa, 12, 11, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 13, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 14, 15, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 16, 17, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x11, 18, 19, 20, 21, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexSequenceMatchRules_Rule;", 0x11, 22, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexSequenceMatchRules_Rule;", 0x11, 23, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexSequenceMatchRules_Rule;", 0x11, 24, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesAssignableExpression;", 0x11, 25, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesExpression;", 0x11, 26, 19, 20, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesExpression;", 0x11, 27, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x11, 28, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesExpressions_CompositeValue;", 0x11, 29, 19, 20, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x11, 30, 31, 20, 32, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x11, 33, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesAssignableExpression;", 0x11, 34, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesExpression;", 0x11, 35, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesExpression;", 0x11, 36, 37, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesAssignableExpression;", 0x11, 38, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesExpression;", 0x11, 39, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesExpression;", 0x11, 40, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesExpression;", 0x11, 41, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesExpression;", 0x11, 42, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesExpression;", 0x11, 43, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesExpression;", 0x11, 44, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesExpression;", 0x11, 45, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesExpression;", 0x11, 46, 19, 20, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, 47, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexSequencePattern_PatternExpr;", 0x11, 48, 19, 20, -1, -1, -1 },
    { NULL, "LNSObject;", 0x11, 49, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexSequencePattern_PatternExpr;", 0x11, 50, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexSequencePattern_PatternExpr;", 0x11, 51, 52, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexSequencePattern_PatternExpr;", 0x11, 53, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexSequencePattern_PatternExpr;", 0x11, 54, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexSequencePattern_PatternExpr;", 0x11, 55, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexNodePattern;", 0x11, 56, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexSequencePattern_PatternExpr;", 0x11, 57, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexSequencePattern_PatternExpr;", 0x11, 58, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexNodePattern;", 0x11, 59, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexNodePattern;", 0x11, 60, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexNodePattern;", 0x11, 61, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexNodePattern;", 0x11, 62, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexNodePattern;", 0x11, 63, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexNodePattern;", 0x11, 64, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexNodePattern;", 0x11, 65, 19, 20, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x11, 66, 31, 20, 67, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexNodePattern;", 0x11, 68, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexMultiNodePattern;", 0x11, 69, 19, 20, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, 70, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexNodePattern;", 0x11, 71, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexNodePattern;", 0x11, 72, 19, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpUtilPair;", 0x11, 73, 19, 20, 74, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexSequenceMatchAction;", 0x11, 75, 19, 20, 76, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexSequenceMatchAction;", 0x11, 77, 19, 20, 76, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x11, 78, 19, 20, 79, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x11, 80, 31, 20, 67, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexParserToken;", 0x11, -1, -1, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexParserToken;", 0x11, -1, -1, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexParserToken;", 0x11, -1, -1, 20, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexParserToken;", 0x11, -1, -1, 20, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, -1, -1, 20, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, -1, -1, 20, -1, -1, -1 },
    { NULL, "Z", 0x2, 81, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 83, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 84, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 85, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 86, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 87, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 88, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 89, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 90, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 91, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 92, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 93, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 94, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 95, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 96, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 97, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 98, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 99, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 100, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 101, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 102, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 103, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 104, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 105, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 106, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 107, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 108, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 109, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 110, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 111, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 112, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 113, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 114, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 115, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 116, 82, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 117, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 118, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 119, 117, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 119, 118, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 120, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 119, 120, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 121, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 119, 121, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexParserToken;", 0x2, 122, 82, 20, -1, -1, -1 },
    { NULL, "Z", 0x2, 123, 82, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexParserToken;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexParserToken;", 0x11, 124, 82, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 125, 126, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexParserParseException;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 127, 126, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getExpressionExtractorWithEduStanfordNlpLingTokensregexEnv:withJavaIoReader:);
  methods[2].selector = @selector(updateExpressionExtractorWithEduStanfordNlpLingTokensregexCoreMapExpressionExtractor:withJavaIoReader:);
  methods[3].selector = @selector(parseSequenceWithEduStanfordNlpLingTokensregexEnv:withNSString:);
  methods[4].selector = @selector(parseSequenceWithActionWithEduStanfordNlpLingTokensregexEnv:withNSString:);
  methods[5].selector = @selector(parseNodeWithEduStanfordNlpLingTokensregexEnv:withNSString:);
  methods[6].selector = @selector(parseIntegerWithNSString:);
  methods[7].selector = @selector(parseLongIntegerWithNSString:);
  methods[8].selector = @selector(parseQuotedStringWithNSString:);
  methods[9].selector = @selector(appendSpecialTokensWithJavaLangStringBuilder:withEduStanfordNlpLingTokensregexParserToken:);
  methods[10].selector = @selector(getStringFromTokensWithEduStanfordNlpLingTokensregexParserToken:withEduStanfordNlpLingTokensregexParserToken:withBoolean:);
  methods[11].selector = @selector(RuleListWithEduStanfordNlpLingTokensregexEnv:);
  methods[12].selector = @selector(RuleWithEduStanfordNlpLingTokensregexEnv:);
  methods[13].selector = @selector(ExpressionExtractorRuleWithEduStanfordNlpLingTokensregexEnv:);
  methods[14].selector = @selector(AssignmentRuleWithEduStanfordNlpLingTokensregexEnv:);
  methods[15].selector = @selector(AssignableExpressionWithEduStanfordNlpLingTokensregexEnv:);
  methods[16].selector = @selector(ExpressionWithEduStanfordNlpLingTokensregexEnv:);
  methods[17].selector = @selector(Index);
  methods[18].selector = @selector(FunctionCallExpressionWithEduStanfordNlpLingTokensregexEnv:);
  methods[19].selector = @selector(ValueExpressionWithEduStanfordNlpLingTokensregexEnv:);
  methods[20].selector = @selector(CompositeFieldValueWithEduStanfordNlpLingTokensregexEnv:);
  methods[21].selector = @selector(FieldValueWithEduStanfordNlpLingTokensregexEnv:withJavaUtilMap:);
  methods[22].selector = @selector(BasicValueWithEduStanfordNlpLingTokensregexEnv:);
  methods[23].selector = @selector(AssignableVarWithEduStanfordNlpLingTokensregexEnv:);
  methods[24].selector = @selector(VarOrRegexVarWithEduStanfordNlpLingTokensregexEnv:);
  methods[25].selector = @selector(MethodCallExpressionWithEduStanfordNlpLingTokensregexEnv:withEduStanfordNlpLingTokensregexTypesExpression:);
  methods[26].selector = @selector(AssignableNestedVarExpressionWithEduStanfordNlpLingTokensregexEnv:);
  methods[27].selector = @selector(NestedVarExpressionWithEduStanfordNlpLingTokensregexEnv:);
  methods[28].selector = @selector(NestedFunctionCallExpressionWithEduStanfordNlpLingTokensregexEnv:);
  methods[29].selector = @selector(ListExpressionWithEduStanfordNlpLingTokensregexEnv:);
  methods[30].selector = @selector(ListExpression2WithEduStanfordNlpLingTokensregexEnv:);
  methods[31].selector = @selector(BasicCondExpressionWithEduStanfordNlpLingTokensregexEnv:);
  methods[32].selector = @selector(CondGroupWithEduStanfordNlpLingTokensregexEnv:);
  methods[33].selector = @selector(CondExpressionWithEduStanfordNlpLingTokensregexEnv:);
  methods[34].selector = @selector(CaseExpressionWithEduStanfordNlpLingTokensregexEnv:);
  methods[35].selector = @selector(StringRegexWithEduStanfordNlpLingTokensregexEnv:);
  methods[36].selector = @selector(SeqRegexWithEduStanfordNlpLingTokensregexEnv:);
  methods[37].selector = @selector(StringNumberValueWithEduStanfordNlpLingTokensregexEnv:);
  methods[38].selector = @selector(SeqRegexBasicWithEduStanfordNlpLingTokensregexEnv:);
  methods[39].selector = @selector(SeqRegexRepeatTimesWithEduStanfordNlpLingTokensregexEnv:withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr:);
  methods[40].selector = @selector(SeqRegexDisjWithEduStanfordNlpLingTokensregexEnv:);
  methods[41].selector = @selector(SeqRegexDisjConjWithEduStanfordNlpLingTokensregexEnv:);
  methods[42].selector = @selector(SeqRegexGroupWithEduStanfordNlpLingTokensregexEnv:);
  methods[43].selector = @selector(BracketedNodeWithEduStanfordNlpLingTokensregexEnv:);
  methods[44].selector = @selector(SeqVarWithEduStanfordNlpLingTokensregexEnv:);
  methods[45].selector = @selector(SeqBackRefWithEduStanfordNlpLingTokensregexEnv:);
  methods[46].selector = @selector(NodeWithEduStanfordNlpLingTokensregexEnv:);
  methods[47].selector = @selector(NodeDisjWithEduStanfordNlpLingTokensregexEnv:);
  methods[48].selector = @selector(NodeConjWithEduStanfordNlpLingTokensregexEnv:);
  methods[49].selector = @selector(NodeDisjConjWithEduStanfordNlpLingTokensregexEnv:);
  methods[50].selector = @selector(NodeGroupWithEduStanfordNlpLingTokensregexEnv:);
  methods[51].selector = @selector(NodeBasicWithEduStanfordNlpLingTokensregexEnv:);
  methods[52].selector = @selector(CoreMapNodeWithEduStanfordNlpLingTokensregexEnv:);
  methods[53].selector = @selector(AttrValueWithEduStanfordNlpLingTokensregexEnv:withJavaUtilMap:);
  methods[54].selector = @selector(CoreMapWordPatternWithEduStanfordNlpLingTokensregexEnv:);
  methods[55].selector = @selector(MultiNodePatternWithEduStanfordNlpLingTokensregexEnv:);
  methods[56].selector = @selector(CoreMapVarValueWithEduStanfordNlpLingTokensregexEnv:);
  methods[57].selector = @selector(CoreMapVarNodePatternWithEduStanfordNlpLingTokensregexEnv:);
  methods[58].selector = @selector(CoreMapExprNodePatternWithEduStanfordNlpLingTokensregexEnv:);
  methods[59].selector = @selector(SeqRegexWithActionWithEduStanfordNlpLingTokensregexEnv:);
  methods[60].selector = @selector(ActionWithEduStanfordNlpLingTokensregexEnv:);
  methods[61].selector = @selector(AnnotateActionWithEduStanfordNlpLingTokensregexEnv:);
  methods[62].selector = @selector(SetAttrValuesWithEduStanfordNlpLingTokensregexEnv:);
  methods[63].selector = @selector(SetAttrValueWithEduStanfordNlpLingTokensregexEnv:withJavaUtilMap:);
  methods[64].selector = @selector(NumberToken);
  methods[65].selector = @selector(IntegerToken);
  methods[66].selector = @selector(CmpToken);
  methods[67].selector = @selector(RelaxedStringToken);
  methods[68].selector = @selector(RelaxedString);
  methods[69].selector = @selector(RelaxedStringNoIdentifier);
  methods[70].selector = @selector(jj_2_1WithInt:);
  methods[71].selector = @selector(jj_2_2WithInt:);
  methods[72].selector = @selector(jj_2_3WithInt:);
  methods[73].selector = @selector(jj_2_4WithInt:);
  methods[74].selector = @selector(jj_2_5WithInt:);
  methods[75].selector = @selector(jj_2_6WithInt:);
  methods[76].selector = @selector(jj_2_7WithInt:);
  methods[77].selector = @selector(jj_2_8WithInt:);
  methods[78].selector = @selector(jj_2_9WithInt:);
  methods[79].selector = @selector(jj_2_10WithInt:);
  methods[80].selector = @selector(jj_2_11WithInt:);
  methods[81].selector = @selector(jj_2_12WithInt:);
  methods[82].selector = @selector(jj_2_13WithInt:);
  methods[83].selector = @selector(jj_2_14WithInt:);
  methods[84].selector = @selector(jj_2_15WithInt:);
  methods[85].selector = @selector(jj_2_16WithInt:);
  methods[86].selector = @selector(jj_2_17WithInt:);
  methods[87].selector = @selector(jj_2_18WithInt:);
  methods[88].selector = @selector(jj_2_19WithInt:);
  methods[89].selector = @selector(jj_2_20WithInt:);
  methods[90].selector = @selector(jj_2_21WithInt:);
  methods[91].selector = @selector(jj_2_22WithInt:);
  methods[92].selector = @selector(jj_2_23WithInt:);
  methods[93].selector = @selector(jj_2_24WithInt:);
  methods[94].selector = @selector(jj_2_25WithInt:);
  methods[95].selector = @selector(jj_2_26WithInt:);
  methods[96].selector = @selector(jj_2_27WithInt:);
  methods[97].selector = @selector(jj_2_28WithInt:);
  methods[98].selector = @selector(jj_2_29WithInt:);
  methods[99].selector = @selector(jj_2_30WithInt:);
  methods[100].selector = @selector(jj_2_31WithInt:);
  methods[101].selector = @selector(jj_2_32WithInt:);
  methods[102].selector = @selector(jj_2_33WithInt:);
  methods[103].selector = @selector(jj_2_34WithInt:);
  methods[104].selector = @selector(jj_2_35WithInt:);
  methods[105].selector = @selector(jj_3_14);
  methods[106].selector = @selector(jj_3R_73);
  methods[107].selector = @selector(jj_3R_51);
  methods[108].selector = @selector(jj_3R_129);
  methods[109].selector = @selector(jj_3R_50);
  methods[110].selector = @selector(jj_3R_32);
  methods[111].selector = @selector(jj_3R_60);
  methods[112].selector = @selector(jj_3R_128);
  methods[113].selector = @selector(jj_3R_121);
  methods[114].selector = @selector(jj_3R_112);
  methods[115].selector = @selector(jj_3R_108);
  methods[116].selector = @selector(jj_3R_90);
  methods[117].selector = @selector(jj_3R_52);
  methods[118].selector = @selector(jj_3R_33);
  methods[119].selector = @selector(jj_3R_49);
  methods[120].selector = @selector(jj_3R_66);
  methods[121].selector = @selector(jj_3R_65);
  methods[122].selector = @selector(jj_3R_64);
  methods[123].selector = @selector(jj_3R_135);
  methods[124].selector = @selector(jj_3R_63);
  methods[125].selector = @selector(jj_3R_42);
  methods[126].selector = @selector(jj_3R_62);
  methods[127].selector = @selector(jj_3R_107);
  methods[128].selector = @selector(jj_3R_89);
  methods[129].selector = @selector(jj_3R_72);
  methods[130].selector = @selector(jj_3R_88);
  methods[131].selector = @selector(jj_3R_71);
  methods[132].selector = @selector(jj_3R_80);
  methods[133].selector = @selector(jj_3R_79);
  methods[134].selector = @selector(jj_3R_78);
  methods[135].selector = @selector(jj_3R_77);
  methods[136].selector = @selector(jj_3R_76);
  methods[137].selector = @selector(jj_3R_67);
  methods[138].selector = @selector(jj_3R_75);
  methods[139].selector = @selector(jj_3R_126);
  methods[140].selector = @selector(jj_3R_125);
  methods[141].selector = @selector(jj_3R_81);
  methods[142].selector = @selector(jj_3R_39);
  methods[143].selector = @selector(jj_3_28);
  methods[144].selector = @selector(jj_3R_124);
  methods[145].selector = @selector(jj_3_27);
  methods[146].selector = @selector(jj_3R_123);
  methods[147].selector = @selector(jj_3R_122);
  methods[148].selector = @selector(jj_3R_118);
  methods[149].selector = @selector(jj_3R_22);
  methods[150].selector = @selector(jj_3R_96);
  methods[151].selector = @selector(jj_3R_115);
  methods[152].selector = @selector(jj_3R_95);
  methods[153].selector = @selector(jj_3R_117);
  methods[154].selector = @selector(jj_3R_134);
  methods[155].selector = @selector(jj_3R_45);
  methods[156].selector = @selector(jj_3R_131);
  methods[157].selector = @selector(jj_3R_106);
  methods[158].selector = @selector(jj_3R_44);
  methods[159].selector = @selector(jj_3R_105);
  methods[160].selector = @selector(jj_3R_26);
  methods[161].selector = @selector(jj_3R_104);
  methods[162].selector = @selector(jj_3R_103);
  methods[163].selector = @selector(jj_3R_74);
  methods[164].selector = @selector(jj_3R_102);
  methods[165].selector = @selector(jj_3R_101);
  methods[166].selector = @selector(jj_3R_61);
  methods[167].selector = @selector(jj_3R_97);
  methods[168].selector = @selector(jj_3R_120);
  methods[169].selector = @selector(jj_3R_87);
  methods[170].selector = @selector(jj_3R_40);
  methods[171].selector = @selector(jj_3R_127);
  methods[172].selector = @selector(jj_3_35);
  methods[173].selector = @selector(jj_3R_30);
  methods[174].selector = @selector(jj_3R_133);
  methods[175].selector = @selector(jj_3R_119);
  methods[176].selector = @selector(jj_3_34);
  methods[177].selector = @selector(jj_3R_111);
  methods[178].selector = @selector(jj_3_13);
  methods[179].selector = @selector(jj_3_12);
  methods[180].selector = @selector(jj_3_11);
  methods[181].selector = @selector(jj_3_10);
  methods[182].selector = @selector(jj_3_9);
  methods[183].selector = @selector(jj_3_8);
  methods[184].selector = @selector(jj_3R_110);
  methods[185].selector = @selector(jj_3R_98);
  methods[186].selector = @selector(jj_3R_31);
  methods[187].selector = @selector(jj_3R_70);
  methods[188].selector = @selector(jj_3R_132);
  methods[189].selector = @selector(jj_3R_59);
  methods[190].selector = @selector(jj_3R_38);
  methods[191].selector = @selector(jj_3R_58);
  methods[192].selector = @selector(jj_3R_57);
  methods[193].selector = @selector(jj_3R_23);
  methods[194].selector = @selector(jj_3R_56);
  methods[195].selector = @selector(jj_3R_21);
  methods[196].selector = @selector(jj_3R_48);
  methods[197].selector = @selector(jj_3R_37);
  methods[198].selector = @selector(jj_3_7);
  methods[199].selector = @selector(jj_3_6);
  methods[200].selector = @selector(jj_3R_29);
  methods[201].selector = @selector(jj_3_5);
  methods[202].selector = @selector(jj_3R_100);
  methods[203].selector = @selector(jj_3R_20);
  methods[204].selector = @selector(jj_3_4);
  methods[205].selector = @selector(jj_3R_94);
  methods[206].selector = @selector(jj_3_33);
  methods[207].selector = @selector(jj_3R_86);
  methods[208].selector = @selector(jj_3R_85);
  methods[209].selector = @selector(jj_3_3);
  methods[210].selector = @selector(jj_3_2);
  methods[211].selector = @selector(jj_3_1);
  methods[212].selector = @selector(jj_3R_93);
  methods[213].selector = @selector(jj_3R_83);
  methods[214].selector = @selector(jj_3R_69);
  methods[215].selector = @selector(jj_3R_84);
  methods[216].selector = @selector(jj_3R_68);
  methods[217].selector = @selector(jj_3R_54);
  methods[218].selector = @selector(jj_3R_53);
  methods[219].selector = @selector(jj_3R_35);
  methods[220].selector = @selector(jj_3R_92);
  methods[221].selector = @selector(jj_3R_91);
  methods[222].selector = @selector(jj_3R_82);
  methods[223].selector = @selector(jj_3_32);
  methods[224].selector = @selector(jj_3_26);
  methods[225].selector = @selector(jj_3_31);
  methods[226].selector = @selector(jj_3_30);
  methods[227].selector = @selector(jj_3R_34);
  methods[228].selector = @selector(jj_3R_55);
  methods[229].selector = @selector(jj_3_25);
  methods[230].selector = @selector(jj_3R_99);
  methods[231].selector = @selector(jj_3R_47);
  methods[232].selector = @selector(jj_3R_130);
  methods[233].selector = @selector(jj_3R_28);
  methods[234].selector = @selector(jj_3R_36);
  methods[235].selector = @selector(jj_3R_46);
  methods[236].selector = @selector(jj_3R_27);
  methods[237].selector = @selector(jj_3_24);
  methods[238].selector = @selector(jj_3_23);
  methods[239].selector = @selector(jj_3_22);
  methods[240].selector = @selector(jj_3R_41);
  methods[241].selector = @selector(jj_3_21);
  methods[242].selector = @selector(jj_3R_24);
  methods[243].selector = @selector(jj_3_20);
  methods[244].selector = @selector(jj_3R_114);
  methods[245].selector = @selector(jj_3_19);
  methods[246].selector = @selector(jj_3_18);
  methods[247].selector = @selector(jj_3R_43);
  methods[248].selector = @selector(jj_3_17);
  methods[249].selector = @selector(jj_3R_113);
  methods[250].selector = @selector(jj_3R_25);
  methods[251].selector = @selector(jj_3R_116);
  methods[252].selector = @selector(jj_3_29);
  methods[253].selector = @selector(jj_3_16);
  methods[254].selector = @selector(jj_3R_109);
  methods[255].selector = @selector(jj_3_15);
  methods[256].selector = @selector(jj_la1_init_0);
  methods[257].selector = @selector(jj_la1_init_1);
  methods[258].selector = @selector(initWithJavaIoInputStream:);
  methods[259].selector = @selector(initWithJavaIoInputStream:withNSString:);
  methods[260].selector = @selector(ReInitWithJavaIoInputStream:);
  methods[261].selector = @selector(ReInitWithJavaIoInputStream:withNSString:);
  methods[262].selector = @selector(initWithJavaIoReader:);
  methods[263].selector = @selector(ReInitWithJavaIoReader:);
  methods[264].selector = @selector(initWithEduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager:);
  methods[265].selector = @selector(ReInitWithEduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager:);
  methods[266].selector = @selector(jj_consume_tokenWithInt:);
  methods[267].selector = @selector(jj_scan_tokenWithInt:);
  methods[268].selector = @selector(getNextToken);
  methods[269].selector = @selector(getTokenWithInt:);
  methods[270].selector = @selector(jj_ntk);
  methods[271].selector = @selector(jj_add_error_tokenWithInt:withInt:);
  methods[272].selector = @selector(generateParseException);
  methods[273].selector = @selector(enable_tracing);
  methods[274].selector = @selector(disable_tracing);
  methods[275].selector = @selector(jj_rescan_token);
  methods[276].selector = @selector(jj_saveWithInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "token_source_", "LEduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "jj_input_stream_", "LEduStanfordNlpLingTokensregexParserSimpleCharStream;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "token_", "LEduStanfordNlpLingTokensregexParserToken;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "jj_nt_", "LEduStanfordNlpLingTokensregexParserToken;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "jj_ntk_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "jj_scanpos_", "LEduStanfordNlpLingTokensregexParserToken;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "jj_lastpos_", "LEduStanfordNlpLingTokensregexParserToken;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "jj_la_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "jj_gen_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "jj_la1_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "jj_la1_0", "[I", .constantValue.asLong = 0, 0xa, -1, 128, -1, -1 },
    { "jj_la1_1", "[I", .constantValue.asLong = 0, 0xa, -1, 129, -1, -1 },
    { "jj_2_rtns_", "[LEduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "jj_rescan_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "jj_gc_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "jj_ls_", "LEduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "jj_expentries_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 130, -1 },
    { "jj_expentry_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "jj_kind_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "jj_lasttokens_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "jj_endpos_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getExpressionExtractor", "LEduStanfordNlpLingTokensregexEnv;LJavaIoReader;", "LEduStanfordNlpLingTokensregexParserParseException;LEduStanfordNlpLingTokensregexParserTokenSequenceParseException;", "updateExpressionExtractor", "LEduStanfordNlpLingTokensregexCoreMapExpressionExtractor;LJavaIoReader;", "parseSequence", "LEduStanfordNlpLingTokensregexEnv;LNSString;", "parseSequenceWithAction", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/lang/String;)Ledu/stanford/nlp/util/Pair<Ledu/stanford/nlp/ling/tokensregex/SequencePattern$PatternExpr;Ledu/stanford/nlp/ling/tokensregex/SequenceMatchAction<Ledu/stanford/nlp/util/CoreMap;>;>;", "parseNode", "parseInteger", "LNSString;", "parseLongInteger", "parseQuotedString", "appendSpecialTokens", "LJavaLangStringBuilder;LEduStanfordNlpLingTokensregexParserToken;", "getStringFromTokens", "LEduStanfordNlpLingTokensregexParserToken;LEduStanfordNlpLingTokensregexParserToken;Z", "RuleList", "LEduStanfordNlpLingTokensregexEnv;", "LEduStanfordNlpLingTokensregexParserParseException;", "(Ledu/stanford/nlp/ling/tokensregex/Env;)Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/SequenceMatchRules$Rule;>;", "Rule", "ExpressionExtractorRule", "AssignmentRule", "AssignableExpression", "Expression", "FunctionCallExpression", "ValueExpression", "CompositeFieldValue", "FieldValue", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilMap;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/ling/tokensregex/types/Expression;>;)Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/ling/tokensregex/types/Expression;>;", "BasicValue", "AssignableVar", "VarOrRegexVar", "MethodCallExpression", "LEduStanfordNlpLingTokensregexEnv;LEduStanfordNlpLingTokensregexTypesExpression;", "AssignableNestedVarExpression", "NestedVarExpression", "NestedFunctionCallExpression", "ListExpression", "ListExpression2", "BasicCondExpression", "CondGroup", "CondExpression", "CaseExpression", "StringRegex", "SeqRegex", "StringNumberValue", "SeqRegexBasic", "SeqRegexRepeatTimes", "LEduStanfordNlpLingTokensregexEnv;LEduStanfordNlpLingTokensregexSequencePattern_PatternExpr;", "SeqRegexDisj", "SeqRegexDisjConj", "SeqRegexGroup", "BracketedNode", "SeqVar", "SeqBackRef", "Node", "NodeDisj", "NodeConj", "NodeDisjConj", "NodeGroup", "NodeBasic", "CoreMapNode", "AttrValue", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", "CoreMapWordPattern", "MultiNodePattern", "CoreMapVarValue", "CoreMapVarNodePattern", "CoreMapExprNodePattern", "SeqRegexWithAction", "(Ledu/stanford/nlp/ling/tokensregex/Env;)Ledu/stanford/nlp/util/Pair<Ledu/stanford/nlp/ling/tokensregex/SequencePattern$PatternExpr;Ledu/stanford/nlp/ling/tokensregex/SequenceMatchAction<Ledu/stanford/nlp/util/CoreMap;>;>;", "Action", "(Ledu/stanford/nlp/ling/tokensregex/Env;)Ledu/stanford/nlp/ling/tokensregex/SequenceMatchAction<Ledu/stanford/nlp/util/CoreMap;>;", "AnnotateAction", "SetAttrValues", "(Ledu/stanford/nlp/ling/tokensregex/Env;)Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", "SetAttrValue", "jj_2_1", "I", "jj_2_2", "jj_2_3", "jj_2_4", "jj_2_5", "jj_2_6", "jj_2_7", "jj_2_8", "jj_2_9", "jj_2_10", "jj_2_11", "jj_2_12", "jj_2_13", "jj_2_14", "jj_2_15", "jj_2_16", "jj_2_17", "jj_2_18", "jj_2_19", "jj_2_20", "jj_2_21", "jj_2_22", "jj_2_23", "jj_2_24", "jj_2_25", "jj_2_26", "jj_2_27", "jj_2_28", "jj_2_29", "jj_2_30", "jj_2_31", "jj_2_32", "jj_2_33", "jj_2_34", "jj_2_35", "LJavaIoInputStream;", "LJavaIoInputStream;LNSString;", "ReInit", "LJavaIoReader;", "LEduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager;", "jj_consume_token", "jj_scan_token", "getToken", "jj_add_error_token", "II", "jj_save", &EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_la1_0, &EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_la1_1, "Ljava/util/List<[LI;>;", "LEduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess;LEduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/tokensregex/SequencePattern$Parser<Ledu/stanford/nlp/util/CoreMap;>;Ledu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserConstants;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexParserTokenSequenceParser = { "TokenSequenceParser", "edu.stanford.nlp.ling.tokensregex.parser", ptrTable, methods, fields, 7, 0x1, 277, 21, -1, 131, -1, 132, -1 };
  return &_EduStanfordNlpLingTokensregexParserTokenSequenceParser;
}

+ (void)initialize {
  if (self == [EduStanfordNlpLingTokensregexParserTokenSequenceParser class]) {
    {
      EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_la1_init_0();
      EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_la1_init_1();
    }
    J2OBJC_SET_INITIALIZED(EduStanfordNlpLingTokensregexParserTokenSequenceParser)
  }
}

@end

void EduStanfordNlpLingTokensregexParserTokenSequenceParser_init(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  NSObject_init(self);
  self->jj_la1_ = [IOSIntArray newArrayWithLength:71];
  self->jj_2_rtns_ = [IOSObjectArray newArrayWithLength:35 type:EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls_class_()];
  self->jj_rescan_ = false;
  self->jj_gc_ = 0;
  self->jj_ls_ = new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess_init();
  self->jj_expentries_ = new_JavaUtilArrayList_init();
  self->jj_kind_ = -1;
  self->jj_lasttokens_ = [IOSIntArray newArrayWithLength:100];
}

EduStanfordNlpLingTokensregexParserTokenSequenceParser *new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParser, init)
}

EduStanfordNlpLingTokensregexParserTokenSequenceParser *create_EduStanfordNlpLingTokensregexParserTokenSequenceParser_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParser, init)
}

JavaLangInteger *EduStanfordNlpLingTokensregexParserTokenSequenceParser_parseIntegerWithNSString_(NSString *str) {
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_initialize();
  if ([((NSString *) nil_chk(str)) hasPrefix:@"+"]) {
    return JavaLangInteger_valueOfWithNSString_([str substring:1]);
  }
  else {
    return JavaLangInteger_valueOfWithNSString_(str);
  }
}

JavaLangLong *EduStanfordNlpLingTokensregexParserTokenSequenceParser_parseLongIntegerWithNSString_(NSString *str) {
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_initialize();
  if ([((NSString *) nil_chk(str)) hasSuffix:@"L"]) {
    str = [str substring:0 endIndex:((jint) [str length]) - 1];
  }
  if ([((NSString *) nil_chk(str)) hasPrefix:@"+"]) {
    return JavaLangLong_valueOfWithNSString_([str substring:1]);
  }
  else {
    return JavaLangLong_valueOfWithNSString_(str);
  }
}

NSString *EduStanfordNlpLingTokensregexParserTokenSequenceParser_parseQuotedStringWithNSString_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, NSString *str) {
  return [((NSString *) nil_chk([((NSString *) nil_chk(str)) substring:1 endIndex:((jint) [str length]) - 1])) replaceAll:@"\\\\\"" withReplacement:@"\""];
}

void EduStanfordNlpLingTokensregexParserTokenSequenceParser_appendSpecialTokensWithJavaLangStringBuilder_withEduStanfordNlpLingTokensregexParserToken_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, JavaLangStringBuilder *sb, EduStanfordNlpLingTokensregexParserToken *st) {
  if (st != nil) {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_appendSpecialTokensWithJavaLangStringBuilder_withEduStanfordNlpLingTokensregexParserToken_(self, sb, st->specialToken_);
    (void) [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:st->image_];
  }
}

NSString *EduStanfordNlpLingTokensregexParserTokenSequenceParser_getStringFromTokensWithEduStanfordNlpLingTokensregexParserToken_withEduStanfordNlpLingTokensregexParserToken_withBoolean_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexParserToken *head, EduStanfordNlpLingTokensregexParserToken *tail, jboolean includeSpecial) {
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  for (EduStanfordNlpLingTokensregexParserToken *p = head; p != tail; p = p->next_) {
    if (includeSpecial) {
      EduStanfordNlpLingTokensregexParserTokenSequenceParser_appendSpecialTokensWithJavaLangStringBuilder_withEduStanfordNlpLingTokensregexParserToken_(self, sb, ((EduStanfordNlpLingTokensregexParserToken *) nil_chk(p))->specialToken_);
    }
    (void) [sb appendWithNSString:((EduStanfordNlpLingTokensregexParserToken *) nil_chk(p))->image_];
  }
  return [sb description];
}

id<JavaUtilList> EduStanfordNlpLingTokensregexParserTokenSequenceParser_RuleListWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<JavaUtilList> rules = new_JavaUtilArrayList_init();
  id<EduStanfordNlpLingTokensregexSequenceMatchRules_Rule> rule;
  while (true) {
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR:
      case 22:
      ;
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 0) = self->jj_gen_;
      goto break_label_1;
    }
    rule = EduStanfordNlpLingTokensregexParserTokenSequenceParser_RuleWithEduStanfordNlpLingTokensregexEnv_(self, env);
    [rules addWithId:rule];
  }
  break_label_1: ;
  {
    return rules;
  }
}

id<EduStanfordNlpLingTokensregexSequenceMatchRules_Rule> EduStanfordNlpLingTokensregexParserTokenSequenceParser_RuleWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<EduStanfordNlpLingTokensregexSequenceMatchRules_Rule> rule;
  EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue *cv;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_1WithInt_(self, 3)) {
    rule = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionExtractorRuleWithEduStanfordNlpLingTokensregexEnv_(self, env);
  }
  else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_2WithInt_(self, 3)) {
    rule = EduStanfordNlpLingTokensregexParserTokenSequenceParser_AssignmentRuleWithEduStanfordNlpLingTokensregexEnv_(self, env);
  }
  else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_3WithInt_(self, 3)) {
    cv = EduStanfordNlpLingTokensregexParserTokenSequenceParser_CompositeFieldValueWithEduStanfordNlpLingTokensregexEnv_(self, env);
    rule = EduStanfordNlpLingTokensregexSequenceMatchRules_createRuleWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesExpressions_CompositeValue_(env, cv);
  }
  else {
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
  }
  {
    return rule;
  }
}

id<EduStanfordNlpLingTokensregexSequenceMatchRules_Rule> EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionExtractorRuleWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *expr;
  NSString *stringRegex;
  id<EduStanfordNlpLingTokensregexTypesExpression> result;
  EduStanfordNlpLingTokensregexParserToken *ruleTypeToken;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_4WithInt_(self, 2)) {
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 22);
    stringRegex = EduStanfordNlpLingTokensregexParserTokenSequenceParser_StringRegexWithEduStanfordNlpLingTokensregexEnv_(self, env);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 23);
    result = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 24);
    {
      return EduStanfordNlpLingTokensregexSequenceMatchRules_createExtractionRuleWithEduStanfordNlpLingTokensregexEnv_withNSString_withId_withEduStanfordNlpLingTokensregexTypesExpression_(env, nil, stringRegex, result);
    }
  }
  else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_5WithInt_(self, 2)) {
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 22);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 25);
    expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexWithEduStanfordNlpLingTokensregexEnv_(self, env);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 26);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 23);
    result = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 24);
    {
      return EduStanfordNlpLingTokensregexSequenceMatchRules_createExtractionRuleWithEduStanfordNlpLingTokensregexEnv_withNSString_withId_withEduStanfordNlpLingTokensregexTypesExpression_(env, nil, EduStanfordNlpLingTokensregexTokenSequencePattern_compileWithEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_(expr), result);
    }
  }
  else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_6WithInt_(self, 2)) {
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 22);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 27);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 25);
    expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexWithEduStanfordNlpLingTokensregexEnv_(self, env);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 26);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 23);
    result = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 24);
    {
      return EduStanfordNlpLingTokensregexSequenceMatchRules_createTokenPatternRuleWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_withEduStanfordNlpLingTokensregexTypesExpression_(env, expr, result);
    }
  }
  else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_7WithInt_(self, 2)) {
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 22);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 28);
    stringRegex = EduStanfordNlpLingTokensregexParserTokenSequenceParser_StringRegexWithEduStanfordNlpLingTokensregexEnv_(self, env);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 23);
    result = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 24);
    {
      return EduStanfordNlpLingTokensregexSequenceMatchRules_createTextPatternRuleWithEduStanfordNlpLingTokensregexEnv_withNSString_withEduStanfordNlpLingTokensregexTypesExpression_(env, stringRegex, result);
    }
  }
  else {
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
  }
  @throw new_JavaLangError_initWithNSString_(@"Missing return statement in function");
}

id<EduStanfordNlpLingTokensregexSequenceMatchRules_Rule> EduStanfordNlpLingTokensregexParserTokenSequenceParser_AssignmentRuleWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<EduStanfordNlpLingTokensregexTypesAssignableExpression> var;
  id<EduStanfordNlpLingTokensregexTypesExpression> result;
  var = EduStanfordNlpLingTokensregexParserTokenSequenceParser_AssignableExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 29);
  result = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case 30:
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 30);
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 1) = self->jj_gen_;
    ;
  }
  {
    return EduStanfordNlpLingTokensregexSequenceMatchRules_createAssignmentRuleWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesAssignableExpression_withEduStanfordNlpLingTokensregexTypesExpression_(env, var, result);
  }
}

id<EduStanfordNlpLingTokensregexTypesAssignableExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_AssignableExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<EduStanfordNlpLingTokensregexTypesAssignableExpression> expr;
  expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_AssignableNestedVarExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
  {
    return expr;
  }
}

id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<EduStanfordNlpLingTokensregexTypesExpression> expr;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_8WithInt_(self, 5)) {
    expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_NestedFunctionCallExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
  }
  else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_9WithInt_(self, 5)) {
    expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_NestedVarExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
  }
  else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_10WithInt_(self, 5)) {
    expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ValueExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
  }
  else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_11WithInt_(self, 5)) {
    expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ListExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
  }
  else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_12WithInt_(self, 5)) {
    expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ListExpression2WithEduStanfordNlpLingTokensregexEnv_(self, env);
  }
  else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_13WithInt_(self, 5)) {
    expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_CaseExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
  }
  else {
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
  }
  {
    return expr;
  }
}

jint EduStanfordNlpLingTokensregexParserTokenSequenceParser_Index(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *t;
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 31);
  t = EduStanfordNlpLingTokensregexParserTokenSequenceParser_IntegerToken(self);
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 32);
  {
    return JavaLangInteger_parseIntWithNSString_(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(t))->image_);
  }
}

id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_FunctionCallExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexParserToken *typeToken;
  id<EduStanfordNlpLingTokensregexTypesExpression> param;
  id<JavaUtilList> params = new_JavaUtilArrayList_init();
  typeToken = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER);
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 25);
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXGROUP:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXMRVAR:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXMRGROUP:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_INT:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_LONGINT:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REAL:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEX:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR:
    case 22:
    case 25:
    case 31:
    case 38:
    param = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
    [params addWithId:param];
    {
      while (true) {
        switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
          case 33:
          ;
          break;
          default:
          *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 2) = self->jj_gen_;
          goto break_label_2;
        }
        (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 33);
        param = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
        [params addWithId:param];
      }
      break_label_2: ;
    }
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 3) = self->jj_gen_;
    ;
  }
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 26);
  {
    return new_EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression_initWithNSString_withJavaUtilList_withNSStringArray_(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(typeToken))->image_, params, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
  }
}

id<EduStanfordNlpLingTokensregexTypesValue> EduStanfordNlpLingTokensregexParserTokenSequenceParser_ValueExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<EduStanfordNlpLingTokensregexTypesValue> expr;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_INT:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_LONGINT:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REAL:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEX:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR:
    case 25:
    expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_BasicValueWithEduStanfordNlpLingTokensregexEnv_(self, env);
    break;
    case 22:
    expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_CompositeFieldValueWithEduStanfordNlpLingTokensregexEnv_(self, env);
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 4) = self->jj_gen_;
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
  }
  {
    return expr;
  }
}

EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue *EduStanfordNlpLingTokensregexParserTokenSequenceParser_CompositeFieldValueWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<JavaUtilMap> attributes = new_EduStanfordNlpUtilArrayMap_init();
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 22);
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_FieldValueWithEduStanfordNlpLingTokensregexEnv_withJavaUtilMap_(self, env, attributes);
  while (true) {
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case 30:
      case 33:
      ;
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 5) = self->jj_gen_;
      goto break_label_3;
    }
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case 33:
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 33);
      break;
      case 30:
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 30);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 6) = self->jj_gen_;
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
      @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
    }
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_FieldValueWithEduStanfordNlpLingTokensregexEnv_withJavaUtilMap_(self, env, attributes);
  }
  break_label_3: ;
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 24);
  {
    return new_EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue_initWithJavaUtilMap_withBoolean_withNSStringArray_(attributes, false, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
  }
}

id<JavaUtilMap> EduStanfordNlpLingTokensregexParserTokenSequenceParser_FieldValueWithEduStanfordNlpLingTokensregexEnv_withJavaUtilMap_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env, id<JavaUtilMap> attributes) {
  NSString *fieldname = nil;
  id<EduStanfordNlpLingTokensregexTypesExpression> expr = nil;
  fieldname = EduStanfordNlpLingTokensregexParserTokenSequenceParser_RelaxedString(self);
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 34);
  expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
  if (fieldname != nil && expr != nil) {
    if ([((id<JavaUtilMap>) nil_chk(attributes)) containsKeyWithId:fieldname]) {
      {
        @throw new_JavaLangError_initWithNSString_(JreStrcat("$$", @"Field already defined: ", fieldname));
      }
    }
    (void) [attributes putWithId:fieldname withId:expr];
  }
  {
    return attributes;
  }
}

id<EduStanfordNlpLingTokensregexTypesValue> EduStanfordNlpLingTokensregexParserTokenSequenceParser_BasicValueWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexParserToken *tok = nil;
  EduStanfordNlpLingTokensregexParserToken *head = nil;
  EduStanfordNlpLingTokensregexParserToken *tail = nil;
  EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *seqRegex = nil;
  {
    NSString *str;
    EduStanfordNlpLingTokensregexTokenSequencePattern *seqPattern;
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEX:
      tok = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEX);
      {
        return new_EduStanfordNlpLingTokensregexTypesExpressions_RegexValue_initWithNSString_withNSStringArray_([((NSString *) nil_chk(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(tok))->image_)) substring:1 endIndex:((jint) [tok->image_ length]) - 1], [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
      }
      break;
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR:
      tok = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR);
      {
        return new_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_initWithNSString_withId_withNSStringArray_(@"STRING", EduStanfordNlpLingTokensregexParserTokenSequenceParser_parseQuotedStringWithNSString_(self, ((EduStanfordNlpLingTokensregexParserToken *) nil_chk(tok))->image_), [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
      }
      break;
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_INT:
      tok = EduStanfordNlpLingTokensregexParserTokenSequenceParser_IntegerToken(self);
      {
        return new_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_initWithNSString_withId_withNSStringArray_(@"INTEGER", EduStanfordNlpLingTokensregexParserTokenSequenceParser_parseIntegerWithNSString_(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(tok))->image_), [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
      }
      break;
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_LONGINT:
      tok = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_LONGINT);
      {
        return new_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_initWithNSString_withId_withNSStringArray_(@"INTEGER", EduStanfordNlpLingTokensregexParserTokenSequenceParser_parseLongIntegerWithNSString_(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(tok))->image_), [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
      }
      break;
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REAL:
      tok = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REAL);
      {
        return new_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_initWithNSString_withId_withNSStringArray_(@"REAL", JavaLangDouble_valueOfWithNSString_(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(tok))->image_), [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
      }
      break;
      case 25:
      head = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 25);
      seqRegex = EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexWithEduStanfordNlpLingTokensregexEnv_(self, env);
      tail = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 26);
      str = EduStanfordNlpLingTokensregexParserTokenSequenceParser_getStringFromTokensWithEduStanfordNlpLingTokensregexParserToken_withEduStanfordNlpLingTokensregexParserToken_withBoolean_(self, head, tail, true);
      seqPattern = new_EduStanfordNlpLingTokensregexTokenSequencePattern_initWithNSString_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_(str, seqRegex);
      {
        return new_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_initWithNSString_withId_withNSStringArray_(@"TOKEN_REGEX", seqPattern, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
      }
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 7) = self->jj_gen_;
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
      @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
    }
  }
  @throw new_JavaLangError_initWithNSString_(@"Missing return statement in function");
}

id<EduStanfordNlpLingTokensregexTypesAssignableExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_AssignableVarWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexParserToken *tok = nil;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER:
    tok = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER);
    {
      return new_EduStanfordNlpLingTokensregexTypesExpressions_VarExpression_initWithNSString_withNSStringArray_(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(tok))->image_, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
    }
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR:
    tok = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR);
    {
      return new_EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression_initWithNSString_withNSStringArray_(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(tok))->image_, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
    }
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 8) = self->jj_gen_;
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
  }
  @throw new_JavaLangError_initWithNSString_(@"Missing return statement in function");
}

id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_VarOrRegexVarWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexParserToken *tok = nil;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER:
    tok = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER);
    {
      return new_EduStanfordNlpLingTokensregexTypesExpressions_VarExpression_initWithNSString_withNSStringArray_(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(tok))->image_, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
    }
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR:
    tok = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR);
    {
      return new_EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression_initWithNSString_withNSStringArray_(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(tok))->image_, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
    }
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXGROUP:
    tok = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXGROUP);
    {
      return new_EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression_initWithJavaLangInteger_withNSStringArray_(JavaLangInteger_valueOfWithNSString_([((NSString *) nil_chk(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(tok))->image_)) substring:1]), [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
    }
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXMRVAR:
    tok = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXMRVAR);
    {
      return new_EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression_initWithNSString_withNSStringArray_([((NSString *) nil_chk(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(tok))->image_)) substring:1], [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
    }
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXMRGROUP:
    tok = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXMRGROUP);
    {
      return new_EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression_initWithJavaLangInteger_withNSStringArray_(JavaLangInteger_valueOfWithNSString_([((NSString *) nil_chk(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(tok))->image_)) substring:2]), [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
    }
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 9) = self->jj_gen_;
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
  }
  @throw new_JavaLangError_initWithNSString_(@"Missing return statement in function");
}

id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_MethodCallExpressionWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env, id<EduStanfordNlpLingTokensregexTypesExpression> parent) {
  EduStanfordNlpLingTokensregexParserToken *typeToken;
  id<EduStanfordNlpLingTokensregexTypesExpression> param;
  id<JavaUtilList> params = new_JavaUtilArrayList_init();
  typeToken = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER);
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 25);
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXGROUP:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXMRVAR:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXMRGROUP:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_INT:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_LONGINT:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REAL:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEX:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR:
    case 22:
    case 25:
    case 31:
    case 38:
    param = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
    [params addWithId:param];
    {
      while (true) {
        switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
          case 33:
          ;
          break;
          default:
          *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 10) = self->jj_gen_;
          goto break_label_4;
        }
        (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 33);
        param = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
        [params addWithId:param];
      }
      break_label_4: ;
    }
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 11) = self->jj_gen_;
    ;
  }
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 26);
  {
    return new_EduStanfordNlpLingTokensregexTypesExpressions_MethodCallExpression_initWithNSString_withEduStanfordNlpLingTokensregexTypesExpression_withJavaUtilList_withNSStringArray_(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(typeToken))->image_, parent, params, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
  }
}

id<EduStanfordNlpLingTokensregexTypesAssignableExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_AssignableNestedVarExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<EduStanfordNlpLingTokensregexTypesAssignableExpression> expr;
  id<EduStanfordNlpLingTokensregexTypesExpression> fieldExpr;
  NSString *s;
  EduStanfordNlpLingTokensregexParserToken *tok;
  jint i;
  expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_AssignableVarWithEduStanfordNlpLingTokensregexEnv_(self, env);
  while (true) {
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case 31:
      case 35:
      ;
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 12) = self->jj_gen_;
      goto break_label_5;
    }
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_14WithInt_(self, 2)) {
      i = EduStanfordNlpLingTokensregexParserTokenSequenceParser_Index(self);
      expr = new_EduStanfordNlpLingTokensregexTypesExpressions_IndexedExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_withInt_(expr, i);
    }
    else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_15WithInt_(self, 2)) {
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 31);
      fieldExpr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
      expr = new_EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_(expr, fieldExpr);
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 32);
    }
    else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_16WithInt_(self, 2)) {
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 35);
      s = EduStanfordNlpLingTokensregexParserTokenSequenceParser_RelaxedString(self);
      expr = new_EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_withNSString_(expr, s);
    }
    else {
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
      @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
    }
  }
  break_label_5: ;
  {
    return expr;
  }
}

id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_NestedVarExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<EduStanfordNlpLingTokensregexTypesExpression> expr;
  id<EduStanfordNlpLingTokensregexTypesExpression> fieldExpr;
  NSString *s;
  EduStanfordNlpLingTokensregexParserToken *tok;
  jint i;
  expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_VarOrRegexVarWithEduStanfordNlpLingTokensregexEnv_(self, env);
  while (true) {
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case 31:
      case 35:
      ;
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 13) = self->jj_gen_;
      goto break_label_6;
    }
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_17WithInt_(self, 3)) {
      i = EduStanfordNlpLingTokensregexParserTokenSequenceParser_Index(self);
      expr = new_EduStanfordNlpLingTokensregexTypesExpressions_IndexedExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_withInt_(expr, i);
    }
    else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_18WithInt_(self, 3)) {
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 31);
      fieldExpr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
      expr = new_EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_(expr, fieldExpr);
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 32);
    }
    else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_19WithInt_(self, 3)) {
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 35);
      expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_MethodCallExpressionWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesExpression_(self, env, expr);
    }
    else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_20WithInt_(self, 3)) {
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 35);
      s = EduStanfordNlpLingTokensregexParserTokenSequenceParser_RelaxedString(self);
      expr = new_EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_withNSString_(expr, s);
    }
    else {
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
      @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
    }
  }
  break_label_6: ;
  {
    return expr;
  }
}

id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_NestedFunctionCallExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<EduStanfordNlpLingTokensregexTypesExpression> expr;
  id<EduStanfordNlpLingTokensregexTypesExpression> fieldExpr;
  NSString *s;
  EduStanfordNlpLingTokensregexParserToken *tok;
  jint i;
  expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_FunctionCallExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
  while (true) {
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case 31:
      case 35:
      ;
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 14) = self->jj_gen_;
      goto break_label_7;
    }
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_21WithInt_(self, 3)) {
      i = EduStanfordNlpLingTokensregexParserTokenSequenceParser_Index(self);
      expr = new_EduStanfordNlpLingTokensregexTypesExpressions_IndexedExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_withInt_(expr, i);
    }
    else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_22WithInt_(self, 3)) {
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 31);
      fieldExpr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
      expr = new_EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_(expr, fieldExpr);
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 32);
    }
    else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_23WithInt_(self, 3)) {
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 35);
      expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_MethodCallExpressionWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesExpression_(self, env, expr);
    }
    else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_24WithInt_(self, 3)) {
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 35);
      s = EduStanfordNlpLingTokensregexParserTokenSequenceParser_RelaxedString(self);
      expr = new_EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_withNSString_(expr, s);
    }
    else {
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
      @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
    }
  }
  break_label_7: ;
  {
    return expr;
  }
}

id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_ListExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<JavaUtilList> exprs = new_JavaUtilArrayList_init();
  id<EduStanfordNlpLingTokensregexTypesExpression> expr;
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 25);
  expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
  [exprs addWithId:expr];
  while (true) {
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case 33:
      ;
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 15) = self->jj_gen_;
      goto break_label_8;
    }
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 33);
    expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
    [exprs addWithId:expr];
  }
  break_label_8: ;
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 26);
  {
    return new_EduStanfordNlpLingTokensregexTypesExpressions_ListExpression_initWithNSString_withJavaUtilList_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_TYPE_LIST, exprs, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
  }
}

id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_ListExpression2WithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<JavaUtilList> exprs = new_JavaUtilArrayList_init();
  id<EduStanfordNlpLingTokensregexTypesExpression> expr;
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 31);
  expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
  [exprs addWithId:expr];
  while (true) {
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case 33:
      ;
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 16) = self->jj_gen_;
      goto break_label_9;
    }
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 33);
    expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
    [exprs addWithId:expr];
  }
  break_label_9: ;
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 32);
  {
    return new_EduStanfordNlpLingTokensregexTypesExpressions_ListExpression_initWithNSString_withJavaUtilList_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_TYPE_LIST, exprs, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
  }
}

id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_BasicCondExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<EduStanfordNlpLingTokensregexTypesExpression> expr1 = nil;
  id<EduStanfordNlpLingTokensregexTypesExpression> expr2 = nil;
  EduStanfordNlpLingTokensregexParserToken *op = nil;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_25WithInt_(self, 3)) {
    expr1 = EduStanfordNlpLingTokensregexParserTokenSequenceParser_NestedVarExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NUMCMP:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STRREGEXCMP:
      op = EduStanfordNlpLingTokensregexParserTokenSequenceParser_CmpToken(self);
      expr2 = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 17) = self->jj_gen_;
      ;
    }
    if (op == nil) {
      {
        return new_EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_(expr1);
      }
    }
    else {
      {
        return new_EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression_initWithNSString_withEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_(op->image_, expr1, expr2);
      }
    }
  }
  else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_26WithInt_(self, 3)) {
    expr1 = EduStanfordNlpLingTokensregexParserTokenSequenceParser_NestedFunctionCallExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
    {
      return new_EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_(expr1);
    }
  }
  else {
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
  }
  @throw new_JavaLangError_initWithNSString_(@"Missing return statement in function");
}

id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_CondGroupWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<EduStanfordNlpLingTokensregexTypesExpression> expr;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXGROUP:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXMRVAR:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXMRGROUP:
    expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_BasicCondExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
    break;
    case 25:
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 25);
    expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_CondExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 26);
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 18) = self->jj_gen_;
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
  }
  {
    return expr;
  }
}

id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_CondExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<EduStanfordNlpLingTokensregexTypesExpression> child;
  id<JavaUtilList> disjChildren = new_JavaUtilArrayList_init();
  id<JavaUtilList> conjChildren = new_JavaUtilArrayList_init();
  EduStanfordNlpLingTokensregexParserToken *op;
  child = EduStanfordNlpLingTokensregexParserTokenSequenceParser_CondGroupWithEduStanfordNlpLingTokensregexEnv_(self, env);
  [conjChildren addWithId:child];
  while (true) {
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case 36:
      case 37:
      ;
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 19) = self->jj_gen_;
      goto break_label_10;
    }
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case 36:
      op = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 36);
      break;
      case 37:
      op = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 37);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 20) = self->jj_gen_;
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
      @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
    }
    child = EduStanfordNlpLingTokensregexParserTokenSequenceParser_CondGroupWithEduStanfordNlpLingTokensregexEnv_(self, env);
    if ([@"&&" isEqual:((EduStanfordNlpLingTokensregexParserToken *) nil_chk(op))->image_]) {
      [conjChildren addWithId:child];
    }
    else if ([@"||" isEqual:op->image_]) {
      if ([conjChildren size] > 1) {
        [disjChildren addWithId:new_EduStanfordNlpLingTokensregexTypesExpressions_AndExpression_initWithJavaUtilList_(conjChildren)];
      }
      else {
        [disjChildren addWithId:[conjChildren getWithInt:0]];
      }
      conjChildren = new_JavaUtilArrayList_init();
      [conjChildren addWithId:child];
    }
  }
  break_label_10: ;
  if ([conjChildren size] > 1) {
    [disjChildren addWithId:new_EduStanfordNlpLingTokensregexTypesExpressions_AndExpression_initWithJavaUtilList_(conjChildren)];
  }
  else {
    [disjChildren addWithId:[conjChildren getWithInt:0]];
  }
  if ([disjChildren size] == 1) {
    return [disjChildren getWithInt:0];
  }
  else {
    return new_EduStanfordNlpLingTokensregexTypesExpressions_OrExpression_initWithJavaUtilList_(disjChildren);
  }
  @throw new_JavaLangError_initWithNSString_(@"Missing return statement in function");
}

id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexParserTokenSequenceParser_CaseExpressionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<EduStanfordNlpLingTokensregexTypesExpression> cond = nil;
  id<EduStanfordNlpLingTokensregexTypesExpression> expr = nil;
  id<JavaUtilList> cases = new_JavaUtilArrayList_init();
  id<EduStanfordNlpLingTokensregexTypesExpression> elseExpr = nil;
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 38);
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 22);
  while (true) {
    cond = EduStanfordNlpLingTokensregexParserTokenSequenceParser_CondExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 23);
    expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
    [cases addWithId:new_EduStanfordNlpUtilPair_initWithId_withId_(cond, expr)];
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case 33:
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 33);
      break;
      case 30:
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 30);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 21) = self->jj_gen_;
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
      @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
    }
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXGROUP:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXMRVAR:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXMRGROUP:
      case 25:
      ;
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 22) = self->jj_gen_;
      goto break_label_11;
    }
  }
  break_label_11: ;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case 39:
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 39);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 23);
    elseExpr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 23) = self->jj_gen_;
    ;
  }
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 24);
  {
    return new_EduStanfordNlpLingTokensregexTypesExpressions_CaseExpression_initWithJavaUtilList_withEduStanfordNlpLingTokensregexTypesExpression_(cases, elseExpr);
  }
}

NSString *EduStanfordNlpLingTokensregexParserTokenSequenceParser_StringRegexWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexParserToken *tok;
  tok = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEX);
  {
    return [((NSString *) nil_chk(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(tok))->image_)) substring:1 endIndex:((jint) [tok->image_ length]) - 1];
  }
}

EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *expr;
  jboolean hasStart = false;
  jboolean hasEnd = false;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case 40:
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 40);
    hasStart = true;
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 24) = self->jj_gen_;
    ;
  }
  expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexDisjConjWithEduStanfordNlpLingTokensregexEnv_(self, env);
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case 41:
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 41);
    hasEnd = true;
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 25) = self->jj_gen_;
    ;
  }
  if (hasStart) {
    expr = new_EduStanfordNlpLingTokensregexSequencePattern_SequencePatternExpr_initWithEduStanfordNlpLingTokensregexSequencePattern_PatternExprArray_([IOSObjectArray newArrayWithObjects:(id[]){ JreLoadStatic(EduStanfordNlpLingTokensregexSequencePattern, SEQ_BEGIN_PATTERN_EXPR), expr } count:2 type:EduStanfordNlpLingTokensregexSequencePattern_PatternExpr_class_()]);
  }
  if (hasEnd) {
    expr = new_EduStanfordNlpLingTokensregexSequencePattern_SequencePatternExpr_initWithEduStanfordNlpLingTokensregexSequencePattern_PatternExprArray_([IOSObjectArray newArrayWithObjects:(id[]){ expr, JreLoadStatic(EduStanfordNlpLingTokensregexSequencePattern, SEQ_END_PATTERN_EXPR) } count:2 type:EduStanfordNlpLingTokensregexSequencePattern_PatternExpr_class_()]);
  }
  {
    return expr;
  }
}

EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexBasicWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<JavaUtilList> children = new_JavaUtilArrayList_init();
  EduStanfordNlpLingTokensregexNodePattern *node;
  EduStanfordNlpLingTokensregexMultiNodePattern *multiNode;
  EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *expr;
  id value = nil;
  while (true) {
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case 31:
      node = EduStanfordNlpLingTokensregexParserTokenSequenceParser_BracketedNodeWithEduStanfordNlpLingTokensregexEnv_(self, env);
      expr = new_EduStanfordNlpLingTokensregexSequencePattern_NodePatternExpr_initWithEduStanfordNlpLingTokensregexNodePattern_(node);
      break;
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_INT:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_LONGINT:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REAL:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEX:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STRSIMPLE:
      node = EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapWordPatternWithEduStanfordNlpLingTokensregexEnv_(self, env);
      expr = new_EduStanfordNlpLingTokensregexSequencePattern_NodePatternExpr_initWithEduStanfordNlpLingTokensregexNodePattern_(node);
      break;
      case 52:
      multiNode = EduStanfordNlpLingTokensregexParserTokenSequenceParser_MultiNodePatternWithEduStanfordNlpLingTokensregexEnv_(self, env);
      expr = new_EduStanfordNlpLingTokensregexSequencePattern_MultiNodePatternExpr_initWithEduStanfordNlpLingTokensregexMultiNodePattern_(multiNode);
      break;
      case 25:
      expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexGroupWithEduStanfordNlpLingTokensregexEnv_(self, env);
      break;
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR:
      expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqVarWithEduStanfordNlpLingTokensregexEnv_(self, env);
      break;
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_BACKREF:
      expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqBackRefWithEduStanfordNlpLingTokensregexEnv_(self, env);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 27) = self->jj_gen_;
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
      @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
    }
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case 22:
      case 42:
      case 43:
      case 44:
      expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexRepeatTimesWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_(self, env, expr);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 28) = self->jj_gen_;
      ;
    }
    [children addWithId:expr];
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_BACKREF:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_INT:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_LONGINT:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REAL:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEX:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STRSIMPLE:
      case 25:
      case 31:
      case 52:
      ;
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 29) = self->jj_gen_;
      goto break_label_12;
    }
  }
  break_label_12: ;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case 23:
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 23);
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 30) = self->jj_gen_;
    ;
  }
  if ([children size] != 1) {
    expr = new_EduStanfordNlpLingTokensregexSequencePattern_SequencePatternExpr_initWithJavaUtilList_(children);
  }
  if (value != nil) {
    expr = new_EduStanfordNlpLingTokensregexSequencePattern_ValuePatternExpr_initWithEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_withId_(expr, value);
  }
  {
    return expr;
  }
}

EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexRepeatTimesWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env, EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *expr) {
  EduStanfordNlpLingTokensregexParserToken *value;
  EduStanfordNlpLingTokensregexParserToken *v2;
  jint min = -1;
  jint max = -1;
  jboolean greedy = true;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case 42:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 42);
    min = 0;
    max = -1;
    break;
    case 43:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 43);
    min = 0;
    max = 1;
    break;
    case 44:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 44);
    min = 1;
    max = -1;
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 31) = self->jj_gen_;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_27WithInt_(self, 3)) {
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 22);
      value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT);
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 24);
      min = JavaLangInteger_parseIntWithNSString_(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(value))->image_);
      max = min;
    }
    else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_28WithInt_(self, 4)) {
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 22);
      value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT);
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 33);
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 24);
      min = JavaLangInteger_parseIntWithNSString_(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(value))->image_);
      max = -1;
    }
    else {
      switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
        case 22:
        (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 22);
        value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT);
        (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 33);
        v2 = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT);
        (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 24);
        min = JavaLangInteger_parseIntWithNSString_(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(value))->image_);
        max = JavaLangInteger_parseIntWithNSString_(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(v2))->image_);
        break;
        default:
        *IOSIntArray_GetRef(self->jj_la1_, 32) = self->jj_gen_;
        (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
        @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
      }
    }
  }
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case 43:
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 43);
    greedy = false;
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 33) = self->jj_gen_;
    ;
  }
  {
    return new_EduStanfordNlpLingTokensregexSequencePattern_RepeatPatternExpr_initWithEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_withInt_withInt_withBoolean_(expr, min, max, greedy);
  }
}

EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexDisjConjWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *child;
  id<JavaUtilList> disjChildren = new_JavaUtilArrayList_init();
  id<JavaUtilList> conjChildren = new_JavaUtilArrayList_init();
  EduStanfordNlpLingTokensregexParserToken *op;
  child = EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexBasicWithEduStanfordNlpLingTokensregexEnv_(self, env);
  [conjChildren addWithId:child];
  while (true) {
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case 36:
      case 37:
      case 45:
      case 46:
      ;
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 36) = self->jj_gen_;
      goto break_label_14;
    }
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case 46:
      op = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 46);
      break;
      case 45:
      op = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 45);
      break;
      case 36:
      op = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 36);
      break;
      case 37:
      op = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 37);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 37) = self->jj_gen_;
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
      @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
    }
    child = EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexBasicWithEduStanfordNlpLingTokensregexEnv_(self, env);
    if ([@"&" isEqual:((EduStanfordNlpLingTokensregexParserToken *) nil_chk(op))->image_] || [@"&&" isEqual:op->image_]) {
      [conjChildren addWithId:child];
    }
    else if ([@"|" isEqual:op->image_] || [@"||" isEqual:op->image_]) {
      if ([conjChildren size] > 1) {
        [disjChildren addWithId:new_EduStanfordNlpLingTokensregexSequencePattern_AndPatternExpr_initWithJavaUtilList_(conjChildren)];
      }
      else {
        [disjChildren addWithId:[conjChildren getWithInt:0]];
      }
      conjChildren = new_JavaUtilArrayList_init();
      [conjChildren addWithId:child];
    }
  }
  break_label_14: ;
  if ([conjChildren size] > 1) {
    [disjChildren addWithId:new_EduStanfordNlpLingTokensregexSequencePattern_AndPatternExpr_initWithJavaUtilList_(conjChildren)];
  }
  else {
    [disjChildren addWithId:[conjChildren getWithInt:0]];
  }
  if ([disjChildren size] == 1) {
    return [disjChildren getWithInt:0];
  }
  else {
    return new_EduStanfordNlpLingTokensregexSequencePattern_OrPatternExpr_initWithJavaUtilList_(disjChildren);
  }
  @throw new_JavaLangError_initWithNSString_(@"Missing return statement in function");
}

EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexGroupWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *expr;
  jboolean capturing = true;
  NSString *varname = nil;
  EduStanfordNlpLingTokensregexParserToken *var;
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 25);
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case 43:
    case 47:
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case 47:
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 47);
      capturing = false;
      break;
      case 43:
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 43);
      var = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR);
      varname = ((EduStanfordNlpLingTokensregexParserToken *) nil_chk(var))->image_;
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 38) = self->jj_gen_;
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
      @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
    }
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 39) = self->jj_gen_;
    ;
  }
  expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexWithEduStanfordNlpLingTokensregexEnv_(self, env);
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 26);
  if (varname != nil) {
    {
      return new_EduStanfordNlpLingTokensregexSequencePattern_GroupPatternExpr_initWithEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_withNSString_(expr, varname);
    }
  }
  else {
    {
      return new_EduStanfordNlpLingTokensregexSequencePattern_GroupPatternExpr_initWithEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_withBoolean_(expr, capturing);
    }
  }
  @throw new_JavaLangError_initWithNSString_(@"Missing return statement in function");
}

EduStanfordNlpLingTokensregexNodePattern *EduStanfordNlpLingTokensregexParserTokenSequenceParser_BracketedNodeWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexNodePattern *node;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_29WithInt_(self, 2)) {
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 31);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 32);
    node = JreLoadStatic(EduStanfordNlpLingTokensregexNodePattern, ANY_NODE);
  }
  else {
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case 31:
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 31);
      node = EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeDisjConjWithEduStanfordNlpLingTokensregexEnv_(self, env);
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 32);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 40) = self->jj_gen_;
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
      @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
    }
  }
  {
    return node;
  }
}

EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqVarWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *expr;
  EduStanfordNlpLingTokensregexParserToken *name;
  name = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR);
  expr = [((EduStanfordNlpLingTokensregexEnv *) nil_chk(env)) getSequencePatternExprWithNSString:((EduStanfordNlpLingTokensregexParserToken *) nil_chk(name))->image_ withBoolean:true];
  if (expr == nil) {
    {
      @throw new_JavaLangError_initWithNSString_(JreStrcat("$$", @"Unknown sequence pattern variable ", name->image_));
    }
  }
  {
    return expr;
  }
}

EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqBackRefWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexParserToken *name;
  name = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_BACKREF);
  jint v = JavaLangInteger_parseIntWithNSString_([((NSString *) nil_chk(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(name))->image_)) substring:1]);
  {
    return new_EduStanfordNlpLingTokensregexSequencePattern_BackRefPatternExpr_initWithEduStanfordNlpLingTokensregexSequencePattern_NodesMatchChecker_withInt_(JreLoadStatic(EduStanfordNlpLingTokensregexCoreMapNodePattern, TEXT_ATTR_EQUAL_CHECKER), v);
  }
}

EduStanfordNlpLingTokensregexNodePattern *EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexNodePattern *node;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case 31:
    node = EduStanfordNlpLingTokensregexParserTokenSequenceParser_BracketedNodeWithEduStanfordNlpLingTokensregexEnv_(self, env);
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEX:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR:
    case 22:
    case 25:
    case 48:
    case 49:
    node = EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeGroupWithEduStanfordNlpLingTokensregexEnv_(self, env);
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 41) = self->jj_gen_;
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
  }
  {
    return node;
  }
}

EduStanfordNlpLingTokensregexNodePattern *EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeDisjConjWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexNodePattern *child;
  id<JavaUtilList> disjChildren = new_JavaUtilArrayList_init();
  id<JavaUtilList> conjChildren = new_JavaUtilArrayList_init();
  EduStanfordNlpLingTokensregexParserToken *op;
  child = EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeGroupWithEduStanfordNlpLingTokensregexEnv_(self, env);
  [conjChildren addWithId:child];
  while (true) {
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case 36:
      case 37:
      case 45:
      case 46:
      ;
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 46) = self->jj_gen_;
      goto break_label_17;
    }
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case 46:
      op = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 46);
      break;
      case 45:
      op = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 45);
      break;
      case 36:
      op = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 36);
      break;
      case 37:
      op = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 37);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 47) = self->jj_gen_;
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
      @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
    }
    child = EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeGroupWithEduStanfordNlpLingTokensregexEnv_(self, env);
    if ([@"&" isEqual:((EduStanfordNlpLingTokensregexParserToken *) nil_chk(op))->image_] || [@"&&" isEqual:op->image_]) {
      [conjChildren addWithId:child];
    }
    else if ([@"|" isEqual:op->image_] || ([@"||" isEqual:op->image_])) {
      if ([conjChildren size] > 1) {
        [disjChildren addWithId:new_EduStanfordNlpLingTokensregexNodePattern_ConjNodePattern_initWithJavaUtilList_(conjChildren)];
      }
      else {
        [disjChildren addWithId:[conjChildren getWithInt:0]];
      }
      conjChildren = new_JavaUtilArrayList_init();
      [conjChildren addWithId:child];
    }
  }
  break_label_17: ;
  if ([conjChildren size] > 1) {
    [disjChildren addWithId:new_EduStanfordNlpLingTokensregexNodePattern_ConjNodePattern_initWithJavaUtilList_(conjChildren)];
  }
  else {
    [disjChildren addWithId:[conjChildren getWithInt:0]];
  }
  if ([disjChildren size] == 1) {
    return [disjChildren getWithInt:0];
  }
  else {
    return new_EduStanfordNlpLingTokensregexNodePattern_DisjNodePattern_initWithJavaUtilList_(disjChildren);
  }
  @throw new_JavaLangError_initWithNSString_(@"Missing return statement in function");
}

EduStanfordNlpLingTokensregexNodePattern *EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeGroupWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexNodePattern *node;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_30WithInt_(self, 2)) {
    node = EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeBasicWithEduStanfordNlpLingTokensregexEnv_(self, env);
  }
  else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_31WithInt_(self, 2)) {
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 25);
    node = EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeDisjConjWithEduStanfordNlpLingTokensregexEnv_(self, env);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 26);
  }
  else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_32WithInt_(self, 2)) {
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 48);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 25);
    node = EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeDisjConjWithEduStanfordNlpLingTokensregexEnv_(self, env);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 26);
    node = new_EduStanfordNlpLingTokensregexNodePattern_NegateNodePattern_initWithEduStanfordNlpLingTokensregexNodePattern_(node);
  }
  else {
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
  }
  {
    return node;
  }
}

EduStanfordNlpLingTokensregexNodePattern *EduStanfordNlpLingTokensregexParserTokenSequenceParser_NodeBasicWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexNodePattern *child;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case 48:
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 48);
    child = EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapNodeWithEduStanfordNlpLingTokensregexEnv_(self, env);
    {
      return new_EduStanfordNlpLingTokensregexNodePattern_NegateNodePattern_initWithEduStanfordNlpLingTokensregexNodePattern_(child);
    }
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEX:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR:
    case 22:
    case 49:
    child = EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapNodeWithEduStanfordNlpLingTokensregexEnv_(self, env);
    {
      return child;
    }
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 48) = self->jj_gen_;
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
  }
  @throw new_JavaLangError_initWithNSString_(@"Missing return statement in function");
}

EduStanfordNlpLingTokensregexNodePattern *EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapNodeWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<JavaUtilMap> attributes = new_EduStanfordNlpUtilArrayMap_init();
  EduStanfordNlpLingTokensregexNodePattern *pat;
  EduStanfordNlpLingTokensregexParserToken *value = nil;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEX:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR:
    case 22:
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case 22:
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 22);
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_AttrValueWithEduStanfordNlpLingTokensregexEnv_withJavaUtilMap_(self, env, attributes);
      {
        while (true) {
          switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
            case 30:
            case 33:
            ;
            break;
            default:
            *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 49) = self->jj_gen_;
            goto break_label_18;
          }
          switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
            case 33:
            (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 33);
            break;
            case 30:
            (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 30);
            break;
            default:
            *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 50) = self->jj_gen_;
            (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
            @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
          }
          (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_AttrValueWithEduStanfordNlpLingTokensregexEnv_withJavaUtilMap_(self, env, attributes);
        }
        break_label_18: ;
      }
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 24);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 52) = self->jj_gen_;
      if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_33WithInt_(self, 2)) {
        (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_AttrValueWithEduStanfordNlpLingTokensregexEnv_withJavaUtilMap_(self, env, attributes);
      }
      else {
        switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
          case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER:
          case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEX:
          case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR:
          switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
            case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER:
            case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR:
            value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_RelaxedStringToken(self);
            break;
            case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEX:
            value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEX);
            break;
            default:
            *IOSIntArray_GetRef(self->jj_la1_, 51) = self->jj_gen_;
            (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
            @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
          }
          (void) [attributes putWithId:@"word" withId:((EduStanfordNlpLingTokensregexParserToken *) nil_chk(value))->image_];
          break;
          default:
          *IOSIntArray_GetRef(self->jj_la1_, 53) = self->jj_gen_;
          (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
          @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
        }
      }
    }
    pat = EduStanfordNlpLingTokensregexCoreMapNodePattern_valueOfWithEduStanfordNlpLingTokensregexEnv_withJavaUtilMap_(env, attributes);
    {
      return pat;
    }
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR:
    pat = EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapVarNodePatternWithEduStanfordNlpLingTokensregexEnv_(self, env);
    {
      return pat;
    }
    break;
    case 49:
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 49);
    pat = EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapExprNodePatternWithEduStanfordNlpLingTokensregexEnv_(self, env);
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 50);
    {
      return pat;
    }
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 54) = self->jj_gen_;
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
  }
  @throw new_JavaLangError_initWithNSString_(@"Missing return statement in function");
}

id<JavaUtilMap> EduStanfordNlpLingTokensregexParserTokenSequenceParser_AttrValueWithEduStanfordNlpLingTokensregexEnv_withJavaUtilMap_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env, id<JavaUtilMap> attributes) {
  EduStanfordNlpLingTokensregexParserToken *attr = nil;
  EduStanfordNlpLingTokensregexParserToken *value = nil;
  EduStanfordNlpLingTokensregexParserToken *tok = nil;
  NSString *str = nil;
  attr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER);
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case 34:
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 34);
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR:
      value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR);
      break;
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEX:
      value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEX);
      break;
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER:
      value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER);
      break;
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR:
      str = EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapVarValueWithEduStanfordNlpLingTokensregexEnv_(self, env);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 55) = self->jj_gen_;
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
      @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
    }
    break;
    case 51:
    tok = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 51);
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER);
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NUMCMP:
    tok = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NUMCMP);
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_INT:
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REAL:
      value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_NumberToken(self);
      break;
      case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR:
      str = EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapVarValueWithEduStanfordNlpLingTokensregexEnv_(self, env);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 56) = self->jj_gen_;
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
      @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
    }
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 57) = self->jj_gen_;
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
  }
  if (value != nil) {
    str = value->image_;
  }
  if (tok != nil) {
    str = JreStrcat("$$", tok->image_, str);
  }
  if (attr != nil && str != nil) {
    if ([((id<JavaUtilMap>) nil_chk(attributes)) containsKeyWithId:attr->image_]) {
      {
        @throw new_JavaLangError_initWithNSString_(JreStrcat("$$", @"Attribute match already defined: ", attr->image_));
      }
    }
    (void) [attributes putWithId:attr->image_ withId:str];
  }
  {
    return attributes;
  }
}

EduStanfordNlpLingTokensregexNodePattern *EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapWordPatternWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<JavaUtilMap> attributes = new_EduStanfordNlpUtilArrayMap_init();
  EduStanfordNlpLingTokensregexCoreMapNodePattern *pat;
  EduStanfordNlpLingTokensregexParserToken *value = nil;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR);
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEX:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEX);
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER);
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT);
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_INT:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_INT);
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_LONGINT:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_LONGINT);
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REAL:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REAL);
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STRSIMPLE:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STRSIMPLE);
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 58) = self->jj_gen_;
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
  }
  (void) [attributes putWithId:@"word" withId:((EduStanfordNlpLingTokensregexParserToken *) nil_chk(value))->image_];
  pat = EduStanfordNlpLingTokensregexCoreMapNodePattern_valueOfWithEduStanfordNlpLingTokensregexEnv_withJavaUtilMap_(env, attributes);
  {
    return pat;
  }
}

EduStanfordNlpLingTokensregexMultiNodePattern *EduStanfordNlpLingTokensregexParserTokenSequenceParser_MultiNodePatternWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexNodePattern *pat;
  EduStanfordNlpLingTokensregexMultiNodePattern *mp;
  EduStanfordNlpLingTokensregexParserToken *v1, *v2;
  jint min = 1, max = -1;
  jboolean greedy = true;
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 52);
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case 22:
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_34WithInt_(self, 3)) {
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 22);
      v1 = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT);
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 24);
      min = JavaLangInteger_parseIntWithNSString_(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(v1))->image_);
      max = JavaLangInteger_parseIntWithNSString_(v1->image_);
    }
    else if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_35WithInt_(self, 4)) {
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 22);
      v1 = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT);
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 33);
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 24);
      min = JavaLangInteger_parseIntWithNSString_(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(v1))->image_);
    }
    else {
      switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
        case 22:
        (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 22);
        v1 = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT);
        (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 33);
        v2 = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT);
        (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 24);
        min = JavaLangInteger_parseIntWithNSString_(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(v1))->image_);
        max = JavaLangInteger_parseIntWithNSString_(((EduStanfordNlpLingTokensregexParserToken *) nil_chk(v2))->image_);
        break;
        default:
        *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 59) = self->jj_gen_;
        (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
        @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
      }
    }
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 60) = self->jj_gen_;
    ;
  }
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case 43:
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 43);
    greedy = false;
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 61) = self->jj_gen_;
    ;
  }
  pat = EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapWordPatternWithEduStanfordNlpLingTokensregexEnv_(self, env);
  mp = new_EduStanfordNlpLingTokensregexMultiCoreMapNodePattern_initWithEduStanfordNlpLingTokensregexNodePattern_(pat);
  [mp setMinNodesWithInt:min];
  [mp setMaxNodesWithInt:max];
  [mp setGreedyMatchWithBoolean:greedy];
  {
    return mp;
  }
}

NSString *EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapVarValueWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexParserToken *value = nil;
  value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR);
  {
    return (NSString *) cast_chk([((EduStanfordNlpLingTokensregexEnv *) nil_chk(env)) getWithNSString:((EduStanfordNlpLingTokensregexParserToken *) nil_chk(value))->image_], [NSString class]);
  }
}

EduStanfordNlpLingTokensregexNodePattern *EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapVarNodePatternWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexParserToken *value = nil;
  value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR);
  {
    return [((EduStanfordNlpLingTokensregexEnv *) nil_chk(env)) getNodePatternWithNSString:((EduStanfordNlpLingTokensregexParserToken *) nil_chk(value))->image_];
  }
}

EduStanfordNlpLingTokensregexNodePattern *EduStanfordNlpLingTokensregexParserTokenSequenceParser_CoreMapExprNodePatternWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<EduStanfordNlpLingTokensregexTypesExpression> expr = nil;
  expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_CondExpressionWithEduStanfordNlpLingTokensregexEnv_(self, env);
  {
    return new_EduStanfordNlpLingTokensregexCoreMapExpressionNodePattern_initWithEduStanfordNlpLingTokensregexEnv_withEduStanfordNlpLingTokensregexTypesExpression_(env, expr);
  }
}

EduStanfordNlpUtilPair *EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexWithActionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *expr;
  id<EduStanfordNlpLingTokensregexSequenceMatchAction> action = nil;
  expr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_SeqRegexWithEduStanfordNlpLingTokensregexEnv_(self, env);
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case 53:
    action = EduStanfordNlpLingTokensregexParserTokenSequenceParser_ActionWithEduStanfordNlpLingTokensregexEnv_(self, env);
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 62) = self->jj_gen_;
    ;
  }
  {
    return new_EduStanfordNlpUtilPair_initWithId_withId_(expr, action);
  }
}

id<EduStanfordNlpLingTokensregexSequenceMatchAction> EduStanfordNlpLingTokensregexParserTokenSequenceParser_ActionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<EduStanfordNlpLingTokensregexSequenceMatchAction> action;
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 53);
  action = EduStanfordNlpLingTokensregexParserTokenSequenceParser_AnnotateActionWithEduStanfordNlpLingTokensregexEnv_(self, env);
  {
    return action;
  }
}

id<EduStanfordNlpLingTokensregexSequenceMatchAction> EduStanfordNlpLingTokensregexParserTokenSequenceParser_AnnotateActionWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<JavaUtilMap> attributes;
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 54);
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 25);
  attributes = EduStanfordNlpLingTokensregexParserTokenSequenceParser_SetAttrValuesWithEduStanfordNlpLingTokensregexEnv_(self, env);
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 26);
  {
    return new_EduStanfordNlpLingTokensregexCoreMapSequenceMatchAction_AnnotateAction_initWithJavaUtilMap_(attributes);
  }
}

id<JavaUtilMap> EduStanfordNlpLingTokensregexParserTokenSequenceParser_SetAttrValuesWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env) {
  id<JavaUtilMap> attributes = new_EduStanfordNlpUtilArrayMap_init();
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 22);
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_SetAttrValueWithEduStanfordNlpLingTokensregexEnv_withJavaUtilMap_(self, env, attributes);
  while (true) {
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case 30:
      case 33:
      ;
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 63) = self->jj_gen_;
      goto break_label_19;
    }
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
      case 33:
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 33);
      break;
      case 30:
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 30);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 64) = self->jj_gen_;
      (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
      @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
    }
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_SetAttrValueWithEduStanfordNlpLingTokensregexEnv_withJavaUtilMap_(self, env, attributes);
  }
  break_label_19: ;
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 24);
  {
    return attributes;
  }
}

id<JavaUtilMap> EduStanfordNlpLingTokensregexParserTokenSequenceParser_SetAttrValueWithEduStanfordNlpLingTokensregexEnv_withJavaUtilMap_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexEnv *env, id<JavaUtilMap> attributes) {
  EduStanfordNlpLingTokensregexParserToken *attr = nil;
  EduStanfordNlpLingTokensregexParserToken *value = nil;
  NSString *str = nil;
  attr = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER);
  (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, 29);
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_RelaxedStringToken(self);
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_INT:
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REAL:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_NumberToken(self);
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 65) = self->jj_gen_;
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
  }
  if (value != nil) {
    str = value->image_;
  }
  if (attr != nil && str != nil) {
    if ([((id<JavaUtilMap>) nil_chk(attributes)) containsKeyWithId:attr->image_]) {
      {
        @throw new_JavaLangError_initWithNSString_(JreStrcat("$$", @"Attribute already defined: ", attr->image_));
      }
    }
    (void) [attributes putWithId:attr->image_ withId:str];
  }
  {
    return attributes;
  }
}

EduStanfordNlpLingTokensregexParserToken *EduStanfordNlpLingTokensregexParserTokenSequenceParser_NumberToken(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *value = nil;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT);
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_INT:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_INT);
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REAL:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REAL);
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 66) = self->jj_gen_;
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
  }
  {
    return value;
  }
}

EduStanfordNlpLingTokensregexParserToken *EduStanfordNlpLingTokensregexParserTokenSequenceParser_IntegerToken(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *value = nil;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT);
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_INT:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_INT);
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 67) = self->jj_gen_;
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
  }
  {
    return value;
  }
}

EduStanfordNlpLingTokensregexParserToken *EduStanfordNlpLingTokensregexParserTokenSequenceParser_CmpToken(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *value = nil;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STRREGEXCMP:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STRREGEXCMP);
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NUMCMP:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NUMCMP);
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 68) = self->jj_gen_;
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
  }
  {
    return value;
  }
}

EduStanfordNlpLingTokensregexParserToken *EduStanfordNlpLingTokensregexParserTokenSequenceParser_RelaxedStringToken(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *value = nil;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR);
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER);
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 69) = self->jj_gen_;
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
  }
  {
    return value;
  }
}

NSString *EduStanfordNlpLingTokensregexParserTokenSequenceParser_RelaxedString(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *value = nil;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(self) : self->jj_ntk_) {
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR);
    {
      return EduStanfordNlpLingTokensregexParserTokenSequenceParser_parseQuotedStringWithNSString_(self, ((EduStanfordNlpLingTokensregexParserToken *) nil_chk(value))->image_);
    }
    break;
    case EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER:
    value = EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER);
    {
      return ((EduStanfordNlpLingTokensregexParserToken *) nil_chk(value))->image_;
    }
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 70) = self->jj_gen_;
    (void) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpLingTokensregexParserParseException_init();
  }
  @throw new_JavaLangError_initWithNSString_(@"Missing return statement in function");
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_1WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_1(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 0, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_2WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_2(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 1, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_3WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_3(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 2, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_4WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_4(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 3, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_5WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_5(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 4, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_6WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_6(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 5, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_7WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_7(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 6, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_8WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_8(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 7, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_9WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_9(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 8, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_10WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_10(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 9, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_11WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_11(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 10, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_12WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_12(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 11, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_13WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_13(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 12, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_14WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_14(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 13, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_15WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_15(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 14, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_16WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_16(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 15, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_17WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_17(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 16, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_18WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_18(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 17, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_19WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_19(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 18, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_20WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_20(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 19, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_21WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_21(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 20, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_22WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_22(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 21, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_23WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_23(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 22, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_24WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_24(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 23, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_25WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_25(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 24, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_26WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_26(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 25, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_27WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_27(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 26, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_28WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_28(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 27, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_29WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_29(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 28, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_30WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_30(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 29, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_31WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_31(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 30, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_32WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_32(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 31, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_33WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_33(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 32, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_34WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_34(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 33, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_2_35WithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint xla) {
  self->jj_la_ = xla;
  self->jj_lastpos_ = self->jj_scanpos_ = self->token_;
  @try {
    return !EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_35(self);
  }
  @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    return true;
  }
  @finally {
    EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(self, 34, xla);
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_14(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_30(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_73(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_14(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_15(self)) {
      self->jj_scanpos_ = xsp;
      if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_16(self)) return true;
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_51(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_129(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 43)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_50(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_32(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_50(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_51(self)) return true;
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_60(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_72(self)) return true;
  EduStanfordNlpLingTokensregexParserToken *xsp;
  while (true) {
    xsp = self->jj_scanpos_;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_73(self)) {
      self->jj_scanpos_ = xsp;
      break;
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_128(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 47)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_121(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_128(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_129(self)) return true;
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_112(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 25)) return true;
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_121(self)) self->jj_scanpos_ = xsp;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_59(self)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 26)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_108(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 18)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 7)) return true;
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_90(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_31(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_52(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 20)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 19)) return true;
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_33(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 25)) return true;
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_90(self)) self->jj_scanpos_ = xsp;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 26)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_49(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 13)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 14)) return true;
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_66(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXMRGROUP)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_65(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXMRVAR)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_64(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXGROUP)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_135(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 13)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 14)) {
      self->jj_scanpos_ = xsp;
      if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 16)) return true;
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_63(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_42(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_62(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_63(self)) {
      self->jj_scanpos_ = xsp;
      if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_64(self)) {
        self->jj_scanpos_ = xsp;
        if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_65(self)) {
          self->jj_scanpos_ = xsp;
          if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_66(self)) return true;
        }
      }
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_62(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_107(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 46)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 45)) {
      self->jj_scanpos_ = xsp;
      if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 36)) {
        self->jj_scanpos_ = xsp;
        if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 37)) return true;
      }
    }
  }
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_87(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_89(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_72(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_88(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_89(self)) return true;
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_88(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_71(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_87(self)) return true;
  EduStanfordNlpLingTokensregexParserToken *xsp;
  while (true) {
    xsp = self->jj_scanpos_;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_107(self)) {
      self->jj_scanpos_ = xsp;
      break;
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_80(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 25)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_59(self)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 26)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_79(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REAL)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_78(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_LONGINT)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_77(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_49(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_76(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_STR)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_67(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_75(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_76(self)) {
      self->jj_scanpos_ = xsp;
      if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_77(self)) {
        self->jj_scanpos_ = xsp;
        if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_78(self)) {
          self->jj_scanpos_ = xsp;
          if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_79(self)) {
            self->jj_scanpos_ = xsp;
            if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_80(self)) return true;
          }
        }
      }
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_75(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEX)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_126(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 43)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_125(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 22)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 33)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_81(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 33)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 30)) return true;
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_39(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_32(self)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 34)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_31(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_28(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 22)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 33)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 24)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_124(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 44)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_27(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 22)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 24)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_123(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 43)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_122(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 42)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_118(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_122(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_123(self)) {
      self->jj_scanpos_ = xsp;
      if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_124(self)) {
        self->jj_scanpos_ = xsp;
        if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_27(self)) {
          self->jj_scanpos_ = xsp;
          if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_28(self)) {
            self->jj_scanpos_ = xsp;
            if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_125(self)) return true;
          }
        }
      }
    }
  }
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_126(self)) self->jj_scanpos_ = xsp;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_22(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 22)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_39(self)) return true;
  EduStanfordNlpLingTokensregexParserToken *xsp;
  while (true) {
    xsp = self->jj_scanpos_;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_81(self)) {
      self->jj_scanpos_ = xsp;
      break;
    }
  }
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 24)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_96(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_68(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_115(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 23)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_31(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_95(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_117(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_118(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_134(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_45(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_22(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_131(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_134(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_106(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_114(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_44(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_67(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_105(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_113(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_26(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_44(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_45(self)) return true;
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_104(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_112(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_103(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_111(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_74(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 33)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_31(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_102(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_110(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_101(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_109(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_61(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_31(self)) return true;
  EduStanfordNlpLingTokensregexParserToken *xsp;
  while (true) {
    xsp = self->jj_scanpos_;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_74(self)) {
      self->jj_scanpos_ = xsp;
      break;
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_97(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_101(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_102(self)) {
      self->jj_scanpos_ = xsp;
      if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_103(self)) {
        self->jj_scanpos_ = xsp;
        if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_104(self)) {
          self->jj_scanpos_ = xsp;
          if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_105(self)) {
            self->jj_scanpos_ = xsp;
            if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_106(self)) return true;
          }
        }
      }
    }
  }
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_117(self)) self->jj_scanpos_ = xsp;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_120(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 43)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_87(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_97(self)) return true;
  while (true) {
    xsp = self->jj_scanpos_;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_97(self)) {
      self->jj_scanpos_ = xsp;
      break;
    }
  }
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_115(self)) self->jj_scanpos_ = xsp;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_40(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 25)) return true;
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_61(self)) self->jj_scanpos_ = xsp;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 26)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_127(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 22)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 33)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_35(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 22)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 33)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 24)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_30(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 31)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_49(self)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 32)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_133(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_134(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_119(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_34(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_35(self)) {
      self->jj_scanpos_ = xsp;
      if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_127(self)) return true;
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_34(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 22)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NONNEGINT)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 24)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_111(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 52)) return true;
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_119(self)) self->jj_scanpos_ = xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_120(self)) self->jj_scanpos_ = xsp;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_110(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_13(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_29(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_12(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_28(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_11(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_27(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_10(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_26(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_9(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_25(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_8(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_24(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_110(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 18)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 17)) {
      self->jj_scanpos_ = xsp;
      if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 7)) {
        self->jj_scanpos_ = xsp;
        if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 13)) {
          self->jj_scanpos_ = xsp;
          if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 14)) {
            self->jj_scanpos_ = xsp;
            if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 15)) {
              self->jj_scanpos_ = xsp;
              if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 16)) {
                self->jj_scanpos_ = xsp;
                if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 21)) return true;
              }
            }
          }
        }
      }
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_98(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 41)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_31(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_8(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_9(self)) {
      self->jj_scanpos_ = xsp;
      if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_10(self)) {
        self->jj_scanpos_ = xsp;
        if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_11(self)) {
          self->jj_scanpos_ = xsp;
          if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_12(self)) {
            self->jj_scanpos_ = xsp;
            if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_13(self)) return true;
          }
        }
      }
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_70(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 40)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_132(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_135(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_59(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_70(self)) self->jj_scanpos_ = xsp;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_71(self)) return true;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_98(self)) self->jj_scanpos_ = xsp;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_38(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_60(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_58(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_NUMCMP)) return true;
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_132(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_133(self)) return true;
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_57(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 51)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_23(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEX)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_56(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 34)) return true;
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 18)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 17)) {
      self->jj_scanpos_ = xsp;
      if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 7)) {
        self->jj_scanpos_ = xsp;
        if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_131(self)) return true;
      }
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_21(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_38(self)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 29)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_31(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_48(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_68(self)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 23)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_31(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_37(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_IDENTIFIER)) return true;
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_56(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_57(self)) {
      self->jj_scanpos_ = xsp;
      if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_58(self)) return true;
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_7(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 22)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 28)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_23(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_6(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 22)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 27)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 25)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_29(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 38)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 22)) return true;
  EduStanfordNlpLingTokensregexParserToken *xsp;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_48(self)) return true;
  while (true) {
    xsp = self->jj_scanpos_;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_48(self)) {
      self->jj_scanpos_ = xsp;
      break;
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_5(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 22)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 25)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_59(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_100(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_108(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_20(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_4(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_5(self)) {
      self->jj_scanpos_ = xsp;
      if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_6(self)) {
        self->jj_scanpos_ = xsp;
        if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_7(self)) return true;
      }
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_4(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 22)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_23(self)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 23)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_94(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_100(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 17)) return true;
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_33(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_37(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_86(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 49)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_96(self)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 50)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_85(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_95(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_3(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_22(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_2(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_21(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_1(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_20(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_93(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 22)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_37(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_83(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 36)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 37)) return true;
  }
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_82(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_69(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_84(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_85(self)) {
      self->jj_scanpos_ = xsp;
      if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_86(self)) return true;
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_84(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_93(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_33(self)) {
      self->jj_scanpos_ = xsp;
      if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_94(self)) return true;
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_68(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_82(self)) return true;
  EduStanfordNlpLingTokensregexParserToken *xsp;
  while (true) {
    xsp = self->jj_scanpos_;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_83(self)) {
      self->jj_scanpos_ = xsp;
      break;
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_54(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_69(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_53(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 48)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_69(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_35(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_53(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_54(self)) return true;
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_92(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 25)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_68(self)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 26)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_91(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_99(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_82(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_91(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_92(self)) return true;
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_32(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 48)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 25)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_36(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_26(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_24(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_31(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 25)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_36(self)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 26)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_30(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_35(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_34(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_52(self)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_31(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_55(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_30(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_31(self)) {
      self->jj_scanpos_ = xsp;
      if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_32(self)) return true;
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_25(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_25(self)) return true;
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_34(self)) self->jj_scanpos_ = xsp;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_99(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_25(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_26(self)) return true;
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_47(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 33)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_31(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_130(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 46)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 45)) {
      self->jj_scanpos_ = xsp;
      if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 36)) {
        self->jj_scanpos_ = xsp;
        if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 37)) return true;
      }
    }
  }
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_55(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_28(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 31)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_31(self)) return true;
  EduStanfordNlpLingTokensregexParserToken *xsp;
  while (true) {
    xsp = self->jj_scanpos_;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_47(self)) {
      self->jj_scanpos_ = xsp;
      break;
    }
  }
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 32)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_36(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_55(self)) return true;
  EduStanfordNlpLingTokensregexParserToken *xsp;
  while (true) {
    xsp = self->jj_scanpos_;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_130(self)) {
      self->jj_scanpos_ = xsp;
      break;
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_46(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 33)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_31(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_27(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 25)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_31(self)) return true;
  EduStanfordNlpLingTokensregexParserToken *xsp;
  while (true) {
    xsp = self->jj_scanpos_;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_46(self)) {
      self->jj_scanpos_ = xsp;
      break;
    }
  }
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 26)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_24(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 35)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_32(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_23(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 35)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_33(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_22(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 31)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_31(self)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 32)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_41(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_21(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_22(self)) {
      self->jj_scanpos_ = xsp;
      if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_23(self)) {
        self->jj_scanpos_ = xsp;
        if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_24(self)) return true;
      }
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_21(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_30(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_24(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_40(self)) return true;
  EduStanfordNlpLingTokensregexParserToken *xsp;
  while (true) {
    xsp = self->jj_scanpos_;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_41(self)) {
      self->jj_scanpos_ = xsp;
      break;
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_20(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 35)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_32(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_114(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_BACKREF)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_19(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 35)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_33(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_18(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 31)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_31(self)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 32)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_43(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_17(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_18(self)) {
      self->jj_scanpos_ = xsp;
      if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_19(self)) {
        self->jj_scanpos_ = xsp;
        if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_20(self)) return true;
      }
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_17(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_30(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_113(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserConstants_REGEXVAR)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_25(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_42(self)) return true;
  EduStanfordNlpLingTokensregexParserToken *xsp;
  while (true) {
    xsp = self->jj_scanpos_;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_43(self)) {
      self->jj_scanpos_ = xsp;
      break;
    }
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_116(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 31)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_36(self)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 32)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_29(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 31)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 32)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_16(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 35)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_32(self)) return true;
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_109(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  EduStanfordNlpLingTokensregexParserToken *xsp;
  xsp = self->jj_scanpos_;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_29(self)) {
    self->jj_scanpos_ = xsp;
    if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_116(self)) return true;
  }
  return false;
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_15(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(self, 31)) return true;
  if (EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3R_31(self)) return true;
  return false;
}

void EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_la1_init_0() {
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_initialize();
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_la1_0 = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0x400180, (jint) 0x40000000, (jint) 0x0, (jint) 0x8247ef80, (jint) 0x247e000, (jint) 0x40000000, (jint) 0x40000000, (jint) 0x207e000, (jint) 0x180, (jint) 0xf80, (jint) 0x0, (jint) 0x8247ef80, -0x7fffffff - 1, -0x7fffffff - 1, -0x7fffffff - 1, (jint) 0x0, (jint) 0x0, (jint) 0x180000, (jint) 0x2000f80, (jint) 0x0, (jint) 0x0, (jint) 0x40000000, (jint) 0x2000f80, (jint) 0x0, (jint) 0x0, (jint) 0x0, (jint) 0x5e000, (jint) 0x8227f180, (jint) 0x400000, (jint) 0x8227f180, (jint) 0x800000, (jint) 0x0, (jint) 0x400000, (jint) 0x0, (jint) 0x0, (jint) 0x0, (jint) 0x0, (jint) 0x0, (jint) 0x0, (jint) 0x0, -0x7fffffff - 1, (jint) 0x82460180, (jint) 0x0, (jint) 0x0, (jint) 0x0, (jint) 0x0, (jint) 0x0, (jint) 0x0, (jint) 0x460180, (jint) 0x40000000, (jint) 0x40000000, (jint) 0x60080, (jint) 0x400000, (jint) 0x60080, (jint) 0x460180, (jint) 0x60180, (jint) 0x16100, (jint) 0x80000, (jint) 0x27e080, (jint) 0x400000, (jint) 0x400000, (jint) 0x0, (jint) 0x0, (jint) 0x40000000, (jint) 0x40000000, (jint) 0x56080, (jint) 0x16000, (jint) 0x6000, (jint) 0x180000, (jint) 0x40080, (jint) 0x40080 } count:71];
}

void EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_la1_init_1() {
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_initialize();
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_la1_1 = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0x0, (jint) 0x0, (jint) 0x2, (jint) 0x40, (jint) 0x0, (jint) 0x2, (jint) 0x2, (jint) 0x0, (jint) 0x0, (jint) 0x0, (jint) 0x2, (jint) 0x40, (jint) 0x8, (jint) 0x8, (jint) 0x8, (jint) 0x2, (jint) 0x2, (jint) 0x0, (jint) 0x0, (jint) 0x30, (jint) 0x30, (jint) 0x2, (jint) 0x0, (jint) 0x80, (jint) 0x100, (jint) 0x200, (jint) 0x0, (jint) 0x100000, (jint) 0x1c00, (jint) 0x100000, (jint) 0x0, (jint) 0x1c00, (jint) 0x0, (jint) 0x800, (jint) 0x2020, (jint) 0x2020, (jint) 0x6030, (jint) 0x6030, (jint) 0x8800, (jint) 0x8800, (jint) 0x0, (jint) 0x30000, (jint) 0x2020, (jint) 0x2020, (jint) 0x4010, (jint) 0x4010, (jint) 0x6030, (jint) 0x6030, (jint) 0x30000, (jint) 0x2, (jint) 0x2, (jint) 0x0, (jint) 0x0, (jint) 0x0, (jint) 0x20000, (jint) 0x0, (jint) 0x0, (jint) 0x80004, (jint) 0x0, (jint) 0x0, (jint) 0x0, (jint) 0x800, (jint) 0x200000, (jint) 0x2, (jint) 0x2, (jint) 0x0, (jint) 0x0, (jint) 0x0, (jint) 0x0, (jint) 0x0, (jint) 0x0 } count:71];
}

void EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithJavaIoInputStream_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, JavaIoInputStream *stream) {
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithJavaIoInputStream_withNSString_(self, stream, nil);
}

EduStanfordNlpLingTokensregexParserTokenSequenceParser *new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithJavaIoInputStream_(JavaIoInputStream *stream) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParser, initWithJavaIoInputStream_, stream)
}

EduStanfordNlpLingTokensregexParserTokenSequenceParser *create_EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithJavaIoInputStream_(JavaIoInputStream *stream) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParser, initWithJavaIoInputStream_, stream)
}

void EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithJavaIoInputStream_withNSString_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, JavaIoInputStream *stream, NSString *encoding) {
  NSObject_init(self);
  self->jj_la1_ = [IOSIntArray newArrayWithLength:71];
  self->jj_2_rtns_ = [IOSObjectArray newArrayWithLength:35 type:EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls_class_()];
  self->jj_rescan_ = false;
  self->jj_gc_ = 0;
  self->jj_ls_ = new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess_init();
  self->jj_expentries_ = new_JavaUtilArrayList_init();
  self->jj_kind_ = -1;
  self->jj_lasttokens_ = [IOSIntArray newArrayWithLength:100];
  @try {
    self->jj_input_stream_ = new_EduStanfordNlpLingTokensregexParserSimpleCharStream_initWithJavaIoInputStream_withNSString_withInt_withInt_(stream, encoding, 1, 1);
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
  self->token_source_ = new_EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_initWithEduStanfordNlpLingTokensregexParserSimpleCharStream_(self->jj_input_stream_);
  self->token_ = new_EduStanfordNlpLingTokensregexParserToken_init();
  self->jj_ntk_ = -1;
  self->jj_gen_ = 0;
  for (jint i = 0; i < 71; i++) *IOSIntArray_GetRef(self->jj_la1_, i) = -1;
  for (jint i = 0; i < self->jj_2_rtns_->size_; i++) (void) IOSObjectArray_SetAndConsume(self->jj_2_rtns_, i, new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls_init());
}

EduStanfordNlpLingTokensregexParserTokenSequenceParser *new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithJavaIoInputStream_withNSString_(JavaIoInputStream *stream, NSString *encoding) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParser, initWithJavaIoInputStream_withNSString_, stream, encoding)
}

EduStanfordNlpLingTokensregexParserTokenSequenceParser *create_EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithJavaIoInputStream_withNSString_(JavaIoInputStream *stream, NSString *encoding) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParser, initWithJavaIoInputStream_withNSString_, stream, encoding)
}

void EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithJavaIoReader_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, JavaIoReader *stream) {
  NSObject_init(self);
  self->jj_la1_ = [IOSIntArray newArrayWithLength:71];
  self->jj_2_rtns_ = [IOSObjectArray newArrayWithLength:35 type:EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls_class_()];
  self->jj_rescan_ = false;
  self->jj_gc_ = 0;
  self->jj_ls_ = new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess_init();
  self->jj_expentries_ = new_JavaUtilArrayList_init();
  self->jj_kind_ = -1;
  self->jj_lasttokens_ = [IOSIntArray newArrayWithLength:100];
  self->jj_input_stream_ = new_EduStanfordNlpLingTokensregexParserSimpleCharStream_initWithJavaIoReader_withInt_withInt_(stream, 1, 1);
  self->token_source_ = new_EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_initWithEduStanfordNlpLingTokensregexParserSimpleCharStream_(self->jj_input_stream_);
  self->token_ = new_EduStanfordNlpLingTokensregexParserToken_init();
  self->jj_ntk_ = -1;
  self->jj_gen_ = 0;
  for (jint i = 0; i < 71; i++) *IOSIntArray_GetRef(self->jj_la1_, i) = -1;
  for (jint i = 0; i < self->jj_2_rtns_->size_; i++) (void) IOSObjectArray_SetAndConsume(self->jj_2_rtns_, i, new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls_init());
}

EduStanfordNlpLingTokensregexParserTokenSequenceParser *new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithJavaIoReader_(JavaIoReader *stream) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParser, initWithJavaIoReader_, stream)
}

EduStanfordNlpLingTokensregexParserTokenSequenceParser *create_EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithJavaIoReader_(JavaIoReader *stream) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParser, initWithJavaIoReader_, stream)
}

void EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithEduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *tm) {
  NSObject_init(self);
  self->jj_la1_ = [IOSIntArray newArrayWithLength:71];
  self->jj_2_rtns_ = [IOSObjectArray newArrayWithLength:35 type:EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls_class_()];
  self->jj_rescan_ = false;
  self->jj_gc_ = 0;
  self->jj_ls_ = new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess_init();
  self->jj_expentries_ = new_JavaUtilArrayList_init();
  self->jj_kind_ = -1;
  self->jj_lasttokens_ = [IOSIntArray newArrayWithLength:100];
  self->token_source_ = tm;
  self->token_ = new_EduStanfordNlpLingTokensregexParserToken_init();
  self->jj_ntk_ = -1;
  self->jj_gen_ = 0;
  for (jint i = 0; i < 71; i++) *IOSIntArray_GetRef(self->jj_la1_, i) = -1;
  for (jint i = 0; i < self->jj_2_rtns_->size_; i++) (void) IOSObjectArray_SetAndConsume(self->jj_2_rtns_, i, new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls_init());
}

EduStanfordNlpLingTokensregexParserTokenSequenceParser *new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithEduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *tm) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParser, initWithEduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_, tm)
}

EduStanfordNlpLingTokensregexParserTokenSequenceParser *create_EduStanfordNlpLingTokensregexParserTokenSequenceParser_initWithEduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *tm) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParser, initWithEduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_, tm)
}

EduStanfordNlpLingTokensregexParserToken *EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_consume_tokenWithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint kind) {
  EduStanfordNlpLingTokensregexParserToken *oldToken;
  if ((oldToken = self->token_)->next_ != nil) self->token_ = ((EduStanfordNlpLingTokensregexParserToken *) nil_chk(self->token_))->next_;
  else self->token_ = ((EduStanfordNlpLingTokensregexParserToken *) nil_chk(self->token_))->next_ = [((EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *) nil_chk(self->token_source_)) getNextToken];
  self->jj_ntk_ = -1;
  if (self->token_->kind_ == kind) {
    self->jj_gen_++;
    if (++self->jj_gc_ > 100) {
      self->jj_gc_ = 0;
      {
        IOSObjectArray *a__ = self->jj_2_rtns_;
        EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
        EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls *jj_2_rtn = *b__++;
          EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls *c = jj_2_rtn;
          while (c != nil) {
            if (c->gen_ < self->jj_gen_) c->first_ = nil;
            c = c->next_;
          }
        }
      }
    }
    return self->token_;
  }
  self->token_ = oldToken;
  self->jj_kind_ = kind;
  @throw [self generateParseException];
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_scan_tokenWithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint kind) {
  if (self->jj_scanpos_ == self->jj_lastpos_) {
    self->jj_la_--;
    if (((EduStanfordNlpLingTokensregexParserToken *) nil_chk(self->jj_scanpos_))->next_ == nil) {
      self->jj_lastpos_ = self->jj_scanpos_ = self->jj_scanpos_->next_ = [((EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *) nil_chk(self->token_source_)) getNextToken];
    }
    else {
      self->jj_lastpos_ = self->jj_scanpos_ = self->jj_scanpos_->next_;
    }
  }
  else {
    self->jj_scanpos_ = ((EduStanfordNlpLingTokensregexParserToken *) nil_chk(self->jj_scanpos_))->next_;
  }
  if (self->jj_rescan_) {
    jint i = 0;
    EduStanfordNlpLingTokensregexParserToken *tok = self->token_;
    while (tok != nil && tok != self->jj_scanpos_) {
      i++;
      tok = tok->next_;
    }
    if (tok != nil) EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_add_error_tokenWithInt_withInt_(self, kind, i);
  }
  if (((EduStanfordNlpLingTokensregexParserToken *) nil_chk(self->jj_scanpos_))->kind_ != kind) return true;
  if (self->jj_la_ == 0 && self->jj_scanpos_ == self->jj_lastpos_) @throw self->jj_ls_;
  return false;
}

jint EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_ntk(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  if ((self->jj_nt_ = ((EduStanfordNlpLingTokensregexParserToken *) nil_chk(self->token_))->next_) == nil) return (self->jj_ntk_ = (self->token_->next_ = [((EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *) nil_chk(self->token_source_)) getNextToken])->kind_);
  else return (self->jj_ntk_ = ((EduStanfordNlpLingTokensregexParserToken *) nil_chk(self->jj_nt_))->kind_);
}

void EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_add_error_tokenWithInt_withInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint kind, jint pos) {
  if (pos >= 100) return;
  if (pos == self->jj_endpos_ + 1) {
    *IOSIntArray_GetRef(nil_chk(self->jj_lasttokens_), self->jj_endpos_++) = kind;
  }
  else if (self->jj_endpos_ != 0) {
    self->jj_expentry_ = [IOSIntArray newArrayWithLength:self->jj_endpos_];
    for (jint i = 0; i < self->jj_endpos_; i++) {
      *IOSIntArray_GetRef(self->jj_expentry_, i) = IOSIntArray_Get(nil_chk(self->jj_lasttokens_), i);
    }
    for (IOSIntArray * __strong jj_expentry1 in nil_chk(self->jj_expentries_)) {
      {
        IOSIntArray *oldentry = (jj_expentry1);
        if (((IOSIntArray *) nil_chk(oldentry))->size_ == self->jj_expentry_->size_) {
          for (jint i = 0; i < self->jj_expentry_->size_; i++) {
            if (IOSIntArray_Get(oldentry, i) != IOSIntArray_Get(self->jj_expentry_, i)) {
              goto continue_jj_entries_loop;
            }
          }
          [self->jj_expentries_ addWithId:self->jj_expentry_];
          goto break_jj_entries_loop;
        }
      }
      continue_jj_entries_loop: ;
    }
    break_jj_entries_loop: ;
    if (pos != 0) *IOSIntArray_GetRef(nil_chk(self->jj_lasttokens_), (self->jj_endpos_ = pos) - 1) = kind;
  }
}

void EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_rescan_token(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self) {
  self->jj_rescan_ = true;
  for (jint i = 0; i < 35; i++) {
    @try {
      EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls *p = IOSObjectArray_Get(nil_chk(self->jj_2_rtns_), i);
      do {
        if (((EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls *) nil_chk(p))->gen_ > self->jj_gen_) {
          self->jj_la_ = p->arg_;
          self->jj_lastpos_ = self->jj_scanpos_ = p->first_;
          switch (i) {
            case 0:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_1(self);
            break;
            case 1:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_2(self);
            break;
            case 2:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_3(self);
            break;
            case 3:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_4(self);
            break;
            case 4:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_5(self);
            break;
            case 5:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_6(self);
            break;
            case 6:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_7(self);
            break;
            case 7:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_8(self);
            break;
            case 8:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_9(self);
            break;
            case 9:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_10(self);
            break;
            case 10:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_11(self);
            break;
            case 11:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_12(self);
            break;
            case 12:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_13(self);
            break;
            case 13:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_14(self);
            break;
            case 14:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_15(self);
            break;
            case 15:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_16(self);
            break;
            case 16:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_17(self);
            break;
            case 17:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_18(self);
            break;
            case 18:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_19(self);
            break;
            case 19:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_20(self);
            break;
            case 20:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_21(self);
            break;
            case 21:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_22(self);
            break;
            case 22:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_23(self);
            break;
            case 23:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_24(self);
            break;
            case 24:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_25(self);
            break;
            case 25:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_26(self);
            break;
            case 26:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_27(self);
            break;
            case 27:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_28(self);
            break;
            case 28:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_29(self);
            break;
            case 29:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_30(self);
            break;
            case 30:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_31(self);
            break;
            case 31:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_32(self);
            break;
            case 32:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_33(self);
            break;
            case 33:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_34(self);
            break;
            case 34:
            EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_3_35(self);
            break;
          }
        }
        p = p->next_;
      }
      while (p != nil);
    }
    @catch (EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *ls) {
    }
  }
  self->jj_rescan_ = false;
}

void EduStanfordNlpLingTokensregexParserTokenSequenceParser_jj_saveWithInt_withInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParser *self, jint index, jint xla) {
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls *p = IOSObjectArray_Get(nil_chk(self->jj_2_rtns_), index);
  while (((EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls *) nil_chk(p))->gen_ > self->jj_gen_) {
    if (p->next_ == nil) {
      p = p->next_ = new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls_init();
      break;
    }
    p = p->next_;
  }
  p->gen_ = self->jj_gen_ + xla - self->jj_la_;
  p->first_ = self->token_;
  p->arg_ = xla;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexParserTokenSequenceParser)

@implementation EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpLingTokensregexParserTokenSequenceParser;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess = { "LookaheadSuccess", "edu.stanford.nlp.ling.tokensregex.parser", ptrTable, methods, NULL, 7, 0x1a, 1, 0, 0, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess;
}

@end

void EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess_init(EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *self) {
  JavaLangError_init(self);
}

EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess, init)
}

EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess *create_EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexParserTokenSequenceParser_LookaheadSuccess)

@implementation EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "gen_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "first_", "LEduStanfordNlpLingTokensregexParserToken;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "arg_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "next_", "LEduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpLingTokensregexParserTokenSequenceParser;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls = { "JJCalls", "edu.stanford.nlp.ling.tokensregex.parser", ptrTable, methods, fields, 7, 0x18, 1, 4, 0, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls;
}

@end

void EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls_init(EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls *self) {
  NSObject_init(self);
}

EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls *new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls, init)
}

EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls *create_EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexParserTokenSequenceParser_JJCalls)
