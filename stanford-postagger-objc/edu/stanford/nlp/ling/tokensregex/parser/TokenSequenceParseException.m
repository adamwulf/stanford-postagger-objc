//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParseException.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParseException.h"
#include "java/lang/Exception.h"

@implementation EduStanfordNlpLingTokensregexParserTokenSequenceParseException

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingTokensregexParserTokenSequenceParseException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)msg {
  EduStanfordNlpLingTokensregexParserTokenSequenceParseException_initWithNSString_(self, msg);
  return self;
}

- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)throwable {
  EduStanfordNlpLingTokensregexParserTokenSequenceParseException_initWithNSString_withNSException_(self, message, throwable);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(initWithNSString:withNSException:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LNSString;LNSException;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexParserTokenSequenceParseException = { "TokenSequenceParseException", "edu.stanford.nlp.ling.tokensregex.parser", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexParserTokenSequenceParseException;
}

@end

void EduStanfordNlpLingTokensregexParserTokenSequenceParseException_init(EduStanfordNlpLingTokensregexParserTokenSequenceParseException *self) {
  JavaLangException_init(self);
}

EduStanfordNlpLingTokensregexParserTokenSequenceParseException *new_EduStanfordNlpLingTokensregexParserTokenSequenceParseException_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParseException, init)
}

EduStanfordNlpLingTokensregexParserTokenSequenceParseException *create_EduStanfordNlpLingTokensregexParserTokenSequenceParseException_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParseException, init)
}

void EduStanfordNlpLingTokensregexParserTokenSequenceParseException_initWithNSString_(EduStanfordNlpLingTokensregexParserTokenSequenceParseException *self, NSString *msg) {
  JavaLangException_initWithNSString_(self, msg);
}

EduStanfordNlpLingTokensregexParserTokenSequenceParseException *new_EduStanfordNlpLingTokensregexParserTokenSequenceParseException_initWithNSString_(NSString *msg) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParseException, initWithNSString_, msg)
}

EduStanfordNlpLingTokensregexParserTokenSequenceParseException *create_EduStanfordNlpLingTokensregexParserTokenSequenceParseException_initWithNSString_(NSString *msg) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParseException, initWithNSString_, msg)
}

void EduStanfordNlpLingTokensregexParserTokenSequenceParseException_initWithNSString_withNSException_(EduStanfordNlpLingTokensregexParserTokenSequenceParseException *self, NSString *message, NSException *throwable) {
  JavaLangException_initWithNSString_withNSException_(self, message, throwable);
}

EduStanfordNlpLingTokensregexParserTokenSequenceParseException *new_EduStanfordNlpLingTokensregexParserTokenSequenceParseException_initWithNSString_withNSException_(NSString *message, NSException *throwable) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParseException, initWithNSString_withNSException_, message, throwable)
}

EduStanfordNlpLingTokensregexParserTokenSequenceParseException *create_EduStanfordNlpLingTokensregexParserTokenSequenceParseException_initWithNSString_withNSException_(NSString *message, NSException *throwable) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParseException, initWithNSString_withNSException_, message, throwable)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexParserTokenSequenceParseException)
