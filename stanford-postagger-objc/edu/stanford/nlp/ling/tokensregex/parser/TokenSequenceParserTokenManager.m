//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserTokenManager.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/tokensregex/parser/SimpleCharStream.h"
#include "edu/stanford/nlp/ling/tokensregex/parser/Token.h"
#include "edu/stanford/nlp/ling/tokensregex/parser/TokenMgrError.h"
#include "edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParserTokenManager.h"
#include "java/io/IOException.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"

@interface EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager () {
 @public
  IOSIntArray *jjrounds_;
  IOSIntArray *jjstateSet_;
}

- (jint)jjStopStringLiteralDfa_0WithInt:(jint)pos
                               withLong:(jlong)active0;

- (jint)jjStartNfa_0WithInt:(jint)pos
                   withLong:(jlong)active0;

- (jint)jjStopAtPosWithInt:(jint)pos
                   withInt:(jint)kind;

- (jint)jjMoveStringLiteralDfa0_0;

- (jint)jjMoveStringLiteralDfa1_0WithLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa2_0WithLong:(jlong)old0
                                 withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa3_0WithLong:(jlong)old0
                                 withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa4_0WithLong:(jlong)old0
                                 withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa5_0WithLong:(jlong)old0
                                 withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa6_0WithLong:(jlong)old0
                                 withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa7_0WithLong:(jlong)old0
                                 withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa8_0WithLong:(jlong)old0
                                 withLong:(jlong)active0;

- (jint)jjStartNfaWithStates_0WithInt:(jint)pos
                              withInt:(jint)kind
                              withInt:(jint)state;

- (jint)jjMoveNfa_0WithInt:(jint)startState
                   withInt:(jint)curPos;

+ (jboolean)jjCanMove_0WithInt:(jint)hiByte
                       withInt:(jint)i1
                       withInt:(jint)i2
                      withLong:(jlong)l1
                      withLong:(jlong)l2;

- (void)ReInitRounds;

- (void)jjCheckNAddWithInt:(jint)state;

- (void)jjAddStatesWithInt:(jint)start
                   withInt:(jint)end;

- (void)jjCheckNAddTwoStatesWithInt:(jint)state1
                            withInt:(jint)state2;

- (void)jjCheckNAddStatesWithInt:(jint)start
                         withInt:(jint)end;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager, jjrounds_, IOSIntArray *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager, jjstateSet_, IOSIntArray *)

__attribute__((unused)) static jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jint pos, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfa_0WithInt_withLong_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jint pos, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jint pos, jint kind);

__attribute__((unused)) static jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa0_0(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self);

__attribute__((unused)) static jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa1_0WithLong_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa2_0WithLong_withLong_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jlong old0, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa3_0WithLong_withLong_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jlong old0, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa4_0WithLong_withLong_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jlong old0, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa5_0WithLong_withLong_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jlong old0, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa6_0WithLong_withLong_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jlong old0, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa7_0WithLong_withLong_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jlong old0, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa8_0WithLong_withLong_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jlong old0, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfaWithStates_0WithInt_withInt_withInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jint pos, jint kind, jint state);

__attribute__((unused)) static jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveNfa_0WithInt_withInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jint startState, jint curPos);

__attribute__((unused)) static jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(jint hiByte, jint i1, jint i2, jlong l1, jlong l2);

__attribute__((unused)) static void EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_ReInitRounds(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self);

__attribute__((unused)) static void EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jint state);

__attribute__((unused)) static void EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjAddStatesWithInt_withInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jint start, jint end);

__attribute__((unused)) static void EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jint state1, jint state2);

__attribute__((unused)) static void EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddStatesWithInt_withInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jint start, jint end);

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager)

IOSLongArray *EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjbitVec0;
IOSLongArray *EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjbitVec2;
IOSIntArray *EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjnextStates;
IOSObjectArray *EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjstrLiteralImages;
IOSObjectArray *EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_lexStateNames;
IOSLongArray *EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjtoToken;
IOSLongArray *EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjtoSkip;

@implementation EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager

- (void)setDebugStreamWithJavaIoPrintStream:(JavaIoPrintStream *)ds {
  debugStream_ = ds;
}

- (jint)jjStopStringLiteralDfa_0WithInt:(jint)pos
                               withLong:(jlong)active0 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, pos, active0);
}

- (jint)jjStartNfa_0WithInt:(jint)pos
                   withLong:(jlong)active0 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfa_0WithInt_withLong_(self, pos, active0);
}

- (jint)jjStopAtPosWithInt:(jint)pos
                   withInt:(jint)kind {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, pos, kind);
}

- (jint)jjMoveStringLiteralDfa0_0 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa0_0(self);
}

- (jint)jjMoveStringLiteralDfa1_0WithLong:(jlong)active0 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa1_0WithLong_(self, active0);
}

- (jint)jjMoveStringLiteralDfa2_0WithLong:(jlong)old0
                                 withLong:(jlong)active0 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa2_0WithLong_withLong_(self, old0, active0);
}

- (jint)jjMoveStringLiteralDfa3_0WithLong:(jlong)old0
                                 withLong:(jlong)active0 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa3_0WithLong_withLong_(self, old0, active0);
}

- (jint)jjMoveStringLiteralDfa4_0WithLong:(jlong)old0
                                 withLong:(jlong)active0 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa4_0WithLong_withLong_(self, old0, active0);
}

- (jint)jjMoveStringLiteralDfa5_0WithLong:(jlong)old0
                                 withLong:(jlong)active0 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa5_0WithLong_withLong_(self, old0, active0);
}

- (jint)jjMoveStringLiteralDfa6_0WithLong:(jlong)old0
                                 withLong:(jlong)active0 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa6_0WithLong_withLong_(self, old0, active0);
}

- (jint)jjMoveStringLiteralDfa7_0WithLong:(jlong)old0
                                 withLong:(jlong)active0 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa7_0WithLong_withLong_(self, old0, active0);
}

- (jint)jjMoveStringLiteralDfa8_0WithLong:(jlong)old0
                                 withLong:(jlong)active0 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa8_0WithLong_withLong_(self, old0, active0);
}

- (jint)jjStartNfaWithStates_0WithInt:(jint)pos
                              withInt:(jint)kind
                              withInt:(jint)state {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfaWithStates_0WithInt_withInt_withInt_(self, pos, kind, state);
}

- (jint)jjMoveNfa_0WithInt:(jint)startState
                   withInt:(jint)curPos {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveNfa_0WithInt_withInt_(self, startState, curPos);
}

+ (jboolean)jjCanMove_0WithInt:(jint)hiByte
                       withInt:(jint)i1
                       withInt:(jint)i2
                      withLong:(jlong)l1
                      withLong:(jlong)l2 {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2);
}

- (instancetype)initWithEduStanfordNlpLingTokensregexParserSimpleCharStream:(EduStanfordNlpLingTokensregexParserSimpleCharStream *)stream {
  EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_initWithEduStanfordNlpLingTokensregexParserSimpleCharStream_(self, stream);
  return self;
}

- (instancetype)initWithEduStanfordNlpLingTokensregexParserSimpleCharStream:(EduStanfordNlpLingTokensregexParserSimpleCharStream *)stream
                                                                    withInt:(jint)lexState {
  EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_initWithEduStanfordNlpLingTokensregexParserSimpleCharStream_withInt_(self, stream, lexState);
  return self;
}

- (void)ReInitWithEduStanfordNlpLingTokensregexParserSimpleCharStream:(EduStanfordNlpLingTokensregexParserSimpleCharStream *)stream {
  jjmatchedPos_ = jjnewStateCnt_ = 0;
  curLexState_ = defaultLexState_;
  input_stream_ = stream;
  EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_ReInitRounds(self);
}

- (void)ReInitRounds {
  EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_ReInitRounds(self);
}

- (void)ReInitWithEduStanfordNlpLingTokensregexParserSimpleCharStream:(EduStanfordNlpLingTokensregexParserSimpleCharStream *)stream
                                                              withInt:(jint)lexState {
  [self ReInitWithEduStanfordNlpLingTokensregexParserSimpleCharStream:stream];
  [self SwitchToWithInt:lexState];
}

- (void)SwitchToWithInt:(jint)lexState {
  if (lexState >= 1 || lexState < 0) @throw new_EduStanfordNlpLingTokensregexParserTokenMgrError_initWithNSString_withInt_(JreStrcat("$I$", @"Error: Ignoring invalid lexical state : ", lexState, @". State unchanged."), EduStanfordNlpLingTokensregexParserTokenMgrError_INVALID_LEXICAL_STATE);
  else curLexState_ = lexState;
}

- (EduStanfordNlpLingTokensregexParserToken *)jjFillToken {
  EduStanfordNlpLingTokensregexParserToken *t;
  NSString *curTokenImage;
  jint beginLine;
  jint endLine;
  jint beginColumn;
  jint endColumn;
  NSString *im = IOSObjectArray_Get(nil_chk(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjstrLiteralImages), jjmatchedKind_);
  curTokenImage = (im == nil) ? [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(input_stream_)) GetImage] : im;
  beginLine = [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(input_stream_)) getBeginLine];
  beginColumn = [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(input_stream_)) getBeginColumn];
  endLine = [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(input_stream_)) getEndLine];
  endColumn = [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(input_stream_)) getEndColumn];
  t = EduStanfordNlpLingTokensregexParserToken_newTokenWithInt_withNSString_(jjmatchedKind_, curTokenImage);
  ((EduStanfordNlpLingTokensregexParserToken *) nil_chk(t))->beginLine_ = beginLine;
  t->endLine_ = endLine;
  t->beginColumn_ = beginColumn;
  t->endColumn_ = endColumn;
  return t;
}

- (EduStanfordNlpLingTokensregexParserToken *)getNextToken {
  EduStanfordNlpLingTokensregexParserToken *matchedToken;
  jint curPos = 0;
  for (; ; ) {
    {
      @try {
        curChar_ = [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(input_stream_)) BeginToken];
      }
      @catch (JavaIoIOException *e) {
        jjmatchedKind_ = 0;
        matchedToken = [self jjFillToken];
        return matchedToken;
      }
      @try {
        [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(input_stream_)) backupWithInt:0];
        while (curChar_ <= 32 && ((jlong) 0x100002600LL & (JreLShift64(1LL, curChar_))) != 0LL) curChar_ = [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(input_stream_)) BeginToken];
      }
      @catch (JavaIoIOException *e1) {
        goto continue_EOFLoop;
      }
      jjmatchedKind_ = (jint) 0x7fffffff;
      jjmatchedPos_ = 0;
      curPos = EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa0_0(self);
      if (jjmatchedKind_ != (jint) 0x7fffffff) {
        if (jjmatchedPos_ + 1 < curPos) [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(input_stream_)) backupWithInt:curPos - jjmatchedPos_ - 1];
        if ((IOSLongArray_Get(nil_chk(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjtoToken), JreRShift32(jjmatchedKind_, 6)) & (JreLShift64(1LL, (jjmatchedKind_ & 077)))) != 0LL) {
          matchedToken = [self jjFillToken];
          return matchedToken;
        }
        else {
          goto continue_EOFLoop;
        }
      }
      jint error_line = [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(input_stream_)) getEndLine];
      jint error_column = [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(input_stream_)) getEndColumn];
      NSString *error_after = nil;
      jboolean EOFSeen = false;
      @try {
        [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(input_stream_)) readChar];
        [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(input_stream_)) backupWithInt:1];
      }
      @catch (JavaIoIOException *e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? @"" : [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(input_stream_)) GetImage];
        if (curChar_ == 0x000a || curChar_ == 0x000d) {
          error_line++;
          error_column = 0;
        }
        else error_column++;
      }
      if (!EOFSeen) {
        [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(input_stream_)) backupWithInt:1];
        error_after = curPos <= 1 ? @"" : [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(input_stream_)) GetImage];
      }
      @throw new_EduStanfordNlpLingTokensregexParserTokenMgrError_initWithBoolean_withInt_withInt_withInt_withNSString_withChar_withInt_(EOFSeen, curLexState_, error_line, error_column, error_after, curChar_, EduStanfordNlpLingTokensregexParserTokenMgrError_LEXICAL_ERROR);
    }
    continue_EOFLoop: ;
  }
}

- (void)jjCheckNAddWithInt:(jint)state {
  EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, state);
}

- (void)jjAddStatesWithInt:(jint)start
                   withInt:(jint)end {
  EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjAddStatesWithInt_withInt_(self, start, end);
}

- (void)jjCheckNAddTwoStatesWithInt:(jint)state1
                            withInt:(jint)state2 {
  EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, state1, state2);
}

- (void)jjCheckNAddStatesWithInt:(jint)start
                         withInt:(jint)end {
  EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, start, end);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 4, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 11, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 12, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 13, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 14, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 15, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 16, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 17, 18, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 19, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1a, 20, 21, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 22, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 23, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 24, 22, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 24, 23, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 26, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexParserToken;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexParserToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 27, 26, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 28, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 29, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 30, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(setDebugStreamWithJavaIoPrintStream:);
  methods[1].selector = @selector(jjStopStringLiteralDfa_0WithInt:withLong:);
  methods[2].selector = @selector(jjStartNfa_0WithInt:withLong:);
  methods[3].selector = @selector(jjStopAtPosWithInt:withInt:);
  methods[4].selector = @selector(jjMoveStringLiteralDfa0_0);
  methods[5].selector = @selector(jjMoveStringLiteralDfa1_0WithLong:);
  methods[6].selector = @selector(jjMoveStringLiteralDfa2_0WithLong:withLong:);
  methods[7].selector = @selector(jjMoveStringLiteralDfa3_0WithLong:withLong:);
  methods[8].selector = @selector(jjMoveStringLiteralDfa4_0WithLong:withLong:);
  methods[9].selector = @selector(jjMoveStringLiteralDfa5_0WithLong:withLong:);
  methods[10].selector = @selector(jjMoveStringLiteralDfa6_0WithLong:withLong:);
  methods[11].selector = @selector(jjMoveStringLiteralDfa7_0WithLong:withLong:);
  methods[12].selector = @selector(jjMoveStringLiteralDfa8_0WithLong:withLong:);
  methods[13].selector = @selector(jjStartNfaWithStates_0WithInt:withInt:withInt:);
  methods[14].selector = @selector(jjMoveNfa_0WithInt:withInt:);
  methods[15].selector = @selector(jjCanMove_0WithInt:withInt:withInt:withLong:withLong:);
  methods[16].selector = @selector(initWithEduStanfordNlpLingTokensregexParserSimpleCharStream:);
  methods[17].selector = @selector(initWithEduStanfordNlpLingTokensregexParserSimpleCharStream:withInt:);
  methods[18].selector = @selector(ReInitWithEduStanfordNlpLingTokensregexParserSimpleCharStream:);
  methods[19].selector = @selector(ReInitRounds);
  methods[20].selector = @selector(ReInitWithEduStanfordNlpLingTokensregexParserSimpleCharStream:withInt:);
  methods[21].selector = @selector(SwitchToWithInt:);
  methods[22].selector = @selector(jjFillToken);
  methods[23].selector = @selector(getNextToken);
  methods[24].selector = @selector(jjCheckNAddWithInt:);
  methods[25].selector = @selector(jjAddStatesWithInt:withInt:);
  methods[26].selector = @selector(jjCheckNAddTwoStatesWithInt:withInt:);
  methods[27].selector = @selector(jjCheckNAddStatesWithInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "debugStream_", "LJavaIoPrintStream;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "jjbitVec0", "[J", .constantValue.asLong = 0, 0x18, -1, 31, -1, -1 },
    { "jjbitVec2", "[J", .constantValue.asLong = 0, 0x18, -1, 32, -1, -1 },
    { "jjnextStates", "[I", .constantValue.asLong = 0, 0x18, -1, 33, -1, -1 },
    { "jjstrLiteralImages", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 34, -1, -1 },
    { "lexStateNames", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 35, -1, -1 },
    { "jjtoToken", "[J", .constantValue.asLong = 0, 0x18, -1, 36, -1, -1 },
    { "jjtoSkip", "[J", .constantValue.asLong = 0, 0x18, -1, 37, -1, -1 },
    { "input_stream_", "LEduStanfordNlpLingTokensregexParserSimpleCharStream;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "jjrounds_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "jjstateSet_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "curChar_", "C", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "curLexState_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "defaultLexState_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjnewStateCnt_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjround_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjmatchedPos_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjmatchedKind_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setDebugStream", "LJavaIoPrintStream;", "jjStopStringLiteralDfa_0", "IJ", "jjStartNfa_0", "jjStopAtPos", "II", "jjMoveStringLiteralDfa1_0", "J", "jjMoveStringLiteralDfa2_0", "JJ", "jjMoveStringLiteralDfa3_0", "jjMoveStringLiteralDfa4_0", "jjMoveStringLiteralDfa5_0", "jjMoveStringLiteralDfa6_0", "jjMoveStringLiteralDfa7_0", "jjMoveStringLiteralDfa8_0", "jjStartNfaWithStates_0", "III", "jjMoveNfa_0", "jjCanMove_0", "IIIJJ", "LEduStanfordNlpLingTokensregexParserSimpleCharStream;", "LEduStanfordNlpLingTokensregexParserSimpleCharStream;I", "ReInit", "SwitchTo", "I", "jjCheckNAdd", "jjAddStates", "jjCheckNAddTwoStates", "jjCheckNAddStates", &EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjbitVec0, &EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjbitVec2, &EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjnextStates, &EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjstrLiteralImages, &EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_lexStateNames, &EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjtoToken, &EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjtoSkip };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager = { "TokenSequenceParserTokenManager", "edu.stanford.nlp.ling.tokensregex.parser", ptrTable, methods, fields, 7, 0x0, 28, 18, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager;
}

+ (void)initialize {
  if (self == [EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager class]) {
    EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjbitVec0 = [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0xfffffffffffffffeLL, (jlong) 0xffffffffffffffffLL, (jlong) 0xffffffffffffffffLL, (jlong) 0xffffffffffffffffLL } count:4];
    EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjbitVec2 = [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0x0LL, (jlong) 0x0LL, (jlong) 0xffffffffffffffffLL, (jlong) 0xffffffffffffffffLL } count:4];
    EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjnextStates = [IOSIntArray newArrayWithInts:(jint[]){ 38, 41, 25, 26, 27, 20, 21, 22, 7, 8, 10, 44, 45, 46, 47, 45, 46, 15, 1, 2, 4 } count:21];
    EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjstrLiteralImages = [IOSObjectArray newArrayWithObjects:(id[]){ @"", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, @"{", @"=>", @"}", @"(", @")", @"tokens:", @"text:", @"=", @";", @"[", @"]", @",", @":", @".", @"&&", @"||", @":case", @":else", @"^", @"$", @"*", @"?", @"+", @"|", @"&", @"?:", @"!", @"{{", @"}}", @"::", @"(?m)", @"==>", @"&annotate" } count:55 type:NSString_class_()];
    EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_lexStateNames = [IOSObjectArray newArrayWithObjects:(id[]){ @"DEFAULT" } count:1 type:NSString_class_()];
    EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjtoToken = [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0x7fffffffffff81LL } count:1];
    EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjtoSkip = [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0x7eLL } count:1];
    J2OBJC_SET_INITIALIZED(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager)
  }
}

@end

jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jint pos, jlong active0) {
  switch (pos) {
    case 0:
    if ((active0 & (jlong) 0x20000020800000LL) != 0LL) return 50;
    if ((active0 & (jlong) 0x1000000000000LL) != 0LL) return 52;
    if ((active0 & (jlong) 0x18000000LL) != 0LL) {
      self->jjmatchedKind_ = 7;
      return 53;
    }
    if ((active0 & (jlong) 0x100000000000LL) != 0LL) return 54;
    if ((active0 & (jlong) 0x20000000000LL) != 0LL) return 34;
    return -1;
    case 1:
    if ((active0 & (jlong) 0x18000000LL) != 0LL) {
      self->jjmatchedKind_ = 7;
      self->jjmatchedPos_ = 1;
      return 53;
    }
    if ((active0 & (jlong) 0x20000000000000LL) != 0LL) {
      self->jjmatchedKind_ = 19;
      self->jjmatchedPos_ = 1;
      return -1;
    }
    return -1;
    case 2:
    if ((active0 & (jlong) 0x20000000000000LL) != 0LL) {
      if (self->jjmatchedPos_ < 1) {
        self->jjmatchedKind_ = 19;
        self->jjmatchedPos_ = 1;
      }
      return -1;
    }
    if ((active0 & (jlong) 0x18000000LL) != 0LL) {
      self->jjmatchedKind_ = 7;
      self->jjmatchedPos_ = 2;
      return 53;
    }
    return -1;
    case 3:
    if ((active0 & (jlong) 0x18000000LL) != 0LL) {
      self->jjmatchedKind_ = 7;
      self->jjmatchedPos_ = 3;
      return 53;
    }
    return -1;
    case 4:
    if ((active0 & (jlong) 0x8000000LL) != 0LL) {
      self->jjmatchedKind_ = 7;
      self->jjmatchedPos_ = 4;
      return 53;
    }
    return -1;
    case 5:
    if ((active0 & (jlong) 0x8000000LL) != 0LL) {
      self->jjmatchedKind_ = 7;
      self->jjmatchedPos_ = 5;
      return 53;
    }
    return -1;
    default:
    return -1;
  }
}

jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfa_0WithInt_withLong_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jint pos, jlong active0) {
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveNfa_0WithInt_withInt_(self, EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, pos, active0), pos + 1);
}

jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jint pos, jint kind) {
  self->jjmatchedKind_ = kind;
  self->jjmatchedPos_ = pos;
  return pos + 1;
}

jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa0_0(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self) {
  switch (self->curChar_) {
    case 33:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfaWithStates_0WithInt_withInt_withInt_(self, 0, 48, 52);
    case 36:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfaWithStates_0WithInt_withInt_withInt_(self, 0, 41, 34);
    case 38:
    self->jjmatchedKind_ = 46;
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa1_0WithLong_(self, (jlong) 0x40001000000000LL);
    case 40:
    self->jjmatchedKind_ = 25;
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa1_0WithLong_(self, (jlong) 0x10000000000000LL);
    case 41:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 26);
    case 42:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 42);
    case 43:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfaWithStates_0WithInt_withInt_withInt_(self, 0, 44, 54);
    case 44:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 33);
    case 46:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 35);
    case 58:
    self->jjmatchedKind_ = 34;
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa1_0WithLong_(self, (jlong) 0x800c000000000LL);
    case 59:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 30);
    case 61:
    self->jjmatchedKind_ = 29;
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa1_0WithLong_(self, (jlong) 0x20000000800000LL);
    case 63:
    self->jjmatchedKind_ = 43;
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa1_0WithLong_(self, (jlong) 0x800000000000LL);
    case 91:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 31);
    case 93:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 32);
    case 94:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 40);
    case 116:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa1_0WithLong_(self, (jlong) 0x18000000LL);
    case 123:
    self->jjmatchedKind_ = 22;
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa1_0WithLong_(self, (jlong) 0x2000000000000LL);
    case 124:
    self->jjmatchedKind_ = 45;
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa1_0WithLong_(self, (jlong) 0x2000000000LL);
    case 125:
    self->jjmatchedKind_ = 24;
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa1_0WithLong_(self, (jlong) 0x4000000000000LL);
    default:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveNfa_0WithInt_withInt_(self, 5, 0);
  }
}

jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa1_0WithLong_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jlong active0) {
  @try {
    self->curChar_ = [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 0, active0);
    return 1;
  }
  switch (self->curChar_) {
    case 38:
    if ((active0 & (jlong) 0x1000000000LL) != 0LL) return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 1, 36);
    break;
    case 58:
    if ((active0 & (jlong) 0x800000000000LL) != 0LL) return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 1, 47);
    else if ((active0 & (jlong) 0x8000000000000LL) != 0LL) return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 1, 51);
    break;
    case 61:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa2_0WithLong_withLong_(self, active0, (jlong) 0x20000000000000LL);
    case 62:
    if ((active0 & (jlong) 0x800000LL) != 0LL) return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 1, 23);
    break;
    case 63:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa2_0WithLong_withLong_(self, active0, (jlong) 0x10000000000000LL);
    case 97:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa2_0WithLong_withLong_(self, active0, (jlong) 0x40000000000000LL);
    case 99:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa2_0WithLong_withLong_(self, active0, (jlong) 0x4000000000LL);
    case 101:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa2_0WithLong_withLong_(self, active0, (jlong) 0x8010000000LL);
    case 111:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa2_0WithLong_withLong_(self, active0, (jlong) 0x8000000LL);
    case 123:
    if ((active0 & (jlong) 0x2000000000000LL) != 0LL) return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 1, 49);
    break;
    case 124:
    if ((active0 & (jlong) 0x2000000000LL) != 0LL) return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 1, 37);
    break;
    case 125:
    if ((active0 & (jlong) 0x4000000000000LL) != 0LL) return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 1, 50);
    break;
    default:
    break;
  }
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfa_0WithInt_withLong_(self, 0, active0);
}

jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa2_0WithLong_withLong_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jlong old0, jlong active0) {
  if (((active0 &= old0)) == 0LL) return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfa_0WithInt_withLong_(self, 0, old0);
  @try {
    self->curChar_ = [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 1, active0);
    return 2;
  }
  switch (self->curChar_) {
    case 62:
    if ((active0 & (jlong) 0x20000000000000LL) != 0LL) return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 2, 53);
    break;
    case 97:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa3_0WithLong_withLong_(self, active0, (jlong) 0x4000000000LL);
    case 107:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa3_0WithLong_withLong_(self, active0, (jlong) 0x8000000LL);
    case 108:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa3_0WithLong_withLong_(self, active0, (jlong) 0x8000000000LL);
    case 109:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa3_0WithLong_withLong_(self, active0, (jlong) 0x10000000000000LL);
    case 110:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa3_0WithLong_withLong_(self, active0, (jlong) 0x40000000000000LL);
    case 120:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa3_0WithLong_withLong_(self, active0, (jlong) 0x10000000LL);
    default:
    break;
  }
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfa_0WithInt_withLong_(self, 1, active0);
}

jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa3_0WithLong_withLong_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jlong old0, jlong active0) {
  if (((active0 &= old0)) == 0LL) return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfa_0WithInt_withLong_(self, 1, old0);
  @try {
    self->curChar_ = [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 2, active0);
    return 3;
  }
  switch (self->curChar_) {
    case 41:
    if ((active0 & (jlong) 0x10000000000000LL) != 0LL) return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 3, 52);
    break;
    case 101:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa4_0WithLong_withLong_(self, active0, (jlong) 0x8000000LL);
    case 110:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa4_0WithLong_withLong_(self, active0, (jlong) 0x40000000000000LL);
    case 115:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa4_0WithLong_withLong_(self, active0, (jlong) 0xc000000000LL);
    case 116:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa4_0WithLong_withLong_(self, active0, (jlong) 0x10000000LL);
    default:
    break;
  }
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfa_0WithInt_withLong_(self, 2, active0);
}

jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa4_0WithLong_withLong_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jlong old0, jlong active0) {
  if (((active0 &= old0)) == 0LL) return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfa_0WithInt_withLong_(self, 2, old0);
  @try {
    self->curChar_ = [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 3, active0);
    return 4;
  }
  switch (self->curChar_) {
    case 58:
    if ((active0 & (jlong) 0x10000000LL) != 0LL) return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 4, 28);
    break;
    case 101:
    if ((active0 & (jlong) 0x4000000000LL) != 0LL) return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 4, 38);
    else if ((active0 & (jlong) 0x8000000000LL) != 0LL) return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 4, 39);
    break;
    case 110:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa5_0WithLong_withLong_(self, active0, (jlong) 0x8000000LL);
    case 111:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa5_0WithLong_withLong_(self, active0, (jlong) 0x40000000000000LL);
    default:
    break;
  }
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfa_0WithInt_withLong_(self, 3, active0);
}

jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa5_0WithLong_withLong_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jlong old0, jlong active0) {
  if (((active0 &= old0)) == 0LL) return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfa_0WithInt_withLong_(self, 3, old0);
  @try {
    self->curChar_ = [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 4, active0);
    return 5;
  }
  switch (self->curChar_) {
    case 115:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa6_0WithLong_withLong_(self, active0, (jlong) 0x8000000LL);
    case 116:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa6_0WithLong_withLong_(self, active0, (jlong) 0x40000000000000LL);
    default:
    break;
  }
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfa_0WithInt_withLong_(self, 4, active0);
}

jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa6_0WithLong_withLong_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jlong old0, jlong active0) {
  if (((active0 &= old0)) == 0LL) return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfa_0WithInt_withLong_(self, 4, old0);
  @try {
    self->curChar_ = [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 5, active0);
    return 6;
  }
  switch (self->curChar_) {
    case 58:
    if ((active0 & (jlong) 0x8000000LL) != 0LL) return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 6, 27);
    break;
    case 97:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa7_0WithLong_withLong_(self, active0, (jlong) 0x40000000000000LL);
    default:
    break;
  }
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfa_0WithInt_withLong_(self, 5, active0);
}

jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa7_0WithLong_withLong_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jlong old0, jlong active0) {
  if (((active0 &= old0)) == 0LL) return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfa_0WithInt_withLong_(self, 5, old0);
  @try {
    self->curChar_ = [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 6, active0);
    return 7;
  }
  switch (self->curChar_) {
    case 116:
    return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa8_0WithLong_withLong_(self, active0, (jlong) 0x40000000000000LL);
    default:
    break;
  }
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfa_0WithInt_withLong_(self, 6, active0);
}

jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveStringLiteralDfa8_0WithLong_withLong_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jlong old0, jlong active0) {
  if (((active0 &= old0)) == 0LL) return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfa_0WithInt_withLong_(self, 6, old0);
  @try {
    self->curChar_ = [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 7, active0);
    return 8;
  }
  switch (self->curChar_) {
    case 101:
    if ((active0 & (jlong) 0x40000000000000LL) != 0LL) return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStopAtPosWithInt_withInt_(self, 8, 54);
    break;
    default:
    break;
  }
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfa_0WithInt_withLong_(self, 7, active0);
}

jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjStartNfaWithStates_0WithInt_withInt_withInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jint pos, jint kind, jint state) {
  self->jjmatchedKind_ = kind;
  self->jjmatchedPos_ = pos;
  @try {
    self->curChar_ = [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    return pos + 1;
  }
  return EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveNfa_0WithInt_withInt_(self, state, pos + 1);
}

jint EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjMoveNfa_0WithInt_withInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jint startState, jint curPos) {
  jint startsAt = 0;
  self->jjnewStateCnt_ = 53;
  jint i = 1;
  *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), 0) = startState;
  jint kind = (jint) 0x7fffffff;
  for (; ; ) {
    if (++self->jjround_ == (jint) 0x7fffffff) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_ReInitRounds(self);
    if (self->curChar_ < 64) {
      jlong l = JreLShift64(1LL, self->curChar_);
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 53:
          if (((jlong) 0x3ff000000000000LL & l) != 0LL) {
            if (kind > 21) kind = 21;
            EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 32);
          }
          if (((jlong) 0x3ff000000000000LL & l) != 0LL) {
            if (kind > 7) kind = 7;
            EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 12);
          }
          break;
          case 5:
          if (((jlong) 0x3ff200000000000LL & l) != 0LL) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 15, 16);
          else if (((jlong) 0x5000000000000000LL & l) != 0LL) {
            if (kind > 19) kind = 19;
          }
          else if (self->curChar_ == 33) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 28, 52);
          else if (self->curChar_ == 61) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 28, 50);
          else if (self->curChar_ == 36) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjAddStatesWithInt_withInt_(self, 0, 1);
          else if (self->curChar_ == 34) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 2, 4);
          else if (self->curChar_ == 47) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 5, 7);
          else if (self->curChar_ == 35) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 8, 10);
          if (((jlong) 0x3ff000000000000LL & l) != 0LL) {
            if (kind > 13) kind = 13;
            EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 11, 14);
          }
          else if (((jlong) 0x280000000000LL & l) != 0LL) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 15, 17);
          else if (self->curChar_ == 36) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 34, 36);
          else if (self->curChar_ == 62) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 28);
          else if (self->curChar_ == 60) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 28);
          else if (self->curChar_ == 47) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 0;
          if (((jlong) 0x3ff000000000000LL & l) != 0LL) {
            if (kind > 21) kind = 21;
            EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 32);
          }
          break;
          case 34:
          if (((jlong) 0x3ff000000000000LL & l) != 0LL) {
            if (kind > 9) kind = 9;
            EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 36);
          }
          else if (self->curChar_ == 36) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 42);
          if (self->curChar_ == 36) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 39;
          break;
          case 50:
          case 28:
          if (self->curChar_ == 61 && kind > 19) kind = 19;
          break;
          case 54:
          if (((jlong) 0x3ff200000000000LL & l) != 0LL) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 15, 16);
          if (((jlong) 0x3ff000000000000LL & l) != 0LL) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 46, 47);
          if (((jlong) 0x3ff000000000000LL & l) != 0LL) {
            if (kind > 14) kind = 14;
            EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 45);
          }
          break;
          case 52:
          if (self->curChar_ == 61) {
            if (kind > 20) kind = 20;
          }
          if (self->curChar_ == 61) {
            if (kind > 19) kind = 19;
          }
          break;
          case 0:
          if (self->curChar_ == 47) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 18, 20);
          break;
          case 1:
          if (((jlong) 0xffffffffffffdbffLL & l) != 0LL) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 18, 20);
          break;
          case 2:
          if (((jlong) 0x2400LL & l) != 0LL && kind > 5) kind = 5;
          break;
          case 3:
          if (self->curChar_ == 10 && kind > 5) kind = 5;
          break;
          case 4:
          if (self->curChar_ == 13) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 3;
          break;
          case 6:
          if (self->curChar_ == 35) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 8, 10);
          break;
          case 7:
          if (((jlong) 0xffffffffffffdbffLL & l) != 0LL) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 8, 10);
          break;
          case 8:
          if (((jlong) 0x2400LL & l) != 0LL && kind > 6) kind = 6;
          break;
          case 9:
          if (self->curChar_ == 10 && kind > 6) kind = 6;
          break;
          case 10:
          if (self->curChar_ == 13) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 9;
          break;
          case 12:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 7) kind = 7;
          EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 12);
          break;
          case 14:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 12) kind = 12;
          *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 14;
          break;
          case 15:
          if (((jlong) 0x3ff200000000000LL & l) != 0LL) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 15, 16);
          break;
          case 16:
          if (self->curChar_ == 46) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 17);
          break;
          case 17:
          if (((jlong) 0x3ff200000000000LL & l) == 0LL) break;
          if (kind > 16) kind = 16;
          EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 17);
          break;
          case 18:
          case 19:
          if (self->curChar_ == 47) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 5, 7);
          break;
          case 21:
          if (((jlong) 0xffff7fffffffdbffLL & l) != 0LL) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 5, 7);
          break;
          case 22:
          if (self->curChar_ == 47 && kind > 17) kind = 17;
          break;
          case 23:
          case 24:
          if (self->curChar_ == 34) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 2, 4);
          break;
          case 26:
          if (((jlong) 0xfffffffbffffdbffLL & l) != 0LL) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 2, 4);
          break;
          case 27:
          if (self->curChar_ == 34 && kind > 18) kind = 18;
          break;
          case 29:
          if (self->curChar_ == 60) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 28);
          break;
          case 30:
          if (self->curChar_ == 62) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 28);
          break;
          case 31:
          if (((jlong) 0x5000000000000000LL & l) != 0LL && kind > 19) kind = 19;
          break;
          case 32:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 21) kind = 21;
          EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 32);
          break;
          case 33:
          if (self->curChar_ == 36) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 34, 36);
          break;
          case 35:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 8) kind = 8;
          *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 35;
          break;
          case 36:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 9) kind = 9;
          EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 36);
          break;
          case 37:
          if (self->curChar_ == 36) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjAddStatesWithInt_withInt_(self, 0, 1);
          break;
          case 38:
          if (self->curChar_ == 36) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 39;
          break;
          case 40:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 10) kind = 10;
          *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 40;
          break;
          case 41:
          if (self->curChar_ == 36) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 42);
          break;
          case 42:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 11) kind = 11;
          EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 42);
          break;
          case 43:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 13) kind = 13;
          EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 11, 14);
          break;
          case 44:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 13) kind = 13;
          EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 44);
          break;
          case 45:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 14) kind = 14;
          EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 45);
          break;
          case 46:
          if (((jlong) 0x3ff000000000000LL & l) != 0LL) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 46, 47);
          break;
          case 48:
          if (((jlong) 0x280000000000LL & l) != 0LL) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 15, 17);
          break;
          case 49:
          if (self->curChar_ == 61) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 28, 50);
          break;
          case 51:
          if (self->curChar_ == 33) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 28, 52);
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else if (self->curChar_ < 128) {
      jlong l = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 53:
          if (((jlong) 0x7fffffe87fffffeLL & l) != 0LL) {
            if (kind > 21) kind = 21;
            EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 32);
          }
          if (((jlong) 0x7fffffe87fffffeLL & l) != 0LL) {
            if (kind > 7) kind = 7;
            EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 12);
          }
          break;
          case 5:
          if (((jlong) 0x7fffffe87fffffeLL & l) != 0LL) {
            if (kind > 21) kind = 21;
            EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 32);
          }
          else if (self->curChar_ == 92) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 14;
          if (((jlong) 0x7fffffe87fffffeLL & l) != 0LL) {
            if (kind > 7) kind = 7;
            EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 12);
          }
          if (self->curChar_ == 69) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 15, 16);
          break;
          case 34:
          case 35:
          if (((jlong) 0x7fffffe87fffffeLL & l) == 0LL) break;
          if (kind > 8) kind = 8;
          EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 35);
          break;
          case 50:
          if (self->curChar_ == 126 && kind > 20) kind = 20;
          break;
          case 54:
          case 15:
          if (self->curChar_ == 69) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 15, 16);
          break;
          case 1:
          EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjAddStatesWithInt_withInt_(self, 18, 20);
          break;
          case 7:
          EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjAddStatesWithInt_withInt_(self, 8, 10);
          break;
          case 11:
          if (((jlong) 0x7fffffe87fffffeLL & l) == 0LL) break;
          if (kind > 7) kind = 7;
          EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 12);
          break;
          case 12:
          if (((jlong) 0x7fffffe87fffffeLL & l) == 0LL) break;
          if (kind > 7) kind = 7;
          EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 12);
          break;
          case 13:
          if (self->curChar_ == 92) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 14;
          break;
          case 17:
          if (self->curChar_ != 69) break;
          if (kind > 16) kind = 16;
          *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 17;
          break;
          case 20:
          if (self->curChar_ == 92) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 19;
          break;
          case 21:
          EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjAddStatesWithInt_withInt_(self, 5, 7);
          break;
          case 25:
          if (self->curChar_ == 92) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 24;
          break;
          case 26:
          EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjAddStatesWithInt_withInt_(self, 2, 4);
          break;
          case 32:
          if (((jlong) 0x7fffffe87fffffeLL & l) == 0LL) break;
          if (kind > 21) kind = 21;
          EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 32);
          break;
          case 39:
          case 40:
          if (((jlong) 0x7fffffe87fffffeLL & l) == 0LL) break;
          if (kind > 10) kind = 10;
          EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, 40);
          break;
          case 47:
          if (self->curChar_ == 76 && kind > 15) kind = 15;
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else {
      jint hiByte = JreRShift32(((jint) self->curChar_), 8);
      jint i1 = JreRShift32(hiByte, 6);
      jlong l1 = JreLShift64(1LL, (hiByte & 077));
      jint i2 = JreRShift32((self->curChar_ & (jint) 0xff), 6);
      jlong l2 = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 1:
          if (EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjAddStatesWithInt_withInt_(self, 18, 20);
          break;
          case 7:
          if (EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjAddStatesWithInt_withInt_(self, 8, 10);
          break;
          case 21:
          if (EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjAddStatesWithInt_withInt_(self, 5, 7);
          break;
          case 26:
          if (EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjAddStatesWithInt_withInt_(self, 2, 4);
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    if (kind != (jint) 0x7fffffff) {
      self->jjmatchedKind_ = kind;
      self->jjmatchedPos_ = curPos;
      kind = (jint) 0x7fffffff;
    }
    ++curPos;
    if ((i = self->jjnewStateCnt_) == (startsAt = 53 - (self->jjnewStateCnt_ = startsAt))) return curPos;
    @try {
      self->curChar_ = [((EduStanfordNlpLingTokensregexParserSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
    }
    @catch (JavaIoIOException *e) {
      return curPos;
    }
  }
}

jboolean EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(jint hiByte, jint i1, jint i2, jlong l1, jlong l2) {
  EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_initialize();
  switch (hiByte) {
    case 0:
    return ((IOSLongArray_Get(nil_chk(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjbitVec2), i2) & l2) != 0LL);
    default:
    if ((IOSLongArray_Get(nil_chk(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjbitVec0), i1) & l1) != 0LL) return true;
    return false;
  }
}

void EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_initWithEduStanfordNlpLingTokensregexParserSimpleCharStream_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, EduStanfordNlpLingTokensregexParserSimpleCharStream *stream) {
  NSObject_init(self);
  self->debugStream_ = JreLoadStatic(JavaLangSystem, out);
  self->jjrounds_ = [IOSIntArray newArrayWithLength:53];
  self->jjstateSet_ = [IOSIntArray newArrayWithLength:106];
  self->curLexState_ = 0;
  self->defaultLexState_ = 0;
  self->input_stream_ = stream;
}

EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *new_EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_initWithEduStanfordNlpLingTokensregexParserSimpleCharStream_(EduStanfordNlpLingTokensregexParserSimpleCharStream *stream) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager, initWithEduStanfordNlpLingTokensregexParserSimpleCharStream_, stream)
}

EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *create_EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_initWithEduStanfordNlpLingTokensregexParserSimpleCharStream_(EduStanfordNlpLingTokensregexParserSimpleCharStream *stream) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager, initWithEduStanfordNlpLingTokensregexParserSimpleCharStream_, stream)
}

void EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_initWithEduStanfordNlpLingTokensregexParserSimpleCharStream_withInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, EduStanfordNlpLingTokensregexParserSimpleCharStream *stream, jint lexState) {
  EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_initWithEduStanfordNlpLingTokensregexParserSimpleCharStream_(self, stream);
  [self SwitchToWithInt:lexState];
}

EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *new_EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_initWithEduStanfordNlpLingTokensregexParserSimpleCharStream_withInt_(EduStanfordNlpLingTokensregexParserSimpleCharStream *stream, jint lexState) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager, initWithEduStanfordNlpLingTokensregexParserSimpleCharStream_withInt_, stream, lexState)
}

EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *create_EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_initWithEduStanfordNlpLingTokensregexParserSimpleCharStream_withInt_(EduStanfordNlpLingTokensregexParserSimpleCharStream *stream, jint lexState) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager, initWithEduStanfordNlpLingTokensregexParserSimpleCharStream_withInt_, stream, lexState)
}

void EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_ReInitRounds(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self) {
  jint i;
  self->jjround_ = (jint) 0x80000001;
  for (i = 53; i-- > 0; ) *IOSIntArray_GetRef(nil_chk(self->jjrounds_), i) = -0x7fffffff - 1;
}

void EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jint state) {
  if (IOSIntArray_Get(nil_chk(self->jjrounds_), state) != self->jjround_) {
    *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), self->jjnewStateCnt_++) = state;
    *IOSIntArray_GetRef(self->jjrounds_, state) = self->jjround_;
  }
}

void EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjAddStatesWithInt_withInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jint start, jint end) {
  do {
    *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), self->jjnewStateCnt_++) = IOSIntArray_Get(nil_chk(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjnextStates), start);
  }
  while (start++ != end);
}

void EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jint state1, jint state2) {
  EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, state1);
  EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, state2);
}

void EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddStatesWithInt_withInt_(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager *self, jint start, jint end) {
  do {
    EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjCheckNAddWithInt_(self, IOSIntArray_Get(nil_chk(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager_jjnextStates), start));
  }
  while (start++ != end);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexParserTokenSequenceParserTokenManager)
