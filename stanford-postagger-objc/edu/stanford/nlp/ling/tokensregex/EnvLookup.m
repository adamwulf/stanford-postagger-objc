//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/tokensregex/EnvLookup.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/AnnotationLookup.h"
#include "edu/stanford/nlp/ling/CoreAnnotations.h"
#include "edu/stanford/nlp/ling/tokensregex/Env.h"
#include "edu/stanford/nlp/ling/tokensregex/EnvLookup.h"
#include "edu/stanford/nlp/ling/tokensregex/types/Value.h"
#include "edu/stanford/nlp/pipeline/CoreMapAggregator.h"
#include "edu/stanford/nlp/pipeline/CoreMapAttributeAggregator.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/function/Function.h"

@interface EduStanfordNlpLingTokensregexEnvLookup ()

- (instancetype)init;

@end

__attribute__((unused)) static void EduStanfordNlpLingTokensregexEnvLookup_init(EduStanfordNlpLingTokensregexEnvLookup *self);

__attribute__((unused)) static EduStanfordNlpLingTokensregexEnvLookup *new_EduStanfordNlpLingTokensregexEnvLookup_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexEnvLookup *create_EduStanfordNlpLingTokensregexEnvLookup_init();

@implementation EduStanfordNlpLingTokensregexEnvLookup

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingTokensregexEnvLookup_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (IOSClass *)lookupAnnotationKeyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                         withNSString:(NSString *)name {
  return EduStanfordNlpLingTokensregexEnvLookup_lookupAnnotationKeyWithEduStanfordNlpLingTokensregexEnv_withNSString_(env, name);
}

+ (IOSClass *)lookupAnnotationKeyWithClassnameWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                      withNSString:(NSString *)name {
  return EduStanfordNlpLingTokensregexEnvLookup_lookupAnnotationKeyWithClassnameWithEduStanfordNlpLingTokensregexEnv_withNSString_(env, name);
}

+ (id<JavaUtilMap>)getDefaultTokensAggregatorsWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexEnvLookup_getDefaultTokensAggregatorsWithEduStanfordNlpLingTokensregexEnv_(env);
}

+ (EduStanfordNlpPipelineCoreMapAggregator *)getDefaultTokensAggregatorWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexEnvLookup_getDefaultTokensAggregatorWithEduStanfordNlpLingTokensregexEnv_(env);
}

+ (id<JavaUtilList>)getDefaultTokensResultAnnotationKeyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexEnvLookup_getDefaultTokensResultAnnotationKeyWithEduStanfordNlpLingTokensregexEnv_(env);
}

+ (id<JavaUtilList>)getDefaultResultAnnotationKeyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexEnvLookup_getDefaultResultAnnotationKeyWithEduStanfordNlpLingTokensregexEnv_(env);
}

+ (id<JavaUtilFunctionFunction>)getDefaultResultAnnotationExtractorWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexEnvLookup_getDefaultResultAnnotationExtractorWithEduStanfordNlpLingTokensregexEnv_(env);
}

+ (IOSClass *)getDefaultNestedResultsAnnotationKeyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexEnvLookup_getDefaultNestedResultsAnnotationKeyWithEduStanfordNlpLingTokensregexEnv_(env);
}

+ (IOSClass *)getDefaultTextAnnotationKeyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexEnvLookup_getDefaultTextAnnotationKeyWithEduStanfordNlpLingTokensregexEnv_(env);
}

+ (IOSClass *)getDefaultTokensAnnotationKeyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env {
  return EduStanfordNlpLingTokensregexEnvLookup_getDefaultTokensAnnotationKeyWithEduStanfordNlpLingTokensregexEnv_(env);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x9, 3, 4, -1, 5, -1, -1 },
    { NULL, "LEduStanfordNlpPipelineCoreMapAggregator;", 0x9, 6, 4, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 7, 4, -1, 8, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 9, 4, -1, 8, -1, -1 },
    { NULL, "LJavaUtilFunctionFunction;", 0x9, 10, 4, -1, 11, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 12, 4, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 13, 4, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 14, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(lookupAnnotationKeyWithEduStanfordNlpLingTokensregexEnv:withNSString:);
  methods[2].selector = @selector(lookupAnnotationKeyWithClassnameWithEduStanfordNlpLingTokensregexEnv:withNSString:);
  methods[3].selector = @selector(getDefaultTokensAggregatorsWithEduStanfordNlpLingTokensregexEnv:);
  methods[4].selector = @selector(getDefaultTokensAggregatorWithEduStanfordNlpLingTokensregexEnv:);
  methods[5].selector = @selector(getDefaultTokensResultAnnotationKeyWithEduStanfordNlpLingTokensregexEnv:);
  methods[6].selector = @selector(getDefaultResultAnnotationKeyWithEduStanfordNlpLingTokensregexEnv:);
  methods[7].selector = @selector(getDefaultResultAnnotationExtractorWithEduStanfordNlpLingTokensregexEnv:);
  methods[8].selector = @selector(getDefaultNestedResultsAnnotationKeyWithEduStanfordNlpLingTokensregexEnv:);
  methods[9].selector = @selector(getDefaultTextAnnotationKeyWithEduStanfordNlpLingTokensregexEnv:);
  methods[10].selector = @selector(getDefaultTokensAnnotationKeyWithEduStanfordNlpLingTokensregexEnv:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "lookupAnnotationKey", "LEduStanfordNlpLingTokensregexEnv;LNSString;", "lookupAnnotationKeyWithClassname", "getDefaultTokensAggregators", "LEduStanfordNlpLingTokensregexEnv;", "(Ledu/stanford/nlp/ling/tokensregex/Env;)Ljava/util/Map<Ljava/lang/Class;Ledu/stanford/nlp/pipeline/CoreMapAttributeAggregator;>;", "getDefaultTokensAggregator", "getDefaultTokensResultAnnotationKey", "(Ledu/stanford/nlp/ling/tokensregex/Env;)Ljava/util/List<Ljava/lang/Class;>;", "getDefaultResultAnnotationKey", "getDefaultResultAnnotationExtractor", "(Ledu/stanford/nlp/ling/tokensregex/Env;)Ljava/util/function/Function<Ledu/stanford/nlp/ling/tokensregex/MatchedExpression;*>;", "getDefaultNestedResultsAnnotationKey", "getDefaultTextAnnotationKey", "getDefaultTokensAnnotationKey" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexEnvLookup = { "EnvLookup", "edu.stanford.nlp.ling.tokensregex", ptrTable, methods, NULL, 7, 0x1, 11, 0, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexEnvLookup;
}

@end

void EduStanfordNlpLingTokensregexEnvLookup_init(EduStanfordNlpLingTokensregexEnvLookup *self) {
  NSObject_init(self);
}

EduStanfordNlpLingTokensregexEnvLookup *new_EduStanfordNlpLingTokensregexEnvLookup_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexEnvLookup, init)
}

EduStanfordNlpLingTokensregexEnvLookup *create_EduStanfordNlpLingTokensregexEnvLookup_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexEnvLookup, init)
}

IOSClass *EduStanfordNlpLingTokensregexEnvLookup_lookupAnnotationKeyWithEduStanfordNlpLingTokensregexEnv_withNSString_(EduStanfordNlpLingTokensregexEnv *env, NSString *name) {
  EduStanfordNlpLingTokensregexEnvLookup_initialize();
  if (env != nil) {
    id obj = [env getWithNSString:name];
    if (obj != nil) {
      if ([obj isKindOfClass:[IOSClass class]]) {
        return (IOSClass *) cast_chk(obj, [IOSClass class]);
      }
      else if ([EduStanfordNlpLingTokensregexTypesValue_class_() isInstance:obj]) {
        obj = [((id<EduStanfordNlpLingTokensregexTypesValue>) cast_check(obj, EduStanfordNlpLingTokensregexTypesValue_class_())) get];
        if ([obj isKindOfClass:[IOSClass class]]) {
          return (IOSClass *) cast_chk(obj, [IOSClass class]);
        }
      }
    }
  }
  EduStanfordNlpLingAnnotationLookup_KeyLookup *lookup = EduStanfordNlpLingAnnotationLookup_getCoreKeyWithNSString_(name);
  if (lookup != nil) {
    return lookup->coreKey_;
  }
  else {
    return nil;
  }
}

IOSClass *EduStanfordNlpLingTokensregexEnvLookup_lookupAnnotationKeyWithClassnameWithEduStanfordNlpLingTokensregexEnv_withNSString_(EduStanfordNlpLingTokensregexEnv *env, NSString *name) {
  EduStanfordNlpLingTokensregexEnvLookup_initialize();
  IOSClass *annotationKey = EduStanfordNlpLingTokensregexEnvLookup_lookupAnnotationKeyWithEduStanfordNlpLingTokensregexEnv_withNSString_(env, name);
  if (annotationKey == nil) {
    @try {
      IOSClass *clazz = IOSClass_forName_(name);
      return clazz;
    }
    @catch (JavaLangClassNotFoundException *ex) {
    }
    return nil;
  }
  else {
    return annotationKey;
  }
}

id<JavaUtilMap> EduStanfordNlpLingTokensregexEnvLookup_getDefaultTokensAggregatorsWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexEnvLookup_initialize();
  if (env != nil) {
    id<JavaUtilMap> obj = [env getDefaultTokensAggregators];
    if (obj != nil) {
      return obj;
    }
  }
  return JreLoadStatic(EduStanfordNlpPipelineCoreMapAttributeAggregator, DEFAULT_NUMERIC_TOKENS_AGGREGATORS);
}

EduStanfordNlpPipelineCoreMapAggregator *EduStanfordNlpLingTokensregexEnvLookup_getDefaultTokensAggregatorWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexEnvLookup_initialize();
  if (env != nil) {
    EduStanfordNlpPipelineCoreMapAggregator *obj = [env getDefaultTokensAggregator];
    if (obj != nil) {
      return obj;
    }
  }
  return JreLoadStatic(EduStanfordNlpPipelineCoreMapAggregator, DEFAULT_NUMERIC_TOKENS_AGGREGATOR);
}

id<JavaUtilList> EduStanfordNlpLingTokensregexEnvLookup_getDefaultTokensResultAnnotationKeyWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexEnvLookup_initialize();
  if (env != nil) {
    id<JavaUtilList> obj = [env getDefaultTokensResultAnnotationKey];
    if (obj != nil) {
      return obj;
    }
  }
  return nil;
}

id<JavaUtilList> EduStanfordNlpLingTokensregexEnvLookup_getDefaultResultAnnotationKeyWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexEnvLookup_initialize();
  if (env != nil) {
    id<JavaUtilList> obj = [env getDefaultResultAnnotationKey];
    if (obj != nil) {
      return obj;
    }
  }
  return nil;
}

id<JavaUtilFunctionFunction> EduStanfordNlpLingTokensregexEnvLookup_getDefaultResultAnnotationExtractorWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexEnvLookup_initialize();
  if (env != nil) {
    id<JavaUtilFunctionFunction> obj = [env getDefaultResultsAnnotationExtractor];
    if (obj != nil) {
      return obj;
    }
  }
  return nil;
}

IOSClass *EduStanfordNlpLingTokensregexEnvLookup_getDefaultNestedResultsAnnotationKeyWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexEnvLookup_initialize();
  if (env != nil) {
    IOSClass *obj = [env getDefaultNestedResultsAnnotationKey];
    if (obj != nil) {
      return obj;
    }
  }
  return nil;
}

IOSClass *EduStanfordNlpLingTokensregexEnvLookup_getDefaultTextAnnotationKeyWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexEnvLookup_initialize();
  if (env != nil) {
    IOSClass *obj = [env getDefaultTextAnnotationKey];
    if (obj != nil) {
      return obj;
    }
  }
  return EduStanfordNlpLingCoreAnnotations_TextAnnotation_class_();
}

IOSClass *EduStanfordNlpLingTokensregexEnvLookup_getDefaultTokensAnnotationKeyWithEduStanfordNlpLingTokensregexEnv_(EduStanfordNlpLingTokensregexEnv *env) {
  EduStanfordNlpLingTokensregexEnvLookup_initialize();
  if (env != nil) {
    IOSClass *obj = [env getDefaultTokensAnnotationKey];
    if (obj != nil) {
      return obj;
    }
  }
  return EduStanfordNlpLingCoreAnnotations_TokensAnnotation_class_();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexEnvLookup)
