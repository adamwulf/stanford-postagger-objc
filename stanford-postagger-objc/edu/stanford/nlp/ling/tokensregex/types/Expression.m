//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/tokensregex/types/Expression.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/tokensregex/types/Expression.h"

@interface EduStanfordNlpLingTokensregexTypesExpression : NSObject

@end

@implementation EduStanfordNlpLingTokensregexTypesExpression

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEduStanfordNlpLingTokensregexTypesTags;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesExpression;", 0x401, 2, 3, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x481, 4, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getTags);
  methods[1].selector = @selector(setTagsWithEduStanfordNlpLingTokensregexTypesTags:);
  methods[2].selector = @selector(getType);
  methods[3].selector = @selector(simplifyWithEduStanfordNlpLingTokensregexEnv:);
  methods[4].selector = @selector(evaluateWithEduStanfordNlpLingTokensregexEnv:withNSObjectArray:);
  methods[5].selector = @selector(hasValue);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setTags", "LEduStanfordNlpLingTokensregexTypesTags;", "simplify", "LEduStanfordNlpLingTokensregexEnv;", "evaluate", "LEduStanfordNlpLingTokensregexEnv;[LNSObject;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesExpression = { "Expression", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x609, 6, 0, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesExpression;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexTypesExpression)
