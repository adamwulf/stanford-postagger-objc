//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/tokensregex/types/ValueFunctions.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/tokensregex/Env.h"
#include "edu/stanford/nlp/ling/tokensregex/EnvLookup.h"
#include "edu/stanford/nlp/ling/tokensregex/MultiWordStringMatcher.h"
#include "edu/stanford/nlp/ling/tokensregex/TokenSequenceMatcher.h"
#include "edu/stanford/nlp/ling/tokensregex/TokenSequencePattern.h"
#include "edu/stanford/nlp/ling/tokensregex/types/Expressions.h"
#include "edu/stanford/nlp/ling/tokensregex/types/Tags.h"
#include "edu/stanford/nlp/ling/tokensregex/types/Value.h"
#include "edu/stanford/nlp/ling/tokensregex/types/ValueFunction.h"
#include "edu/stanford/nlp/ling/tokensregex/types/ValueFunctions.h"
#include "edu/stanford/nlp/pipeline/ChunkAnnotationUtils.h"
#include "edu/stanford/nlp/process/CoreLabelTokenFactory.h"
#include "edu/stanford/nlp/util/CollectionFactory.h"
#include "edu/stanford/nlp/util/CollectionValuedMap.h"
#include "edu/stanford/nlp/util/CoreMap.h"
#include "edu/stanford/nlp/util/MapFactory.h"
#include "edu/stanford/nlp/util/StringUtils.h"
#include "java/io/PrintStream.h"
#include "java/lang/Boolean.h"
#include "java/lang/Comparable.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/NoSuchFieldException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Short.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/ParameterizedType.h"
#include "java/lang/reflect/Type.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface EduStanfordNlpLingTokensregexTypesValueFunctions ()

- (instancetype)init;

+ (NSString *)joinWithNSObjectArray:(IOSObjectArray *)args
                       withNSString:(NSString *)glue;

@end

inline EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *EduStanfordNlpLingTokensregexTypesValueFunctions_get_PARAM_INFO_VALUE_FUNCTION();
static EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_VALUE_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, PARAM_INFO_VALUE_FUNCTION, EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *)

inline EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *EduStanfordNlpLingTokensregexTypesValueFunctions_get_PARAM_INFO_LIST();
static EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_LIST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, PARAM_INFO_LIST, EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *)

inline EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *EduStanfordNlpLingTokensregexTypesValueFunctions_get_PARAM_INFO_FUNCTION();
static EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, PARAM_INFO_FUNCTION, EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *)

inline EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *EduStanfordNlpLingTokensregexTypesValueFunctions_get_PARAM_INFO_TOKEN_REGEX();
static EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_TOKEN_REGEX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, PARAM_INFO_TOKEN_REGEX, EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *)

inline EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *EduStanfordNlpLingTokensregexTypesValueFunctions_get_PARAM_INFO_TOKEN_LIST();
static EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_TOKEN_LIST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, PARAM_INFO_TOKEN_LIST, EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *)

inline EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *EduStanfordNlpLingTokensregexTypesValueFunctions_get_PARAM_INFO_TOKEN_LIST_REPLACE();
static EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_TOKEN_LIST_REPLACE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, PARAM_INFO_TOKEN_LIST_REPLACE, EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *)

inline EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *EduStanfordNlpLingTokensregexTypesValueFunctions_get_PARAM_INFO_STRING_REGEX();
static EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_STRING_REGEX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, PARAM_INFO_STRING_REGEX, EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *)

inline EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *EduStanfordNlpLingTokensregexTypesValueFunctions_get_PARAM_INFO_STRING();
static EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_STRING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, PARAM_INFO_STRING, EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *)

inline EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *EduStanfordNlpLingTokensregexTypesValueFunctions_get_PARAM_INFO_STRING_REPLACE();
static EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_STRING_REPLACE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, PARAM_INFO_STRING_REPLACE, EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *)

inline EduStanfordNlpProcessCoreLabelTokenFactory *EduStanfordNlpLingTokensregexTypesValueFunctions_get_CORELABEL_FACTORY();
static EduStanfordNlpProcessCoreLabelTokenFactory *EduStanfordNlpLingTokensregexTypesValueFunctions_CORELABEL_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, CORELABEL_FACTORY, EduStanfordNlpProcessCoreLabelTokenFactory *)

inline EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *EduStanfordNlpLingTokensregexTypesValueFunctions_get_PARAM_INFO_TOKEN();
static EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_TOKEN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, PARAM_INFO_TOKEN, EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_init(EduStanfordNlpLingTokensregexTypesValueFunctions *self);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions *new_EduStanfordNlpLingTokensregexTypesValueFunctions_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions *create_EduStanfordNlpLingTokensregexTypesValueFunctions_init();

__attribute__((unused)) static NSString *EduStanfordNlpLingTokensregexTypesValueFunctions_joinWithNSObjectArray_withNSString_(IOSObjectArray *args, NSString *glue);

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *new_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$1 : EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction

- (NSNumber *)computeWithNSNumberArray:(IOSObjectArray *)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$1)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$1_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$1 *self, NSString *arg$0, jint arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$1 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$1_initWithNSString_withInt_(NSString *arg$0, jint arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$1 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$1_initWithNSString_withInt_(NSString *arg$0, jint arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$2 : EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction

- (NSNumber *)computeWithNSNumberArray:(IOSObjectArray *)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$2)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$2_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$2 *self, NSString *arg$0, jint arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$2 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$2_initWithNSString_withInt_(NSString *arg$0, jint arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$2 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$2_initWithNSString_withInt_(NSString *arg$0, jint arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$3 : EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction

- (NSNumber *)computeWithNSNumberArray:(IOSObjectArray *)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$3)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$3_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$3 *self, NSString *arg$0, jint arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$3 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$3_initWithNSString_withInt_(NSString *arg$0, jint arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$3 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$3_initWithNSString_withInt_(NSString *arg$0, jint arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$4 : EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction

- (NSNumber *)computeWithNSNumberArray:(IOSObjectArray *)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$4)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$4_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$4 *self, NSString *arg$0, jint arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$4 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$4_initWithNSString_withInt_(NSString *arg$0, jint arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$4 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$4_initWithNSString_withInt_(NSString *arg$0, jint arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$5 : EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction

- (NSNumber *)computeWithNSNumberArray:(IOSObjectArray *)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$5)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$5_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$5 *self, NSString *arg$0, jint arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$5 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$5_initWithNSString_withInt_(NSString *arg$0, jint arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$5 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$5_initWithNSString_withInt_(NSString *arg$0, jint arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$6 : EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction

- (NSNumber *)computeWithNSNumberArray:(IOSObjectArray *)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$6)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$6_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$6 *self, NSString *arg$0, jint arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$6 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$6_initWithNSString_withInt_(NSString *arg$0, jint arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$6 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$6_initWithNSString_withInt_(NSString *arg$0, jint arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$7 : EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction

- (NSNumber *)computeWithNSNumberArray:(IOSObjectArray *)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$7)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$7_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$7 *self, NSString *arg$0, jint arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$7 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$7_initWithNSString_withInt_(NSString *arg$0, jint arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$7 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$7_initWithNSString_withInt_(NSString *arg$0, jint arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$8 : EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction

- (NSNumber *)computeWithNSNumberArray:(IOSObjectArray *)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$8)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$8_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$8 *self, NSString *arg$0, jint arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$8 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$8_initWithNSString_withInt_(NSString *arg$0, jint arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$8 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$8_initWithNSString_withInt_(NSString *arg$0, jint arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$9 : EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction

- (NSNumber *)computeWithNSNumberArray:(IOSObjectArray *)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$9)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$9_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$9 *self, NSString *arg$0, jint arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$9 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$9_initWithNSString_withInt_(NSString *arg$0, jint arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$9 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$9_initWithNSString_withInt_(NSString *arg$0, jint arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$10 : EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction

- (JavaLangBoolean *)computeWithJavaLangBooleanArray:(IOSObjectArray *)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$10)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$10_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$10 *self, NSString *arg$0, jint arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$10 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$10_initWithNSString_withInt_(NSString *arg$0, jint arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$10 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$10_initWithNSString_withInt_(NSString *arg$0, jint arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$11 : EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction

- (JavaLangBoolean *)computeWithJavaLangBooleanArray:(IOSObjectArray *)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$11)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$11_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$11 *self, NSString *arg$0, jint arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$11 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$11_initWithNSString_withInt_(NSString *arg$0, jint arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$11 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$11_initWithNSString_withInt_(NSString *arg$0, jint arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$12 : EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction

- (JavaLangBoolean *)computeWithJavaLangBooleanArray:(IOSObjectArray *)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$12)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$12_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$12 *self, NSString *arg$0, jint arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$12 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$12_initWithNSString_withInt_(NSString *arg$0, jint arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$12 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$12_initWithNSString_withInt_(NSString *arg$0, jint arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$13 : EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction

- (NSString *)computeWithNSStringArray:(IOSObjectArray *)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$13)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$13_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$13 *self, NSString *arg$0, jint arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$13 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$13_initWithNSString_withInt_(NSString *arg$0, jint arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$13 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$13_initWithNSString_withInt_(NSString *arg$0, jint arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$14 : EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction

- (NSString *)computeWithNSStringArray:(IOSObjectArray *)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$14)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$14_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$14 *self, NSString *arg$0, jint arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$14 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$14_initWithNSString_withInt_(NSString *arg$0, jint arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$14 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$14_initWithNSString_withInt_(NSString *arg$0, jint arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$15 : EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction

- (NSString *)computeWithNSStringArray:(IOSObjectArray *)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$15)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$15_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$15 *self, NSString *arg$0, jint arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$15 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$15_initWithNSString_withInt_(NSString *arg$0, jint arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$15 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$15_initWithNSString_withInt_(NSString *arg$0, jint arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$16 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (NSString *)getParamDesc;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$16)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$16_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$16 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$16 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$16_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$16 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$16_initWithNSString_(NSString *arg$0);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$17 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (NSString *)getParamDesc;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$17)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$17_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$17 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$17 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$17_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$17 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$17_initWithNSString_(NSString *arg$0);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$18 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (NSString *)getParamDesc;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$18)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$18_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$18 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$18 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$18_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$18 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$18_initWithNSString_(NSString *arg$0);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$19 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$19)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$19_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$19 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$19 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$19_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$19 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$19_initWithNSString_(NSString *arg$0);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$20 : EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:(IOSObjectArray *)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$20)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$20_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(EduStanfordNlpLingTokensregexTypesValueFunctions_$20 *self, NSString *arg$0, IOSObjectArray *arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$20 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$20_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$20 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$20_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$21 : EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:(IOSObjectArray *)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$21)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$21_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(EduStanfordNlpLingTokensregexTypesValueFunctions_$21 *self, NSString *arg$0, IOSObjectArray *arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$21 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$21_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$21 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$21_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$22 : EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:(IOSObjectArray *)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$22)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$22_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(EduStanfordNlpLingTokensregexTypesValueFunctions_$22 *self, NSString *arg$0, IOSObjectArray *arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$22 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$22_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$22 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$22_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$23 : EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:(IOSObjectArray *)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$23)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$23_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(EduStanfordNlpLingTokensregexTypesValueFunctions_$23 *self, NSString *arg$0, IOSObjectArray *arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$23 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$23_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$23 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$23_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$24 : EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:(IOSObjectArray *)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$24)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$24_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(EduStanfordNlpLingTokensregexTypesValueFunctions_$24 *self, NSString *arg$0, IOSObjectArray *arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$24 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$24_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$24 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$24_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$25 : EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:(IOSObjectArray *)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$25)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$25_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(EduStanfordNlpLingTokensregexTypesValueFunctions_$25 *self, NSString *arg$0, IOSObjectArray *arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$25 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$25_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$25 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$25_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$26 : EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0
withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:(IOSObjectArray *)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$26)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$26_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(EduStanfordNlpLingTokensregexTypesValueFunctions_$26 *self, NSString *arg$0, IOSObjectArray *arg$1);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$26 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$26_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$26 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$26_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$27 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (NSString *)getParamDesc;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$27)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$27_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$27 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$27 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$27_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$27 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$27_initWithNSString_(NSString *arg$0);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$28 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (NSString *)getParamDesc;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$28)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$28_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$28 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$28 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$28_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$28 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$28_initWithNSString_(NSString *arg$0);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$29 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (NSString *)getParamDesc;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$29)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$29_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$29 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$29 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$29_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$29 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$29_initWithNSString_(NSString *arg$0);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$30 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (NSString *)getParamDesc;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (id<EduStanfordNlpLingTokensregexTypesValue>)getTagWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)cm
                                                                      withNSString:(NSString *)tag;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$30)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$30_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$30 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$30 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$30_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$30 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$30_initWithNSString_(NSString *arg$0);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$31 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (NSString *)getParamDesc;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (void)setTagWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)cm
                               withNSString:(NSString *)tag
withEduStanfordNlpLingTokensregexTypesValue:(id<EduStanfordNlpLingTokensregexTypesValue>)tagValue;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$31)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$31_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$31 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$31 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$31_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$31 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$31_initWithNSString_(NSString *arg$0);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$32 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (NSString *)getParamDesc;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (void)removeTagWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)cm
                                  withNSString:(NSString *)tag;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$32)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$32_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$32 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$32 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$32_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$32 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$32_initWithNSString_(NSString *arg$0);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$33 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (NSString *)getParamDesc;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$33)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$33_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$33 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$33 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$33_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$33 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$33_initWithNSString_(NSString *arg$0);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$34 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (NSString *)getParamDesc;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$34)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$34_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$34 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$34 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$34_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$34 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$34_initWithNSString_(NSString *arg$0);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$35 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (NSString *)getParamDesc;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$35)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$35_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$35 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$35 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$35_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$35 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$35_initWithNSString_(NSString *arg$0);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$36 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (NSString *)getParamDesc;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$36)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$36_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$36 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$36 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$36_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$36 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$36_initWithNSString_(NSString *arg$0);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$37 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (NSString *)getParamDesc;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$37)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$37_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$37 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$37 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$37_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$37 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$37_initWithNSString_(NSString *arg$0);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$38 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (NSString *)getParamDesc;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$38)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$38_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$38 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$38 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$38_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$38 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$38_initWithNSString_(NSString *arg$0);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$39 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (NSString *)getParamDesc;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$39)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$39_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$39 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$39 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$39_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$39 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$39_initWithNSString_(NSString *arg$0);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$40 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (NSString *)getParamDesc;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$40)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$40_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$40 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$40 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$40_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$40 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$40_initWithNSString_(NSString *arg$0);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$41 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (NSString *)getParamDesc;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$41)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$41_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$41 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$41 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$41_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$41 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$41_initWithNSString_(NSString *arg$0);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$42 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (NSString *)getParamDesc;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$42)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$42_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$42 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$42 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$42_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$42 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$42_initWithNSString_(NSString *arg$0);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$43 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (NSString *)getParamDesc;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$43)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$43_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$43 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$43 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$43_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$43 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$43_initWithNSString_(NSString *arg$0);

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_$44 : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (NSString *)getParamDesc;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (instancetype)initWithNSString:(NSString *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_$44)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexTypesValueFunctions_$44_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$44 *self, NSString *arg$0);

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$44 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$44_initWithNSString_(NSString *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexTypesValueFunctions_$44 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$44_initWithNSString_(NSString *arg$0);

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpLingTokensregexTypesValueFunctions)

id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_ADD_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_SUBTRACT_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_MULTIPLY_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_DIVIDE_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_MOD_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_MAX_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_MIN_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_POW_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_NEGATE_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_AND_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_OR_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_NOT_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_CONCAT_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_UPPERCASE_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_LOWERCASE_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_PRINT_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_FORMAT_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_JOIN_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_CREATE_REGEX_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_VALUES_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_TOKENS_MATCH_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_TOKENS_REPLACE_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_STRING_MATCH_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_STRING_REPLACE_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_TOKEN_STRING_SPLIT_FUNCTION;
EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator *EduStanfordNlpLingTokensregexTypesValueFunctions_NUMBER_COMPARATOR;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_NOT_EQUALS_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_EQUALS_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_ANNOTATION_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_GET_ANNOTATION_TAG_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_SET_ANNOTATION_TAG_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_REMOVE_ANNOTATION_TAG_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_TAGS_VALUE_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_SET_VALUE_TAG_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_GET_VALUE_TAG_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_REMOVE_VALUE_TAG_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_COMPOSITE_VALUE_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_COMPOSITE_KEYS_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_OBJECT_FIELD_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_LIST_VALUE_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_VALUE_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_KEYS_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_AGGREGATE_FUNCTION;
id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_CALL_FUNCTION;
EduStanfordNlpUtilCollectionValuedMap *EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions;

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingTokensregexTypesValueFunctions_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (id)lookupFunctionObjectWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                  withNSString:(NSString *)name {
  return EduStanfordNlpLingTokensregexTypesValueFunctions_lookupFunctionObjectWithEduStanfordNlpLingTokensregexEnv_withNSString_(env, name);
}

+ (NSString *)joinWithNSObjectArray:(IOSObjectArray *)args
                       withNSString:(NSString *)glue {
  return EduStanfordNlpLingTokensregexTypesValueFunctions_joinWithNSObjectArray_withNSString_(args, glue);
}

+ (jboolean)isIntegerWithNSNumber:(NSNumber *)n {
  return EduStanfordNlpLingTokensregexTypesValueFunctions_isIntegerWithNSNumber_(n);
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduStanfordNlpLingTokensregexTypesValueFunctions_mainWithNSStringArray_(args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0xc, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(lookupFunctionObjectWithEduStanfordNlpLingTokensregexEnv:withNSString:);
  methods[2].selector = @selector(joinWithNSObjectArray:withNSString:);
  methods[3].selector = @selector(isIntegerWithNSNumber:);
  methods[4].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ADD_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "SUBTRACT_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "MULTIPLY_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "DIVIDE_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
    { "MOD_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 12, -1, -1 },
    { "MAX_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "MIN_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
    { "POW_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 15, -1, -1 },
    { "NEGATE_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 16, -1, -1 },
    { "AND_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 17, -1, -1 },
    { "OR_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 18, -1, -1 },
    { "NOT_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 19, -1, -1 },
    { "CONCAT_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 20, -1, -1 },
    { "UPPERCASE_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 21, -1, -1 },
    { "LOWERCASE_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 22, -1, -1 },
    { "PRINT_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 23, -1, -1 },
    { "FORMAT_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 24, -1, -1 },
    { "JOIN_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 25, -1, -1 },
    { "CREATE_REGEX_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 26, -1, -1 },
    { "PARAM_INFO_VALUE_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo;", .constantValue.asLong = 0, 0x1a, -1, 27, -1, -1 },
    { "PARAM_INFO_LIST", "LEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo;", .constantValue.asLong = 0, 0x1a, -1, 28, -1, -1 },
    { "MAP_VALUES_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 29, -1, -1 },
    { "PARAM_INFO_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo;", .constantValue.asLong = 0, 0x1a, -1, 30, -1, -1 },
    { "MAP_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 31, -1, -1 },
    { "PARAM_INFO_TOKEN_REGEX", "LEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo;", .constantValue.asLong = 0, 0x1a, -1, 32, -1, -1 },
    { "PARAM_INFO_TOKEN_LIST", "LEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo;", .constantValue.asLong = 0, 0x1a, -1, 33, -1, -1 },
    { "PARAM_INFO_TOKEN_LIST_REPLACE", "LEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo;", .constantValue.asLong = 0, 0x1a, -1, 34, -1, -1 },
    { "TOKENS_MATCH_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 35, -1, -1 },
    { "TOKENS_REPLACE_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 36, -1, -1 },
    { "PARAM_INFO_STRING_REGEX", "LEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo;", .constantValue.asLong = 0, 0x1a, -1, 37, -1, -1 },
    { "PARAM_INFO_STRING", "LEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo;", .constantValue.asLong = 0, 0x1a, -1, 38, -1, -1 },
    { "PARAM_INFO_STRING_REPLACE", "LEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo;", .constantValue.asLong = 0, 0x1a, -1, 39, -1, -1 },
    { "STRING_MATCH_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 40, -1, -1 },
    { "STRING_REPLACE_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 41, -1, -1 },
    { "CORELABEL_FACTORY", "LEduStanfordNlpProcessCoreLabelTokenFactory;", .constantValue.asLong = 0, 0x1a, -1, 42, -1, -1 },
    { "PARAM_INFO_TOKEN", "LEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo;", .constantValue.asLong = 0, 0x1a, -1, 43, -1, -1 },
    { "TOKEN_STRING_SPLIT_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 44, -1, -1 },
    { "NUMBER_COMPARATOR", "LEduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator;", .constantValue.asLong = 0, 0x19, -1, 45, -1, -1 },
    { "NOT_EQUALS_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 46, -1, -1 },
    { "EQUALS_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 47, -1, -1 },
    { "ANNOTATION_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 48, -1, -1 },
    { "GET_ANNOTATION_TAG_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 49, -1, -1 },
    { "SET_ANNOTATION_TAG_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 50, -1, -1 },
    { "REMOVE_ANNOTATION_TAG_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 51, -1, -1 },
    { "TAGS_VALUE_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 52, -1, -1 },
    { "SET_VALUE_TAG_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 53, -1, -1 },
    { "GET_VALUE_TAG_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 54, -1, -1 },
    { "REMOVE_VALUE_TAG_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 55, -1, -1 },
    { "COMPOSITE_VALUE_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 56, -1, -1 },
    { "COMPOSITE_KEYS_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 57, -1, -1 },
    { "OBJECT_FIELD_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 58, -1, -1 },
    { "LIST_VALUE_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 59, -1, -1 },
    { "MAP_VALUE_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 60, -1, -1 },
    { "MAP_KEYS_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 61, -1, -1 },
    { "AGGREGATE_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 62, -1, -1 },
    { "CALL_FUNCTION", "LEduStanfordNlpLingTokensregexTypesValueFunction;", .constantValue.asLong = 0, 0x19, -1, 63, -1, -1 },
    { "registeredFunctions", "LEduStanfordNlpUtilCollectionValuedMap;", .constantValue.asLong = 0, 0x18, -1, 64, 65, -1 },
  };
  static const void *ptrTable[] = { "lookupFunctionObject", "LEduStanfordNlpLingTokensregexEnv;LNSString;", "join", "[LNSObject;LNSString;", "isInteger", "LNSNumber;", "main", "[LNSString;", &EduStanfordNlpLingTokensregexTypesValueFunctions_ADD_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_SUBTRACT_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_MULTIPLY_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_DIVIDE_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_MOD_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_MAX_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_MIN_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_POW_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_NEGATE_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_AND_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_OR_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_NOT_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_CONCAT_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_UPPERCASE_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_LOWERCASE_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_PRINT_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_FORMAT_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_JOIN_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_CREATE_REGEX_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_VALUE_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_LIST, &EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_VALUES_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_TOKEN_REGEX, &EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_TOKEN_LIST, &EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_TOKEN_LIST_REPLACE, &EduStanfordNlpLingTokensregexTypesValueFunctions_TOKENS_MATCH_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_TOKENS_REPLACE_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_STRING_REGEX, &EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_STRING, &EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_STRING_REPLACE, &EduStanfordNlpLingTokensregexTypesValueFunctions_STRING_MATCH_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_STRING_REPLACE_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_CORELABEL_FACTORY, &EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_TOKEN, &EduStanfordNlpLingTokensregexTypesValueFunctions_TOKEN_STRING_SPLIT_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_NUMBER_COMPARATOR, &EduStanfordNlpLingTokensregexTypesValueFunctions_NOT_EQUALS_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_EQUALS_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_ANNOTATION_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_GET_ANNOTATION_TAG_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_SET_ANNOTATION_TAG_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_REMOVE_ANNOTATION_TAG_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_TAGS_VALUE_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_SET_VALUE_TAG_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_GET_VALUE_TAG_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_REMOVE_VALUE_TAG_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_COMPOSITE_VALUE_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_COMPOSITE_KEYS_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_OBJECT_FIELD_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_LIST_VALUE_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_VALUE_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_KEYS_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_AGGREGATE_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_CALL_FUNCTION, &EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions, "Ledu/stanford/nlp/util/CollectionValuedMap<Ljava/lang/String;Ledu/stanford/nlp/ling/tokensregex/types/ValueFunction;>;", "LEduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction;LEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo;LEduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction;LEduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction;LEduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction;LEduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction;LEduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator;LEduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator;LEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType;LEduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions = { "ValueFunctions", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, fields, 7, 0x1, 5, 57, -1, 66, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions;
}

+ (void)initialize {
  if (self == [EduStanfordNlpLingTokensregexTypesValueFunctions class]) {
    EduStanfordNlpLingTokensregexTypesValueFunctions_ADD_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$1_initWithNSString_withInt_(@"ADD", 2);
    EduStanfordNlpLingTokensregexTypesValueFunctions_SUBTRACT_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$2_initWithNSString_withInt_(@"SUBTRACT", 2);
    EduStanfordNlpLingTokensregexTypesValueFunctions_MULTIPLY_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$3_initWithNSString_withInt_(@"MULTIPLY", 2);
    EduStanfordNlpLingTokensregexTypesValueFunctions_DIVIDE_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$4_initWithNSString_withInt_(@"DIVIDE", 2);
    EduStanfordNlpLingTokensregexTypesValueFunctions_MOD_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$5_initWithNSString_withInt_(@"MOD", 2);
    EduStanfordNlpLingTokensregexTypesValueFunctions_MAX_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$6_initWithNSString_withInt_(@"MAX", 2);
    EduStanfordNlpLingTokensregexTypesValueFunctions_MIN_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$7_initWithNSString_withInt_(@"MIN", 2);
    EduStanfordNlpLingTokensregexTypesValueFunctions_POW_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$8_initWithNSString_withInt_(@"POW", 2);
    EduStanfordNlpLingTokensregexTypesValueFunctions_NEGATE_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$9_initWithNSString_withInt_(@"NEGATE", 1);
    EduStanfordNlpLingTokensregexTypesValueFunctions_AND_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$10_initWithNSString_withInt_(@"AND", -1);
    EduStanfordNlpLingTokensregexTypesValueFunctions_OR_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$11_initWithNSString_withInt_(@"OR", -1);
    EduStanfordNlpLingTokensregexTypesValueFunctions_NOT_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$12_initWithNSString_withInt_(@"NOT", 1);
    EduStanfordNlpLingTokensregexTypesValueFunctions_CONCAT_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$13_initWithNSString_withInt_(@"CONCAT", -1);
    EduStanfordNlpLingTokensregexTypesValueFunctions_UPPERCASE_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$14_initWithNSString_withInt_(@"UPPERCASE", 1);
    EduStanfordNlpLingTokensregexTypesValueFunctions_LOWERCASE_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$15_initWithNSString_withInt_(@"LOWERCASE", 1);
    EduStanfordNlpLingTokensregexTypesValueFunctions_PRINT_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$16_initWithNSString_(@"PRINT");
    EduStanfordNlpLingTokensregexTypesValueFunctions_FORMAT_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$17_initWithNSString_(@"FORMAT");
    EduStanfordNlpLingTokensregexTypesValueFunctions_JOIN_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$18_initWithNSString_(@"JOIN");
    EduStanfordNlpLingTokensregexTypesValueFunctions_CREATE_REGEX_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$19_initWithNSString_(@"CREATE_REGEX");
    EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_VALUE_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_initWithNSString_withNSString_withIOSClass_withBoolean_(@"FUNCTION", EduStanfordNlpLingTokensregexTypesExpressions_TYPE_FUNCTION, EduStanfordNlpLingTokensregexTypesValueFunction_class_(), false);
    EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_LIST = new_EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_initWithNSString_withNSString_withIOSClass_withBoolean_(@"LIST", nil, JavaUtilList_class_(), true);
    EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_VALUES_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$20_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(@"MAP_VALUES", [IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_LIST, EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_VALUE_FUNCTION } count:2 type:EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_class_()]);
    EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_initWithNSString_withNSString_withIOSClass_withBoolean_(@"FUNCTION", EduStanfordNlpLingTokensregexTypesExpressions_TYPE_FUNCTION, JavaUtilFunctionFunction_class_(), false);
    EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$21_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(@"MAP", [IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_LIST, EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_FUNCTION } count:2 type:EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_class_()]);
    EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_TOKEN_REGEX = new_EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_initWithNSString_withNSString_withIOSClass_withBoolean_(@"TOKEN_REGEX", EduStanfordNlpLingTokensregexTypesExpressions_TYPE_TOKEN_REGEX, EduStanfordNlpLingTokensregexTokenSequencePattern_class_(), false);
    EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_TOKEN_LIST = new_EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_initWithNSString_withNSString_withIOSClass_withBoolean_(@"TOKEN_LIST", nil, JavaUtilList_class_(), true);
    EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_TOKEN_LIST_REPLACE = new_EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_initWithNSString_withNSString_withIOSClass_withBoolean_(@"TOKEN_LIST_REPLACEMENT", nil, JavaUtilList_class_(), true);
    EduStanfordNlpLingTokensregexTypesValueFunctions_TOKENS_MATCH_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$22_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(@"TOKENS_MATCH", [IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_TOKEN_LIST, EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_TOKEN_REGEX } count:2 type:EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_class_()]);
    EduStanfordNlpLingTokensregexTypesValueFunctions_TOKENS_REPLACE_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$23_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(@"TOKENS_REPLACE", [IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_TOKEN_LIST, EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_TOKEN_REGEX, EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_TOKEN_LIST_REPLACE } count:3 type:EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_class_()]);
    EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_STRING_REGEX = new_EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_initWithNSString_withNSString_withIOSClass_withBoolean_(@"REGEX", EduStanfordNlpLingTokensregexTypesExpressions_TYPE_REGEX, nil, false);
    EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_STRING = new_EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_initWithNSString_withNSString_withIOSClass_withBoolean_(@"STRING", nil, NSString_class_(), true);
    EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_STRING_REPLACE = new_EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_initWithNSString_withNSString_withIOSClass_withBoolean_(@"STRING_REPLACEMENT", nil, NSString_class_(), true);
    EduStanfordNlpLingTokensregexTypesValueFunctions_STRING_MATCH_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$24_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(@"STRING_MATCH", [IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_STRING, EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_STRING_REGEX } count:2 type:EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_class_()]);
    EduStanfordNlpLingTokensregexTypesValueFunctions_STRING_REPLACE_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$25_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(@"STRING_REPLACE", [IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_STRING, EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_STRING_REGEX, EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_STRING_REPLACE } count:3 type:EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_class_()]);
    EduStanfordNlpLingTokensregexTypesValueFunctions_CORELABEL_FACTORY = new_EduStanfordNlpProcessCoreLabelTokenFactory_init();
    EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_TOKEN = new_EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_initWithNSString_withNSString_withIOSClass_withBoolean_(@"TOKEN", nil, EduStanfordNlpUtilCoreMap_class_(), false);
    EduStanfordNlpLingTokensregexTypesValueFunctions_TOKEN_STRING_SPLIT_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$26_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(@"TOKEN_STRING_SPLIT", [IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_TOKEN, EduStanfordNlpLingTokensregexTypesValueFunctions_PARAM_INFO_STRING_REGEX, create_EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_initWithNSString_withNSString_withIOSClass_withBoolean_(@"INCLUDE_MATCHED", nil, JavaLangBoolean_class_(), false) } count:3 type:EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_class_()]);
    EduStanfordNlpLingTokensregexTypesValueFunctions_NUMBER_COMPARATOR = new_EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator_init();
    EduStanfordNlpLingTokensregexTypesValueFunctions_NOT_EQUALS_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$27_initWithNSString_(@"EQUALS");
    EduStanfordNlpLingTokensregexTypesValueFunctions_EQUALS_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$28_initWithNSString_(@"EQUALS");
    EduStanfordNlpLingTokensregexTypesValueFunctions_ANNOTATION_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$29_initWithNSString_(@"ANNOTATION_VALUE");
    EduStanfordNlpLingTokensregexTypesValueFunctions_GET_ANNOTATION_TAG_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$30_initWithNSString_(@"GET_ANNOTATION_TAG");
    EduStanfordNlpLingTokensregexTypesValueFunctions_SET_ANNOTATION_TAG_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$31_initWithNSString_(@"SET_ANNOTATION_TAG");
    EduStanfordNlpLingTokensregexTypesValueFunctions_REMOVE_ANNOTATION_TAG_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$32_initWithNSString_(@"REMOVE_ANNOTATION_TAG");
    EduStanfordNlpLingTokensregexTypesValueFunctions_TAGS_VALUE_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$33_initWithNSString_(@"TAGS_VALUE");
    EduStanfordNlpLingTokensregexTypesValueFunctions_SET_VALUE_TAG_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$34_initWithNSString_(@"VALUE_TAG");
    EduStanfordNlpLingTokensregexTypesValueFunctions_GET_VALUE_TAG_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$35_initWithNSString_(@"GET_VALUE_TAG");
    EduStanfordNlpLingTokensregexTypesValueFunctions_REMOVE_VALUE_TAG_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$36_initWithNSString_(@"REMOVE_VALUE_TAG");
    EduStanfordNlpLingTokensregexTypesValueFunctions_COMPOSITE_VALUE_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$37_initWithNSString_(@"COMPOSITE_VALUE");
    EduStanfordNlpLingTokensregexTypesValueFunctions_COMPOSITE_KEYS_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$38_initWithNSString_(@"COMPOSITE_KEYS");
    EduStanfordNlpLingTokensregexTypesValueFunctions_OBJECT_FIELD_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$39_initWithNSString_(@"OBJECT_FIELD");
    EduStanfordNlpLingTokensregexTypesValueFunctions_LIST_VALUE_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$40_initWithNSString_(@"LIST_VALUE");
    EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_VALUE_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$41_initWithNSString_(@"MAP_VALUE");
    EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_KEYS_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$42_initWithNSString_(@"MAP_KEYS");
    EduStanfordNlpLingTokensregexTypesValueFunctions_AGGREGATE_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$43_initWithNSString_(@"AGGREGATE");
    EduStanfordNlpLingTokensregexTypesValueFunctions_CALL_FUNCTION = new_EduStanfordNlpLingTokensregexTypesValueFunctions_$44_initWithNSString_(@"CALL");
    EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions = new_EduStanfordNlpUtilCollectionValuedMap_initWithEduStanfordNlpUtilMapFactory_withEduStanfordNlpUtilCollectionFactory_withBoolean_(EduStanfordNlpUtilMapFactory_linkedHashMapFactory(), EduStanfordNlpUtilCollectionFactory_arrayListFactory(), false);
    {
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Add" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_ADD_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Subtract" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_SUBTRACT_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Multiply" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_MULTIPLY_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Divide" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_DIVIDE_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Mod" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_MOD_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Min" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_MIN_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Max" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_MAX_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Pow" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_POW_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Negate" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_NEGATE_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"And" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_AND_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Or" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_OR_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Not" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_NOT_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Format" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_FORMAT_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Concat" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_CONCAT_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Join" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_JOIN_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Lowercase" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_LOWERCASE_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Uppercase" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_UPPERCASE_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Map" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_VALUES_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Map" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Match" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_TOKENS_MATCH_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Match" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_STRING_MATCH_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Replace" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_TOKENS_REPLACE_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Replace" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_STRING_REPLACE_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"GE" withId:new_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction_initWithNSString_withJavaUtilComparator_withEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_withIOSClass_(@"GE", EduStanfordNlpLingTokensregexTypesValueFunctions_NUMBER_COMPARATOR, JreLoadEnum(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, GE), NSNumber_class_())];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"GT" withId:new_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction_initWithNSString_withJavaUtilComparator_withEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_withIOSClass_(@"GT", EduStanfordNlpLingTokensregexTypesValueFunctions_NUMBER_COMPARATOR, JreLoadEnum(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, GT), NSNumber_class_())];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"LE" withId:new_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction_initWithNSString_withJavaUtilComparator_withEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_withIOSClass_(@"LE", EduStanfordNlpLingTokensregexTypesValueFunctions_NUMBER_COMPARATOR, JreLoadEnum(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, LE), NSNumber_class_())];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"LT" withId:new_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction_initWithNSString_withJavaUtilComparator_withEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_withIOSClass_(@"LT", EduStanfordNlpLingTokensregexTypesValueFunctions_NUMBER_COMPARATOR, JreLoadEnum(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, LT), NSNumber_class_())];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"EQ" withId:new_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction_initWithNSString_withJavaUtilComparator_withEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_withIOSClass_(@"EQ", EduStanfordNlpLingTokensregexTypesValueFunctions_NUMBER_COMPARATOR, JreLoadEnum(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, EQ), NSNumber_class_())];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"NE" withId:new_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction_initWithNSString_withJavaUtilComparator_withEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_withIOSClass_(@"NE", EduStanfordNlpLingTokensregexTypesValueFunctions_NUMBER_COMPARATOR, JreLoadEnum(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, NE), NSNumber_class_())];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"EQ" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_EQUALS_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"NE" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_NOT_EQUALS_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"VTag" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_SET_VALUE_TAG_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"GetVTag" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_GET_VALUE_TAG_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"RemoveVTag" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_REMOVE_VALUE_TAG_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Tag" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_SET_ANNOTATION_TAG_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"GetTag" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_GET_ANNOTATION_TAG_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"RemoveTag" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_REMOVE_ANNOTATION_TAG_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Split" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_TOKEN_STRING_SPLIT_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Annotate" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_ANNOTATION_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Aggregate" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_AGGREGATE_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Call" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_CALL_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"CreateRegex" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_CREATE_REGEX_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Select" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_COMPOSITE_VALUE_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Select" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_VALUE_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Select" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_TAGS_VALUE_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Select" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_ANNOTATION_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Select" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_OBJECT_FIELD_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"ListSelect" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_LIST_VALUE_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Keys" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_KEYS_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Keys" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_COMPOSITE_KEYS_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Set" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_TAGS_VALUE_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Set" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_COMPOSITE_VALUE_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Set" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_VALUE_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Set" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_ANNOTATION_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Set" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_OBJECT_FIELD_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Set" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_LIST_VALUE_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Get" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_TAGS_VALUE_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Get" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_COMPOSITE_VALUE_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Get" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_VALUE_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Get" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_ANNOTATION_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Get" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_OBJECT_FIELD_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Get" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_LIST_VALUE_FUNCTION];
      [EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions addWithId:@"Print" withId:EduStanfordNlpLingTokensregexTypesValueFunctions_PRINT_FUNCTION];
    }
    J2OBJC_SET_INITIALIZED(EduStanfordNlpLingTokensregexTypesValueFunctions)
  }
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_init(EduStanfordNlpLingTokensregexTypesValueFunctions *self) {
  NSObject_init(self);
}

EduStanfordNlpLingTokensregexTypesValueFunctions *new_EduStanfordNlpLingTokensregexTypesValueFunctions_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions, init)
}

EduStanfordNlpLingTokensregexTypesValueFunctions *create_EduStanfordNlpLingTokensregexTypesValueFunctions_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions, init)
}

id EduStanfordNlpLingTokensregexTypesValueFunctions_lookupFunctionObjectWithEduStanfordNlpLingTokensregexEnv_withNSString_(EduStanfordNlpLingTokensregexEnv *env, NSString *name) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_initialize();
  if (env != nil) {
    id obj = [env getWithNSString:name];
    if (obj != nil) {
      return obj;
    }
  }
  return [((EduStanfordNlpUtilCollectionValuedMap *) nil_chk(EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions)) getWithId:name];
}

NSString *EduStanfordNlpLingTokensregexTypesValueFunctions_joinWithNSObjectArray_withNSString_(IOSObjectArray *args, NSString *glue) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_initialize();
  NSString *res = nil;
  if (((IOSObjectArray *) nil_chk(args))->size_ == 1) {
    if ([JavaLangIterable_class_() isInstance:IOSObjectArray_Get(args, 0)]) {
      res = EduStanfordNlpUtilStringUtils_joinWithJavaLangIterable_withNSString_((id<JavaLangIterable>) cast_check(IOSObjectArray_Get(args, 0), JavaLangIterable_class_()), glue);
    }
    else {
      res = EduStanfordNlpUtilStringUtils_joinWithNSObjectArray_withNSString_(args, glue);
    }
  }
  else {
    res = EduStanfordNlpUtilStringUtils_joinWithNSObjectArray_withNSString_(args, glue);
  }
  return res;
}

jboolean EduStanfordNlpLingTokensregexTypesValueFunctions_isIntegerWithNSNumber_(NSNumber *n) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_initialize();
  return ([n isKindOfClass:[JavaLangLong class]] || [n isKindOfClass:[JavaLangInteger class]] || [n isKindOfClass:[JavaLangShort class]]);
}

void EduStanfordNlpLingTokensregexTypesValueFunctions_mainWithNSStringArray_(IOSObjectArray *args) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_initialize();
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((EduStanfordNlpUtilCollectionValuedMap *) nil_chk(EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions)) entrySet])) {
    for (id<EduStanfordNlpLingTokensregexTypesValueFunction> __strong vf in nil_chk([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue])) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$@", [entry_ getKey], @": ", vf)];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexTypesValueFunctions)

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction

- (instancetype)initWithNSString:(NSString *)name {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, name);
  return self;
}

- (NSString *)getDescription {
  return @"";
}

- (NSString *)getParamDesc {
  return @"...";
}

+ (NSString *)getParamDescWithNSString:(NSString *)type
                               withInt:(jint)nargs {
  return EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_getParamDescWithNSString_withInt_(type, nargs);
}

+ (NSString *)getTypeNameWithIOSClass:(IOSClass *)c {
  return EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_getTypeNameWithIOSClass_(c);
}

- (NSString *)description {
  if (signature_ == nil) {
    signature_ = JreStrcat("$C$C", name_, '(', [self getParamDesc], ')');
  }
  return signature_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xc, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xc, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(getDescription);
  methods[2].selector = @selector(getParamDesc);
  methods[3].selector = @selector(getParamDescWithNSString:withInt:);
  methods[4].selector = @selector(getTypeNameWithIOSClass:);
  methods[5].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "signature_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "getParamDesc", "LNSString;I", "getTypeName", "LIOSClass;", "toString", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction = { "NamedValueFunction", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, fields, 7, 0x409, 6, 2, 6, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction *self, NSString *name) {
  NSObject_init(self);
  self->name_ = name;
}

NSString *EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_getParamDescWithNSString_withInt_(NSString *type, jint nargs) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initialize();
  if (nargs < 0) {
    return JreStrcat("$$", type, @"...");
  }
  else if (nargs <= 3) {
    IOSObjectArray *tmp = [IOSObjectArray newArrayWithLength:nargs type:NSString_class_()];
    JavaUtilArrays_fillWithNSObjectArray_withId_(tmp, type);
    return EduStanfordNlpUtilStringUtils_joinWithNSObjectArray_withNSString_(tmp, @",");
  }
  else return JreStrcat("$CIC", type, '[', nargs, ']');
}

NSString *EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_getTypeNameWithIOSClass_(IOSClass *c) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initialize();
  return [((IOSClass *) nil_chk(c)) getCanonicalName];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction)

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)typeName
                    withIOSClass:(IOSClass *)className_
                     withBoolean:(jboolean)nullable {
  EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_initWithNSString_withNSString_withIOSClass_withBoolean_(self, name, typeName, className_, nullable);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:withIOSClass:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "typeName_", "LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "className__", "LIOSClass;", .constantValue.asLong = 0, 0x11, 1, -1, -1, -1 },
    { "nullable_", "Z", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;LIOSClass;Z", "className", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo = { "ParamInfo", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, fields, 7, 0x9, 1, 4, 2, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_initWithNSString_withNSString_withIOSClass_withBoolean_(EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *self, NSString *name, NSString *typeName, IOSClass *className_, jboolean nullable) {
  NSObject_init(self);
  self->name_ = name;
  self->typeName_ = typeName;
  self->className__ = className_;
  self->nullable_ = nullable;
}

EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *new_EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_initWithNSString_withNSString_withIOSClass_withBoolean_(NSString *name, NSString *typeName, IOSClass *className_, jboolean nullable) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo, initWithNSString_withNSString_withIOSClass_withBoolean_, name, typeName, className_, nullable)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *create_EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_initWithNSString_withNSString_withIOSClass_withBoolean_(NSString *name, NSString *typeName, IOSClass *className_, jboolean nullable) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo, initWithNSString_withNSString_withIOSClass_withBoolean_, name, typeName, className_, nullable)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo)

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction

- (instancetype)initWithNSString:(NSString *)name
                withJavaUtilList:(id<JavaUtilList>)paramInfos {
  EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction_initWithNSString_withJavaUtilList_(self, name, paramInfos);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:(IOSObjectArray *)paramInfos {
  EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(self, name, paramInfos);
  return self;
}

- (NSString *)getParamDesc {
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  for (EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo * __strong p in nil_chk(paramInfos_)) {
    if ([sb length] > 0) {
      (void) [sb appendWithNSString:@", "];
    }
    if (((EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *) nil_chk(p))->typeName_ != nil) {
      (void) [sb appendWithNSString:p->typeName_];
    }
    else {
      (void) [sb appendWithNSString:EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_getTypeNameWithIOSClass_(p->className__)];
    }
  }
  return [sb description];
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] != nargs_) {
    return false;
  }
  for (jint i = 0; i < [inArg size]; i++) {
    id<EduStanfordNlpLingTokensregexTypesValue> v = [inArg getWithInt:i];
    EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *p = [((id<JavaUtilList>) nil_chk(paramInfos_)) getWithInt:i];
    if (v == nil) {
      if (!((EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *) nil_chk(p))->nullable_) {
        return false;
      }
    }
    else {
      if (((EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *) nil_chk(p))->typeName_ != nil && ![p->typeName_ isEqual:[v getType]]) {
        return false;
      }
      if ([v get] != nil) {
        if (p->className__ != nil && !([p->className__ isAssignableFrom:[nil_chk([v get]) getClass]])) {
          return false;
        }
      }
    }
  }
  return true;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x81, -1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withJavaUtilList:);
  methods[1].selector = @selector(initWithNSString:withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:);
  methods[2].selector = @selector(getParamDesc);
  methods[3].selector = @selector(checkArgsWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "paramInfos_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 6, -1 },
    { "nargs_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LJavaUtilList;", "(Ljava/lang/String;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/ValueFunctions$ParamInfo;>;)V", "LNSString;[LEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo;", "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/ValueFunctions$ParamInfo;>;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction = { "TypeCheckedFunction", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, fields, 7, 0x409, 4, 2, 7, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction_initWithNSString_withJavaUtilList_(EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction *self, NSString *name, id<JavaUtilList> paramInfos) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, name);
  self->paramInfos_ = paramInfos;
  self->nargs_ = (paramInfos != nil) ? [((id<JavaUtilList>) nil_chk(paramInfos)) size] : 0;
}

void EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction *self, NSString *name, IOSObjectArray *paramInfos) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, name);
  self->paramInfos_ = JavaUtilArrays_asListWithNSObjectArray_(paramInfos);
  self->nargs_ = ((IOSObjectArray *) nil_chk(paramInfos))->size_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction)

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction

- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)nargs {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction_initWithNSString_withInt_(self, name, nargs);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)nargs
                    withNSString:(NSString *)resultTypeName {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction_initWithNSString_withInt_withNSString_(self, name, nargs, resultTypeName);
  return self;
}

- (NSString *)getParamDesc {
  return EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_getParamDescWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesExpressions_TYPE_NUMBER, nargs_);
}

- (NSNumber *)computeWithNSNumberArray:(IOSObjectArray *)ns {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if (nargs_ > 0 && [((id<JavaUtilList>) nil_chk(inArg)) size] != nargs_) {
    return false;
  }
  for (id<EduStanfordNlpLingTokensregexTypesValue> __strong v in nil_chk(inArg)) {
    if (v == nil || !([[v get] isKindOfClass:[NSNumber class]])) {
      return false;
    }
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  if (nargs_ > 0 && [((id<JavaUtilList>) nil_chk(inArg)) size] != nargs_) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("I$I", nargs_, @" arguments expected, got ", [((id<JavaUtilList>) nil_chk(inArg)) size]));
  }
  IOSObjectArray *numbers = [IOSObjectArray newArrayWithLength:[((id<JavaUtilList>) nil_chk(inArg)) size] type:NSNumber_class_()];
  for (jint i = 0; i < [inArg size]; i++) {
    (void) IOSObjectArray_Set(numbers, i, (NSNumber *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:i])) get], [NSNumber class]));
  }
  NSNumber *res = [self computeWithNSNumberArray:numbers];
  return new_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_initWithNSString_withId_withNSStringArray_(resultTypeName_, res, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x481, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 7, 8, -1, 9, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withInt:);
  methods[1].selector = @selector(initWithNSString:withInt:withNSString:);
  methods[2].selector = @selector(getParamDesc);
  methods[3].selector = @selector(computeWithNSNumberArray:);
  methods[4].selector = @selector(checkArgsWithJavaUtilList:);
  methods[5].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "resultTypeName_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "nargs_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;I", "LNSString;ILNSString;", "compute", "[LNSNumber;", "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction = { "NumericFunction", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, fields, 7, 0x409, 6, 2, 10, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction *self, NSString *name, jint nargs) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, name);
  self->resultTypeName_ = EduStanfordNlpLingTokensregexTypesExpressions_TYPE_NUMBER;
  self->nargs_ = 2;
  self->nargs_ = nargs;
}

void EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction_initWithNSString_withInt_withNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction *self, NSString *name, jint nargs, NSString *resultTypeName) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, name);
  self->resultTypeName_ = EduStanfordNlpLingTokensregexTypesExpressions_TYPE_NUMBER;
  self->nargs_ = 2;
  self->resultTypeName_ = resultTypeName;
  self->nargs_ = nargs;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction)

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction

- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)nargs {
  EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction_initWithNSString_withInt_(self, name, nargs);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)nargs
                    withNSString:(NSString *)resultTypeName {
  EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction_initWithNSString_withInt_withNSString_(self, name, nargs, resultTypeName);
  return self;
}

- (JavaLangBoolean *)computeWithJavaLangBooleanArray:(IOSObjectArray *)ns {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getParamDesc {
  return EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_getParamDescWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesExpressions_TYPE_BOOLEAN, nargs_);
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if (nargs_ > 0 && [((id<JavaUtilList>) nil_chk(inArg)) size] != nargs_) {
    return false;
  }
  for (id<EduStanfordNlpLingTokensregexTypesValue> __strong v in nil_chk(inArg)) {
    if (v == nil || !([[v get] isKindOfClass:[JavaLangBoolean class]])) {
      return false;
    }
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  if (nargs_ > 0 && [((id<JavaUtilList>) nil_chk(inArg)) size] != nargs_) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("I$I", nargs_, @" arguments expected, got ", [((id<JavaUtilList>) nil_chk(inArg)) size]));
  }
  IOSObjectArray *bools = [IOSObjectArray newArrayWithLength:[((id<JavaUtilList>) nil_chk(inArg)) size] type:JavaLangBoolean_class_()];
  for (jint i = 0; i < [inArg size]; i++) {
    (void) IOSObjectArray_Set(bools, i, (JavaLangBoolean *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:i])) get], [JavaLangBoolean class]));
  }
  JavaLangBoolean *res = [self computeWithJavaLangBooleanArray:bools];
  return new_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_initWithNSString_withId_withNSStringArray_(resultTypeName_, res, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x481, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 7, 8, -1, 9, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withInt:);
  methods[1].selector = @selector(initWithNSString:withInt:withNSString:);
  methods[2].selector = @selector(computeWithJavaLangBooleanArray:);
  methods[3].selector = @selector(getParamDesc);
  methods[4].selector = @selector(checkArgsWithJavaUtilList:);
  methods[5].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "resultTypeName_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "nargs_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;I", "LNSString;ILNSString;", "compute", "[LJavaLangBoolean;", "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction = { "BooleanFunction", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, fields, 7, 0x409, 6, 2, 10, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction *self, NSString *name, jint nargs) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, name);
  self->resultTypeName_ = EduStanfordNlpLingTokensregexTypesExpressions_TYPE_BOOLEAN;
  self->nargs_ = 2;
  self->nargs_ = nargs;
}

void EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction_initWithNSString_withInt_withNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction *self, NSString *name, jint nargs, NSString *resultTypeName) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, name);
  self->resultTypeName_ = EduStanfordNlpLingTokensregexTypesExpressions_TYPE_BOOLEAN;
  self->nargs_ = 2;
  self->resultTypeName_ = resultTypeName;
  self->nargs_ = nargs;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction)

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction

- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)nargs {
  EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction_initWithNSString_withInt_(self, name, nargs);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)nargs
                    withNSString:(NSString *)resultTypeName {
  EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction_initWithNSString_withInt_withNSString_(self, name, nargs, resultTypeName);
  return self;
}

- (NSString *)computeWithNSStringArray:(IOSObjectArray *)strs {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getParamDesc {
  return EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_getParamDescWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesExpressions_TYPE_STRING, nargs_);
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if (nargs_ > 0 && [((id<JavaUtilList>) nil_chk(inArg)) size] != nargs_) {
    return false;
  }
  for (id<EduStanfordNlpLingTokensregexTypesValue> __strong v in nil_chk(inArg)) {
    if (v == nil) {
      return false;
    }
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  if (nargs_ > 0 && [((id<JavaUtilList>) nil_chk(inArg)) size] != nargs_) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("I$I", nargs_, @" arguments expected, got ", [((id<JavaUtilList>) nil_chk(inArg)) size]));
  }
  IOSObjectArray *strs = [IOSObjectArray newArrayWithLength:[((id<JavaUtilList>) nil_chk(inArg)) size] type:NSString_class_()];
  for (jint i = 0; i < [inArg size]; i++) {
    if ([[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:i])) get] isKindOfClass:[NSString class]]) {
      (void) IOSObjectArray_Set(strs, i, (NSString *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:i])) get], [NSString class]));
    }
    else if ([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:i])) get] != nil) {
      (void) IOSObjectArray_Set(strs, i, [nil_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:i])) get]) description]);
    }
    else {
      (void) IOSObjectArray_Set(strs, i, nil);
    }
  }
  NSString *res = [self computeWithNSStringArray:strs];
  return new_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_initWithNSString_withId_withNSStringArray_(resultTypeName_, res, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x481, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 7, 8, -1, 9, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withInt:);
  methods[1].selector = @selector(initWithNSString:withInt:withNSString:);
  methods[2].selector = @selector(computeWithNSStringArray:);
  methods[3].selector = @selector(getParamDesc);
  methods[4].selector = @selector(checkArgsWithJavaUtilList:);
  methods[5].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "resultTypeName_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "nargs_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;I", "LNSString;ILNSString;", "compute", "[LNSString;", "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction = { "StringFunction", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, fields, 7, 0x409, 6, 2, 10, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction *self, NSString *name, jint nargs) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, name);
  self->resultTypeName_ = EduStanfordNlpLingTokensregexTypesExpressions_TYPE_STRING;
  self->nargs_ = 2;
  self->nargs_ = nargs;
}

void EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction_initWithNSString_withInt_withNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction *self, NSString *name, jint nargs, NSString *resultTypeName) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, name);
  self->resultTypeName_ = EduStanfordNlpLingTokensregexTypesExpressions_TYPE_STRING;
  self->nargs_ = 2;
  self->resultTypeName_ = resultTypeName;
  self->nargs_ = nargs;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction)

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator

- (jint)compareWithId:(NSNumber *)o1
               withId:(NSNumber *)o2 {
  if (EduStanfordNlpLingTokensregexTypesValueFunctions_isIntegerWithNSNumber_(o1) && EduStanfordNlpLingTokensregexTypesValueFunctions_isIntegerWithNSNumber_(o2)) {
    return JavaLangLong_compareWithLong_withLong_([((NSNumber *) nil_chk(o1)) longLongValue], [((NSNumber *) nil_chk(o2)) longLongValue]);
  }
  else {
    return JavaLangDouble_compareWithDouble_withDouble_([((NSNumber *) nil_chk(o1)) doubleValue], [((NSNumber *) nil_chk(o2)) doubleValue]);
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(compareWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LNSNumber;LNSNumber;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;", "Ljava/lang/Object;Ljava/util/Comparator<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator = { "NumericComparator", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, 3, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator_init(EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator *self) {
  NSObject_init(self);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator *new_EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator, init)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator *create_EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator)

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator

- (jint)compareWithId:(id<JavaLangComparable>)o1
               withId:(id<JavaLangComparable>)o2 {
  return [((id<JavaLangComparable>) nil_chk(o1)) compareToWithId:o2];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(compareWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LJavaLangComparable;LJavaLangComparable;", "(TT;TT;)I", "LEduStanfordNlpLingTokensregexTypesValueFunctions;", "<T::Ljava/lang/Comparable<TT;>;>Ljava/lang/Object;Ljava/util/Comparator<TT;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator = { "ComparableComparator", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x9, 2, 0, 3, -1, -1, 4, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator_init(EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator *self) {
  NSObject_init(self);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator *new_EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator, init)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator *create_EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType)

EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_values_[6];

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType

+ (IOSObjectArray *)values {
  return EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_values();
}

+ (EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *)valueOfWithNSString:(NSString *)name {
  return EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "GT", "LEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "LT", "LEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "GE", "LEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "LE", "LEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "EQ", "LEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "NE", "LEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, GT), &JreEnum(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, LT), &JreEnum(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, GE), &JreEnum(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, LE), &JreEnum(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, EQ), &JreEnum(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, NE), "LEduStanfordNlpLingTokensregexTypesValueFunctions;", "Ljava/lang/Enum<Ledu/stanford/nlp/ling/tokensregex/types/ValueFunctions$CompareType;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType = { "CompareType", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, fields, 7, 0x4019, 2, 6, 8, -1, -1, 9, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType;
}

+ (void)initialize {
  if (self == [EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType class]) {
    JreEnum(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, GT) = new_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_initWithNSString_withInt_(@"GT", 0);
    JreEnum(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, LT) = new_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_initWithNSString_withInt_(@"LT", 1);
    JreEnum(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, GE) = new_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_initWithNSString_withInt_(@"GE", 2);
    JreEnum(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, LE) = new_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_initWithNSString_withInt_(@"LE", 3);
    JreEnum(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, EQ) = new_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_initWithNSString_withInt_(@"EQ", 4);
    JreEnum(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, NE) = new_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_initWithNSString_withInt_(@"NE", 5);
    J2OBJC_SET_INITIALIZED(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType)
  }
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *new_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_values() {
  EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_initialize();
  return [IOSObjectArray arrayWithObjects:EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_values_ count:6 type:EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_class_()];
}

EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_valueOfWithNSString_(NSString *name) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_initialize();
  for (int i = 0; i < 6; i++) {
    EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *e = EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_fromOrdinal(NSUInteger ordinal) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_initialize();
  if (ordinal >= 6) {
    return nil;
  }
  return EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType)

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction

- (instancetype)initWithNSString:(NSString *)name
          withJavaUtilComparator:(id<JavaUtilComparator>)comparator
withEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType:(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *)compType
                    withIOSClass:(IOSClass *)clazz {
  EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction_initWithNSString_withJavaUtilComparator_withEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_withIOSClass_(self, name, comparator, compType, clazz);
  return self;
}

- (NSString *)getParamDesc {
  return JreStrcat("C$C$C", '(', EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_getTypeNameWithIOSClass_(clazz_), ',', EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_getTypeNameWithIOSClass_(clazz_), ')');
}

- (JavaLangBoolean *)compareWithId:(id)o1
                            withId:(id)o2 {
  jint res = [((id<JavaUtilComparator>) nil_chk(comparator_)) compareWithId:o1 withId:o2];
  switch ([compType_ ordinal]) {
    case EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_Enum_GT:
    return JavaLangBoolean_valueOfWithBoolean_(res > 0);
    case EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_Enum_LT:
    return JavaLangBoolean_valueOfWithBoolean_(res < 0);
    case EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_Enum_GE:
    return JavaLangBoolean_valueOfWithBoolean_(res >= 0);
    case EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_Enum_LE:
    return JavaLangBoolean_valueOfWithBoolean_(res <= 0);
    case EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_Enum_EQ:
    return JavaLangBoolean_valueOfWithBoolean_(res == 0);
    case EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_Enum_NE:
    return JavaLangBoolean_valueOfWithBoolean_(res != 0);
    default:
    @throw new_JavaLangUnsupportedOperationException_initWithNSString_(JreStrcat("$@", @"Unknown compType: ", compType_));
  }
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] != 2) {
    return false;
  }
  if (clazz_ != nil) {
    if ([inArg getWithInt:0] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil || !([((IOSClass *) nil_chk(clazz_)) isAssignableFrom:[nil_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get]) getClass]])) {
      return false;
    }
    if ([inArg getWithInt:1] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get] == nil || !([((IOSClass *) nil_chk(clazz_)) isAssignableFrom:[nil_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get]) getClass]])) {
      return false;
    }
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] != 2) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"2 arguments expected, got ", [inArg size]));
  }
  if ([inArg getWithInt:0] == nil || [inArg getWithInt:1] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get] == nil) {
    return nil;
  }
  JavaLangBoolean *res = [self compareWithId:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] withId:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get]];
  return [((JavaLangBoolean *) nil_chk((res))) booleanValue] ? JreLoadStatic(EduStanfordNlpLingTokensregexTypesExpressions, TRUE) : JreLoadStatic(EduStanfordNlpLingTokensregexTypesExpressions, FALSE);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 8, 9, -1, 10, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withJavaUtilComparator:withEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType:withIOSClass:);
  methods[1].selector = @selector(getParamDesc);
  methods[2].selector = @selector(compareWithId:withId:);
  methods[3].selector = @selector(checkArgsWithJavaUtilList:);
  methods[4].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "comparator_", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x0, -1, -1, 11, -1 },
    { "compType_", "LEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "clazz_", "LIOSClass;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LJavaUtilComparator;LEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType;LIOSClass;", "(Ljava/lang/String;Ljava/util/Comparator<TT;>;Ledu/stanford/nlp/ling/tokensregex/types/ValueFunctions$CompareType;Ljava/lang/Class;)V", "compare", "LNSObject;LNSObject;", "(TT;TT;)Ljava/lang/Boolean;", "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "Ljava/util/Comparator<TT;>;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;", "<T:Ljava/lang/Object;>Ledu/stanford/nlp/ling/tokensregex/types/ValueFunctions$NamedValueFunction;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction = { "CompareFunction", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, fields, 7, 0x9, 5, 3, 12, -1, -1, 13, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction_initWithNSString_withJavaUtilComparator_withEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_withIOSClass_(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction *self, NSString *name, id<JavaUtilComparator> comparator, EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *compType, IOSClass *clazz) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, name);
  self->comparator_ = comparator;
  self->compType_ = compType;
  self->clazz_ = clazz;
}

EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction *new_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction_initWithNSString_withJavaUtilComparator_withEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_withIOSClass_(NSString *name, id<JavaUtilComparator> comparator, EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *compType, IOSClass *clazz) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction, initWithNSString_withJavaUtilComparator_withEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_withIOSClass_, name, comparator, compType, clazz)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction *create_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction_initWithNSString_withJavaUtilComparator_withEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_withIOSClass_(NSString *name, id<JavaUtilComparator> comparator, EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *compType, IOSClass *clazz) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction, initWithNSString_withJavaUtilComparator_withEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_withIOSClass_, name, comparator, compType, clazz)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction)

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$1

- (NSNumber *)computeWithNSNumberArray:(IOSObjectArray *)inArg {
  if (EduStanfordNlpLingTokensregexTypesValueFunctions_isIntegerWithNSNumber_(IOSObjectArray_Get(nil_chk(inArg), 0)) && EduStanfordNlpLingTokensregexTypesValueFunctions_isIntegerWithNSNumber_(IOSObjectArray_Get(inArg, 1))) {
    return JavaLangLong_valueOfWithLong_([((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 0))) longLongValue] + [((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 1))) longLongValue]);
  }
  else {
    return JavaLangDouble_valueOfWithDouble_([((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 0))) doubleValue] + [((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 1))) doubleValue]);
  }
}

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$1_initWithNSString_withInt_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSNumber;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(computeWithNSNumberArray:);
  methods[1].selector = @selector(initWithNSString:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compute", "[LNSNumber;", "LNSString;I", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$1 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$1;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$1_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$1 *self, NSString *arg$0, jint arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction_initWithNSString_withInt_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$1 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$1_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$1, initWithNSString_withInt_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$1 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$1_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$1, initWithNSString_withInt_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$2

- (NSNumber *)computeWithNSNumberArray:(IOSObjectArray *)inArg {
  if (EduStanfordNlpLingTokensregexTypesValueFunctions_isIntegerWithNSNumber_(IOSObjectArray_Get(nil_chk(inArg), 0)) && EduStanfordNlpLingTokensregexTypesValueFunctions_isIntegerWithNSNumber_(IOSObjectArray_Get(inArg, 1))) {
    return JavaLangLong_valueOfWithLong_([((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 0))) longLongValue] - [((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 1))) longLongValue]);
  }
  else {
    return JavaLangDouble_valueOfWithDouble_([((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 0))) doubleValue] - [((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 1))) doubleValue]);
  }
}

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$2_initWithNSString_withInt_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSNumber;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(computeWithNSNumberArray:);
  methods[1].selector = @selector(initWithNSString:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compute", "[LNSNumber;", "LNSString;I", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$2 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$2;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$2_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$2 *self, NSString *arg$0, jint arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction_initWithNSString_withInt_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$2 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$2_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$2, initWithNSString_withInt_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$2 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$2_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$2, initWithNSString_withInt_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$3

- (NSNumber *)computeWithNSNumberArray:(IOSObjectArray *)inArg {
  if (EduStanfordNlpLingTokensregexTypesValueFunctions_isIntegerWithNSNumber_(IOSObjectArray_Get(nil_chk(inArg), 0)) && EduStanfordNlpLingTokensregexTypesValueFunctions_isIntegerWithNSNumber_(IOSObjectArray_Get(inArg, 1))) {
    return JavaLangLong_valueOfWithLong_([((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 0))) longLongValue] * [((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 1))) longLongValue]);
  }
  else {
    return JavaLangDouble_valueOfWithDouble_([((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 0))) doubleValue] * [((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 1))) doubleValue]);
  }
}

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$3_initWithNSString_withInt_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSNumber;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(computeWithNSNumberArray:);
  methods[1].selector = @selector(initWithNSString:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compute", "[LNSNumber;", "LNSString;I", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$3 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$3;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$3_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$3 *self, NSString *arg$0, jint arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction_initWithNSString_withInt_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$3 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$3_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$3, initWithNSString_withInt_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$3 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$3_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$3, initWithNSString_withInt_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$4

- (NSNumber *)computeWithNSNumberArray:(IOSObjectArray *)inArg {
  if (EduStanfordNlpLingTokensregexTypesValueFunctions_isIntegerWithNSNumber_(IOSObjectArray_Get(nil_chk(inArg), 0)) && EduStanfordNlpLingTokensregexTypesValueFunctions_isIntegerWithNSNumber_(IOSObjectArray_Get(inArg, 1))) {
    if ([((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 0))) longLongValue] % [((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 1))) longLongValue] == 0) return JavaLangLong_valueOfWithLong_([((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 0))) longLongValue] / [((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 1))) longLongValue]);
    else return JavaLangDouble_valueOfWithDouble_([((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 0))) doubleValue] / [((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 1))) doubleValue]);
  }
  else {
    return JavaLangDouble_valueOfWithDouble_([((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 0))) doubleValue] / [((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 1))) doubleValue]);
  }
}

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$4_initWithNSString_withInt_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSNumber;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(computeWithNSNumberArray:);
  methods[1].selector = @selector(initWithNSString:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compute", "[LNSNumber;", "LNSString;I", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$4 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$4;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$4_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$4 *self, NSString *arg$0, jint arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction_initWithNSString_withInt_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$4 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$4_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$4, initWithNSString_withInt_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$4 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$4_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$4, initWithNSString_withInt_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$5

- (NSNumber *)computeWithNSNumberArray:(IOSObjectArray *)inArg {
  if (EduStanfordNlpLingTokensregexTypesValueFunctions_isIntegerWithNSNumber_(IOSObjectArray_Get(nil_chk(inArg), 0)) && EduStanfordNlpLingTokensregexTypesValueFunctions_isIntegerWithNSNumber_(IOSObjectArray_Get(inArg, 1))) {
    return JavaLangLong_valueOfWithLong_([((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 0))) longLongValue] % [((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 1))) longLongValue]);
  }
  else {
    return JavaLangDouble_valueOfWithDouble_(fmod([((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 0))) doubleValue], [((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 1))) doubleValue]));
  }
}

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$5_initWithNSString_withInt_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSNumber;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(computeWithNSNumberArray:);
  methods[1].selector = @selector(initWithNSString:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compute", "[LNSNumber;", "LNSString;I", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$5 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$5;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$5_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$5 *self, NSString *arg$0, jint arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction_initWithNSString_withInt_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$5 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$5_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$5, initWithNSString_withInt_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$5 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$5_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$5, initWithNSString_withInt_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$6

- (NSNumber *)computeWithNSNumberArray:(IOSObjectArray *)inArg {
  if (EduStanfordNlpLingTokensregexTypesValueFunctions_isIntegerWithNSNumber_(IOSObjectArray_Get(nil_chk(inArg), 0)) && EduStanfordNlpLingTokensregexTypesValueFunctions_isIntegerWithNSNumber_(IOSObjectArray_Get(inArg, 1))) {
    return JavaLangLong_valueOfWithLong_(JavaLangMath_maxWithLong_withLong_([((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 0))) longLongValue], [((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 1))) longLongValue]));
  }
  else {
    return JavaLangDouble_valueOfWithDouble_(JavaLangMath_maxWithDouble_withDouble_([((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 0))) doubleValue], [((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 1))) doubleValue]));
  }
}

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$6_initWithNSString_withInt_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSNumber;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(computeWithNSNumberArray:);
  methods[1].selector = @selector(initWithNSString:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compute", "[LNSNumber;", "LNSString;I", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$6 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$6;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$6_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$6 *self, NSString *arg$0, jint arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction_initWithNSString_withInt_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$6 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$6_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$6, initWithNSString_withInt_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$6 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$6_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$6, initWithNSString_withInt_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$7

- (NSNumber *)computeWithNSNumberArray:(IOSObjectArray *)inArg {
  if (EduStanfordNlpLingTokensregexTypesValueFunctions_isIntegerWithNSNumber_(IOSObjectArray_Get(nil_chk(inArg), 0)) && EduStanfordNlpLingTokensregexTypesValueFunctions_isIntegerWithNSNumber_(IOSObjectArray_Get(inArg, 1))) {
    return JavaLangLong_valueOfWithLong_(JavaLangMath_minWithLong_withLong_([((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 0))) longLongValue], [((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 1))) longLongValue]));
  }
  else {
    return JavaLangDouble_valueOfWithDouble_(JavaLangMath_minWithDouble_withDouble_([((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 0))) doubleValue], [((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 1))) doubleValue]));
  }
}

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$7_initWithNSString_withInt_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSNumber;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(computeWithNSNumberArray:);
  methods[1].selector = @selector(initWithNSString:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compute", "[LNSNumber;", "LNSString;I", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$7 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$7;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$7_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$7 *self, NSString *arg$0, jint arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction_initWithNSString_withInt_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$7 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$7_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$7, initWithNSString_withInt_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$7 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$7_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$7, initWithNSString_withInt_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$8

- (NSNumber *)computeWithNSNumberArray:(IOSObjectArray *)inArg {
  return JavaLangDouble_valueOfWithDouble_(JavaLangMath_powWithDouble_withDouble_([((NSNumber *) nil_chk(IOSObjectArray_Get(nil_chk(inArg), 0))) doubleValue], [((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 1))) doubleValue]));
}

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$8_initWithNSString_withInt_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSNumber;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(computeWithNSNumberArray:);
  methods[1].selector = @selector(initWithNSString:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compute", "[LNSNumber;", "LNSString;I", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$8 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$8;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$8_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$8 *self, NSString *arg$0, jint arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction_initWithNSString_withInt_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$8 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$8_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$8, initWithNSString_withInt_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$8 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$8_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$8, initWithNSString_withInt_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$9

- (NSNumber *)computeWithNSNumberArray:(IOSObjectArray *)inArg {
  if (EduStanfordNlpLingTokensregexTypesValueFunctions_isIntegerWithNSNumber_(IOSObjectArray_Get(nil_chk(inArg), 0))) {
    return JavaLangLong_valueOfWithLong_(-[((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 0))) longLongValue]);
  }
  else {
    return JavaLangDouble_valueOfWithDouble_(-[((NSNumber *) nil_chk(IOSObjectArray_Get(inArg, 0))) doubleValue]);
  }
}

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$9_initWithNSString_withInt_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSNumber;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(computeWithNSNumberArray:);
  methods[1].selector = @selector(initWithNSString:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compute", "[LNSNumber;", "LNSString;I", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$9 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$9;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$9_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$9 *self, NSString *arg$0, jint arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction_initWithNSString_withInt_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$9 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$9_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$9, initWithNSString_withInt_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$9 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$9_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$9, initWithNSString_withInt_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$10

- (JavaLangBoolean *)computeWithJavaLangBooleanArray:(IOSObjectArray *)inArg {
  {
    IOSObjectArray *a__ = inArg;
    JavaLangBoolean * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaLangBoolean * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangBoolean *b = *b__++;
      if (![((JavaLangBoolean *) nil_chk(b)) booleanValue]) return JavaLangBoolean_valueOfWithBoolean_(false);
    }
  }
  return JavaLangBoolean_valueOfWithBoolean_(true);
}

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$10_initWithNSString_withInt_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(computeWithJavaLangBooleanArray:);
  methods[1].selector = @selector(initWithNSString:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compute", "[LJavaLangBoolean;", "LNSString;I", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$10 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$10;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$10_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$10 *self, NSString *arg$0, jint arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction_initWithNSString_withInt_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$10 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$10_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$10, initWithNSString_withInt_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$10 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$10_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$10, initWithNSString_withInt_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$11

- (JavaLangBoolean *)computeWithJavaLangBooleanArray:(IOSObjectArray *)inArg {
  {
    IOSObjectArray *a__ = inArg;
    JavaLangBoolean * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaLangBoolean * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangBoolean *b = *b__++;
      if ([((JavaLangBoolean *) nil_chk(b)) booleanValue]) return JavaLangBoolean_valueOfWithBoolean_(true);
    }
  }
  return JavaLangBoolean_valueOfWithBoolean_(false);
}

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$11_initWithNSString_withInt_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(computeWithJavaLangBooleanArray:);
  methods[1].selector = @selector(initWithNSString:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compute", "[LJavaLangBoolean;", "LNSString;I", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$11 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$11;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$11_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$11 *self, NSString *arg$0, jint arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction_initWithNSString_withInt_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$11 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$11_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$11, initWithNSString_withInt_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$11 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$11_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$11, initWithNSString_withInt_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$12

- (JavaLangBoolean *)computeWithJavaLangBooleanArray:(IOSObjectArray *)inArg {
  JavaLangBoolean *res = JavaLangBoolean_valueOfWithBoolean_(![((JavaLangBoolean *) nil_chk(IOSObjectArray_Get(nil_chk(inArg), 0))) booleanValue]);
  return res;
}

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$12_initWithNSString_withInt_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaLangBoolean;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(computeWithJavaLangBooleanArray:);
  methods[1].selector = @selector(initWithNSString:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compute", "[LJavaLangBoolean;", "LNSString;I", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$12 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$12;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$12_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$12 *self, NSString *arg$0, jint arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction_initWithNSString_withInt_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$12 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$12_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$12, initWithNSString_withInt_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$12 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$12_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$12, initWithNSString_withInt_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$13

- (NSString *)computeWithNSStringArray:(IOSObjectArray *)inArg {
  return EduStanfordNlpLingTokensregexTypesValueFunctions_joinWithNSObjectArray_withNSString_(inArg, @"");
}

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$13_initWithNSString_withInt_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(computeWithNSStringArray:);
  methods[1].selector = @selector(initWithNSString:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compute", "[LNSString;", "LNSString;I", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$13 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$13;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$13_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$13 *self, NSString *arg$0, jint arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction_initWithNSString_withInt_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$13 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$13_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$13, initWithNSString_withInt_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$13 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$13_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$13, initWithNSString_withInt_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$14

- (NSString *)computeWithNSStringArray:(IOSObjectArray *)inArg {
  return [((NSString *) nil_chk(IOSObjectArray_Get(nil_chk(inArg), 0))) uppercaseString];
}

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$14_initWithNSString_withInt_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(computeWithNSStringArray:);
  methods[1].selector = @selector(initWithNSString:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compute", "[LNSString;", "LNSString;I", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$14 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$14;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$14_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$14 *self, NSString *arg$0, jint arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction_initWithNSString_withInt_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$14 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$14_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$14, initWithNSString_withInt_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$14 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$14_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$14, initWithNSString_withInt_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$15

- (NSString *)computeWithNSStringArray:(IOSObjectArray *)inArg {
  return [((NSString *) nil_chk(IOSObjectArray_Get(nil_chk(inArg), 0))) lowercaseString];
}

- (instancetype)initWithNSString:(NSString *)arg$0
                         withInt:(jint)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$15_initWithNSString_withInt_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x81, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(computeWithNSStringArray:);
  methods[1].selector = @selector(initWithNSString:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compute", "[LNSString;", "LNSString;I", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$15 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$15;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$15_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_$15 *self, NSString *arg$0, jint arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction_initWithNSString_withInt_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$15 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$15_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$15, initWithNSString_withInt_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$15 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$15_initWithNSString_withInt_(NSString *arg$0, jint arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$15, initWithNSString_withInt_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$16

- (NSString *)getParamDesc {
  return @"...";
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] < 1) {
    return false;
  }
  if ([inArg size] > 1 && ([inArg getWithInt:0] == nil || !([[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] isKindOfClass:[NSString class]]))) {
    return false;
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] > 1) {
    NSString *format = (NSString *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get], [NSString class]);
    IOSObjectArray *args = [IOSObjectArray newArrayWithLength:[inArg size] - 1 type:NSObject_class_()];
    for (jint i = 1; i < [inArg size]; i++) {
      (void) IOSObjectArray_Set(args, i - 1, [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:i])) get]);
    }
    NSString *res = NSString_formatWithNSString_withNSObjectArray_(format, args);
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printWithNSString:res];
  }
  else {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printWithId:[inArg getWithInt:0]];
  }
  return nil;
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$16_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getParamDesc);
  methods[1].selector = @selector(checkArgsWithJavaUtilList:);
  methods[2].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[3].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$16 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 7, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$16;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$16_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$16 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$16 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$16_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$16, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$16 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$16_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$16, initWithNSString_, arg$0)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$17

- (NSString *)getParamDesc {
  return JreStrcat("$$", EduStanfordNlpLingTokensregexTypesExpressions_TYPE_STRING, @",...");
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] < 1) {
    return false;
  }
  if ([inArg getWithInt:0] == nil || !([[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] isKindOfClass:[NSString class]])) {
    return false;
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  NSString *format = (NSString *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0])) get], [NSString class]);
  IOSObjectArray *args = [IOSObjectArray newArrayWithLength:[inArg size] - 1 type:NSObject_class_()];
  for (jint i = 1; i < [inArg size]; i++) {
    (void) IOSObjectArray_Set(args, i - 1, [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:i])) get]);
  }
  NSString *res = NSString_formatWithNSString_withNSObjectArray_(format, args);
  return new_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_initWithNSString_withId_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_TYPE_STRING, res, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$17_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getParamDesc);
  methods[1].selector = @selector(checkArgsWithJavaUtilList:);
  methods[2].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[3].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$17 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 7, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$17;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$17_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$17 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$17 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$17_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$17, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$17 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$17_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$17, initWithNSString_, arg$0)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$18

- (NSString *)getParamDesc {
  return @"String glue,...";
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] < 1) {
    return false;
  }
  if ([inArg getWithInt:0] == nil || !([[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] isKindOfClass:[NSString class]])) {
    return false;
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  NSString *glue = (NSString *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0])) get], [NSString class]);
  IOSObjectArray *args = [IOSObjectArray newArrayWithLength:[inArg size] - 1 type:NSObject_class_()];
  for (jint i = 1; i < [inArg size]; i++) {
    (void) IOSObjectArray_Set(args, i - 1, [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:i])) get]);
  }
  NSString *res = EduStanfordNlpLingTokensregexTypesValueFunctions_joinWithNSObjectArray_withNSString_(args, glue);
  return new_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_initWithNSString_withId_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_TYPE_STRING, res, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$18_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getParamDesc);
  methods[1].selector = @selector(checkArgsWithJavaUtilList:);
  methods[2].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[3].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$18 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 7, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$18;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$18_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$18 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$18 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$18_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$18, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$18 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$18_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$18, initWithNSString_, arg$0)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$19

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] < 1) {
    return false;
  }
  if ([inArg getWithInt:0] == nil || !([JavaUtilList_class_() isInstance:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get]])) {
    return false;
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  id<JavaUtilList> list = (id<JavaUtilList>) cast_check([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0])) get], JavaUtilList_class_());
  IOSObjectArray *args = [IOSObjectArray newArrayWithLength:[((id<JavaUtilList>) nil_chk(list)) size] type:NSString_class_()];
  for (jint i = 0; i < [list size]; i++) {
    (void) IOSObjectArray_Set(args, i, [nil_chk([list getWithInt:i]) description]);
  }
  EduStanfordNlpLingTokensregexMultiWordStringMatcher *matcher = new_EduStanfordNlpLingTokensregexMultiWordStringMatcher_initWithNSString_(@"EXCTWS");
  NSString *regex = [matcher getRegexWithNSStringArray:args];
  return new_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_initWithNSString_withId_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_TYPE_REGEX, regex, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$19_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(checkArgsWithJavaUtilList:);
  methods[1].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[2].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$19 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 3, 0, 7, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$19;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$19_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$19 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$19 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$19_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$19, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$19 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$19_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$19, initWithNSString_, arg$0)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$20

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0] == nil) return nil;
  id<JavaUtilList> list = (id<JavaUtilList>) cast_check([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get], JavaUtilList_class_());
  id<EduStanfordNlpLingTokensregexTypesValueFunction> func = (id<EduStanfordNlpLingTokensregexTypesValueFunction>) cast_check([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get], EduStanfordNlpLingTokensregexTypesValueFunction_class_());
  id<JavaUtilList> res = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(list)) size]);
  for (id __strong elem in list) {
    id<JavaUtilList> args = new_JavaUtilArrayList_initWithInt_(1);
    [args addWithId:EduStanfordNlpLingTokensregexTypesExpressions_createValueWithNSString_withId_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_TYPE_LIST, elem, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()])];
    [res addWithId:[((id<EduStanfordNlpLingTokensregexTypesValueFunction>) nil_chk(func)) applyWithEduStanfordNlpLingTokensregexEnv:env withJavaUtilList:args]];
  }
  return new_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_initWithNSString_withId_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_TYPE_LIST, res, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
}

- (instancetype)initWithNSString:(NSString *)arg$0
withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:(IOSObjectArray *)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$20_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x80, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[1].selector = @selector(initWithNSString:withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;[LEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$20 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 4, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$20;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$20_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(EduStanfordNlpLingTokensregexTypesValueFunctions_$20 *self, NSString *arg$0, IOSObjectArray *arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$20 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$20_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$20, initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$20 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$20_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$20, initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$21

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0] == nil) return nil;
  id<JavaUtilList> list = (id<JavaUtilList>) cast_check([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get], JavaUtilList_class_());
  id<JavaUtilFunctionFunction> func = (id<JavaUtilFunctionFunction>) cast_check([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get], JavaUtilFunctionFunction_class_());
  id<JavaUtilList> res = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(list)) size]);
  for (id __strong elem in list) {
    [res addWithId:[((id<JavaUtilFunctionFunction>) nil_chk(func)) applyWithId:elem]];
  }
  return new_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_initWithNSString_withId_withNSStringArray_(nil, res, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
}

- (instancetype)initWithNSString:(NSString *)arg$0
withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:(IOSObjectArray *)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$21_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x80, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[1].selector = @selector(initWithNSString:withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;[LEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$21 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 4, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$21;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$21_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(EduStanfordNlpLingTokensregexTypesValueFunctions_$21 *self, NSString *arg$0, IOSObjectArray *arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$21 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$21_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$21, initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$21 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$21_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$21, initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$22

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil) return JreLoadStatic(EduStanfordNlpLingTokensregexTypesExpressions, FALSE);
  id<JavaUtilList> cms = (id<JavaUtilList>) cast_check([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get], JavaUtilList_class_());
  EduStanfordNlpLingTokensregexTokenSequencePattern *pattern = (EduStanfordNlpLingTokensregexTokenSequencePattern *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get], [EduStanfordNlpLingTokensregexTokenSequencePattern class]);
  EduStanfordNlpLingTokensregexTokenSequenceMatcher *matcher = [((EduStanfordNlpLingTokensregexTokenSequencePattern *) nil_chk(pattern)) getMatcherWithJavaUtilList:cms];
  jboolean matches = [((EduStanfordNlpLingTokensregexTokenSequenceMatcher *) nil_chk(matcher)) matches];
  return (matches) ? JreLoadStatic(EduStanfordNlpLingTokensregexTypesExpressions, TRUE) : JreLoadStatic(EduStanfordNlpLingTokensregexTypesExpressions, FALSE);
}

- (instancetype)initWithNSString:(NSString *)arg$0
withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:(IOSObjectArray *)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$22_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x80, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[1].selector = @selector(initWithNSString:withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;[LEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$22 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 4, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$22;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$22_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(EduStanfordNlpLingTokensregexTypesValueFunctions_$22 *self, NSString *arg$0, IOSObjectArray *arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$22 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$22_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$22, initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$22 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$22_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$22, initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$23

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil) return JreLoadStatic(EduStanfordNlpLingTokensregexTypesExpressions, FALSE);
  id<JavaUtilList> cms = (id<JavaUtilList>) cast_check([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get], JavaUtilList_class_());
  id<JavaUtilList> replacement = (id<JavaUtilList>) cast_check([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:2])) get], JavaUtilList_class_());
  EduStanfordNlpLingTokensregexTokenSequencePattern *pattern = (EduStanfordNlpLingTokensregexTokenSequencePattern *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get], [EduStanfordNlpLingTokensregexTokenSequencePattern class]);
  EduStanfordNlpLingTokensregexTokenSequenceMatcher *matcher = [((EduStanfordNlpLingTokensregexTokenSequencePattern *) nil_chk(pattern)) getMatcherWithJavaUtilList:cms];
  id<JavaUtilList> replaced = [((EduStanfordNlpLingTokensregexTokenSequenceMatcher *) nil_chk(matcher)) replaceAllWithJavaUtilList:replacement];
  return new_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_initWithNSString_withId_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_TYPE_TOKENS, replaced, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
}

- (instancetype)initWithNSString:(NSString *)arg$0
withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:(IOSObjectArray *)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$23_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x80, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[1].selector = @selector(initWithNSString:withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;[LEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$23 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 4, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$23;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$23_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(EduStanfordNlpLingTokensregexTypesValueFunctions_$23 *self, NSString *arg$0, IOSObjectArray *arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$23 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$23_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$23, initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$23 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$23_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$23, initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$24

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil) return JreLoadStatic(EduStanfordNlpLingTokensregexTypesExpressions, FALSE);
  NSString *str = (NSString *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get], [NSString class]);
  NSString *regex = (NSString *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get], [NSString class]);
  JavaUtilRegexPattern *pattern = [((EduStanfordNlpLingTokensregexEnv *) nil_chk(env)) getStringPatternWithNSString:regex];
  JavaUtilRegexMatcher *matcher = [((JavaUtilRegexPattern *) nil_chk(pattern)) matcherWithJavaLangCharSequence:str];
  jboolean matches = [((JavaUtilRegexMatcher *) nil_chk(matcher)) matches];
  return (matches) ? JreLoadStatic(EduStanfordNlpLingTokensregexTypesExpressions, TRUE) : JreLoadStatic(EduStanfordNlpLingTokensregexTypesExpressions, FALSE);
}

- (instancetype)initWithNSString:(NSString *)arg$0
withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:(IOSObjectArray *)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$24_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x80, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[1].selector = @selector(initWithNSString:withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;[LEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$24 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 4, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$24;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$24_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(EduStanfordNlpLingTokensregexTypesValueFunctions_$24 *self, NSString *arg$0, IOSObjectArray *arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$24 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$24_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$24, initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$24 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$24_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$24, initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$25

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil) return JreLoadStatic(EduStanfordNlpLingTokensregexTypesExpressions, FALSE);
  NSString *str = (NSString *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get], [NSString class]);
  NSString *replacement = (NSString *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:2])) get], [NSString class]);
  NSString *regex = (NSString *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get], [NSString class]);
  JavaUtilRegexPattern *pattern = [((EduStanfordNlpLingTokensregexEnv *) nil_chk(env)) getStringPatternWithNSString:regex];
  JavaUtilRegexMatcher *matcher = [((JavaUtilRegexPattern *) nil_chk(pattern)) matcherWithJavaLangCharSequence:str];
  NSString *replaced = [((JavaUtilRegexMatcher *) nil_chk(matcher)) replaceAllWithNSString:replacement];
  return new_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_initWithNSString_withId_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_TYPE_STRING, replaced, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
}

- (instancetype)initWithNSString:(NSString *)arg$0
withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:(IOSObjectArray *)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$25_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x80, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[1].selector = @selector(initWithNSString:withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;[LEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$25 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 4, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$25;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$25_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(EduStanfordNlpLingTokensregexTypesValueFunctions_$25 *self, NSString *arg$0, IOSObjectArray *arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$25 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$25_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$25, initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$25 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$25_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$25, initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$26

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  id<EduStanfordNlpUtilCoreMap> cm = (id<EduStanfordNlpUtilCoreMap>) cast_check([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0])) get], EduStanfordNlpUtilCoreMap_class_());
  NSString *regex = (NSString *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get], [NSString class]);
  JavaLangBoolean *includeMatchedAsTokens = (JavaLangBoolean *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:2])) get], [JavaLangBoolean class]);
  JavaUtilRegexPattern *pattern = [((EduStanfordNlpLingTokensregexEnv *) nil_chk(env)) getStringPatternWithNSString:regex];
  id<JavaUtilList> res = EduStanfordNlpPipelineChunkAnnotationUtils_splitCoreMapWithJavaUtilRegexPattern_withBoolean_withEduStanfordNlpUtilCoreMap_withEduStanfordNlpProcessCoreTokenFactory_(pattern, [((JavaLangBoolean *) nil_chk(includeMatchedAsTokens)) booleanValue], cm, JreLoadStatic(EduStanfordNlpLingTokensregexTypesValueFunctions, CORELABEL_FACTORY));
  return new_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_initWithNSString_withId_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_TYPE_TOKENS, res, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
}

- (instancetype)initWithNSString:(NSString *)arg$0
withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:(IOSObjectArray *)arg$1 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$26_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x80, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[1].selector = @selector(initWithNSString:withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;[LEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$26 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 4, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$26;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$26_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(EduStanfordNlpLingTokensregexTypesValueFunctions_$26 *self, NSString *arg$0, IOSObjectArray *arg$1) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(self, arg$0, arg$1);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$26 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$26_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$26, initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_, arg$0, arg$1)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$26 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$26_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(NSString *arg$0, IOSObjectArray *arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$26, initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_, arg$0, arg$1)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$27

- (NSString *)getParamDesc {
  return @"Object,Object";
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  return [((id<JavaUtilList>) nil_chk(inArg)) size] == 2;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] != 2) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"2 arguments expected, got ", [inArg size]));
  }
  jboolean res = false;
  if ([inArg getWithInt:0] == nil || [inArg getWithInt:1] == nil) {
    res = ([inArg getWithInt:0] == [inArg getWithInt:1]);
  }
  else if ([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get] == nil) {
    res = ([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get]);
  }
  else {
    res = [nil_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get]) isEqual:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get]];
  }
  return (res) ? JreLoadStatic(EduStanfordNlpLingTokensregexTypesExpressions, FALSE) : JreLoadStatic(EduStanfordNlpLingTokensregexTypesExpressions, TRUE);
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$27_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getParamDesc);
  methods[1].selector = @selector(checkArgsWithJavaUtilList:);
  methods[2].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[3].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$27 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 7, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$27;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$27_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$27 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$27 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$27_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$27, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$27 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$27_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$27, initWithNSString_, arg$0)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$28

- (NSString *)getParamDesc {
  return @"Object,Object";
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  return [((id<JavaUtilList>) nil_chk(inArg)) size] == 2;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] != 2) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"2 arguments expected, got ", [inArg size]));
  }
  jboolean res = false;
  if ([inArg getWithInt:0] == nil || [inArg getWithInt:1] == nil) {
    res = ([inArg getWithInt:0] == [inArg getWithInt:1]);
  }
  else if ([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get] == nil) {
    res = ([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get]);
  }
  else {
    res = [nil_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get]) isEqual:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get]];
  }
  return (res) ? JreLoadStatic(EduStanfordNlpLingTokensregexTypesExpressions, TRUE) : JreLoadStatic(EduStanfordNlpLingTokensregexTypesExpressions, FALSE);
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$28_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getParamDesc);
  methods[1].selector = @selector(checkArgsWithJavaUtilList:);
  methods[2].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[3].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$28 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 7, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$28;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$28_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$28 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$28 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$28_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$28, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$28 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$28_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$28, initWithNSString_, arg$0)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$29

- (NSString *)getParamDesc {
  return @"CoreMap coremap,String fieldName|Class field,[Object value]";
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] != 2 && [inArg size] != 3) {
    return false;
  }
  if ([inArg getWithInt:0] == nil || (!([EduStanfordNlpUtilCoreMap_class_() isInstance:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get]]) && !([JavaUtilList_class_() isInstance:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get]]))) {
    return false;
  }
  if ([inArg getWithInt:1] == nil || (!([[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get] isKindOfClass:[IOSClass class]]) && !([[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get] isKindOfClass:[NSString class]]))) {
    return false;
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  id<EduStanfordNlpLingTokensregexTypesValue> cmv = [((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0];
  id field = [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get];
  IOSClass *annotationFieldClass = nil;
  if ([field isKindOfClass:[NSString class]]) {
    annotationFieldClass = EduStanfordNlpLingTokensregexEnvLookup_lookupAnnotationKeyWithEduStanfordNlpLingTokensregexEnv_withNSString_(env, (NSString *) cast_chk(field, [NSString class]));
    if (annotationFieldClass == nil) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"Cannot get annotation field ", field));
    }
  }
  else if ([field isKindOfClass:[IOSClass class]]) {
    annotationFieldClass = (IOSClass *) cast_chk(field, [IOSClass class]);
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$@", @"Type mismatch on arg1: Cannot apply ", self, @" to ", inArg));
  }
  if ([EduStanfordNlpUtilCoreMap_class_() isInstance:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk(cmv)) get]]) {
    id<EduStanfordNlpUtilCoreMap> cm = (id<EduStanfordNlpUtilCoreMap>) cast_check([cmv get], EduStanfordNlpUtilCoreMap_class_());
    if ([inArg size] >= 3) {
      id<EduStanfordNlpLingTokensregexTypesValue> v = [inArg getWithInt:2];
      id annotationObject = (v != nil) ? [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk(v)) get] : nil;
      (void) [((id<EduStanfordNlpUtilCoreMap>) nil_chk(cm)) setWithIOSClass:annotationFieldClass withId:annotationObject];
    }
    id obj = [((id<EduStanfordNlpUtilCoreMap>) nil_chk(cm)) getWithIOSClass:annotationFieldClass];
    return EduStanfordNlpLingTokensregexTypesExpressions_createValueWithNSString_withId_withNSStringArray_([((IOSClass *) nil_chk(annotationFieldClass)) getName], obj, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
  }
  else if ([JavaUtilList_class_() isInstance:[cmv get]]) {
    id<JavaUtilList> cmList = (id<JavaUtilList>) cast_check([cmv get], JavaUtilList_class_());
    if ([inArg size] >= 3) {
      id<EduStanfordNlpLingTokensregexTypesValue> v = [inArg getWithInt:2];
      id annotationObject = (v != nil) ? [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk(v)) get] : nil;
      for (id<EduStanfordNlpUtilCoreMap> __strong cm in nil_chk(cmList)) {
        (void) [((id<EduStanfordNlpUtilCoreMap>) nil_chk(cm)) setWithIOSClass:annotationFieldClass withId:annotationObject];
      }
    }
    id<JavaUtilList> list = new_JavaUtilArrayList_init();
    id<EduStanfordNlpLingTokensregexTypesValue> res = new_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_initWithNSString_withId_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_TYPE_LIST, list, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
    for (id<EduStanfordNlpUtilCoreMap> __strong cm in nil_chk(cmList)) {
      [list addWithId:[((id<EduStanfordNlpUtilCoreMap>) nil_chk(cm)) getWithIOSClass:annotationFieldClass]];
    }
    return res;
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$@", @"Type mismatch on arg0: Cannot apply ", self, @" to ", inArg));
  }
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$29_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getParamDesc);
  methods[1].selector = @selector(checkArgsWithJavaUtilList:);
  methods[2].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[3].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$29 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 7, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$29;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$29_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$29 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$29 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$29_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$29, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$29 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$29_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$29, initWithNSString_, arg$0)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$30

- (NSString *)getParamDesc {
  return @"CoreMap or List<CoreMap>,String tag";
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] != 2) {
    return false;
  }
  if ([inArg getWithInt:0] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil) return true;
  if ([inArg getWithInt:0] == nil || (!([EduStanfordNlpUtilCoreMap_class_() isInstance:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get]]) && !([JavaUtilList_class_() isInstance:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get]]))) {
    return false;
  }
  if ([inArg getWithInt:1] == nil || !([[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get] isKindOfClass:[NSString class]])) {
    return false;
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)getTagWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)cm
                                                                      withNSString:(NSString *)tag {
  EduStanfordNlpLingTokensregexTypesTags *tags = [((id<EduStanfordNlpUtilCoreMap>) nil_chk(cm)) getWithIOSClass:EduStanfordNlpLingTokensregexTypesTags_TagsAnnotation_class_()];
  return (tags != nil) ? [((EduStanfordNlpLingTokensregexTypesTags *) nil_chk(tags)) getTagWithNSString:tag] : nil;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil) return nil;
  id<EduStanfordNlpLingTokensregexTypesValue> v = [inArg getWithInt:0];
  id<EduStanfordNlpLingTokensregexTypesValue> res = nil;
  NSString *tag = (NSString *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get], [NSString class]);
  if ([EduStanfordNlpUtilCoreMap_class_() isInstance:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk(v)) get]]) {
    res = [self getTagWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>) cast_check([v get], EduStanfordNlpUtilCoreMap_class_()) withNSString:tag];
  }
  else if ([JavaUtilList_class_() isInstance:[v get]]) {
    id<JavaUtilList> cmList = (id<JavaUtilList>) cast_check([v get], JavaUtilList_class_());
    id<JavaUtilList> list = new_JavaUtilArrayList_init();
    res = new_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_initWithNSString_withId_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_TYPE_LIST, list, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
    for (id<EduStanfordNlpUtilCoreMap> __strong cm in nil_chk(cmList)) {
      [list addWithId:[self getTagWithEduStanfordNlpUtilCoreMap:cm withNSString:tag]];
    }
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$@", @"Type mismatch on arg0: Cannot apply ", self, @" to ", inArg));
  }
  return res;
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$30_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, NULL, 0x0, -1, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getParamDesc);
  methods[1].selector = @selector(checkArgsWithJavaUtilList:);
  methods[2].selector = @selector(getTagWithEduStanfordNlpUtilCoreMap:withNSString:);
  methods[3].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[4].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "getTag", "LEduStanfordNlpUtilCoreMap;LNSString;", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$30 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 5, 0, 9, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$30;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$30_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$30 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$30 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$30_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$30, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$30 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$30_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$30, initWithNSString_, arg$0)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$31

- (NSString *)getParamDesc {
  return @"CoreMap or List<CoreMap>,String tag,[Object value]";
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] != 2 && [inArg size] != 3) {
    return false;
  }
  if ([inArg getWithInt:0] == nil || (!([EduStanfordNlpUtilCoreMap_class_() isInstance:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get]]) && !([JavaUtilList_class_() isInstance:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get]]))) {
    return false;
  }
  if ([inArg getWithInt:1] == nil || !([[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get] isKindOfClass:[NSString class]])) {
    return false;
  }
  return true;
}

- (void)setTagWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)cm
                               withNSString:(NSString *)tag
withEduStanfordNlpLingTokensregexTypesValue:(id<EduStanfordNlpLingTokensregexTypesValue>)tagValue {
  EduStanfordNlpLingTokensregexTypesTags *tags = [((id<EduStanfordNlpUtilCoreMap>) nil_chk(cm)) getWithIOSClass:EduStanfordNlpLingTokensregexTypesTags_TagsAnnotation_class_()];
  if (tags == nil) {
    (void) [cm setWithIOSClass:EduStanfordNlpLingTokensregexTypesTags_TagsAnnotation_class_() withId:tags = new_EduStanfordNlpLingTokensregexTypesTags_initWithNSStringArray_([IOSObjectArray newArrayWithLength:0 type:NSString_class_()])];
  }
  [tags setTagWithNSString:tag withEduStanfordNlpLingTokensregexTypesValue:tagValue];
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  id<EduStanfordNlpLingTokensregexTypesValue> v = [((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0];
  NSString *tag = (NSString *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get], [NSString class]);
  id<EduStanfordNlpLingTokensregexTypesValue> tagValue = ([inArg size] >= 3) ? [inArg getWithInt:2] : nil;
  if ([EduStanfordNlpUtilCoreMap_class_() isInstance:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk(v)) get]]) {
    [self setTagWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>) cast_check([v get], EduStanfordNlpUtilCoreMap_class_()) withNSString:tag withEduStanfordNlpLingTokensregexTypesValue:tagValue];
  }
  else if ([JavaUtilList_class_() isInstance:[v get]]) {
    id<JavaUtilList> cmList = (id<JavaUtilList>) cast_check([v get], JavaUtilList_class_());
    for (id<EduStanfordNlpUtilCoreMap> __strong cm in nil_chk(cmList)) {
      [self setTagWithEduStanfordNlpUtilCoreMap:cm withNSString:tag withEduStanfordNlpLingTokensregexTypesValue:tagValue];
    }
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$@", @"Type mismatch on arg0: Cannot apply ", self, @" to ", inArg));
  }
  return v;
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$31_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, NULL, 0x0, -1, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getParamDesc);
  methods[1].selector = @selector(checkArgsWithJavaUtilList:);
  methods[2].selector = @selector(setTagWithEduStanfordNlpUtilCoreMap:withNSString:withEduStanfordNlpLingTokensregexTypesValue:);
  methods[3].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[4].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "setTag", "LEduStanfordNlpUtilCoreMap;LNSString;LEduStanfordNlpLingTokensregexTypesValue;", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$31 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 5, 0, 9, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$31;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$31_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$31 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$31 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$31_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$31, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$31 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$31_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$31, initWithNSString_, arg$0)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$32

- (NSString *)getParamDesc {
  return @"CoreMap or List<CoreMap>,String tag";
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] != 2) {
    return false;
  }
  if ([inArg getWithInt:0] == nil || (!([EduStanfordNlpUtilCoreMap_class_() isInstance:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get]]) && !([JavaUtilList_class_() isInstance:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get]]))) {
    return false;
  }
  if ([inArg getWithInt:1] == nil || !([[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get] isKindOfClass:[NSString class]])) {
    return false;
  }
  return true;
}

- (void)removeTagWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)cm
                                  withNSString:(NSString *)tag {
  EduStanfordNlpLingTokensregexTypesTags *tags = [((id<EduStanfordNlpUtilCoreMap>) nil_chk(cm)) getWithIOSClass:EduStanfordNlpLingTokensregexTypesTags_TagsAnnotation_class_()];
  if (tags != nil) {
    [tags removeTagWithNSString:tag];
  }
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  id<EduStanfordNlpLingTokensregexTypesValue> v = [((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0];
  NSString *tag = (NSString *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get], [NSString class]);
  if ([EduStanfordNlpUtilCoreMap_class_() isInstance:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk(v)) get]]) {
    [self removeTagWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>) cast_check([v get], EduStanfordNlpUtilCoreMap_class_()) withNSString:tag];
  }
  else if ([JavaUtilList_class_() isInstance:[v get]]) {
    id<JavaUtilList> cmList = (id<JavaUtilList>) cast_check([v get], JavaUtilList_class_());
    for (id<EduStanfordNlpUtilCoreMap> __strong cm in nil_chk(cmList)) {
      [self removeTagWithEduStanfordNlpUtilCoreMap:cm withNSString:tag];
    }
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$@", @"Type mismatch on arg0: Cannot apply ", self, @" to ", inArg));
  }
  return v;
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$32_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, NULL, 0x0, -1, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getParamDesc);
  methods[1].selector = @selector(checkArgsWithJavaUtilList:);
  methods[2].selector = @selector(removeTagWithEduStanfordNlpUtilCoreMap:withNSString:);
  methods[3].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[4].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "removeTag", "LEduStanfordNlpUtilCoreMap;LNSString;", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$32 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 5, 0, 9, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$32;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$32_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$32 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$32 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$32_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$32, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$32 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$32_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$32, initWithNSString_, arg$0)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$33

- (NSString *)getParamDesc {
  return JreStrcat("$$", EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_getTypeNameWithIOSClass_(EduStanfordNlpLingTokensregexTypesTags_class_()), @" tags,String field,[Object value]");
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] != 2 && [inArg size] != 3) {
    return false;
  }
  if ([inArg getWithInt:0] == nil || !([[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] isKindOfClass:[EduStanfordNlpLingTokensregexTypesTags class]])) {
    return false;
  }
  if ([inArg getWithInt:1] == nil || !([[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get] isKindOfClass:[NSString class]])) {
    return false;
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  id<EduStanfordNlpLingTokensregexTypesValue> v = [((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0];
  EduStanfordNlpLingTokensregexTypesTags *tags = (EduStanfordNlpLingTokensregexTypesTags *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk(v)) get], [EduStanfordNlpLingTokensregexTypesTags class]);
  NSString *tag = (NSString *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get], [NSString class]);
  if ([inArg size] >= 3) {
    id<EduStanfordNlpLingTokensregexTypesValue> tagValue = [inArg getWithInt:2];
    [((EduStanfordNlpLingTokensregexTypesTags *) nil_chk(tags)) setTagWithNSString:tag withEduStanfordNlpLingTokensregexTypesValue:tagValue];
  }
  return [((EduStanfordNlpLingTokensregexTypesTags *) nil_chk(tags)) getTagWithNSString:tag];
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$33_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getParamDesc);
  methods[1].selector = @selector(checkArgsWithJavaUtilList:);
  methods[2].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[3].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$33 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 7, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$33;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$33_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$33 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$33 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$33_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$33, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$33 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$33_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$33, initWithNSString_, arg$0)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$34

- (NSString *)getParamDesc {
  return @"Value,String tag,[Object value]";
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] != 2 && [inArg size] != 3) {
    return false;
  }
  if ([inArg getWithInt:0] == nil) {
    return false;
  }
  if ([inArg getWithInt:1] == nil || !([[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get] isKindOfClass:[NSString class]])) {
    return false;
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  id<EduStanfordNlpLingTokensregexTypesValue> v = [((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0];
  EduStanfordNlpLingTokensregexTypesTags *tags = [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk(v)) getTags];
  if (tags == nil) {
    [v setTagsWithEduStanfordNlpLingTokensregexTypesTags:tags = new_EduStanfordNlpLingTokensregexTypesTags_initWithNSStringArray_([IOSObjectArray newArrayWithLength:0 type:NSString_class_()])];
  }
  NSString *tag = (NSString *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get], [NSString class]);
  id<EduStanfordNlpLingTokensregexTypesValue> tagValue = ([inArg size] >= 3) ? [inArg getWithInt:2] : nil;
  [tags setTagWithNSString:tag withEduStanfordNlpLingTokensregexTypesValue:tagValue];
  return v;
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$34_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getParamDesc);
  methods[1].selector = @selector(checkArgsWithJavaUtilList:);
  methods[2].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[3].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$34 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 7, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$34;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$34_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$34 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$34 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$34_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$34, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$34 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$34_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$34, initWithNSString_, arg$0)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$35

- (NSString *)getParamDesc {
  return @"Value,String tag";
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] != 2) {
    return false;
  }
  if ([inArg getWithInt:0] == nil) {
    return false;
  }
  if ([inArg getWithInt:1] == nil || !([[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get] isKindOfClass:[NSString class]])) {
    return false;
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  id<EduStanfordNlpLingTokensregexTypesValue> v = [((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0];
  EduStanfordNlpLingTokensregexTypesTags *tags = [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk(v)) getTags];
  NSString *tag = (NSString *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get], [NSString class]);
  return (tags != nil) ? [((EduStanfordNlpLingTokensregexTypesTags *) nil_chk(tags)) getTagWithNSString:tag] : nil;
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$35_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getParamDesc);
  methods[1].selector = @selector(checkArgsWithJavaUtilList:);
  methods[2].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[3].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$35 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 7, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$35;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$35_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$35 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$35 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$35_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$35, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$35 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$35_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$35, initWithNSString_, arg$0)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$36

- (NSString *)getParamDesc {
  return @"Value,String tag";
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] != 2) {
    return false;
  }
  if ([inArg getWithInt:0] == nil) {
    return false;
  }
  if ([inArg getWithInt:1] == nil || !([[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get] isKindOfClass:[NSString class]])) {
    return false;
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  id<EduStanfordNlpLingTokensregexTypesValue> v = [((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0];
  EduStanfordNlpLingTokensregexTypesTags *tags = [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk(v)) getTags];
  if (tags == nil) {
    [v setTagsWithEduStanfordNlpLingTokensregexTypesTags:tags = new_EduStanfordNlpLingTokensregexTypesTags_initWithNSStringArray_([IOSObjectArray newArrayWithLength:0 type:NSString_class_()])];
  }
  NSString *tag = (NSString *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get], [NSString class]);
  [tags removeTagWithNSString:tag];
  return v;
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$36_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getParamDesc);
  methods[1].selector = @selector(checkArgsWithJavaUtilList:);
  methods[2].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[3].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$36 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 7, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$36;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$36_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$36 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$36 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$36_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$36, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$36 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$36_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$36, initWithNSString_, arg$0)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$37

- (NSString *)getParamDesc {
  return JreStrcat("$$", EduStanfordNlpLingTokensregexTypesExpressions_TYPE_COMPOSITE, @" obj,String field,[Object value]");
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] != 2 && [inArg size] != 3) {
    return false;
  }
  if ([inArg getWithInt:0] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil) return true;
  if ([inArg getWithInt:0] == nil || !([[inArg getWithInt:0] isKindOfClass:[EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue class]])) {
    return false;
  }
  if ([inArg getWithInt:1] == nil || !([[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get] isKindOfClass:[NSString class]])) {
    return false;
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil) return nil;
  EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue *v = (EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue *) cast_chk([inArg getWithInt:0], [EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue class]);
  NSString *fieldName = (NSString *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get], [NSString class]);
  if ([inArg size] >= 3) {
    [((EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue *) nil_chk(v)) setWithNSString:fieldName withId:[inArg getWithInt:2]];
  }
  return [((EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue *) nil_chk(v)) getValueWithNSString:fieldName];
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$37_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getParamDesc);
  methods[1].selector = @selector(checkArgsWithJavaUtilList:);
  methods[2].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[3].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$37 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 7, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$37;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$37_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$37 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$37 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$37_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$37, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$37 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$37_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$37, initWithNSString_, arg$0)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$38

- (NSString *)getParamDesc {
  return EduStanfordNlpLingTokensregexTypesExpressions_TYPE_COMPOSITE;
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] != 1) {
    return false;
  }
  if ([inArg getWithInt:0] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil) return true;
  if ([inArg getWithInt:0] == nil || !([[inArg getWithInt:0] isKindOfClass:[EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue class]])) {
    return false;
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil) return nil;
  EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue *v = (EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue *) cast_chk([inArg getWithInt:0], [EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue class]);
  id<JavaUtilList> res = new_JavaUtilArrayList_initWithJavaUtilCollection_([((EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue *) nil_chk(v)) getAttributes]);
  return EduStanfordNlpLingTokensregexTypesExpressions_createValueWithNSString_withId_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_TYPE_LIST, res, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$38_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getParamDesc);
  methods[1].selector = @selector(checkArgsWithJavaUtilList:);
  methods[2].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[3].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$38 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 7, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$38;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$38_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$38 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$38 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$38_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$38, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$38 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$38_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$38, initWithNSString_, arg$0)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$39

- (NSString *)getParamDesc {
  return @"Object obj,String fieldName,[Object value]";
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] != 2 && [inArg size] != 3) {
    return false;
  }
  if ([inArg getWithInt:0] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil) return true;
  if ([inArg getWithInt:0] == nil || !([[inArg getWithInt:0] isKindOfClass:[NSObject class]])) {
    return false;
  }
  if ([inArg getWithInt:1] == nil || !([[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get] isKindOfClass:[NSString class]])) {
    return false;
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil) return nil;
  id<EduStanfordNlpLingTokensregexTypesValue> v = [inArg getWithInt:0];
  NSString *fieldName = (NSString *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get], [NSString class]);
  @try {
    id obj = [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk(v)) get];
    JavaLangReflectField *f = [[nil_chk(obj) getClass] getField:fieldName];
    if ([inArg size] >= 3) {
      id<EduStanfordNlpLingTokensregexTypesValue> fieldValue = [inArg getWithInt:2];
      if (fieldValue == nil) {
        [((JavaLangReflectField *) nil_chk(f)) setWithId:obj withId:nil];
      }
      else if ([((IOSClass *) nil_chk([((JavaLangReflectField *) nil_chk(f)) getType])) isAssignableFrom:EduStanfordNlpLingTokensregexTypesValue_class_()]) {
        [f setWithId:obj withId:fieldValue];
      }
      else {
        if ([fieldValue get] == nil) {
          [f setWithId:obj withId:nil];
        }
        else if ([((IOSClass *) nil_chk([f getType])) isAssignableFrom:JavaUtilList_class_()]) {
          if ([JavaUtilList_class_() isInstance:[fieldValue get]]) {
            id<JavaUtilList> list = (id<JavaUtilList>) cast_check([fieldValue get], JavaUtilList_class_());
            IOSObjectArray *fieldParamTypes = [((id<JavaLangReflectParameterizedType>) nil_chk(((id<JavaLangReflectParameterizedType>) cast_check([f getGenericType], JavaLangReflectParameterizedType_class_())))) getActualTypeArguments];
            if ([EduStanfordNlpLingTokensregexTypesValue_class_() isInstance:IOSObjectArray_Get(nil_chk(fieldParamTypes), 0)]) {
              id<JavaUtilList> list2 = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(list)) size]);
              for (id __strong elem in list) {
                [list2 addWithId:EduStanfordNlpLingTokensregexTypesExpressions_asValueWithEduStanfordNlpLingTokensregexEnv_withId_(env, elem)];
              }
              [f setWithId:obj withId:list2];
            }
            else {
              id<JavaUtilList> list2 = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(list)) size]);
              for (id __strong elem in list) {
                if ([EduStanfordNlpLingTokensregexTypesValue_class_() isInstance:elem]) {
                  [list2 addWithId:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk(((id<EduStanfordNlpLingTokensregexTypesValue>) cast_check(elem, EduStanfordNlpLingTokensregexTypesValue_class_())))) get]];
                }
                else {
                  [list2 addWithId:elem];
                }
              }
              [f setWithId:obj withId:list2];
            }
          }
          else {
            [f setWithId:obj withId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ [fieldValue get] } count:1 type:NSObject_class_()])];
          }
        }
        else {
          [f setWithId:obj withId:[fieldValue get]];
        }
      }
    }
    return EduStanfordNlpLingTokensregexTypesExpressions_createValueWithNSString_withId_withNSStringArray_(nil, [((JavaLangReflectField *) nil_chk(f)) getWithId:obj], [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
  }
  @catch (JavaLangNoSuchFieldException *ex) {
    @throw new_JavaLangRuntimeException_initWithNSString_withNSException_(JreStrcat("$$$@", @"Cannot get field ", fieldName, @" from ", v), ex);
  }
  @catch (JavaLangIllegalAccessException *ex) {
    @throw new_JavaLangRuntimeException_initWithNSString_withNSException_(JreStrcat("$$$@", @"Cannot get field ", fieldName, @" from ", v), ex);
  }
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$39_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getParamDesc);
  methods[1].selector = @selector(checkArgsWithJavaUtilList:);
  methods[2].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[3].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$39 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 7, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$39;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$39_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$39 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$39 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$39_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$39, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$39 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$39_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$39, initWithNSString_, arg$0)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$40

- (NSString *)getParamDesc {
  return @"List list,int index,[Object value]";
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] != 2 && [inArg size] != 3) {
    return false;
  }
  if ([inArg getWithInt:0] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil) return true;
  if ([inArg getWithInt:0] == nil || !([JavaUtilList_class_() isInstance:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get]])) {
    return false;
  }
  if ([inArg getWithInt:1] == nil || !([[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get] isKindOfClass:[JavaLangInteger class]])) {
    return false;
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil) return nil;
  id<JavaUtilList> list = (id<JavaUtilList>) cast_check([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get], JavaUtilList_class_());
  JavaLangInteger *index = (JavaLangInteger *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get], [JavaLangInteger class]);
  if ([((JavaLangInteger *) nil_chk(index)) intValue] < 0) {
    index = JavaLangInteger_valueOfWithInt_([((id<JavaUtilList>) nil_chk(list)) size] + [index intValue]);
  }
  if ([index intValue] >= [((id<JavaUtilList>) nil_chk(list)) size] || [index intValue] < 0) {
    return nil;
  }
  if ([inArg size] >= 3) {
    id<EduStanfordNlpLingTokensregexTypesValue> fieldValue = [inArg getWithInt:2];
    if (fieldValue != nil) {
      (void) [list setWithInt:[index intValue] withId:[fieldValue get]];
    }
    else {
      (void) [list setWithInt:[index intValue] withId:nil];
    }
  }
  id obj = [list getWithInt:[index intValue]];
  return EduStanfordNlpLingTokensregexTypesExpressions_asValueWithEduStanfordNlpLingTokensregexEnv_withId_(env, obj);
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$40_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getParamDesc);
  methods[1].selector = @selector(checkArgsWithJavaUtilList:);
  methods[2].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[3].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$40 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 7, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$40;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$40_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$40 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$40 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$40_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$40, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$40 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$40_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$40, initWithNSString_, arg$0)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$41

- (NSString *)getParamDesc {
  return @"Map map,Object key,[Object value]";
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] != 2 && [inArg size] != 3) {
    return false;
  }
  if ([inArg getWithInt:0] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil) return true;
  if ([inArg getWithInt:0] == nil || !([JavaUtilMap_class_() isInstance:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get]])) {
    return false;
  }
  if ([inArg getWithInt:1] == nil || !([[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get] isKindOfClass:[NSObject class]])) {
    return false;
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil) return nil;
  id<JavaUtilMap> map = (id<JavaUtilMap>) cast_check([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get], JavaUtilMap_class_());
  id key = [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:1])) get];
  if ([inArg size] >= 3) {
    id<EduStanfordNlpLingTokensregexTypesValue> fieldValue = [inArg getWithInt:2];
    if (fieldValue != nil) {
      (void) [((id<JavaUtilMap>) nil_chk(map)) putWithId:key withId:[fieldValue get]];
    }
    else {
      (void) [((id<JavaUtilMap>) nil_chk(map)) removeWithId:key];
    }
  }
  id obj = [((id<JavaUtilMap>) nil_chk(map)) getWithId:key];
  if ([inArg size] == 2 && obj == nil && [key isKindOfClass:[NSString class]]) {
    IOSClass *annotationFieldClass = nil;
    annotationFieldClass = EduStanfordNlpLingTokensregexEnvLookup_lookupAnnotationKeyWithEduStanfordNlpLingTokensregexEnv_withNSString_(env, (NSString *) cast_chk(key, [NSString class]));
    if (annotationFieldClass != nil) {
      obj = [map getWithId:annotationFieldClass];
    }
  }
  return EduStanfordNlpLingTokensregexTypesExpressions_asValueWithEduStanfordNlpLingTokensregexEnv_withId_(env, obj);
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$41_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getParamDesc);
  methods[1].selector = @selector(checkArgsWithJavaUtilList:);
  methods[2].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[3].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$41 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 7, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$41;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$41_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$41 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$41 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$41_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$41, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$41 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$41_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$41, initWithNSString_, arg$0)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$42

- (NSString *)getParamDesc {
  return @"Map";
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] != 1) {
    return false;
  }
  if ([inArg getWithInt:0] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil) return true;
  if ([inArg getWithInt:0] == nil || !([JavaUtilMap_class_() isInstance:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get]])) {
    return false;
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0] == nil || [((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] == nil) return nil;
  id<JavaUtilMap> map = (id<JavaUtilMap>) cast_check([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get], JavaUtilMap_class_());
  id<JavaUtilList> res = new_JavaUtilArrayList_initWithJavaUtilCollection_([((id<JavaUtilMap>) nil_chk(map)) keySet]);
  return EduStanfordNlpLingTokensregexTypesExpressions_createValueWithNSString_withId_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_TYPE_LIST, res, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$42_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getParamDesc);
  methods[1].selector = @selector(checkArgsWithJavaUtilList:);
  methods[2].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[3].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$42 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 7, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$42;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$42_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$42 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$42 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$42_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$42, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$42 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$42_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$42, initWithNSString_, arg$0)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$43

- (NSString *)getParamDesc {
  return @"ValueFunction func,Object initialValue,...";
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] < 2) {
    return false;
  }
  if ([inArg getWithInt:0] == nil || !([EduStanfordNlpLingTokensregexTypesValueFunction_class_() isInstance:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get]])) {
    return false;
  }
  if ([inArg getWithInt:1] == nil) {
    return false;
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  id<EduStanfordNlpLingTokensregexTypesValueFunction> func = (id<EduStanfordNlpLingTokensregexTypesValueFunction>) cast_check([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([((id<JavaUtilList>) nil_chk(inArg)) getWithInt:0])) get], EduStanfordNlpLingTokensregexTypesValueFunction_class_());
  id<EduStanfordNlpLingTokensregexTypesValue> res = [inArg getWithInt:1];
  id<JavaUtilList> args = new_JavaUtilArrayList_initWithInt_(2);
  for (jint i = 2; i < [inArg size]; i++) {
    (void) [args setWithInt:0 withId:res];
    (void) [args setWithInt:1 withId:[inArg getWithInt:i]];
    res = [((id<EduStanfordNlpLingTokensregexTypesValueFunction>) nil_chk(func)) applyWithEduStanfordNlpLingTokensregexEnv:env withJavaUtilList:args];
  }
  return res;
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$43_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getParamDesc);
  methods[1].selector = @selector(checkArgsWithJavaUtilList:);
  methods[2].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[3].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$43 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 7, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$43;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$43_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$43 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$43 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$43_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$43, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$43 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$43_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$43, initWithNSString_, arg$0)
}

@implementation EduStanfordNlpLingTokensregexTypesValueFunctions_$44

- (NSString *)getParamDesc {
  return @"ValueFunction func or String funcname,...";
}

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg {
  if ([((id<JavaUtilList>) nil_chk(inArg)) size] < 1) {
    return false;
  }
  if ([inArg getWithInt:0] == nil || !([EduStanfordNlpLingTokensregexTypesValueFunction_class_() isInstance:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get]] || [[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] isKindOfClass:[NSString class]])) {
    return false;
  }
  return true;
}

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg {
  id<EduStanfordNlpLingTokensregexTypesValue> res;
  id<JavaUtilList> args = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(inArg)) size] - 1);
  for (jint i = 1; i < [inArg size]; i++) {
    [args addWithId:[inArg getWithInt:i]];
  }
  if ([EduStanfordNlpLingTokensregexTypesValueFunction_class_() isInstance:[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get]]) {
    id<EduStanfordNlpLingTokensregexTypesValueFunction> func = (id<EduStanfordNlpLingTokensregexTypesValueFunction>) cast_check([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get], EduStanfordNlpLingTokensregexTypesValueFunction_class_());
    res = [((id<EduStanfordNlpLingTokensregexTypesValueFunction>) nil_chk(func)) applyWithEduStanfordNlpLingTokensregexEnv:env withJavaUtilList:args];
  }
  else if ([[((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get] isKindOfClass:[NSString class]]) {
    EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression *func = new_EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression_initWithNSString_withJavaUtilList_withNSStringArray_((NSString *) cast_chk([((id<EduStanfordNlpLingTokensregexTypesValue>) nil_chk([inArg getWithInt:0])) get], [NSString class]), args, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
    res = [func evaluateWithEduStanfordNlpLingTokensregexEnv:env withNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]];
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$@", @"Type mismatch on arg0: Cannot apply ", self, @" to ", inArg));
  }
  return res;
}

- (instancetype)initWithNSString:(NSString *)arg$0 {
  EduStanfordNlpLingTokensregexTypesValueFunctions_$44_initWithNSString_(self, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getParamDesc);
  methods[1].selector = @selector(checkArgsWithJavaUtilList:);
  methods[2].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[3].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;", "LNSString;", "LEduStanfordNlpLingTokensregexTypesValueFunctions;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunctions_$44 = { "", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x8008, 4, 0, 7, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunctions_$44;
}

@end

void EduStanfordNlpLingTokensregexTypesValueFunctions_$44_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_$44 *self, NSString *arg$0) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(self, arg$0);
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$44 *new_EduStanfordNlpLingTokensregexTypesValueFunctions_$44_initWithNSString_(NSString *arg$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$44, initWithNSString_, arg$0)
}

EduStanfordNlpLingTokensregexTypesValueFunctions_$44 *create_EduStanfordNlpLingTokensregexTypesValueFunctions_$44_initWithNSString_(NSString *arg$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTypesValueFunctions_$44, initWithNSString_, arg$0)
}
