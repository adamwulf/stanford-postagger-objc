//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/tokensregex/types/ValueFunction.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/tokensregex/types/ValueFunction.h"

@interface EduStanfordNlpLingTokensregexTypesValueFunction : NSObject

@end

@implementation EduStanfordNlpLingTokensregexTypesValueFunction

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTypesValue;", 0x401, 3, 4, -1, 5, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(checkArgsWithJavaUtilList:);
  methods[1].selector = @selector(applyWithEduStanfordNlpLingTokensregexEnv:withJavaUtilList:);
  methods[2].selector = @selector(getDescription);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "checkArgs", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Z", "apply", "LEduStanfordNlpLingTokensregexEnv;LJavaUtilList;", "(Ledu/stanford/nlp/ling/tokensregex/Env;Ljava/util/List<Ledu/stanford/nlp/ling/tokensregex/types/Value;>;)Ledu/stanford/nlp/ling/tokensregex/types/Value;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTypesValueFunction = { "ValueFunction", "edu.stanford.nlp.ling.tokensregex.types", ptrTable, methods, NULL, 7, 0x609, 3, 0, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTokensregexTypesValueFunction;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexTypesValueFunction)
