//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/tokensregex/types/Expressions.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions")
#ifdef RESTRICT_EduStanfordNlpLingTokensregexTypesExpressions
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions 0
#else
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions 1
#endif
#undef RESTRICT_EduStanfordNlpLingTokensregexTypesExpressions
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_SimpleCachedExpression 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_SimpleValue 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_MethodCallExpression
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_ListExpression
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_WrappedExpression 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_CaseExpression
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_WrappedExpression 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_IfExpression
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_NotExpression
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_AndExpression
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_OrExpression
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_AssignableFunctionCallExpression 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_IndexedExpression
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_AssignableFunctionCallExpression 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_AssignableFunctionCallExpression
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_SimpleExpression 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_SimpleExpression 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_VarExpression
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_SimpleExpression 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_VarAssignmentExpression
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_RegexValue
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_SimpleValue 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_SimpleValue
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_SimpleCachedExpression
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_SimpleExpression 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_SimpleExpression
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression 1
#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions))
#define EduStanfordNlpLingTokensregexTypesExpressions_

@class EduStanfordNlpLingTokensregexEnv;
@class IOSObjectArray;
@class JavaLangBoolean;
@protocol EduStanfordNlpLingTokensregexTypesExpression;
@protocol EduStanfordNlpLingTokensregexTypesValue;

@interface EduStanfordNlpLingTokensregexTypesExpressions : NSObject

#pragma mark Public

+ (id<EduStanfordNlpLingTokensregexTypesExpression>)asExpressionWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                              withId:(id)v;

+ (id)asObjectWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                            withId:(id)v;

+ (id<EduStanfordNlpLingTokensregexTypesValue>)asValueWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                    withId:(id)v;

+ (JavaLangBoolean *)convertValueToBooleanWithEduStanfordNlpLingTokensregexTypesValue:(id<EduStanfordNlpLingTokensregexTypesValue>)v
                                                                          withBoolean:(jboolean)keepNull;

+ (id<EduStanfordNlpLingTokensregexTypesValue>)convertValueToBooleanValueWithEduStanfordNlpLingTokensregexTypesValue:(id<EduStanfordNlpLingTokensregexTypesValue>)v
                                                                                                         withBoolean:(jboolean)keepNull;

+ (id<EduStanfordNlpLingTokensregexTypesValue>)createValueWithNSString:(NSString *)typename_
                                                                withId:(id)value
                                                     withNSStringArray:(IOSObjectArray *)tags;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions)

inline NSString *EduStanfordNlpLingTokensregexTypesExpressions_get_TYPE_VAR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexTypesExpressions_TYPE_VAR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesExpressions, TYPE_VAR, NSString *)

inline NSString *EduStanfordNlpLingTokensregexTypesExpressions_get_TYPE_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexTypesExpressions_TYPE_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesExpressions, TYPE_FUNCTION, NSString *)

inline NSString *EduStanfordNlpLingTokensregexTypesExpressions_get_TYPE_REGEX();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexTypesExpressions_TYPE_REGEX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesExpressions, TYPE_REGEX, NSString *)

inline NSString *EduStanfordNlpLingTokensregexTypesExpressions_get_TYPE_STRING_REGEX();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexTypesExpressions_TYPE_STRING_REGEX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesExpressions, TYPE_STRING_REGEX, NSString *)

inline NSString *EduStanfordNlpLingTokensregexTypesExpressions_get_TYPE_TOKEN_REGEX();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexTypesExpressions_TYPE_TOKEN_REGEX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesExpressions, TYPE_TOKEN_REGEX, NSString *)

inline NSString *EduStanfordNlpLingTokensregexTypesExpressions_get_TYPE_REGEXMATCHVAR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexTypesExpressions_TYPE_REGEXMATCHVAR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesExpressions, TYPE_REGEXMATCHVAR, NSString *)

inline NSString *EduStanfordNlpLingTokensregexTypesExpressions_get_TYPE_STRING();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexTypesExpressions_TYPE_STRING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesExpressions, TYPE_STRING, NSString *)

inline NSString *EduStanfordNlpLingTokensregexTypesExpressions_get_TYPE_NUMBER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexTypesExpressions_TYPE_NUMBER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesExpressions, TYPE_NUMBER, NSString *)

inline NSString *EduStanfordNlpLingTokensregexTypesExpressions_get_TYPE_COMPOSITE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexTypesExpressions_TYPE_COMPOSITE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesExpressions, TYPE_COMPOSITE, NSString *)

inline NSString *EduStanfordNlpLingTokensregexTypesExpressions_get_TYPE_LIST();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexTypesExpressions_TYPE_LIST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesExpressions, TYPE_LIST, NSString *)

inline NSString *EduStanfordNlpLingTokensregexTypesExpressions_get_TYPE_SET();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexTypesExpressions_TYPE_SET;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesExpressions, TYPE_SET, NSString *)

inline NSString *EduStanfordNlpLingTokensregexTypesExpressions_get_TYPE_ANNOTATION_KEY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexTypesExpressions_TYPE_ANNOTATION_KEY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesExpressions, TYPE_ANNOTATION_KEY, NSString *)

inline NSString *EduStanfordNlpLingTokensregexTypesExpressions_get_TYPE_CLASS();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexTypesExpressions_TYPE_CLASS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesExpressions, TYPE_CLASS, NSString *)

inline NSString *EduStanfordNlpLingTokensregexTypesExpressions_get_TYPE_TOKENS();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexTypesExpressions_TYPE_TOKENS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesExpressions, TYPE_TOKENS, NSString *)

inline NSString *EduStanfordNlpLingTokensregexTypesExpressions_get_TYPE_BOOLEAN();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexTypesExpressions_TYPE_BOOLEAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesExpressions, TYPE_BOOLEAN, NSString *)

inline NSString *EduStanfordNlpLingTokensregexTypesExpressions_get_VAR_SELF();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexTypesExpressions_VAR_SELF;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesExpressions, VAR_SELF, NSString *)

inline id<EduStanfordNlpLingTokensregexTypesValue> EduStanfordNlpLingTokensregexTypesExpressions_get_TRUE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValue> EduStanfordNlpLingTokensregexTypesExpressions_TRUE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesExpressions, TRUE, id<EduStanfordNlpLingTokensregexTypesValue>)

inline id<EduStanfordNlpLingTokensregexTypesValue> EduStanfordNlpLingTokensregexTypesExpressions_get_FALSE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValue> EduStanfordNlpLingTokensregexTypesExpressions_FALSE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesExpressions, FALSE, id<EduStanfordNlpLingTokensregexTypesValue>)

inline id<EduStanfordNlpLingTokensregexTypesValue> EduStanfordNlpLingTokensregexTypesExpressions_get_NIL();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValue> EduStanfordNlpLingTokensregexTypesExpressions_NIL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesExpressions, NIL, id<EduStanfordNlpLingTokensregexTypesValue>)

inline NSString *EduStanfordNlpLingTokensregexTypesExpressions_get_NEWLINE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexTypesExpressions_NEWLINE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesExpressions, NEWLINE, NSString *)

FOUNDATION_EXPORT JavaLangBoolean *EduStanfordNlpLingTokensregexTypesExpressions_convertValueToBooleanWithEduStanfordNlpLingTokensregexTypesValue_withBoolean_(id<EduStanfordNlpLingTokensregexTypesValue> v, jboolean keepNull);

FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValue> EduStanfordNlpLingTokensregexTypesExpressions_convertValueToBooleanValueWithEduStanfordNlpLingTokensregexTypesValue_withBoolean_(id<EduStanfordNlpLingTokensregexTypesValue> v, jboolean keepNull);

FOUNDATION_EXPORT id EduStanfordNlpLingTokensregexTypesExpressions_asObjectWithEduStanfordNlpLingTokensregexEnv_withId_(EduStanfordNlpLingTokensregexEnv *env, id v);

FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesExpression> EduStanfordNlpLingTokensregexTypesExpressions_asExpressionWithEduStanfordNlpLingTokensregexEnv_withId_(EduStanfordNlpLingTokensregexEnv *env, id v);

FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValue> EduStanfordNlpLingTokensregexTypesExpressions_asValueWithEduStanfordNlpLingTokensregexEnv_withId_(EduStanfordNlpLingTokensregexEnv *env, id v);

FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValue> EduStanfordNlpLingTokensregexTypesExpressions_createValueWithNSString_withId_withNSStringArray_(NSString *typename_, id value, IOSObjectArray *tags);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_WrappedExpression_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_WrappedExpression))
#define EduStanfordNlpLingTokensregexTypesExpressions_WrappedExpression_

#define RESTRICT_EduStanfordNlpLingTokensregexTypesExpression 1
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpression 1
#include "edu/stanford/nlp/ling/tokensregex/types/Expression.h"

@class EduStanfordNlpLingTokensregexEnv;
@class EduStanfordNlpLingTokensregexTypesTags;
@class IOSObjectArray;
@protocol EduStanfordNlpLingTokensregexTypesValue;

@interface EduStanfordNlpLingTokensregexTypesExpressions_WrappedExpression : NSObject < EduStanfordNlpLingTokensregexTypesExpression > {
 @public
  id<EduStanfordNlpLingTokensregexTypesExpression> expr_;
}

#pragma mark Public

- (instancetype)init;

- (jboolean)isEqual:(id)o;

- (id<EduStanfordNlpLingTokensregexTypesValue>)evaluateWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                          withNSObjectArray:(IOSObjectArray *)args;

- (EduStanfordNlpLingTokensregexTypesTags *)getTags;

- (NSString *)getType;

- (NSUInteger)hash;

- (jboolean)hasValue;

- (void)setTagsWithEduStanfordNlpLingTokensregexTypesTags:(EduStanfordNlpLingTokensregexTypesTags *)tags;

- (id<EduStanfordNlpLingTokensregexTypesExpression>)simplifyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_WrappedExpression)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesExpressions_WrappedExpression, expr_, id<EduStanfordNlpLingTokensregexTypesExpression>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_WrappedExpression_init(EduStanfordNlpLingTokensregexTypesExpressions_WrappedExpression *self);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_WrappedExpression)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression))
#define EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression_

#define RESTRICT_EduStanfordNlpLingTokensregexTypesExpression 1
#define INCLUDE_EduStanfordNlpLingTokensregexTypesExpression 1
#include "edu/stanford/nlp/ling/tokensregex/types/Expression.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class EduStanfordNlpLingTokensregexEnv;
@class EduStanfordNlpLingTokensregexTypesTags;
@class IOSObjectArray;

@interface EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression : NSObject < EduStanfordNlpLingTokensregexTypesExpression, JavaIoSerializable > {
 @public
  NSString *typename__;
  EduStanfordNlpLingTokensregexTypesTags *tags_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)typename_
               withNSStringArray:(IOSObjectArray *)tags;

- (jboolean)isEqual:(id)o;

- (EduStanfordNlpLingTokensregexTypesTags *)getTags;

- (NSString *)getType;

- (NSUInteger)hash;

- (jboolean)hasValue;

- (void)setTagsWithEduStanfordNlpLingTokensregexTypesTags:(EduStanfordNlpLingTokensregexTypesTags *)tags;

- (id<EduStanfordNlpLingTokensregexTypesExpression>)simplifyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression, typename__, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression, tags_, EduStanfordNlpLingTokensregexTypesTags *)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression_initWithNSString_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression *self, NSString *typename_, IOSObjectArray *tags);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_SimpleExpression_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_SimpleExpression))
#define EduStanfordNlpLingTokensregexTypesExpressions_SimpleExpression_

@class IOSObjectArray;

@interface EduStanfordNlpLingTokensregexTypesExpressions_SimpleExpression : EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression {
 @public
  id value_;
}

#pragma mark Public

- (jboolean)isEqual:(id)o;

- (id)get;

- (NSUInteger)hash;

- (NSString *)description;

#pragma mark Protected

- (instancetype)initWithNSString:(NSString *)typename_
                          withId:(id)value
               withNSStringArray:(IOSObjectArray *)tags;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_SimpleExpression)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesExpressions_SimpleExpression, value_, id)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_SimpleExpression_initWithNSString_withId_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_SimpleExpression *self, NSString *typename_, id value, IOSObjectArray *tags);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_SimpleExpression)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_SimpleCachedExpression_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_SimpleCachedExpression))
#define EduStanfordNlpLingTokensregexTypesExpressions_SimpleCachedExpression_

@class EduStanfordNlpLingTokensregexEnv;
@class IOSObjectArray;
@protocol EduStanfordNlpLingTokensregexTypesValue;

@interface EduStanfordNlpLingTokensregexTypesExpressions_SimpleCachedExpression : EduStanfordNlpLingTokensregexTypesExpressions_SimpleExpression {
 @public
  id<EduStanfordNlpLingTokensregexTypesValue> evaluated_;
  jboolean disableCaching_;
}

#pragma mark Public

- (jboolean)isEqual:(id)o;

- (id<EduStanfordNlpLingTokensregexTypesValue>)evaluateWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                          withNSObjectArray:(IOSObjectArray *)args;

- (NSUInteger)hash;

- (jboolean)hasValue;

#pragma mark Protected

- (instancetype)initWithNSString:(NSString *)typename_
                          withId:(id)value
               withNSStringArray:(IOSObjectArray *)tags;

- (id<EduStanfordNlpLingTokensregexTypesValue>)doEvaluationWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                              withNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_SimpleCachedExpression)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesExpressions_SimpleCachedExpression, evaluated_, id<EduStanfordNlpLingTokensregexTypesValue>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_SimpleCachedExpression_initWithNSString_withId_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_SimpleCachedExpression *self, NSString *typename_, id value, IOSObjectArray *tags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_SimpleCachedExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_SimpleCachedExpression_initWithNSString_withId_withNSStringArray_(NSString *typename_, id value, IOSObjectArray *tags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_SimpleCachedExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_SimpleCachedExpression_initWithNSString_withId_withNSStringArray_(NSString *typename_, id value, IOSObjectArray *tags);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_SimpleCachedExpression)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_SimpleValue_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_SimpleValue))
#define EduStanfordNlpLingTokensregexTypesExpressions_SimpleValue_

#define RESTRICT_EduStanfordNlpLingTokensregexTypesValue 1
#define INCLUDE_EduStanfordNlpLingTokensregexTypesValue 1
#include "edu/stanford/nlp/ling/tokensregex/types/Value.h"

@class EduStanfordNlpLingTokensregexEnv;
@class IOSObjectArray;

@interface EduStanfordNlpLingTokensregexTypesExpressions_SimpleValue : EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression < EduStanfordNlpLingTokensregexTypesValue > {
 @public
  id value_;
}

#pragma mark Public

- (jboolean)isEqual:(id)o;

- (id<EduStanfordNlpLingTokensregexTypesValue>)evaluateWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                          withNSObjectArray:(IOSObjectArray *)args;

- (id)get;

- (NSUInteger)hash;

- (jboolean)hasValue;

- (NSString *)description;

#pragma mark Protected

- (instancetype)initWithNSString:(NSString *)typename_
                          withId:(id)value
               withNSStringArray:(IOSObjectArray *)tags;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_SimpleValue)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesExpressions_SimpleValue, value_, id)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_SimpleValue_initWithNSString_withId_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_SimpleValue *self, NSString *typename_, id value, IOSObjectArray *tags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_SimpleValue *new_EduStanfordNlpLingTokensregexTypesExpressions_SimpleValue_initWithNSString_withId_withNSStringArray_(NSString *typename_, id value, IOSObjectArray *tags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_SimpleValue *create_EduStanfordNlpLingTokensregexTypesExpressions_SimpleValue_initWithNSString_withId_withNSStringArray_(NSString *typename_, id value, IOSObjectArray *tags);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_SimpleValue)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_RegexValue_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_RegexValue))
#define EduStanfordNlpLingTokensregexTypesExpressions_RegexValue_

@class IOSObjectArray;

@interface EduStanfordNlpLingTokensregexTypesExpressions_RegexValue : EduStanfordNlpLingTokensregexTypesExpressions_SimpleValue

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)regex
               withNSStringArray:(IOSObjectArray *)tags;

- (NSString *)get;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_RegexValue)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_RegexValue_initWithNSString_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_RegexValue *self, NSString *regex, IOSObjectArray *tags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_RegexValue *new_EduStanfordNlpLingTokensregexTypesExpressions_RegexValue_initWithNSString_withNSStringArray_(NSString *regex, IOSObjectArray *tags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_RegexValue *create_EduStanfordNlpLingTokensregexTypesExpressions_RegexValue_initWithNSString_withNSStringArray_(NSString *regex, IOSObjectArray *tags);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_RegexValue)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_VarAssignmentExpression_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_VarAssignmentExpression))
#define EduStanfordNlpLingTokensregexTypesExpressions_VarAssignmentExpression_

@class EduStanfordNlpLingTokensregexEnv;
@class IOSObjectArray;
@protocol EduStanfordNlpLingTokensregexTypesExpression;
@protocol EduStanfordNlpLingTokensregexTypesValue;

@interface EduStanfordNlpLingTokensregexTypesExpressions_VarAssignmentExpression : EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression {
 @public
  NSString *varName_;
  id<EduStanfordNlpLingTokensregexTypesExpression> valueExpr_;
  jboolean bindAsValue_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)varName
withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)valueExpr
                     withBoolean:(jboolean)bindAsValue;

- (jboolean)isEqual:(id)o;

- (id<EduStanfordNlpLingTokensregexTypesValue>)evaluateWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                          withNSObjectArray:(IOSObjectArray *)args;

- (NSUInteger)hash;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_VarAssignmentExpression)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesExpressions_VarAssignmentExpression, varName_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesExpressions_VarAssignmentExpression, valueExpr_, id<EduStanfordNlpLingTokensregexTypesExpression>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_VarAssignmentExpression_initWithNSString_withEduStanfordNlpLingTokensregexTypesExpression_withBoolean_(EduStanfordNlpLingTokensregexTypesExpressions_VarAssignmentExpression *self, NSString *varName, id<EduStanfordNlpLingTokensregexTypesExpression> valueExpr, jboolean bindAsValue);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_VarAssignmentExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_VarAssignmentExpression_initWithNSString_withEduStanfordNlpLingTokensregexTypesExpression_withBoolean_(NSString *varName, id<EduStanfordNlpLingTokensregexTypesExpression> valueExpr, jboolean bindAsValue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_VarAssignmentExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_VarAssignmentExpression_initWithNSString_withEduStanfordNlpLingTokensregexTypesExpression_withBoolean_(NSString *varName, id<EduStanfordNlpLingTokensregexTypesExpression> valueExpr, jboolean bindAsValue);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_VarAssignmentExpression)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_VarExpression_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_VarExpression))
#define EduStanfordNlpLingTokensregexTypesExpressions_VarExpression_

#define RESTRICT_EduStanfordNlpLingTokensregexTypesAssignableExpression 1
#define INCLUDE_EduStanfordNlpLingTokensregexTypesAssignableExpression 1
#include "edu/stanford/nlp/ling/tokensregex/types/AssignableExpression.h"

@class EduStanfordNlpLingTokensregexEnv;
@class IOSObjectArray;
@protocol EduStanfordNlpLingTokensregexTypesExpression;
@protocol EduStanfordNlpLingTokensregexTypesValue;

@interface EduStanfordNlpLingTokensregexTypesExpressions_VarExpression : EduStanfordNlpLingTokensregexTypesExpressions_SimpleExpression < EduStanfordNlpLingTokensregexTypesAssignableExpression >

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)varname
               withNSStringArray:(IOSObjectArray *)tags;

- (id<EduStanfordNlpLingTokensregexTypesExpression>)assignWithEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)expr;

- (id<EduStanfordNlpLingTokensregexTypesValue>)evaluateWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                          withNSObjectArray:(IOSObjectArray *)args;

- (NSString *)get;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_VarExpression)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_VarExpression_initWithNSString_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_VarExpression *self, NSString *varname, IOSObjectArray *tags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_VarExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_VarExpression_initWithNSString_withNSStringArray_(NSString *varname, IOSObjectArray *tags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_VarExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_VarExpression_initWithNSString_withNSStringArray_(NSString *varname, IOSObjectArray *tags);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_VarExpression)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression))
#define EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression_

#define RESTRICT_EduStanfordNlpLingTokensregexTypesAssignableExpression 1
#define INCLUDE_EduStanfordNlpLingTokensregexTypesAssignableExpression 1
#include "edu/stanford/nlp/ling/tokensregex/types/AssignableExpression.h"

@class EduStanfordNlpLingTokensregexEnv;
@class IOSObjectArray;
@class JavaLangInteger;
@protocol EduStanfordNlpLingTokensregexTypesExpression;
@protocol EduStanfordNlpLingTokensregexTypesValue;

@interface EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression : EduStanfordNlpLingTokensregexTypesExpressions_SimpleExpression < EduStanfordNlpLingTokensregexTypesAssignableExpression >

#pragma mark Public

- (instancetype)initWithJavaLangInteger:(JavaLangInteger *)groupid
                      withNSStringArray:(IOSObjectArray *)tags;

- (instancetype)initWithNSString:(NSString *)groupname
               withNSStringArray:(IOSObjectArray *)tags;

- (id<EduStanfordNlpLingTokensregexTypesExpression>)assignWithEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)expr;

- (id<EduStanfordNlpLingTokensregexTypesValue>)evaluateWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                          withNSObjectArray:(IOSObjectArray *)args;

+ (EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression *)valueOfWithNSString:(NSString *)group;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression_initWithNSString_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression *self, NSString *groupname, IOSObjectArray *tags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression_initWithNSString_withNSStringArray_(NSString *groupname, IOSObjectArray *tags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression_initWithNSString_withNSStringArray_(NSString *groupname, IOSObjectArray *tags);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression_initWithJavaLangInteger_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression *self, JavaLangInteger *groupid, IOSObjectArray *tags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression_initWithJavaLangInteger_withNSStringArray_(JavaLangInteger *groupid, IOSObjectArray *tags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression_initWithJavaLangInteger_withNSStringArray_(JavaLangInteger *groupid, IOSObjectArray *tags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression *EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression_valueOfWithNSString_(NSString *group);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchVarExpression)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression))
#define EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression_

@class EduStanfordNlpLingTokensregexEnv;
@class IOSObjectArray;
@class JavaLangInteger;
@protocol EduStanfordNlpLingTokensregexTypesValue;

@interface EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression : EduStanfordNlpLingTokensregexTypesExpressions_SimpleExpression

#pragma mark Public

- (instancetype)initWithJavaLangInteger:(JavaLangInteger *)groupid
                      withNSStringArray:(IOSObjectArray *)tags;

- (instancetype)initWithNSString:(NSString *)groupname
               withNSStringArray:(IOSObjectArray *)tags;

- (id<EduStanfordNlpLingTokensregexTypesValue>)evaluateWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                          withNSObjectArray:(IOSObjectArray *)args;

+ (EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression *)valueOfWithNSString:(NSString *)group;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression_initWithNSString_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression *self, NSString *groupname, IOSObjectArray *tags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression_initWithNSString_withNSStringArray_(NSString *groupname, IOSObjectArray *tags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression_initWithNSString_withNSStringArray_(NSString *groupname, IOSObjectArray *tags);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression_initWithJavaLangInteger_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression *self, JavaLangInteger *groupid, IOSObjectArray *tags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression_initWithJavaLangInteger_withNSStringArray_(JavaLangInteger *groupid, IOSObjectArray *tags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression_initWithJavaLangInteger_withNSStringArray_(JavaLangInteger *groupid, IOSObjectArray *tags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression *EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression_valueOfWithNSString_(NSString *group);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_RegexMatchResultVarExpression)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression))
#define EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression_

@class EduStanfordNlpLingTokensregexEnv;
@class IOSObjectArray;
@protocol EduStanfordNlpLingTokensregexTypesExpression;
@protocol EduStanfordNlpLingTokensregexTypesValue;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression : EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression {
 @public
  NSString *function_;
  id<JavaUtilList> params_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)function
                withJavaUtilList:(id<JavaUtilList>)params
               withNSStringArray:(IOSObjectArray *)tags;

- (jboolean)isEqual:(id)o;

- (id<EduStanfordNlpLingTokensregexTypesValue>)evaluateWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                          withNSObjectArray:(IOSObjectArray *)args;

- (NSUInteger)hash;

- (id<EduStanfordNlpLingTokensregexTypesExpression>)simplifyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression, function_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression, params_, id<JavaUtilList>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression_initWithNSString_withJavaUtilList_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression *self, NSString *function, id<JavaUtilList> params, IOSObjectArray *tags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression_initWithNSString_withJavaUtilList_withNSStringArray_(NSString *function, id<JavaUtilList> params, IOSObjectArray *tags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression_initWithNSString_withJavaUtilList_withNSStringArray_(NSString *function, id<JavaUtilList> params, IOSObjectArray *tags);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_AssignableFunctionCallExpression_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_AssignableFunctionCallExpression))
#define EduStanfordNlpLingTokensregexTypesExpressions_AssignableFunctionCallExpression_

#define RESTRICT_EduStanfordNlpLingTokensregexTypesAssignableExpression 1
#define INCLUDE_EduStanfordNlpLingTokensregexTypesAssignableExpression 1
#include "edu/stanford/nlp/ling/tokensregex/types/AssignableExpression.h"

@class IOSObjectArray;
@protocol EduStanfordNlpLingTokensregexTypesExpression;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexTypesExpressions_AssignableFunctionCallExpression : EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression < EduStanfordNlpLingTokensregexTypesAssignableExpression >

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)function
                withJavaUtilList:(id<JavaUtilList>)params
               withNSStringArray:(IOSObjectArray *)tags;

- (id<EduStanfordNlpLingTokensregexTypesExpression>)assignWithEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)expr;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_AssignableFunctionCallExpression)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_AssignableFunctionCallExpression_initWithNSString_withJavaUtilList_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_AssignableFunctionCallExpression *self, NSString *function, id<JavaUtilList> params, IOSObjectArray *tags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_AssignableFunctionCallExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_AssignableFunctionCallExpression_initWithNSString_withJavaUtilList_withNSStringArray_(NSString *function, id<JavaUtilList> params, IOSObjectArray *tags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_AssignableFunctionCallExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_AssignableFunctionCallExpression_initWithNSString_withJavaUtilList_withNSStringArray_(NSString *function, id<JavaUtilList> params, IOSObjectArray *tags);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_AssignableFunctionCallExpression)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_IndexedExpression_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_IndexedExpression))
#define EduStanfordNlpLingTokensregexTypesExpressions_IndexedExpression_

@protocol EduStanfordNlpLingTokensregexTypesExpression;

@interface EduStanfordNlpLingTokensregexTypesExpressions_IndexedExpression : EduStanfordNlpLingTokensregexTypesExpressions_AssignableFunctionCallExpression

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)expr
                                                             withInt:(jint)index;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_IndexedExpression)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_IndexedExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_withInt_(EduStanfordNlpLingTokensregexTypesExpressions_IndexedExpression *self, id<EduStanfordNlpLingTokensregexTypesExpression> expr, jint index);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_IndexedExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_IndexedExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_withInt_(id<EduStanfordNlpLingTokensregexTypesExpression> expr, jint index) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_IndexedExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_IndexedExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_withInt_(id<EduStanfordNlpLingTokensregexTypesExpression> expr, jint index);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_IndexedExpression)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression))
#define EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression_

@protocol EduStanfordNlpLingTokensregexTypesExpression;

@interface EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression : EduStanfordNlpLingTokensregexTypesExpressions_AssignableFunctionCallExpression

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)expr
                    withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)field;

- (instancetype)initWithEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)expr
                                                        withNSString:(NSString *)field;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_withNSString_(EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression *self, id<EduStanfordNlpLingTokensregexTypesExpression> expr, NSString *field);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_withNSString_(id<EduStanfordNlpLingTokensregexTypesExpression> expr, NSString *field) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_withNSString_(id<EduStanfordNlpLingTokensregexTypesExpression> expr, NSString *field);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression *self, id<EduStanfordNlpLingTokensregexTypesExpression> expr, id<EduStanfordNlpLingTokensregexTypesExpression> field);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_(id<EduStanfordNlpLingTokensregexTypesExpression> expr, id<EduStanfordNlpLingTokensregexTypesExpression> field) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_(id<EduStanfordNlpLingTokensregexTypesExpression> expr, id<EduStanfordNlpLingTokensregexTypesExpression> field);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_FieldExpression)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_OrExpression_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_OrExpression))
#define EduStanfordNlpLingTokensregexTypesExpressions_OrExpression_

@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexTypesExpressions_OrExpression : EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression

#pragma mark Public

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)children;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_OrExpression)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_OrExpression_initWithJavaUtilList_(EduStanfordNlpLingTokensregexTypesExpressions_OrExpression *self, id<JavaUtilList> children);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_OrExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_OrExpression_initWithJavaUtilList_(id<JavaUtilList> children) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_OrExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_OrExpression_initWithJavaUtilList_(id<JavaUtilList> children);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_OrExpression)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_AndExpression_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_AndExpression))
#define EduStanfordNlpLingTokensregexTypesExpressions_AndExpression_

@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexTypesExpressions_AndExpression : EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression

#pragma mark Public

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)children;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_AndExpression)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_AndExpression_initWithJavaUtilList_(EduStanfordNlpLingTokensregexTypesExpressions_AndExpression *self, id<JavaUtilList> children);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_AndExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_AndExpression_initWithJavaUtilList_(id<JavaUtilList> children) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_AndExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_AndExpression_initWithJavaUtilList_(id<JavaUtilList> children);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_AndExpression)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_NotExpression_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_NotExpression))
#define EduStanfordNlpLingTokensregexTypesExpressions_NotExpression_

@protocol EduStanfordNlpLingTokensregexTypesExpression;

@interface EduStanfordNlpLingTokensregexTypesExpressions_NotExpression : EduStanfordNlpLingTokensregexTypesExpressions_FunctionCallExpression

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)expr;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_NotExpression)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_NotExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexTypesExpressions_NotExpression *self, id<EduStanfordNlpLingTokensregexTypesExpression> expr);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_NotExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_NotExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_(id<EduStanfordNlpLingTokensregexTypesExpression> expr) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_NotExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_NotExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_(id<EduStanfordNlpLingTokensregexTypesExpression> expr);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_NotExpression)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_IfExpression_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_IfExpression))
#define EduStanfordNlpLingTokensregexTypesExpressions_IfExpression_

@class EduStanfordNlpLingTokensregexEnv;
@class IOSObjectArray;
@protocol EduStanfordNlpLingTokensregexTypesExpression;
@protocol EduStanfordNlpLingTokensregexTypesValue;

@interface EduStanfordNlpLingTokensregexTypesExpressions_IfExpression : EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression {
 @public
  id<EduStanfordNlpLingTokensregexTypesExpression> condExpr_;
  id<EduStanfordNlpLingTokensregexTypesExpression> trueExpr_;
  id<EduStanfordNlpLingTokensregexTypesExpression> falseExpr_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)cond
                    withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)vt
                    withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)vf;

- (id<EduStanfordNlpLingTokensregexTypesValue>)evaluateWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                          withNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_IfExpression)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesExpressions_IfExpression, condExpr_, id<EduStanfordNlpLingTokensregexTypesExpression>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesExpressions_IfExpression, trueExpr_, id<EduStanfordNlpLingTokensregexTypesExpression>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesExpressions_IfExpression, falseExpr_, id<EduStanfordNlpLingTokensregexTypesExpression>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_IfExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexTypesExpressions_IfExpression *self, id<EduStanfordNlpLingTokensregexTypesExpression> cond, id<EduStanfordNlpLingTokensregexTypesExpression> vt, id<EduStanfordNlpLingTokensregexTypesExpression> vf);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_IfExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_IfExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_(id<EduStanfordNlpLingTokensregexTypesExpression> cond, id<EduStanfordNlpLingTokensregexTypesExpression> vt, id<EduStanfordNlpLingTokensregexTypesExpression> vf) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_IfExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_IfExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_(id<EduStanfordNlpLingTokensregexTypesExpression> cond, id<EduStanfordNlpLingTokensregexTypesExpression> vt, id<EduStanfordNlpLingTokensregexTypesExpression> vf);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_IfExpression)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_CaseExpression_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_CaseExpression))
#define EduStanfordNlpLingTokensregexTypesExpressions_CaseExpression_

@protocol EduStanfordNlpLingTokensregexTypesExpression;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexTypesExpressions_CaseExpression : EduStanfordNlpLingTokensregexTypesExpressions_WrappedExpression

#pragma mark Public

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)conds
withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)elseExpr;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_CaseExpression)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_CaseExpression_initWithJavaUtilList_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexTypesExpressions_CaseExpression *self, id<JavaUtilList> conds, id<EduStanfordNlpLingTokensregexTypesExpression> elseExpr);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_CaseExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_CaseExpression_initWithJavaUtilList_withEduStanfordNlpLingTokensregexTypesExpression_(id<JavaUtilList> conds, id<EduStanfordNlpLingTokensregexTypesExpression> elseExpr) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_CaseExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_CaseExpression_initWithJavaUtilList_withEduStanfordNlpLingTokensregexTypesExpression_(id<JavaUtilList> conds, id<EduStanfordNlpLingTokensregexTypesExpression> elseExpr);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_CaseExpression)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression))
#define EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression_

@class EduStanfordNlpLingTokensregexEnv;
@class IOSObjectArray;
@protocol EduStanfordNlpLingTokensregexTypesExpression;
@protocol EduStanfordNlpLingTokensregexTypesValue;

@interface EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression : EduStanfordNlpLingTokensregexTypesExpressions_WrappedExpression

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)expr;

- (instancetype)initWithNSString:(NSString *)op
withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)expr1
withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)expr2;

- (id<EduStanfordNlpLingTokensregexTypesValue>)evaluateWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                          withNSObjectArray:(IOSObjectArray *)args;

- (NSString *)getType;

- (id<EduStanfordNlpLingTokensregexTypesExpression>)simplifyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression *self, id<EduStanfordNlpLingTokensregexTypesExpression> expr);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_(id<EduStanfordNlpLingTokensregexTypesExpression> expr) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression_initWithEduStanfordNlpLingTokensregexTypesExpression_(id<EduStanfordNlpLingTokensregexTypesExpression> expr);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression_initWithNSString_withEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_(EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression *self, NSString *op, id<EduStanfordNlpLingTokensregexTypesExpression> expr1, id<EduStanfordNlpLingTokensregexTypesExpression> expr2);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression_initWithNSString_withEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_(NSString *op, id<EduStanfordNlpLingTokensregexTypesExpression> expr1, id<EduStanfordNlpLingTokensregexTypesExpression> expr2) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression_initWithNSString_withEduStanfordNlpLingTokensregexTypesExpression_withEduStanfordNlpLingTokensregexTypesExpression_(NSString *op, id<EduStanfordNlpLingTokensregexTypesExpression> expr1, id<EduStanfordNlpLingTokensregexTypesExpression> expr2);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_ConditionalExpression)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_ListExpression_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_ListExpression))
#define EduStanfordNlpLingTokensregexTypesExpressions_ListExpression_

@class EduStanfordNlpLingTokensregexEnv;
@class IOSObjectArray;
@protocol EduStanfordNlpLingTokensregexTypesExpression;
@protocol EduStanfordNlpLingTokensregexTypesValue;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexTypesExpressions_ListExpression : EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression {
 @public
  id<JavaUtilList> exprs_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)typename_
                withJavaUtilList:(id<JavaUtilList>)exprs
               withNSStringArray:(IOSObjectArray *)tags;

- (instancetype)initWithNSString:(NSString *)typename_
               withNSStringArray:(IOSObjectArray *)tags;

- (void)addWithEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)expr;

- (void)addAllWithJavaUtilList:(id<JavaUtilList>)exprs;

- (id<EduStanfordNlpLingTokensregexTypesValue>)evaluateWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                          withNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_ListExpression)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesExpressions_ListExpression, exprs_, id<JavaUtilList>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_ListExpression_initWithNSString_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_ListExpression *self, NSString *typename_, IOSObjectArray *tags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_ListExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_ListExpression_initWithNSString_withNSStringArray_(NSString *typename_, IOSObjectArray *tags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_ListExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_ListExpression_initWithNSString_withNSStringArray_(NSString *typename_, IOSObjectArray *tags);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_ListExpression_initWithNSString_withJavaUtilList_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_ListExpression *self, NSString *typename_, id<JavaUtilList> exprs, IOSObjectArray *tags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_ListExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_ListExpression_initWithNSString_withJavaUtilList_withNSStringArray_(NSString *typename_, id<JavaUtilList> exprs, IOSObjectArray *tags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_ListExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_ListExpression_initWithNSString_withJavaUtilList_withNSStringArray_(NSString *typename_, id<JavaUtilList> exprs, IOSObjectArray *tags);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_ListExpression)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_MethodCallExpression_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_MethodCallExpression))
#define EduStanfordNlpLingTokensregexTypesExpressions_MethodCallExpression_

@class EduStanfordNlpLingTokensregexEnv;
@class IOSObjectArray;
@protocol EduStanfordNlpLingTokensregexTypesExpression;
@protocol EduStanfordNlpLingTokensregexTypesValue;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexTypesExpressions_MethodCallExpression : EduStanfordNlpLingTokensregexTypesExpressions_TypedExpression {
 @public
  NSString *function_;
  id<EduStanfordNlpLingTokensregexTypesExpression> object_;
  id<JavaUtilList> params_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)function
withEduStanfordNlpLingTokensregexTypesExpression:(id<EduStanfordNlpLingTokensregexTypesExpression>)object
                withJavaUtilList:(id<JavaUtilList>)params
               withNSStringArray:(IOSObjectArray *)tags;

- (jboolean)isEqual:(id)o;

- (id<EduStanfordNlpLingTokensregexTypesValue>)evaluateWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                          withNSObjectArray:(IOSObjectArray *)args;

- (NSUInteger)hash;

- (id<EduStanfordNlpLingTokensregexTypesExpression>)simplifyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_MethodCallExpression)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesExpressions_MethodCallExpression, function_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesExpressions_MethodCallExpression, object_, id<EduStanfordNlpLingTokensregexTypesExpression>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesExpressions_MethodCallExpression, params_, id<JavaUtilList>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_MethodCallExpression_initWithNSString_withEduStanfordNlpLingTokensregexTypesExpression_withJavaUtilList_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_MethodCallExpression *self, NSString *function, id<EduStanfordNlpLingTokensregexTypesExpression> object, id<JavaUtilList> params, IOSObjectArray *tags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_MethodCallExpression *new_EduStanfordNlpLingTokensregexTypesExpressions_MethodCallExpression_initWithNSString_withEduStanfordNlpLingTokensregexTypesExpression_withJavaUtilList_withNSStringArray_(NSString *function, id<EduStanfordNlpLingTokensregexTypesExpression> object, id<JavaUtilList> params, IOSObjectArray *tags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_MethodCallExpression *create_EduStanfordNlpLingTokensregexTypesExpressions_MethodCallExpression_initWithNSString_withEduStanfordNlpLingTokensregexTypesExpression_withJavaUtilList_withNSStringArray_(NSString *function, id<EduStanfordNlpLingTokensregexTypesExpression> object, id<JavaUtilList> params, IOSObjectArray *tags);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_MethodCallExpression)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue))
#define EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_

@class IOSObjectArray;

@interface EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue : EduStanfordNlpLingTokensregexTypesExpressions_SimpleValue

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)typename_
                          withId:(id)value
               withNSStringArray:(IOSObjectArray *)tags;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_initWithNSString_withId_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue *self, NSString *typename_, id value, IOSObjectArray *tags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue *new_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_initWithNSString_withId_withNSStringArray_(NSString *typename_, id value, IOSObjectArray *tags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue *create_EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue_initWithNSString_withId_withNSStringArray_(NSString *typename_, id value, IOSObjectArray *tags);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_PrimitiveValue)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue))
#define EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue_

#define RESTRICT_EduStanfordNlpLingTokensregexTypesValue 1
#define INCLUDE_EduStanfordNlpLingTokensregexTypesValue 1
#include "edu/stanford/nlp/ling/tokensregex/types/Value.h"

@class EduStanfordNlpLingTokensregexEnv;
@class IOSObjectArray;
@protocol EduStanfordNlpLingTokensregexTypesExpression;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue : EduStanfordNlpLingTokensregexTypesExpressions_SimpleCachedExpression < EduStanfordNlpLingTokensregexTypesValue >

#pragma mark Public

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)m
                        withBoolean:(jboolean)isEvaluated
                  withNSStringArray:(IOSObjectArray *)tags;

- (instancetype)initWithNSStringArray:(IOSObjectArray *)tags;

- (id<EduStanfordNlpLingTokensregexTypesValue>)doEvaluationWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                              withNSObjectArray:(IOSObjectArray *)args;

- (id<JavaUtilMap>)get;

- (id)getWithNSString:(NSString *)attr;

- (id<JavaUtilSet>)getAttributes;

- (id<EduStanfordNlpLingTokensregexTypesExpression>)getExpressionWithNSString:(NSString *)attr;

- (id<EduStanfordNlpLingTokensregexTypesValue>)getValueWithNSString:(NSString *)attr;

- (void)setWithNSString:(NSString *)attr
                 withId:(id)obj;

- (EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue *)simplifyNoTypeConversionWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                                             withNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue_initWithNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue *self, IOSObjectArray *tags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue *new_EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue_initWithNSStringArray_(IOSObjectArray *tags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue *create_EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue_initWithNSStringArray_(IOSObjectArray *tags);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue_initWithJavaUtilMap_withBoolean_withNSStringArray_(EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue *self, id<JavaUtilMap> m, jboolean isEvaluated, IOSObjectArray *tags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue *new_EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue_initWithJavaUtilMap_withBoolean_withNSStringArray_(id<JavaUtilMap> m, jboolean isEvaluated, IOSObjectArray *tags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue *create_EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue_initWithJavaUtilMap_withBoolean_withNSStringArray_(id<JavaUtilMap> m, jboolean isEvaluated, IOSObjectArray *tags);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesExpressions_CompositeValue)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesExpressions")
