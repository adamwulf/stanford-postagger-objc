//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/tokensregex/types/Tags.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesTags")
#ifdef RESTRICT_EduStanfordNlpLingTokensregexTypesTags
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesTags 0
#else
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesTags 1
#endif
#undef RESTRICT_EduStanfordNlpLingTokensregexTypesTags

#if !defined (EduStanfordNlpLingTokensregexTypesTags_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesTags || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesTags))
#define EduStanfordNlpLingTokensregexTypesTags_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSObjectArray;
@protocol EduStanfordNlpLingTokensregexTypesValue;
@protocol JavaUtilCollection;
@protocol JavaUtilMap;

@interface EduStanfordNlpLingTokensregexTypesTags : NSObject < JavaIoSerializable > {
 @public
  id<JavaUtilMap> tags_;
}

#pragma mark Public

- (instancetype)initWithNSStringArray:(IOSObjectArray *)tags;

- (void)addTagWithNSString:(NSString *)tag
withEduStanfordNlpLingTokensregexTypesValue:(id<EduStanfordNlpLingTokensregexTypesValue>)v;

- (jboolean)isEqual:(id)o;

- (id<EduStanfordNlpLingTokensregexTypesValue>)getTagWithNSString:(NSString *)tag;

- (id<JavaUtilCollection>)getTags;

- (NSUInteger)hash;

- (jboolean)hasTagWithNSString:(NSString *)tag;

- (void)removeTagWithNSString:(NSString *)tag;

- (void)setTagWithNSString:(NSString *)tag
withEduStanfordNlpLingTokensregexTypesValue:(id<EduStanfordNlpLingTokensregexTypesValue>)v;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesTags)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesTags, tags_, id<JavaUtilMap>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesTags_initWithNSStringArray_(EduStanfordNlpLingTokensregexTypesTags *self, IOSObjectArray *tags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesTags *new_EduStanfordNlpLingTokensregexTypesTags_initWithNSStringArray_(IOSObjectArray *tags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesTags *create_EduStanfordNlpLingTokensregexTypesTags_initWithNSStringArray_(IOSObjectArray *tags);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesTags)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesTags_TagsAnnotation_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesTags || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesTags_TagsAnnotation))
#define EduStanfordNlpLingTokensregexTypesTags_TagsAnnotation_

#define RESTRICT_EduStanfordNlpLingCoreAnnotation 1
#define INCLUDE_EduStanfordNlpLingCoreAnnotation 1
#include "edu/stanford/nlp/ling/CoreAnnotation.h"

@class IOSClass;

@interface EduStanfordNlpLingTokensregexTypesTags_TagsAnnotation : NSObject < EduStanfordNlpLingCoreAnnotation >

#pragma mark Public

- (instancetype)init;

- (IOSClass *)getType;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesTags_TagsAnnotation)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesTags_TagsAnnotation_init(EduStanfordNlpLingTokensregexTypesTags_TagsAnnotation *self);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesTags_TagsAnnotation *new_EduStanfordNlpLingTokensregexTypesTags_TagsAnnotation_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesTags_TagsAnnotation *create_EduStanfordNlpLingTokensregexTypesTags_TagsAnnotation_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesTags_TagsAnnotation)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesTags")
