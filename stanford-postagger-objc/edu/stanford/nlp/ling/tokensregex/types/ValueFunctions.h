//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/tokensregex/types/ValueFunctions.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesValueFunctions")
#ifdef RESTRICT_EduStanfordNlpLingTokensregexTypesValueFunctions
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesValueFunctions 0
#else
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesValueFunctions 1
#endif
#undef RESTRICT_EduStanfordNlpLingTokensregexTypesValueFunctions
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction
#define INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction
#define INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction
#define INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction
#define INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction
#define INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction 1
#endif

#if !defined (EduStanfordNlpLingTokensregexTypesValueFunctions_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesValueFunctions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunctions))
#define EduStanfordNlpLingTokensregexTypesValueFunctions_

@class EduStanfordNlpLingTokensregexEnv;
@class EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator;
@class EduStanfordNlpUtilCollectionValuedMap;
@class IOSObjectArray;
@protocol EduStanfordNlpLingTokensregexTypesValueFunction;

@interface EduStanfordNlpLingTokensregexTypesValueFunctions : NSObject

#pragma mark Public

+ (jboolean)isIntegerWithNSNumber:(NSNumber *)n;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

#pragma mark Protected

+ (id)lookupFunctionObjectWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                  withNSString:(NSString *)name;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_ADD_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_ADD_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, ADD_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_SUBTRACT_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_SUBTRACT_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, SUBTRACT_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_MULTIPLY_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_MULTIPLY_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, MULTIPLY_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_DIVIDE_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_DIVIDE_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, DIVIDE_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_MOD_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_MOD_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, MOD_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_MAX_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_MAX_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, MAX_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_MIN_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_MIN_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, MIN_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_POW_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_POW_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, POW_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_NEGATE_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_NEGATE_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, NEGATE_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_AND_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_AND_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, AND_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_OR_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_OR_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, OR_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_NOT_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_NOT_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, NOT_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_CONCAT_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_CONCAT_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, CONCAT_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_UPPERCASE_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_UPPERCASE_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, UPPERCASE_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_LOWERCASE_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_LOWERCASE_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, LOWERCASE_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_PRINT_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_PRINT_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, PRINT_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_FORMAT_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_FORMAT_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, FORMAT_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_JOIN_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_JOIN_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, JOIN_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_CREATE_REGEX_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_CREATE_REGEX_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, CREATE_REGEX_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_MAP_VALUES_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_VALUES_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, MAP_VALUES_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_MAP_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, MAP_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_TOKENS_MATCH_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_TOKENS_MATCH_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, TOKENS_MATCH_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_TOKENS_REPLACE_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_TOKENS_REPLACE_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, TOKENS_REPLACE_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_STRING_MATCH_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_STRING_MATCH_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, STRING_MATCH_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_STRING_REPLACE_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_STRING_REPLACE_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, STRING_REPLACE_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_TOKEN_STRING_SPLIT_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_TOKEN_STRING_SPLIT_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, TOKEN_STRING_SPLIT_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator *EduStanfordNlpLingTokensregexTypesValueFunctions_get_NUMBER_COMPARATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator *EduStanfordNlpLingTokensregexTypesValueFunctions_NUMBER_COMPARATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, NUMBER_COMPARATOR, EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator *)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_NOT_EQUALS_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_NOT_EQUALS_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, NOT_EQUALS_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_EQUALS_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_EQUALS_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, EQUALS_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_ANNOTATION_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_ANNOTATION_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, ANNOTATION_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_GET_ANNOTATION_TAG_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_GET_ANNOTATION_TAG_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, GET_ANNOTATION_TAG_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_SET_ANNOTATION_TAG_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_SET_ANNOTATION_TAG_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, SET_ANNOTATION_TAG_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_REMOVE_ANNOTATION_TAG_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_REMOVE_ANNOTATION_TAG_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, REMOVE_ANNOTATION_TAG_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_TAGS_VALUE_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_TAGS_VALUE_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, TAGS_VALUE_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_SET_VALUE_TAG_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_SET_VALUE_TAG_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, SET_VALUE_TAG_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_GET_VALUE_TAG_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_GET_VALUE_TAG_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, GET_VALUE_TAG_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_REMOVE_VALUE_TAG_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_REMOVE_VALUE_TAG_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, REMOVE_VALUE_TAG_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_COMPOSITE_VALUE_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_COMPOSITE_VALUE_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, COMPOSITE_VALUE_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_COMPOSITE_KEYS_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_COMPOSITE_KEYS_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, COMPOSITE_KEYS_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_OBJECT_FIELD_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_OBJECT_FIELD_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, OBJECT_FIELD_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_LIST_VALUE_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_LIST_VALUE_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, LIST_VALUE_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_MAP_VALUE_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_VALUE_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, MAP_VALUE_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_MAP_KEYS_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_MAP_KEYS_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, MAP_KEYS_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_AGGREGATE_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_AGGREGATE_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, AGGREGATE_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_get_CALL_FUNCTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<EduStanfordNlpLingTokensregexTypesValueFunction> EduStanfordNlpLingTokensregexTypesValueFunctions_CALL_FUNCTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, CALL_FUNCTION, id<EduStanfordNlpLingTokensregexTypesValueFunction>)

inline EduStanfordNlpUtilCollectionValuedMap *EduStanfordNlpLingTokensregexTypesValueFunctions_get_registeredFunctions();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpUtilCollectionValuedMap *EduStanfordNlpLingTokensregexTypesValueFunctions_registeredFunctions;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTypesValueFunctions, registeredFunctions, EduStanfordNlpUtilCollectionValuedMap *)

FOUNDATION_EXPORT id EduStanfordNlpLingTokensregexTypesValueFunctions_lookupFunctionObjectWithEduStanfordNlpLingTokensregexEnv_withNSString_(EduStanfordNlpLingTokensregexEnv *env, NSString *name);

FOUNDATION_EXPORT jboolean EduStanfordNlpLingTokensregexTypesValueFunctions_isIntegerWithNSNumber_(NSNumber *n);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesValueFunctions_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesValueFunctions)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesValueFunctions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction))
#define EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_

#define RESTRICT_EduStanfordNlpLingTokensregexTypesValueFunction 1
#define INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunction 1
#include "edu/stanford/nlp/ling/tokensregex/types/ValueFunction.h"

@class IOSClass;

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction : NSObject < EduStanfordNlpLingTokensregexTypesValueFunction > {
 @public
  NSString *name_;
  NSString *signature_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)name;

- (NSString *)getDescription;

- (NSString *)getParamDesc;

- (NSString *)description;

#pragma mark Protected

+ (NSString *)getParamDescWithNSString:(NSString *)type
                               withInt:(jint)nargs;

+ (NSString *)getTypeNameWithIOSClass:(IOSClass *)c;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction, name_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction, signature_, NSString *)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_initWithNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction *self, NSString *name);

FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_getParamDescWithNSString_withInt_(NSString *type, jint nargs);

FOUNDATION_EXPORT NSString *EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction_getTypeNameWithIOSClass_(IOSClass *c);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesValueFunctions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo))
#define EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_

@class IOSClass;

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo : NSObject {
 @public
  NSString *name_;
  NSString *typeName_;
  IOSClass *className__;
  jboolean nullable_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)typeName
                    withIOSClass:(IOSClass *)className_
                     withBoolean:(jboolean)nullable;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo, name_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo, typeName_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo, className__, IOSClass *)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_initWithNSString_withNSString_withIOSClass_withBoolean_(EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *self, NSString *name, NSString *typeName, IOSClass *className_, jboolean nullable);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *new_EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_initWithNSString_withNSString_withIOSClass_withBoolean_(NSString *name, NSString *typeName, IOSClass *className_, jboolean nullable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo *create_EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo_initWithNSString_withNSString_withIOSClass_withBoolean_(NSString *name, NSString *typeName, IOSClass *className_, jboolean nullable);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfo)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesValueFunctions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction))
#define EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction_

@class IOSObjectArray;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction {
 @public
  id<JavaUtilList> paramInfos_;
  jint nargs_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)name
                withJavaUtilList:(id<JavaUtilList>)paramInfos;

- (instancetype)initWithNSString:(NSString *)name
withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray:(IOSObjectArray *)paramInfos;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (NSString *)getParamDesc;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction, paramInfos_, id<JavaUtilList>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction_initWithNSString_withJavaUtilList_(EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction *self, NSString *name, id<JavaUtilList> paramInfos);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction_initWithNSString_withEduStanfordNlpLingTokensregexTypesValueFunctions_ParamInfoArray_(EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction *self, NSString *name, IOSObjectArray *paramInfos);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesValueFunctions_TypeCheckedFunction)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesValueFunctions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction))
#define EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction_

@class EduStanfordNlpLingTokensregexEnv;
@class IOSObjectArray;
@protocol EduStanfordNlpLingTokensregexTypesValue;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction {
 @public
  NSString *resultTypeName_;
  jint nargs_;
}

#pragma mark Public

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (NSNumber *)computeWithNSNumberArray:(IOSObjectArray *)ns;

- (NSString *)getParamDesc;

#pragma mark Protected

- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)nargs;

- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)nargs
                    withNSString:(NSString *)resultTypeName;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction, resultTypeName_, NSString *)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction *self, NSString *name, jint nargs);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction_initWithNSString_withInt_withNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction *self, NSString *name, jint nargs, NSString *resultTypeName);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesValueFunctions_NumericFunction)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesValueFunctions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction))
#define EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction_

@class EduStanfordNlpLingTokensregexEnv;
@class IOSObjectArray;
@class JavaLangBoolean;
@protocol EduStanfordNlpLingTokensregexTypesValue;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction {
 @public
  NSString *resultTypeName_;
  jint nargs_;
}

#pragma mark Public

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (JavaLangBoolean *)computeWithJavaLangBooleanArray:(IOSObjectArray *)ns;

- (NSString *)getParamDesc;

#pragma mark Protected

- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)nargs;

- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)nargs
                    withNSString:(NSString *)resultTypeName;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction, resultTypeName_, NSString *)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction *self, NSString *name, jint nargs);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction_initWithNSString_withInt_withNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction *self, NSString *name, jint nargs, NSString *resultTypeName);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesValueFunctions_BooleanFunction)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesValueFunctions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction))
#define EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction_

@class EduStanfordNlpLingTokensregexEnv;
@class IOSObjectArray;
@protocol EduStanfordNlpLingTokensregexTypesValue;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction {
 @public
  NSString *resultTypeName_;
  jint nargs_;
}

#pragma mark Public

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (NSString *)computeWithNSStringArray:(IOSObjectArray *)strs;

- (NSString *)getParamDesc;

#pragma mark Protected

- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)nargs;

- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)nargs
                    withNSString:(NSString *)resultTypeName;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction, resultTypeName_, NSString *)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction_initWithNSString_withInt_(EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction *self, NSString *name, jint nargs);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction_initWithNSString_withInt_withNSString_(EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction *self, NSString *name, jint nargs, NSString *resultTypeName);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesValueFunctions_StringFunction)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesValueFunctions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator))
#define EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator_

#define RESTRICT_JavaUtilComparator 1
#define INCLUDE_JavaUtilComparator 1
#include "java/util/Comparator.h"

@protocol JavaUtilFunctionFunction;
@protocol JavaUtilFunctionToDoubleFunction;
@protocol JavaUtilFunctionToIntFunction;
@protocol JavaUtilFunctionToLongFunction;

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator : NSObject < JavaUtilComparator >

#pragma mark Public

- (instancetype)init;

- (jint)compareWithId:(NSNumber *)o1
               withId:(NSNumber *)o2;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator_init(EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator *self);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator *new_EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator *create_EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesValueFunctions_NumericComparator)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesValueFunctions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator))
#define EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator_

#define RESTRICT_JavaUtilComparator 1
#define INCLUDE_JavaUtilComparator 1
#include "java/util/Comparator.h"

@protocol JavaLangComparable;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilFunctionToDoubleFunction;
@protocol JavaUtilFunctionToIntFunction;
@protocol JavaUtilFunctionToLongFunction;

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator : NSObject < JavaUtilComparator >

#pragma mark Public

- (instancetype)init;

- (jint)compareWithId:(id<JavaLangComparable>)o1
               withId:(id<JavaLangComparable>)o2;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator_init(EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator *self);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator *new_EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator *create_EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesValueFunctions_ComparableComparator)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesValueFunctions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType))
#define EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_Enum) {
  EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_Enum_GT = 0,
  EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_Enum_LT = 1,
  EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_Enum_GE = 2,
  EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_Enum_LE = 3,
  EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_Enum_EQ = 4,
  EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_Enum_NE = 5,
};

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType : JavaLangEnum < NSCopying >

#pragma mark Public

+ (EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_values_[];

inline EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_get_GT();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, GT)

inline EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_get_LT();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, LT)

inline EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_get_GE();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, GE)

inline EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_get_LE();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, LE)

inline EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_get_EQ();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, EQ)

inline EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_get_NE();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType, NE)

FOUNDATION_EXPORT IOSObjectArray *EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_values();

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType)

#endif

#if !defined (EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesValueFunctions || defined(INCLUDE_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction))
#define EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction_

@class EduStanfordNlpLingTokensregexEnv;
@class EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType;
@class IOSClass;
@class JavaLangBoolean;
@protocol EduStanfordNlpLingTokensregexTypesValue;
@protocol JavaUtilComparator;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction : EduStanfordNlpLingTokensregexTypesValueFunctions_NamedValueFunction {
 @public
  id<JavaUtilComparator> comparator_;
  EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *compType_;
  IOSClass *clazz_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)name
          withJavaUtilComparator:(id<JavaUtilComparator>)comparator
withEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType:(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *)compType
                    withIOSClass:(IOSClass *)clazz;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                        withJavaUtilList:(id<JavaUtilList>)inArg;

- (jboolean)checkArgsWithJavaUtilList:(id<JavaUtilList>)inArg;

- (JavaLangBoolean *)compareWithId:(id)o1
                            withId:(id)o2;

- (NSString *)getParamDesc;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction, comparator_, id<JavaUtilComparator>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction, compType_, EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction, clazz_, IOSClass *)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction_initWithNSString_withJavaUtilComparator_withEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_withIOSClass_(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction *self, NSString *name, id<JavaUtilComparator> comparator, EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *compType, IOSClass *clazz);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction *new_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction_initWithNSString_withJavaUtilComparator_withEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_withIOSClass_(NSString *name, id<JavaUtilComparator> comparator, EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *compType, IOSClass *clazz) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction *create_EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction_initWithNSString_withJavaUtilComparator_withEduStanfordNlpLingTokensregexTypesValueFunctions_CompareType_withIOSClass_(NSString *name, id<JavaUtilComparator> comparator, EduStanfordNlpLingTokensregexTypesValueFunctions_CompareType *compType, IOSClass *clazz);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexTypesValueFunctions_CompareFunction)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexTypesValueFunctions")
