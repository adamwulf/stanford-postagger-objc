//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/tokensregex/SequenceMatchResult.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/tokensregex/SequenceMatchResult.h"
#include "edu/stanford/nlp/util/Comparators.h"
#include "edu/stanford/nlp/util/Interval.h"
#include "java/lang/Double.h"
#include "java/lang/Integer.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "java/util/regex/MatchResult.h"

@interface EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(id<JavaUtilRegexMatchResult>)e1
               withId:(id<JavaUtilRegexMatchResult>)e2;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1)

inline EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1 *EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1_get_instance();
static EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1 *EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1, instance, EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1 *)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1_init(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1 *self);

__attribute__((unused)) static EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1 *new_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1 *create_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1_init();

@interface EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(id<JavaUtilRegexMatchResult>)e1
               withId:(id<JavaUtilRegexMatchResult>)e2;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2)

inline EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2 *EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2_get_instance();
static EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2 *EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2, instance, EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2 *)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2_init(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2 *self);

__attribute__((unused)) static EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2 *new_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2 *create_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2_init();

@interface EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(id<JavaUtilRegexMatchResult>)e1
               withId:(id<JavaUtilRegexMatchResult>)e2;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3)

inline EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3 *EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3_get_instance();
static EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3 *EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3, instance, EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3 *)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3_init(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3 *self);

__attribute__((unused)) static EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3 *new_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3 *create_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3_init();

@interface EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(id<JavaUtilRegexMatchResult>)e1
               withId:(id<JavaUtilRegexMatchResult>)e2;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4)

inline EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4 *EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4_get_instance();
static EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4 *EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4, instance, EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4 *)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4_init(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4 *self);

__attribute__((unused)) static EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4 *new_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4 *create_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4_init();

@interface EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(id<JavaUtilRegexMatchResult>)e1
               withId:(id<JavaUtilRegexMatchResult>)e2;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5)

inline EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5 *EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5_get_instance();
static EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5 *EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5, instance, EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5 *)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5_init(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5 *self);

__attribute__((unused)) static EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5 *new_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5 *create_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5_init();

@interface EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(id<JavaUtilRegexMatchResult>)inArg;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6)

inline EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6 *EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6_get_instance();
static EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6 *EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6, instance, EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6 *)

__attribute__((unused)) static void EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6_init(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6 *self);

__attribute__((unused)) static EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6 *new_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6 *create_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6_init();

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpLingTokensregexSequenceMatchResult)

EduStanfordNlpLingTokensregexSequenceMatchResult_GroupToIntervalFunc *EduStanfordNlpLingTokensregexSequenceMatchResult_TO_INTERVAL;
id<JavaUtilComparator> EduStanfordNlpLingTokensregexSequenceMatchResult_PRIORITY_COMPARATOR;
id<JavaUtilComparator> EduStanfordNlpLingTokensregexSequenceMatchResult_SCORE_COMPARATOR;
id<JavaUtilComparator> EduStanfordNlpLingTokensregexSequenceMatchResult_ORDER_COMPARATOR;
id<JavaUtilComparator> EduStanfordNlpLingTokensregexSequenceMatchResult_LENGTH_COMPARATOR;
id<JavaUtilComparator> EduStanfordNlpLingTokensregexSequenceMatchResult_OFFSET_COMPARATOR;
id<JavaUtilComparator> EduStanfordNlpLingTokensregexSequenceMatchResult_PRIORITY_SCORE_LENGTH_ORDER_OFFSET_COMPARATOR;
id<JavaUtilComparator> EduStanfordNlpLingTokensregexSequenceMatchResult_DEFAULT_COMPARATOR;
id<JavaUtilFunctionFunction> EduStanfordNlpLingTokensregexSequenceMatchResult_SCORER;

@implementation EduStanfordNlpLingTokensregexSequenceMatchResult

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "D", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x401, -1, -1, -1, 0, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexSequencePattern;", 0x401, -1, -1, -1, 1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x401, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilList;", 0x401, 2, 3, -1, 4, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexBasicSequenceMatchResult;", 0x401, -1, -1, -1, 5, -1, -1 },
    { NULL, "LJavaUtilList;", 0x401, 2, 6, -1, 7, -1, -1 },
    { NULL, "LNSString;", 0x401, 8, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 9, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 10, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x401, 11, 3, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x401, 12, 13, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x401, 12, 14, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x401, -1, -1, -1, 15, -1, -1 },
    { NULL, "LJavaUtilList;", 0x401, 16, 3, -1, 17, -1, -1 },
    { NULL, "LJavaUtilList;", 0x401, 16, 6, -1, 18, -1, -1 },
    { NULL, "LNSObject;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x401, 19, 3, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x401, 19, 6, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexSequenceMatchResult_MatchedGroupInfo;", 0x401, -1, -1, -1, 20, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexSequenceMatchResult_MatchedGroupInfo;", 0x401, 21, 3, -1, 22, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexSequenceMatchResult_MatchedGroupInfo;", 0x401, 21, 6, -1, 23, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(score);
  methods[1].selector = @selector(priority);
  methods[2].selector = @selector(elements);
  methods[3].selector = @selector(pattern);
  methods[4].selector = @selector(groupNodes);
  methods[5].selector = @selector(groupNodesWithInt:);
  methods[6].selector = @selector(toBasicSequenceMatchResult);
  methods[7].selector = @selector(groupNodesWithNSString:);
  methods[8].selector = @selector(groupWithNSString:);
  methods[9].selector = @selector(startWithNSString:);
  methods[10].selector = @selector(endWithNSString:);
  methods[11].selector = @selector(getOrder);
  methods[12].selector = @selector(nodeMatchResultWithInt:);
  methods[13].selector = @selector(groupMatchResultWithInt:withInt:);
  methods[14].selector = @selector(groupMatchResultWithNSString:withInt:);
  methods[15].selector = @selector(groupMatchResults);
  methods[16].selector = @selector(groupMatchResultsWithInt:);
  methods[17].selector = @selector(groupMatchResultsWithNSString:);
  methods[18].selector = @selector(groupValue);
  methods[19].selector = @selector(groupValueWithInt:);
  methods[20].selector = @selector(groupValueWithNSString:);
  methods[21].selector = @selector(groupInfo);
  methods[22].selector = @selector(groupInfoWithInt:);
  methods[23].selector = @selector(groupInfoWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "GROUP_BEFORE_MATCH", "I", .constantValue.asInt = EduStanfordNlpLingTokensregexSequenceMatchResult_GROUP_BEFORE_MATCH, 0x19, -1, -1, -1, -1 },
    { "GROUP_AFTER_MATCH", "I", .constantValue.asInt = EduStanfordNlpLingTokensregexSequenceMatchResult_GROUP_AFTER_MATCH, 0x19, -1, -1, -1, -1 },
    { "TO_INTERVAL", "LEduStanfordNlpLingTokensregexSequenceMatchResult_GroupToIntervalFunc;", .constantValue.asLong = 0, 0x19, -1, 24, -1, -1 },
    { "PRIORITY_COMPARATOR", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x19, -1, 25, 26, -1 },
    { "SCORE_COMPARATOR", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x19, -1, 27, 26, -1 },
    { "ORDER_COMPARATOR", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x19, -1, 28, 26, -1 },
    { "LENGTH_COMPARATOR", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x19, -1, 29, 26, -1 },
    { "OFFSET_COMPARATOR", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x19, -1, 30, 26, -1 },
    { "PRIORITY_SCORE_LENGTH_ORDER_OFFSET_COMPARATOR", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x19, -1, 31, 26, -1 },
    { "DEFAULT_COMPARATOR", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x19, -1, 32, 33, -1 },
    { "SCORER", "LJavaUtilFunctionFunction;", .constantValue.asLong = 0, 0x19, -1, 34, 35, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/List<+TT;>;", "()Ledu/stanford/nlp/ling/tokensregex/SequencePattern<TT;>;", "groupNodes", "I", "(I)Ljava/util/List<+TT;>;", "()Ledu/stanford/nlp/ling/tokensregex/BasicSequenceMatchResult<TT;>;", "LNSString;", "(Ljava/lang/String;)Ljava/util/List<+TT;>;", "group", "start", "end", "nodeMatchResult", "groupMatchResult", "II", "LNSString;I", "()Ljava/util/List<Ljava/lang/Object;>;", "groupMatchResults", "(I)Ljava/util/List<Ljava/lang/Object;>;", "(Ljava/lang/String;)Ljava/util/List<Ljava/lang/Object;>;", "groupValue", "()Ledu/stanford/nlp/ling/tokensregex/SequenceMatchResult$MatchedGroupInfo<TT;>;", "groupInfo", "(I)Ledu/stanford/nlp/ling/tokensregex/SequenceMatchResult$MatchedGroupInfo<TT;>;", "(Ljava/lang/String;)Ledu/stanford/nlp/ling/tokensregex/SequenceMatchResult$MatchedGroupInfo<TT;>;", &EduStanfordNlpLingTokensregexSequenceMatchResult_TO_INTERVAL, &EduStanfordNlpLingTokensregexSequenceMatchResult_PRIORITY_COMPARATOR, "Ljava/util/Comparator<Ljava/util/regex/MatchResult;>;", &EduStanfordNlpLingTokensregexSequenceMatchResult_SCORE_COMPARATOR, &EduStanfordNlpLingTokensregexSequenceMatchResult_ORDER_COMPARATOR, &EduStanfordNlpLingTokensregexSequenceMatchResult_LENGTH_COMPARATOR, &EduStanfordNlpLingTokensregexSequenceMatchResult_OFFSET_COMPARATOR, &EduStanfordNlpLingTokensregexSequenceMatchResult_PRIORITY_SCORE_LENGTH_ORDER_OFFSET_COMPARATOR, &EduStanfordNlpLingTokensregexSequenceMatchResult_DEFAULT_COMPARATOR, "Ljava/util/Comparator<-Ljava/util/regex/MatchResult;>;", &EduStanfordNlpLingTokensregexSequenceMatchResult_SCORER, "Ljava/util/function/Function<Ljava/util/regex/MatchResult;Ljava/lang/Double;>;", "LEduStanfordNlpLingTokensregexSequenceMatchResult_GroupToIntervalFunc;LEduStanfordNlpLingTokensregexSequenceMatchResult_MatchedGroupInfo;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/regex/MatchResult;Ledu/stanford/nlp/util/HasInterval<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexSequenceMatchResult = { "SequenceMatchResult", "edu.stanford.nlp.ling.tokensregex", ptrTable, methods, fields, 7, 0x609, 24, 11, -1, 36, -1, 37, -1 };
  return &_EduStanfordNlpLingTokensregexSequenceMatchResult;
}

+ (void)initialize {
  if (self == [EduStanfordNlpLingTokensregexSequenceMatchResult class]) {
    EduStanfordNlpLingTokensregexSequenceMatchResult_TO_INTERVAL = new_EduStanfordNlpLingTokensregexSequenceMatchResult_GroupToIntervalFunc_initWithInt_(0);
    EduStanfordNlpLingTokensregexSequenceMatchResult_PRIORITY_COMPARATOR = JreLoadStatic(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1, instance);
    EduStanfordNlpLingTokensregexSequenceMatchResult_SCORE_COMPARATOR = JreLoadStatic(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2, instance);
    EduStanfordNlpLingTokensregexSequenceMatchResult_ORDER_COMPARATOR = JreLoadStatic(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3, instance);
    EduStanfordNlpLingTokensregexSequenceMatchResult_LENGTH_COMPARATOR = JreLoadStatic(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4, instance);
    EduStanfordNlpLingTokensregexSequenceMatchResult_OFFSET_COMPARATOR = JreLoadStatic(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5, instance);
    EduStanfordNlpLingTokensregexSequenceMatchResult_PRIORITY_SCORE_LENGTH_ORDER_OFFSET_COMPARATOR = EduStanfordNlpUtilComparators_chainWithJavaUtilComparatorArray_([IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpLingTokensregexSequenceMatchResult_PRIORITY_COMPARATOR, EduStanfordNlpLingTokensregexSequenceMatchResult_SCORE_COMPARATOR, EduStanfordNlpLingTokensregexSequenceMatchResult_LENGTH_COMPARATOR, EduStanfordNlpLingTokensregexSequenceMatchResult_ORDER_COMPARATOR, EduStanfordNlpLingTokensregexSequenceMatchResult_OFFSET_COMPARATOR } count:5 type:JavaUtilComparator_class_()]);
    EduStanfordNlpLingTokensregexSequenceMatchResult_DEFAULT_COMPARATOR = EduStanfordNlpLingTokensregexSequenceMatchResult_PRIORITY_SCORE_LENGTH_ORDER_OFFSET_COMPARATOR;
    EduStanfordNlpLingTokensregexSequenceMatchResult_SCORER = JreLoadStatic(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6, instance);
    J2OBJC_SET_INITIALIZED(EduStanfordNlpLingTokensregexSequenceMatchResult)
  }
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexSequenceMatchResult)

@implementation EduStanfordNlpLingTokensregexSequenceMatchResult_GroupToIntervalFunc

- (instancetype)initWithInt:(jint)group {
  EduStanfordNlpLingTokensregexSequenceMatchResult_GroupToIntervalFunc_initWithInt_(self, group);
  return self;
}

- (EduStanfordNlpUtilInterval *)applyWithId:(id<JavaUtilRegexMatchResult>)inArg {
  return EduStanfordNlpUtilInterval_toIntervalWithJavaLangComparable_withJavaLangComparable_withInt_(JavaLangInteger_valueOfWithInt_([((id<JavaUtilRegexMatchResult>) nil_chk(inArg)) startWithInt:group_]), JavaLangInteger_valueOfWithInt_([inArg endWithInt:group_]), EduStanfordNlpUtilInterval_INTERVAL_OPEN_END);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpUtilInterval;", 0x1, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(applyWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "group_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "apply", "LJavaUtilRegexMatchResult;", "(TMR;)Ledu/stanford/nlp/util/Interval<Ljava/lang/Integer;>;", "LEduStanfordNlpLingTokensregexSequenceMatchResult;", "<MR::Ljava/util/regex/MatchResult;>Ljava/lang/Object;Ljava/util/function/Function<TMR;Ledu/stanford/nlp/util/Interval<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexSequenceMatchResult_GroupToIntervalFunc = { "GroupToIntervalFunc", "edu.stanford.nlp.ling.tokensregex", ptrTable, methods, fields, 7, 0x9, 2, 1, 4, -1, -1, 5, -1 };
  return &_EduStanfordNlpLingTokensregexSequenceMatchResult_GroupToIntervalFunc;
}

@end

void EduStanfordNlpLingTokensregexSequenceMatchResult_GroupToIntervalFunc_initWithInt_(EduStanfordNlpLingTokensregexSequenceMatchResult_GroupToIntervalFunc *self, jint group) {
  NSObject_init(self);
  self->group_ = group;
}

EduStanfordNlpLingTokensregexSequenceMatchResult_GroupToIntervalFunc *new_EduStanfordNlpLingTokensregexSequenceMatchResult_GroupToIntervalFunc_initWithInt_(jint group) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexSequenceMatchResult_GroupToIntervalFunc, initWithInt_, group)
}

EduStanfordNlpLingTokensregexSequenceMatchResult_GroupToIntervalFunc *create_EduStanfordNlpLingTokensregexSequenceMatchResult_GroupToIntervalFunc_initWithInt_(jint group) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexSequenceMatchResult_GroupToIntervalFunc, initWithInt_, group)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexSequenceMatchResult_GroupToIntervalFunc)

@implementation EduStanfordNlpLingTokensregexSequenceMatchResult_MatchedGroupInfo

- (instancetype)initWithNSString:(NSString *)text
                withJavaUtilList:(id<JavaUtilList>)nodes
                withJavaUtilList:(id<JavaUtilList>)matchResults
                          withId:(id)value
                    withNSString:(NSString *)varName {
  EduStanfordNlpLingTokensregexSequenceMatchResult_MatchedGroupInfo_initWithNSString_withJavaUtilList_withJavaUtilList_withId_withNSString_(self, text, nodes, matchResults, value, varName);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withJavaUtilList:withJavaUtilList:withId:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "text_", "LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "nodes_", "LJavaUtilList;", .constantValue.asLong = 0, 0x11, -1, -1, 2, -1 },
    { "matchResults_", "LJavaUtilList;", .constantValue.asLong = 0, 0x11, -1, -1, 3, -1 },
    { "value_", "LNSObject;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "varName_", "LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LJavaUtilList;LJavaUtilList;LNSObject;LNSString;", "(Ljava/lang/String;Ljava/util/List<+TT;>;Ljava/util/List<Ljava/lang/Object;>;Ljava/lang/Object;Ljava/lang/String;)V", "Ljava/util/List<+TT;>;", "Ljava/util/List<Ljava/lang/Object;>;", "LEduStanfordNlpLingTokensregexSequenceMatchResult;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexSequenceMatchResult_MatchedGroupInfo = { "MatchedGroupInfo", "edu.stanford.nlp.ling.tokensregex", ptrTable, methods, fields, 7, 0x19, 1, 5, 4, -1, -1, 5, -1 };
  return &_EduStanfordNlpLingTokensregexSequenceMatchResult_MatchedGroupInfo;
}

@end

void EduStanfordNlpLingTokensregexSequenceMatchResult_MatchedGroupInfo_initWithNSString_withJavaUtilList_withJavaUtilList_withId_withNSString_(EduStanfordNlpLingTokensregexSequenceMatchResult_MatchedGroupInfo *self, NSString *text, id<JavaUtilList> nodes, id<JavaUtilList> matchResults, id value, NSString *varName) {
  NSObject_init(self);
  self->text_ = text;
  self->nodes_ = nodes;
  self->matchResults_ = matchResults;
  self->value_ = value;
  self->varName_ = varName;
}

EduStanfordNlpLingTokensregexSequenceMatchResult_MatchedGroupInfo *new_EduStanfordNlpLingTokensregexSequenceMatchResult_MatchedGroupInfo_initWithNSString_withJavaUtilList_withJavaUtilList_withId_withNSString_(NSString *text, id<JavaUtilList> nodes, id<JavaUtilList> matchResults, id value, NSString *varName) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexSequenceMatchResult_MatchedGroupInfo, initWithNSString_withJavaUtilList_withJavaUtilList_withId_withNSString_, text, nodes, matchResults, value, varName)
}

EduStanfordNlpLingTokensregexSequenceMatchResult_MatchedGroupInfo *create_EduStanfordNlpLingTokensregexSequenceMatchResult_MatchedGroupInfo_initWithNSString_withJavaUtilList_withJavaUtilList_withId_withNSString_(NSString *text, id<JavaUtilList> nodes, id<JavaUtilList> matchResults, id value, NSString *varName) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexSequenceMatchResult_MatchedGroupInfo, initWithNSString_withJavaUtilList_withJavaUtilList_withId_withNSString_, text, nodes, matchResults, value, varName)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexSequenceMatchResult_MatchedGroupInfo)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1)

@implementation EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1

- (jint)compareWithId:(id<JavaUtilRegexMatchResult>)e1
               withId:(id<JavaUtilRegexMatchResult>)e2 {
  jdouble s1 = 0;
  if ([EduStanfordNlpLingTokensregexSequenceMatchResult_class_() isInstance:e1]) {
    s1 = [((id<EduStanfordNlpLingTokensregexSequenceMatchResult>) nil_chk(((id<EduStanfordNlpLingTokensregexSequenceMatchResult>) cast_check(e1, EduStanfordNlpLingTokensregexSequenceMatchResult_class_())))) priority];
  }
  jdouble s2 = 0;
  if ([EduStanfordNlpLingTokensregexSequenceMatchResult_class_() isInstance:e2]) {
    s2 = [((id<EduStanfordNlpLingTokensregexSequenceMatchResult>) nil_chk(((id<EduStanfordNlpLingTokensregexSequenceMatchResult>) cast_check(e2, EduStanfordNlpLingTokensregexSequenceMatchResult_class_())))) priority];
  }
  if (s1 == s2) {
    return 0;
  }
  else {
    return (s1 > s2) ? -1 : 1;
  }
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1 class]) {
    EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1_instance = new_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1)
  }
}

@end

void EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1_init(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1 *self) {
  NSObject_init(self);
}

EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1 *new_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1, init)
}

EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1 *create_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$1, init)
}

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2)

@implementation EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2

- (jint)compareWithId:(id<JavaUtilRegexMatchResult>)e1
               withId:(id<JavaUtilRegexMatchResult>)e2 {
  jdouble s1 = 0;
  if ([EduStanfordNlpLingTokensregexSequenceMatchResult_class_() isInstance:e1]) {
    s1 = [((id<EduStanfordNlpLingTokensregexSequenceMatchResult>) nil_chk(((id<EduStanfordNlpLingTokensregexSequenceMatchResult>) cast_check(e1, EduStanfordNlpLingTokensregexSequenceMatchResult_class_())))) score];
  }
  jdouble s2 = 0;
  if ([EduStanfordNlpLingTokensregexSequenceMatchResult_class_() isInstance:e2]) {
    s2 = [((id<EduStanfordNlpLingTokensregexSequenceMatchResult>) nil_chk(((id<EduStanfordNlpLingTokensregexSequenceMatchResult>) cast_check(e2, EduStanfordNlpLingTokensregexSequenceMatchResult_class_())))) score];
  }
  if (s1 == s2) {
    return 0;
  }
  else {
    return (s1 > s2) ? -1 : 1;
  }
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2 class]) {
    EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2_instance = new_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2)
  }
}

@end

void EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2_init(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2 *self) {
  NSObject_init(self);
}

EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2 *new_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2, init)
}

EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2 *create_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$2, init)
}

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3)

@implementation EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3

- (jint)compareWithId:(id<JavaUtilRegexMatchResult>)e1
               withId:(id<JavaUtilRegexMatchResult>)e2 {
  jint o1 = 0;
  if ([EduStanfordNlpLingTokensregexSequenceMatchResult_class_() isInstance:e1]) {
    o1 = [((id<EduStanfordNlpLingTokensregexSequenceMatchResult>) nil_chk(((id<EduStanfordNlpLingTokensregexSequenceMatchResult>) cast_check(e1, EduStanfordNlpLingTokensregexSequenceMatchResult_class_())))) getOrder];
  }
  jint o2 = 0;
  if ([EduStanfordNlpLingTokensregexSequenceMatchResult_class_() isInstance:e2]) {
    o2 = [((id<EduStanfordNlpLingTokensregexSequenceMatchResult>) nil_chk(((id<EduStanfordNlpLingTokensregexSequenceMatchResult>) cast_check(e2, EduStanfordNlpLingTokensregexSequenceMatchResult_class_())))) getOrder];
  }
  if (o1 == o2) {
    return 0;
  }
  else {
    return (o1 < o2) ? -1 : 1;
  }
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3 class]) {
    EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3_instance = new_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3)
  }
}

@end

void EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3_init(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3 *self) {
  NSObject_init(self);
}

EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3 *new_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3, init)
}

EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3 *create_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$3, init)
}

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4)

@implementation EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4

- (jint)compareWithId:(id<JavaUtilRegexMatchResult>)e1
               withId:(id<JavaUtilRegexMatchResult>)e2 {
  jint len1 = [((id<JavaUtilRegexMatchResult>) nil_chk(e1)) end] - [e1 start];
  jint len2 = [((id<JavaUtilRegexMatchResult>) nil_chk(e2)) end] - [e2 start];
  if (len1 == len2) {
    return 0;
  }
  else {
    return (len1 > len2) ? -1 : 1;
  }
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4 class]) {
    EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4_instance = new_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4)
  }
}

@end

void EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4_init(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4 *self) {
  NSObject_init(self);
}

EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4 *new_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4, init)
}

EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4 *create_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$4, init)
}

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5)

@implementation EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5

- (jint)compareWithId:(id<JavaUtilRegexMatchResult>)e1
               withId:(id<JavaUtilRegexMatchResult>)e2 {
  if ([((id<JavaUtilRegexMatchResult>) nil_chk(e1)) start] == [((id<JavaUtilRegexMatchResult>) nil_chk(e2)) start]) {
    if ([e1 end] == [e2 end]) {
      return 0;
    }
    else {
      return ([e1 end] < [e2 end]) ? -1 : 1;
    }
  }
  else {
    return ([e1 start] < [e2 start]) ? -1 : 1;
  }
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5 class]) {
    EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5_instance = new_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5)
  }
}

@end

void EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5_init(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5 *self) {
  NSObject_init(self);
}

EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5 *new_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5, init)
}

EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5 *create_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$5, init)
}

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6)

@implementation EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6

- (id)applyWithId:(id<JavaUtilRegexMatchResult>)inArg {
  if ([EduStanfordNlpLingTokensregexSequenceMatchResult_class_() isInstance:inArg]) {
    return JavaLangDouble_valueOfWithDouble_([((id<EduStanfordNlpLingTokensregexSequenceMatchResult>) nil_chk(((id<EduStanfordNlpLingTokensregexSequenceMatchResult>) cast_check(inArg, EduStanfordNlpLingTokensregexSequenceMatchResult_class_())))) score]);
  }
  else return JavaLangDouble_valueOfWithDouble_(0.0);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6 class]) {
    EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6_instance = new_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6)
  }
}

@end

void EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6_init(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6 *self) {
  NSObject_init(self);
}

EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6 *new_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6, init)
}

EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6 *create_EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexSequenceMatchResult_$Lambda$6, init)
}
