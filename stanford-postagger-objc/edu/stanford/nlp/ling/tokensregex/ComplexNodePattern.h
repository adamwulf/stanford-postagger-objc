//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/tokensregex/ComplexNodePattern.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexComplexNodePattern")
#ifdef RESTRICT_EduStanfordNlpLingTokensregexComplexNodePattern
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexComplexNodePattern 0
#else
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexComplexNodePattern 1
#endif
#undef RESTRICT_EduStanfordNlpLingTokensregexComplexNodePattern
#ifdef INCLUDE_EduStanfordNlpLingTokensregexComplexNodePattern_StringInSetAnnotationPattern
#define INCLUDE_EduStanfordNlpLingTokensregexComplexNodePattern_AbstractStringAnnotationPattern 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationPattern
#define INCLUDE_EduStanfordNlpLingTokensregexComplexNodePattern_AbstractStringAnnotationPattern 1
#endif

#if !defined (EduStanfordNlpLingTokensregexComplexNodePattern_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexComplexNodePattern || defined(INCLUDE_EduStanfordNlpLingTokensregexComplexNodePattern))
#define EduStanfordNlpLingTokensregexComplexNodePattern_

#define RESTRICT_EduStanfordNlpLingTokensregexNodePattern 1
#define INCLUDE_EduStanfordNlpLingTokensregexNodePattern 1
#include "edu/stanford/nlp/ling/tokensregex/NodePattern.h"

@class EduStanfordNlpLingTokensregexEnv;
@class IOSObjectArray;
@protocol JavaUtilFunctionBiFunction;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilList;
@protocol JavaUtilMap;

@interface EduStanfordNlpLingTokensregexComplexNodePattern : EduStanfordNlpLingTokensregexNodePattern

#pragma mark Public

- (instancetype)initWithJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)getter
                                            withId:(id)key
      withEduStanfordNlpLingTokensregexNodePattern:(EduStanfordNlpLingTokensregexNodePattern *)pattern;

- (instancetype)initWithJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)getter
                                  withJavaUtilList:(id<JavaUtilList>)annotationPatterns;

- (instancetype)initWithJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)getter
                   withEduStanfordNlpUtilPairArray:(IOSObjectArray *)annotationPatterns;

- (void)addWithId:(id)c
withEduStanfordNlpLingTokensregexNodePattern:(EduStanfordNlpLingTokensregexNodePattern *)pattern;

- (id<JavaUtilList>)getAnnotationPatterns;

- (jboolean)matchWithId:(id)token;

- (id)matchWithResultWithId:(id)token;

+ (EduStanfordNlpLingTokensregexNodePattern *)newStringRegexPatternWithNSString:(NSString *)regex
                                                                        withInt:(jint)flags OBJC_METHOD_FAMILY_NONE;

- (NSString *)description;

+ (EduStanfordNlpLingTokensregexComplexNodePattern *)valueOfWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                 withJavaUtilMap:(id<JavaUtilMap>)attributes
                                                                  withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)getter
                                                                    withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)getKey;

#pragma mark Protected

- (jboolean)matchWithId:(id)token
        withJavaUtilMap:(id<JavaUtilMap>)matchResults;

- (void)populateWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                     withJavaUtilMap:(id<JavaUtilMap>)attributes
                        withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)getKey;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpLingTokensregexComplexNodePattern)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexComplexNodePattern_initWithJavaUtilFunctionBiFunction_withJavaUtilList_(EduStanfordNlpLingTokensregexComplexNodePattern *self, id<JavaUtilFunctionBiFunction> getter, id<JavaUtilList> annotationPatterns);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern *new_EduStanfordNlpLingTokensregexComplexNodePattern_initWithJavaUtilFunctionBiFunction_withJavaUtilList_(id<JavaUtilFunctionBiFunction> getter, id<JavaUtilList> annotationPatterns) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern *create_EduStanfordNlpLingTokensregexComplexNodePattern_initWithJavaUtilFunctionBiFunction_withJavaUtilList_(id<JavaUtilFunctionBiFunction> getter, id<JavaUtilList> annotationPatterns);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexComplexNodePattern_initWithJavaUtilFunctionBiFunction_withEduStanfordNlpUtilPairArray_(EduStanfordNlpLingTokensregexComplexNodePattern *self, id<JavaUtilFunctionBiFunction> getter, IOSObjectArray *annotationPatterns);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern *new_EduStanfordNlpLingTokensregexComplexNodePattern_initWithJavaUtilFunctionBiFunction_withEduStanfordNlpUtilPairArray_(id<JavaUtilFunctionBiFunction> getter, IOSObjectArray *annotationPatterns) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern *create_EduStanfordNlpLingTokensregexComplexNodePattern_initWithJavaUtilFunctionBiFunction_withEduStanfordNlpUtilPairArray_(id<JavaUtilFunctionBiFunction> getter, IOSObjectArray *annotationPatterns);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexComplexNodePattern_initWithJavaUtilFunctionBiFunction_withId_withEduStanfordNlpLingTokensregexNodePattern_(EduStanfordNlpLingTokensregexComplexNodePattern *self, id<JavaUtilFunctionBiFunction> getter, id key, EduStanfordNlpLingTokensregexNodePattern *pattern);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern *new_EduStanfordNlpLingTokensregexComplexNodePattern_initWithJavaUtilFunctionBiFunction_withId_withEduStanfordNlpLingTokensregexNodePattern_(id<JavaUtilFunctionBiFunction> getter, id key, EduStanfordNlpLingTokensregexNodePattern *pattern) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern *create_EduStanfordNlpLingTokensregexComplexNodePattern_initWithJavaUtilFunctionBiFunction_withId_withEduStanfordNlpLingTokensregexNodePattern_(id<JavaUtilFunctionBiFunction> getter, id key, EduStanfordNlpLingTokensregexNodePattern *pattern);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexNodePattern *EduStanfordNlpLingTokensregexComplexNodePattern_newStringRegexPatternWithNSString_withInt_(NSString *regex, jint flags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern *EduStanfordNlpLingTokensregexComplexNodePattern_valueOfWithEduStanfordNlpLingTokensregexEnv_withJavaUtilMap_withJavaUtilFunctionBiFunction_withJavaUtilFunctionFunction_(EduStanfordNlpLingTokensregexEnv *env, id<JavaUtilMap> attributes, id<JavaUtilFunctionBiFunction> getter, id<JavaUtilFunctionFunction> getKey);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexComplexNodePattern)

#endif

#if !defined (EduStanfordNlpLingTokensregexComplexNodePattern_NilAnnotationPattern_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexComplexNodePattern || defined(INCLUDE_EduStanfordNlpLingTokensregexComplexNodePattern_NilAnnotationPattern))
#define EduStanfordNlpLingTokensregexComplexNodePattern_NilAnnotationPattern_

#define RESTRICT_EduStanfordNlpLingTokensregexNodePattern 1
#define INCLUDE_EduStanfordNlpLingTokensregexNodePattern 1
#include "edu/stanford/nlp/ling/tokensregex/NodePattern.h"

@interface EduStanfordNlpLingTokensregexComplexNodePattern_NilAnnotationPattern : EduStanfordNlpLingTokensregexNodePattern

#pragma mark Public

- (instancetype)init;

- (jboolean)matchWithId:(id)obj;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexComplexNodePattern_NilAnnotationPattern)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexComplexNodePattern_NilAnnotationPattern_init(EduStanfordNlpLingTokensregexComplexNodePattern_NilAnnotationPattern *self);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_NilAnnotationPattern *new_EduStanfordNlpLingTokensregexComplexNodePattern_NilAnnotationPattern_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_NilAnnotationPattern *create_EduStanfordNlpLingTokensregexComplexNodePattern_NilAnnotationPattern_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexComplexNodePattern_NilAnnotationPattern)

#endif

#if !defined (EduStanfordNlpLingTokensregexComplexNodePattern_NotNilAnnotationPattern_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexComplexNodePattern || defined(INCLUDE_EduStanfordNlpLingTokensregexComplexNodePattern_NotNilAnnotationPattern))
#define EduStanfordNlpLingTokensregexComplexNodePattern_NotNilAnnotationPattern_

#define RESTRICT_EduStanfordNlpLingTokensregexNodePattern 1
#define INCLUDE_EduStanfordNlpLingTokensregexNodePattern 1
#include "edu/stanford/nlp/ling/tokensregex/NodePattern.h"

@interface EduStanfordNlpLingTokensregexComplexNodePattern_NotNilAnnotationPattern : EduStanfordNlpLingTokensregexNodePattern

#pragma mark Public

- (instancetype)init;

- (jboolean)matchWithId:(id)obj;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexComplexNodePattern_NotNilAnnotationPattern)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexComplexNodePattern_NotNilAnnotationPattern_init(EduStanfordNlpLingTokensregexComplexNodePattern_NotNilAnnotationPattern *self);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_NotNilAnnotationPattern *new_EduStanfordNlpLingTokensregexComplexNodePattern_NotNilAnnotationPattern_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_NotNilAnnotationPattern *create_EduStanfordNlpLingTokensregexComplexNodePattern_NotNilAnnotationPattern_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexComplexNodePattern_NotNilAnnotationPattern)

#endif

#if !defined (EduStanfordNlpLingTokensregexComplexNodePattern_SequenceRegexPattern_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexComplexNodePattern || defined(INCLUDE_EduStanfordNlpLingTokensregexComplexNodePattern_SequenceRegexPattern))
#define EduStanfordNlpLingTokensregexComplexNodePattern_SequenceRegexPattern_

#define RESTRICT_EduStanfordNlpLingTokensregexNodePattern 1
#define INCLUDE_EduStanfordNlpLingTokensregexNodePattern 1
#include "edu/stanford/nlp/ling/tokensregex/NodePattern.h"

@class EduStanfordNlpLingTokensregexSequenceMatcher;
@class EduStanfordNlpLingTokensregexSequencePattern;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexComplexNodePattern_SequenceRegexPattern : EduStanfordNlpLingTokensregexNodePattern {
 @public
  EduStanfordNlpLingTokensregexSequencePattern *pattern_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexSequencePattern:(EduStanfordNlpLingTokensregexSequencePattern *)pattern;

- (EduStanfordNlpLingTokensregexSequencePattern *)getPattern;

- (jboolean)matchWithId:(id<JavaUtilList>)list;

- (EduStanfordNlpLingTokensregexSequenceMatcher *)matcherWithJavaUtilList:(id<JavaUtilList>)list;

- (id)matchWithResultWithId:(id<JavaUtilList>)list;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexComplexNodePattern_SequenceRegexPattern)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexComplexNodePattern_SequenceRegexPattern, pattern_, EduStanfordNlpLingTokensregexSequencePattern *)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexComplexNodePattern_SequenceRegexPattern_initWithEduStanfordNlpLingTokensregexSequencePattern_(EduStanfordNlpLingTokensregexComplexNodePattern_SequenceRegexPattern *self, EduStanfordNlpLingTokensregexSequencePattern *pattern);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_SequenceRegexPattern *new_EduStanfordNlpLingTokensregexComplexNodePattern_SequenceRegexPattern_initWithEduStanfordNlpLingTokensregexSequencePattern_(EduStanfordNlpLingTokensregexSequencePattern *pattern) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_SequenceRegexPattern *create_EduStanfordNlpLingTokensregexComplexNodePattern_SequenceRegexPattern_initWithEduStanfordNlpLingTokensregexSequencePattern_(EduStanfordNlpLingTokensregexSequencePattern *pattern);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexComplexNodePattern_SequenceRegexPattern)

#endif

#if !defined (EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationRegexPattern_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexComplexNodePattern || defined(INCLUDE_EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationRegexPattern))
#define EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationRegexPattern_

#define RESTRICT_EduStanfordNlpLingTokensregexNodePattern 1
#define INCLUDE_EduStanfordNlpLingTokensregexNodePattern 1
#include "edu/stanford/nlp/ling/tokensregex/NodePattern.h"

@class JavaUtilRegexMatcher;
@class JavaUtilRegexPattern;

@interface EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationRegexPattern : EduStanfordNlpLingTokensregexNodePattern {
 @public
  JavaUtilRegexPattern *pattern_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)pattern;

- (instancetype)initWithNSString:(NSString *)regex
                         withInt:(jint)flags;

- (JavaUtilRegexPattern *)getPattern;

- (jboolean)matchWithId:(NSString *)str;

- (JavaUtilRegexMatcher *)matcherWithNSString:(NSString *)str;

- (id)matchWithResultWithId:(NSString *)str;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationRegexPattern)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationRegexPattern, pattern_, JavaUtilRegexPattern *)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationRegexPattern_initWithJavaUtilRegexPattern_(EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationRegexPattern *self, JavaUtilRegexPattern *pattern);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationRegexPattern *new_EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationRegexPattern_initWithJavaUtilRegexPattern_(JavaUtilRegexPattern *pattern) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationRegexPattern *create_EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationRegexPattern_initWithJavaUtilRegexPattern_(JavaUtilRegexPattern *pattern);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationRegexPattern_initWithNSString_withInt_(EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationRegexPattern *self, NSString *regex, jint flags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationRegexPattern *new_EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationRegexPattern_initWithNSString_withInt_(NSString *regex, jint flags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationRegexPattern *create_EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationRegexPattern_initWithNSString_withInt_(NSString *regex, jint flags);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationRegexPattern)

#endif

#if !defined (EduStanfordNlpLingTokensregexComplexNodePattern_AbstractStringAnnotationPattern_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexComplexNodePattern || defined(INCLUDE_EduStanfordNlpLingTokensregexComplexNodePattern_AbstractStringAnnotationPattern))
#define EduStanfordNlpLingTokensregexComplexNodePattern_AbstractStringAnnotationPattern_

#define RESTRICT_EduStanfordNlpLingTokensregexNodePattern 1
#define INCLUDE_EduStanfordNlpLingTokensregexNodePattern 1
#include "edu/stanford/nlp/ling/tokensregex/NodePattern.h"

@interface EduStanfordNlpLingTokensregexComplexNodePattern_AbstractStringAnnotationPattern : EduStanfordNlpLingTokensregexNodePattern {
 @public
  jint flags_;
}

#pragma mark Public

- (instancetype)init;

- (NSString *)getNormalizedWithNSString:(NSString *)str;

- (jboolean)ignoreCase;

- (jboolean)normalize;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexComplexNodePattern_AbstractStringAnnotationPattern)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexComplexNodePattern_AbstractStringAnnotationPattern_init(EduStanfordNlpLingTokensregexComplexNodePattern_AbstractStringAnnotationPattern *self);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexComplexNodePattern_AbstractStringAnnotationPattern)

#endif

#if !defined (EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationPattern_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexComplexNodePattern || defined(INCLUDE_EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationPattern))
#define EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationPattern_

@interface EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationPattern : EduStanfordNlpLingTokensregexComplexNodePattern_AbstractStringAnnotationPattern {
 @public
  NSString *target_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)str;

- (instancetype)initWithNSString:(NSString *)str
                         withInt:(jint)flags;

- (NSString *)getString;

- (jboolean)matchWithId:(NSString *)str;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationPattern)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationPattern, target_, NSString *)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationPattern_initWithNSString_withInt_(EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationPattern *self, NSString *str, jint flags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationPattern *new_EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationPattern_initWithNSString_withInt_(NSString *str, jint flags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationPattern *create_EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationPattern_initWithNSString_withInt_(NSString *str, jint flags);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationPattern_initWithNSString_(EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationPattern *self, NSString *str);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationPattern *new_EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationPattern_initWithNSString_(NSString *str) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationPattern *create_EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationPattern_initWithNSString_(NSString *str);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexComplexNodePattern_StringAnnotationPattern)

#endif

#if !defined (EduStanfordNlpLingTokensregexComplexNodePattern_StringInSetAnnotationPattern_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexComplexNodePattern || defined(INCLUDE_EduStanfordNlpLingTokensregexComplexNodePattern_StringInSetAnnotationPattern))
#define EduStanfordNlpLingTokensregexComplexNodePattern_StringInSetAnnotationPattern_

@protocol JavaUtilSet;

@interface EduStanfordNlpLingTokensregexComplexNodePattern_StringInSetAnnotationPattern : EduStanfordNlpLingTokensregexComplexNodePattern_AbstractStringAnnotationPattern {
 @public
  id<JavaUtilSet> targets_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilSet:(id<JavaUtilSet>)targets;

- (instancetype)initWithJavaUtilSet:(id<JavaUtilSet>)targets
                            withInt:(jint)flags;

- (id<JavaUtilSet>)getTargets;

- (jboolean)matchWithId:(NSString *)str;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexComplexNodePattern_StringInSetAnnotationPattern)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexComplexNodePattern_StringInSetAnnotationPattern, targets_, id<JavaUtilSet>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexComplexNodePattern_StringInSetAnnotationPattern_initWithJavaUtilSet_withInt_(EduStanfordNlpLingTokensregexComplexNodePattern_StringInSetAnnotationPattern *self, id<JavaUtilSet> targets, jint flags);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_StringInSetAnnotationPattern *new_EduStanfordNlpLingTokensregexComplexNodePattern_StringInSetAnnotationPattern_initWithJavaUtilSet_withInt_(id<JavaUtilSet> targets, jint flags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_StringInSetAnnotationPattern *create_EduStanfordNlpLingTokensregexComplexNodePattern_StringInSetAnnotationPattern_initWithJavaUtilSet_withInt_(id<JavaUtilSet> targets, jint flags);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexComplexNodePattern_StringInSetAnnotationPattern_initWithJavaUtilSet_(EduStanfordNlpLingTokensregexComplexNodePattern_StringInSetAnnotationPattern *self, id<JavaUtilSet> targets);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_StringInSetAnnotationPattern *new_EduStanfordNlpLingTokensregexComplexNodePattern_StringInSetAnnotationPattern_initWithJavaUtilSet_(id<JavaUtilSet> targets) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_StringInSetAnnotationPattern *create_EduStanfordNlpLingTokensregexComplexNodePattern_StringInSetAnnotationPattern_initWithJavaUtilSet_(id<JavaUtilSet> targets);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexComplexNodePattern_StringInSetAnnotationPattern)

#endif

#if !defined (EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexComplexNodePattern || defined(INCLUDE_EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern))
#define EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_

#define RESTRICT_EduStanfordNlpLingTokensregexNodePattern 1
#define INCLUDE_EduStanfordNlpLingTokensregexNodePattern 1
#include "edu/stanford/nlp/ling/tokensregex/NodePattern.h"

@class EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType;

@interface EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern : EduStanfordNlpLingTokensregexNodePattern {
 @public
  EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType *cmpType_;
  jdouble value_;
}

#pragma mark Public

- (instancetype)initWithDouble:(jdouble)value
withEduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType:(EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType *)cmpType;

- (jboolean)matchWithNSNumber:(NSNumber *)number;

- (jboolean)matchWithId:(id)node;

- (jboolean)matchWithNSString:(NSString *)str;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern, cmpType_, EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType *)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_initWithDouble_withEduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_(EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern *self, jdouble value, EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType *cmpType);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern *new_EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_initWithDouble_withEduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_(jdouble value, EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType *cmpType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern *create_EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_initWithDouble_withEduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_(jdouble value, EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType *cmpType);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern)

#endif

#if !defined (EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexComplexNodePattern || defined(INCLUDE_EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType))
#define EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_Enum) {
  EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_Enum_IS_NUM = 0,
  EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_Enum_EQ = 1,
  EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_Enum_NE = 2,
  EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_Enum_GT = 3,
  EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_Enum_GE = 4,
  EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_Enum_LT = 5,
  EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_Enum_LE = 6,
};

@interface EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType : JavaLangEnum < NSCopying >

#pragma mark Public

+ (EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (jboolean)acceptWithDouble:(jdouble)v1
                  withDouble:(jdouble)v2;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType *EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_values_[];

inline EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType *EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_get_IS_NUM();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType, IS_NUM)

inline EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType *EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_get_EQ();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType, EQ)

inline EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType *EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_get_NE();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType, NE)

inline EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType *EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_get_GT();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType, GT)

inline EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType *EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_get_GE();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType, GE)

inline EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType *EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_get_LT();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType, LT)

inline EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType *EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_get_LE();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType, LE)

FOUNDATION_EXPORT IOSObjectArray *EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_values();

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType *EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType *EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexComplexNodePattern_NumericAnnotationPattern_CmpType)

#endif

#if !defined (EduStanfordNlpLingTokensregexComplexNodePattern_AttributesEqualMatchChecker_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexComplexNodePattern || defined(INCLUDE_EduStanfordNlpLingTokensregexComplexNodePattern_AttributesEqualMatchChecker))
#define EduStanfordNlpLingTokensregexComplexNodePattern_AttributesEqualMatchChecker_

#define RESTRICT_EduStanfordNlpLingTokensregexSequencePattern 1
#define INCLUDE_EduStanfordNlpLingTokensregexSequencePattern_NodesMatchChecker 1
#include "edu/stanford/nlp/ling/tokensregex/SequencePattern.h"

@class IOSObjectArray;
@protocol JavaUtilCollection;
@protocol JavaUtilMap;

@interface EduStanfordNlpLingTokensregexComplexNodePattern_AttributesEqualMatchChecker : NSObject < EduStanfordNlpLingTokensregexSequencePattern_NodesMatchChecker > {
 @public
  id<JavaUtilCollection> keys_;
}

#pragma mark Public

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)keys;

- (jboolean)matchesWithId:(id<JavaUtilMap>)o1
                   withId:(id<JavaUtilMap>)o2;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexComplexNodePattern_AttributesEqualMatchChecker)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexComplexNodePattern_AttributesEqualMatchChecker, keys_, id<JavaUtilCollection>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexComplexNodePattern_AttributesEqualMatchChecker_initWithNSObjectArray_(EduStanfordNlpLingTokensregexComplexNodePattern_AttributesEqualMatchChecker *self, IOSObjectArray *keys);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_AttributesEqualMatchChecker *new_EduStanfordNlpLingTokensregexComplexNodePattern_AttributesEqualMatchChecker_initWithNSObjectArray_(IOSObjectArray *keys) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_AttributesEqualMatchChecker *create_EduStanfordNlpLingTokensregexComplexNodePattern_AttributesEqualMatchChecker_initWithNSObjectArray_(IOSObjectArray *keys);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexComplexNodePattern_AttributesEqualMatchChecker)

#endif

#if !defined (EduStanfordNlpLingTokensregexComplexNodePattern_IntegerAnnotationPattern_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexComplexNodePattern || defined(INCLUDE_EduStanfordNlpLingTokensregexComplexNodePattern_IntegerAnnotationPattern))
#define EduStanfordNlpLingTokensregexComplexNodePattern_IntegerAnnotationPattern_

#define RESTRICT_EduStanfordNlpLingTokensregexNodePattern 1
#define INCLUDE_EduStanfordNlpLingTokensregexNodePattern 1
#include "edu/stanford/nlp/ling/tokensregex/NodePattern.h"

@class JavaLangInteger;

@interface EduStanfordNlpLingTokensregexComplexNodePattern_IntegerAnnotationPattern : EduStanfordNlpLingTokensregexNodePattern {
 @public
  jint value_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)v;

- (jint)getValue;

- (jboolean)matchWithId:(JavaLangInteger *)node;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexComplexNodePattern_IntegerAnnotationPattern)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexComplexNodePattern_IntegerAnnotationPattern_initWithInt_(EduStanfordNlpLingTokensregexComplexNodePattern_IntegerAnnotationPattern *self, jint v);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_IntegerAnnotationPattern *new_EduStanfordNlpLingTokensregexComplexNodePattern_IntegerAnnotationPattern_initWithInt_(jint v) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexComplexNodePattern_IntegerAnnotationPattern *create_EduStanfordNlpLingTokensregexComplexNodePattern_IntegerAnnotationPattern_initWithInt_(jint v);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexComplexNodePattern_IntegerAnnotationPattern)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexComplexNodePattern")
