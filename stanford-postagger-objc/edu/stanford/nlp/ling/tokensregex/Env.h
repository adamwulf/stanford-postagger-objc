//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/tokensregex/Env.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexEnv")
#ifdef RESTRICT_EduStanfordNlpLingTokensregexEnv
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexEnv 0
#else
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexEnv 1
#endif
#undef RESTRICT_EduStanfordNlpLingTokensregexEnv

#if !defined (EduStanfordNlpLingTokensregexEnv_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexEnv || defined(INCLUDE_EduStanfordNlpLingTokensregexEnv))
#define EduStanfordNlpLingTokensregexEnv_

@class EduStanfordNlpLingTokensregexNodePattern;
@class EduStanfordNlpLingTokensregexSequencePattern;
@class EduStanfordNlpLingTokensregexSequencePattern_PatternExpr;
@class EduStanfordNlpPipelineCoreMapAggregator;
@class IOSClass;
@class IOSObjectArray;
@class JavaLangThreadLocal;
@class JavaUtilRegexPattern;
@protocol EduStanfordNlpLingTokensregexSequencePattern_Parser;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilList;
@protocol JavaUtilMap;

@interface EduStanfordNlpLingTokensregexEnv : NSObject {
 @public
  id<EduStanfordNlpLingTokensregexSequencePattern_Parser> parser_;
  id<JavaUtilMap> variables_;
  JavaLangThreadLocal *threadLocalVariables_;
  id<JavaUtilMap> stringRegexVariables_;
  id<JavaUtilMap> defaults_;
  jint defaultStringPatternFlags_;
  jint defaultStringMatchFlags_;
  IOSClass *sequenceMatchResultExtractor_;
  IOSClass *stringMatchResultExtractor_;
  IOSClass *defaultTokensAnnotationKey_;
  IOSClass *defaultTextAnnotationKey_;
  id<JavaUtilList> defaultTokensResultAnnotationKey_;
  id<JavaUtilList> defaultResultAnnotationKey_;
  IOSClass *defaultNestedResultsAnnotationKey_;
  id<JavaUtilMap> defaultTokensAggregators_;
  jboolean aggregateToTokens_;
  id<JavaUtilFunctionFunction> defaultResultsAnnotationExtractor_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexSequencePattern_Parser:(id<EduStanfordNlpLingTokensregexSequencePattern_Parser>)p;

- (void)bindWithNSString:(NSString *)name
                  withId:(id)obj;

- (void)bindWithNSString:(NSString *)name
withEduStanfordNlpLingTokensregexSequencePattern:(EduStanfordNlpLingTokensregexSequencePattern *)pattern;

- (void)bindStringRegexWithNSString:(NSString *)var
                       withNSString:(NSString *)regex;

- (void)clearVariables;

- (NSString *)expandStringRegexWithNSString:(NSString *)regex;

- (id)getWithNSString:(NSString *)name;

- (IOSClass *)getDefaultNestedResultsAnnotationKey;

- (id<JavaUtilList>)getDefaultResultAnnotationKey;

- (id<JavaUtilFunctionFunction>)getDefaultResultsAnnotationExtractor;

- (id<JavaUtilMap>)getDefaults;

- (jint)getDefaultStringMatchFlags;

- (jint)getDefaultStringPatternFlags;

- (IOSClass *)getDefaultTextAnnotationKey;

- (EduStanfordNlpPipelineCoreMapAggregator *)getDefaultTokensAggregator;

- (id<JavaUtilMap>)getDefaultTokensAggregators;

- (IOSClass *)getDefaultTokensAnnotationKey;

- (id<JavaUtilList>)getDefaultTokensResultAnnotationKey;

- (EduStanfordNlpLingTokensregexNodePattern *)getNodePatternWithNSString:(NSString *)name;

- (IOSClass *)getSequenceMatchResultExtractor;

- (EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *)getSequencePatternExprWithNSString:(NSString *)name
                                                                                     withBoolean:(jboolean)copy_;

- (IOSClass *)getStringMatchResultExtractor;

- (JavaUtilRegexPattern *)getStringPatternWithNSString:(NSString *)regex;

- (id<JavaUtilMap>)getVariables;

- (void)initDefaultBindings OBJC_METHOD_FAMILY_NONE;

- (id)peekWithNSString:(NSString *)name;

- (id)popWithNSString:(NSString *)name;

- (void)pushWithNSString:(NSString *)name
                  withId:(id)value;

- (void)setDefaultNestedResultsAnnotationKeyWithIOSClass:(IOSClass *)defaultNestedResultsAnnotationKey;

- (void)setDefaultResultAnnotationKeyWithIOSClassArray:(IOSObjectArray *)defaultResultAnnotationKey;

- (void)setDefaultResultAnnotationKeyWithJavaUtilList:(id<JavaUtilList>)defaultResultAnnotationKey;

- (void)setDefaultResultsAnnotationExtractorWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)defaultResultsAnnotationExtractor;

- (void)setDefaultsWithJavaUtilMap:(id<JavaUtilMap>)defaults;

- (void)setDefaultStringMatchFlagsWithInt:(jint)defaultStringMatchFlags;

- (void)setDefaultStringPatternFlagsWithInt:(jint)defaultStringPatternFlags;

- (void)setDefaultTextAnnotationKeyWithIOSClass:(IOSClass *)defaultTextAnnotationKey;

- (void)setDefaultTokensAggregatorsWithJavaUtilMap:(id<JavaUtilMap>)defaultTokensAggregators;

- (void)setDefaultTokensAnnotationKeyWithIOSClass:(IOSClass *)defaultTokensAnnotationKey;

- (void)setDefaultTokensResultAnnotationKeyWithIOSClassArray:(IOSObjectArray *)defaultTokensResultAnnotationKey;

- (void)setDefaultTokensResultAnnotationKeyWithJavaUtilList:(id<JavaUtilList>)defaultTokensResultAnnotationKey;

- (void)setSequenceMatchResultExtractorWithIOSClass:(IOSClass *)sequenceMatchResultExtractor;

- (void)setStringMatchResultExtractorWithIOSClass:(IOSClass *)stringMatchResultExtractor;

- (void)setVariablesWithJavaUtilMap:(id<JavaUtilMap>)variables;

- (void)unbindWithNSString:(NSString *)name;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpLingTokensregexEnv)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexEnv, parser_, id<EduStanfordNlpLingTokensregexSequencePattern_Parser>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexEnv, variables_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexEnv, threadLocalVariables_, JavaLangThreadLocal *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexEnv, stringRegexVariables_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexEnv, defaults_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexEnv, sequenceMatchResultExtractor_, IOSClass *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexEnv, stringMatchResultExtractor_, IOSClass *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexEnv, defaultTokensAnnotationKey_, IOSClass *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexEnv, defaultTextAnnotationKey_, IOSClass *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexEnv, defaultTokensResultAnnotationKey_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexEnv, defaultResultAnnotationKey_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexEnv, defaultNestedResultsAnnotationKey_, IOSClass *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexEnv, defaultTokensAggregators_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexEnv, defaultResultsAnnotationExtractor_, id<JavaUtilFunctionFunction>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexEnv_initWithEduStanfordNlpLingTokensregexSequencePattern_Parser_(EduStanfordNlpLingTokensregexEnv *self, id<EduStanfordNlpLingTokensregexSequencePattern_Parser> p);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexEnv *new_EduStanfordNlpLingTokensregexEnv_initWithEduStanfordNlpLingTokensregexSequencePattern_Parser_(id<EduStanfordNlpLingTokensregexSequencePattern_Parser> p) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexEnv *create_EduStanfordNlpLingTokensregexEnv_initWithEduStanfordNlpLingTokensregexSequencePattern_Parser_(id<EduStanfordNlpLingTokensregexSequencePattern_Parser> p);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexEnv)

#endif

#if !defined (EduStanfordNlpLingTokensregexEnv_Binder_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexEnv || defined(INCLUDE_EduStanfordNlpLingTokensregexEnv_Binder))
#define EduStanfordNlpLingTokensregexEnv_Binder_

@class EduStanfordNlpLingTokensregexEnv;
@class JavaUtilProperties;

@protocol EduStanfordNlpLingTokensregexEnv_Binder < JavaObject >

- (void)init__WithNSString:(NSString *)prefix
    withJavaUtilProperties:(JavaUtilProperties *)props OBJC_METHOD_FAMILY_NONE;

- (void)bindWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexEnv_Binder)

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexEnv_Binder)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexEnv")
