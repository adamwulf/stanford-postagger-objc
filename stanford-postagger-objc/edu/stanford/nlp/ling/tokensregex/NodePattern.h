//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/tokensregex/NodePattern.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexNodePattern")
#ifdef RESTRICT_EduStanfordNlpLingTokensregexNodePattern
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexNodePattern 0
#else
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexNodePattern 1
#endif
#undef RESTRICT_EduStanfordNlpLingTokensregexNodePattern
#ifdef INCLUDE_EduStanfordNlpLingTokensregexNodePattern_DisjNodePattern
#define INCLUDE_EduStanfordNlpLingTokensregexNodePattern 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexNodePattern_ConjNodePattern
#define INCLUDE_EduStanfordNlpLingTokensregexNodePattern 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexNodePattern_NegateNodePattern
#define INCLUDE_EduStanfordNlpLingTokensregexNodePattern 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexNodePattern_EqualsNodePattern
#define INCLUDE_EduStanfordNlpLingTokensregexNodePattern 1
#endif
#ifdef INCLUDE_EduStanfordNlpLingTokensregexNodePattern_AnyNodePattern
#define INCLUDE_EduStanfordNlpLingTokensregexNodePattern 1
#endif

#if !defined (EduStanfordNlpLingTokensregexNodePattern_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexNodePattern || defined(INCLUDE_EduStanfordNlpLingTokensregexNodePattern))
#define EduStanfordNlpLingTokensregexNodePattern_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@interface EduStanfordNlpLingTokensregexNodePattern : NSObject < JavaIoSerializable >

#pragma mark Public

- (instancetype)init;

- (jboolean)matchWithId:(id)node;

- (id)matchWithResultWithId:(id)node;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpLingTokensregexNodePattern)

inline EduStanfordNlpLingTokensregexNodePattern *EduStanfordNlpLingTokensregexNodePattern_get_ANY_NODE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpLingTokensregexNodePattern *EduStanfordNlpLingTokensregexNodePattern_ANY_NODE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexNodePattern, ANY_NODE, EduStanfordNlpLingTokensregexNodePattern *)

inline jint EduStanfordNlpLingTokensregexNodePattern_get_CASE_INSENSITIVE();
#define EduStanfordNlpLingTokensregexNodePattern_CASE_INSENSITIVE 2
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpLingTokensregexNodePattern, CASE_INSENSITIVE, jint)

inline jint EduStanfordNlpLingTokensregexNodePattern_get_NORMALIZE();
#define EduStanfordNlpLingTokensregexNodePattern_NORMALIZE 4
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpLingTokensregexNodePattern, NORMALIZE, jint)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexNodePattern_init(EduStanfordNlpLingTokensregexNodePattern *self);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexNodePattern)

#endif

#if !defined (EduStanfordNlpLingTokensregexNodePattern_AnyNodePattern_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexNodePattern || defined(INCLUDE_EduStanfordNlpLingTokensregexNodePattern_AnyNodePattern))
#define EduStanfordNlpLingTokensregexNodePattern_AnyNodePattern_

@interface EduStanfordNlpLingTokensregexNodePattern_AnyNodePattern : EduStanfordNlpLingTokensregexNodePattern

#pragma mark Public

- (jboolean)matchWithId:(id)node;

- (NSString *)description;

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexNodePattern_AnyNodePattern)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexNodePattern_AnyNodePattern_init(EduStanfordNlpLingTokensregexNodePattern_AnyNodePattern *self);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexNodePattern_AnyNodePattern *new_EduStanfordNlpLingTokensregexNodePattern_AnyNodePattern_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexNodePattern_AnyNodePattern *create_EduStanfordNlpLingTokensregexNodePattern_AnyNodePattern_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexNodePattern_AnyNodePattern)

#endif

#if !defined (EduStanfordNlpLingTokensregexNodePattern_EqualsNodePattern_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexNodePattern || defined(INCLUDE_EduStanfordNlpLingTokensregexNodePattern_EqualsNodePattern))
#define EduStanfordNlpLingTokensregexNodePattern_EqualsNodePattern_

@interface EduStanfordNlpLingTokensregexNodePattern_EqualsNodePattern : EduStanfordNlpLingTokensregexNodePattern {
 @public
  id t_;
}

#pragma mark Public

- (instancetype)initWithId:(id)t;

- (jboolean)matchWithId:(id)node;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexNodePattern_EqualsNodePattern)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexNodePattern_EqualsNodePattern, t_, id)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexNodePattern_EqualsNodePattern_initWithId_(EduStanfordNlpLingTokensregexNodePattern_EqualsNodePattern *self, id t);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexNodePattern_EqualsNodePattern *new_EduStanfordNlpLingTokensregexNodePattern_EqualsNodePattern_initWithId_(id t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexNodePattern_EqualsNodePattern *create_EduStanfordNlpLingTokensregexNodePattern_EqualsNodePattern_initWithId_(id t);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexNodePattern_EqualsNodePattern)

#endif

#if !defined (EduStanfordNlpLingTokensregexNodePattern_NegateNodePattern_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexNodePattern || defined(INCLUDE_EduStanfordNlpLingTokensregexNodePattern_NegateNodePattern))
#define EduStanfordNlpLingTokensregexNodePattern_NegateNodePattern_

@class EduStanfordNlpLingTokensregexNodePattern;

@interface EduStanfordNlpLingTokensregexNodePattern_NegateNodePattern : EduStanfordNlpLingTokensregexNodePattern {
 @public
  EduStanfordNlpLingTokensregexNodePattern *p_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingTokensregexNodePattern:(EduStanfordNlpLingTokensregexNodePattern *)p;

- (jboolean)matchWithId:(id)node;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexNodePattern_NegateNodePattern)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexNodePattern_NegateNodePattern, p_, EduStanfordNlpLingTokensregexNodePattern *)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexNodePattern_NegateNodePattern_initWithEduStanfordNlpLingTokensregexNodePattern_(EduStanfordNlpLingTokensregexNodePattern_NegateNodePattern *self, EduStanfordNlpLingTokensregexNodePattern *p);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexNodePattern_NegateNodePattern *new_EduStanfordNlpLingTokensregexNodePattern_NegateNodePattern_initWithEduStanfordNlpLingTokensregexNodePattern_(EduStanfordNlpLingTokensregexNodePattern *p) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexNodePattern_NegateNodePattern *create_EduStanfordNlpLingTokensregexNodePattern_NegateNodePattern_initWithEduStanfordNlpLingTokensregexNodePattern_(EduStanfordNlpLingTokensregexNodePattern *p);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexNodePattern_NegateNodePattern)

#endif

#if !defined (EduStanfordNlpLingTokensregexNodePattern_ConjNodePattern_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexNodePattern || defined(INCLUDE_EduStanfordNlpLingTokensregexNodePattern_ConjNodePattern))
#define EduStanfordNlpLingTokensregexNodePattern_ConjNodePattern_

@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexNodePattern_ConjNodePattern : EduStanfordNlpLingTokensregexNodePattern {
 @public
  id<JavaUtilList> nodePatterns_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)nodePatterns;

- (jboolean)matchWithId:(id)node;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexNodePattern_ConjNodePattern)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexNodePattern_ConjNodePattern, nodePatterns_, id<JavaUtilList>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexNodePattern_ConjNodePattern_initWithJavaUtilList_(EduStanfordNlpLingTokensregexNodePattern_ConjNodePattern *self, id<JavaUtilList> nodePatterns);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexNodePattern_ConjNodePattern *new_EduStanfordNlpLingTokensregexNodePattern_ConjNodePattern_initWithJavaUtilList_(id<JavaUtilList> nodePatterns) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexNodePattern_ConjNodePattern *create_EduStanfordNlpLingTokensregexNodePattern_ConjNodePattern_initWithJavaUtilList_(id<JavaUtilList> nodePatterns);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexNodePattern_ConjNodePattern)

#endif

#if !defined (EduStanfordNlpLingTokensregexNodePattern_DisjNodePattern_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexNodePattern || defined(INCLUDE_EduStanfordNlpLingTokensregexNodePattern_DisjNodePattern))
#define EduStanfordNlpLingTokensregexNodePattern_DisjNodePattern_

@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexNodePattern_DisjNodePattern : EduStanfordNlpLingTokensregexNodePattern {
 @public
  id<JavaUtilList> nodePatterns_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)nodePatterns;

- (jboolean)matchWithId:(id)node;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexNodePattern_DisjNodePattern)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexNodePattern_DisjNodePattern, nodePatterns_, id<JavaUtilList>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexNodePattern_DisjNodePattern_initWithJavaUtilList_(EduStanfordNlpLingTokensregexNodePattern_DisjNodePattern *self, id<JavaUtilList> nodePatterns);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexNodePattern_DisjNodePattern *new_EduStanfordNlpLingTokensregexNodePattern_DisjNodePattern_initWithJavaUtilList_(id<JavaUtilList> nodePatterns) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexNodePattern_DisjNodePattern *create_EduStanfordNlpLingTokensregexNodePattern_DisjNodePattern_initWithJavaUtilList_(id<JavaUtilList> nodePatterns);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexNodePattern_DisjNodePattern)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexNodePattern")
