//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/tokensregex/TokenSequencePattern.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/tokensregex/CoreMapNodePatternTrigger.h"
#include "edu/stanford/nlp/ling/tokensregex/Env.h"
#include "edu/stanford/nlp/ling/tokensregex/MultiPatternMatcher.h"
#include "edu/stanford/nlp/ling/tokensregex/SequenceMatchAction.h"
#include "edu/stanford/nlp/ling/tokensregex/SequencePattern.h"
#include "edu/stanford/nlp/ling/tokensregex/TokenSequenceMatcher.h"
#include "edu/stanford/nlp/ling/tokensregex/TokenSequencePattern.h"
#include "edu/stanford/nlp/ling/tokensregex/parser/TokenSequenceParser.h"
#include "edu/stanford/nlp/util/Pair.h"
#include "edu/stanford/nlp/util/StringUtils.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/List.h"

inline jlong EduStanfordNlpLingTokensregexTokenSequencePattern_get_serialVersionUID();
#define EduStanfordNlpLingTokensregexTokenSequencePattern_serialVersionUID -4760710834202406916LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpLingTokensregexTokenSequencePattern, serialVersionUID, jlong)

inline EduStanfordNlpLingTokensregexEnv *EduStanfordNlpLingTokensregexTokenSequencePattern_get_DEFAULT_ENV();
static EduStanfordNlpLingTokensregexEnv *EduStanfordNlpLingTokensregexTokenSequencePattern_DEFAULT_ENV;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexTokenSequencePattern, DEFAULT_ENV, EduStanfordNlpLingTokensregexEnv *)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpLingTokensregexTokenSequencePattern)

EduStanfordNlpLingTokensregexTokenSequencePattern *EduStanfordNlpLingTokensregexTokenSequencePattern_ANY_NODE_PATTERN;

@implementation EduStanfordNlpLingTokensregexTokenSequencePattern

- (instancetype)initWithNSString:(NSString *)patternStr
withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr:(EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *)nodeSequencePattern {
  EduStanfordNlpLingTokensregexTokenSequencePattern_initWithNSString_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_(self, patternStr, nodeSequencePattern);
  return self;
}

- (instancetype)initWithNSString:(NSString *)patternStr
withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr:(EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *)nodeSequencePattern
withEduStanfordNlpLingTokensregexSequenceMatchAction:(id<EduStanfordNlpLingTokensregexSequenceMatchAction>)action {
  EduStanfordNlpLingTokensregexTokenSequencePattern_initWithNSString_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_withEduStanfordNlpLingTokensregexSequenceMatchAction_(self, patternStr, nodeSequencePattern, action);
  return self;
}

+ (EduStanfordNlpLingTokensregexEnv *)getNewEnv {
  return EduStanfordNlpLingTokensregexTokenSequencePattern_getNewEnv();
}

+ (EduStanfordNlpLingTokensregexTokenSequencePattern *)compileWithNSString:(NSString *)string {
  return EduStanfordNlpLingTokensregexTokenSequencePattern_compileWithNSString_(string);
}

+ (EduStanfordNlpLingTokensregexTokenSequencePattern *)compileWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                      withNSString:(NSString *)string {
  return EduStanfordNlpLingTokensregexTokenSequencePattern_compileWithEduStanfordNlpLingTokensregexEnv_withNSString_(env, string);
}

+ (EduStanfordNlpLingTokensregexTokenSequencePattern *)compileWithNSStringArray:(IOSObjectArray *)strings {
  return EduStanfordNlpLingTokensregexTokenSequencePattern_compileWithNSStringArray_(strings);
}

+ (EduStanfordNlpLingTokensregexTokenSequencePattern *)compileWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                                                 withNSStringArray:(IOSObjectArray *)strings {
  return EduStanfordNlpLingTokensregexTokenSequencePattern_compileWithEduStanfordNlpLingTokensregexEnv_withNSStringArray_(env, strings);
}

+ (EduStanfordNlpLingTokensregexTokenSequencePattern *)compileWithEduStanfordNlpLingTokensregexSequencePattern_PatternExpr:(EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *)nodeSequencePattern {
  return EduStanfordNlpLingTokensregexTokenSequencePattern_compileWithEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_(nodeSequencePattern);
}

- (EduStanfordNlpLingTokensregexTokenSequenceMatcher *)getMatcherWithJavaUtilList:(id<JavaUtilList>)tokens {
  return new_EduStanfordNlpLingTokensregexTokenSequenceMatcher_initWithEduStanfordNlpLingTokensregexSequencePattern_withJavaUtilList_(self, tokens);
}

- (EduStanfordNlpLingTokensregexTokenSequenceMatcher *)matcherWithJavaUtilList:(id<JavaUtilList>)tokens {
  return [self getMatcherWithJavaUtilList:tokens];
}

- (NSString *)description {
  return [self pattern];
}

+ (EduStanfordNlpLingTokensregexMultiPatternMatcher *)getMultiPatternMatcherWithJavaUtilCollection:(id<JavaUtilCollection>)patterns {
  return EduStanfordNlpLingTokensregexTokenSequencePattern_getMultiPatternMatcherWithJavaUtilCollection_(patterns);
}

+ (EduStanfordNlpLingTokensregexMultiPatternMatcher *)getMultiPatternMatcherWithEduStanfordNlpLingTokensregexTokenSequencePatternArray:(IOSObjectArray *)patterns {
  return EduStanfordNlpLingTokensregexTokenSequencePattern_getMultiPatternMatcherWithEduStanfordNlpLingTokensregexTokenSequencePatternArray_(patterns);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexEnv;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTokenSequencePattern;", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTokenSequencePattern;", 0x9, 3, 5, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTokenSequencePattern;", 0x89, 3, 6, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTokenSequencePattern;", 0x89, 3, 7, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTokenSequencePattern;", 0x9, 3, 8, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTokenSequenceMatcher;", 0x1, 9, 10, -1, 11, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexTokenSequenceMatcher;", 0x1, 12, 10, -1, 11, -1, -1 },
    { NULL, "LNSString;", 0x1, 13, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexMultiPatternMatcher;", 0x9, 14, 15, -1, 16, -1, -1 },
    { NULL, "LEduStanfordNlpLingTokensregexMultiPatternMatcher;", 0x89, 14, 17, -1, 18, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr:);
  methods[1].selector = @selector(initWithNSString:withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr:withEduStanfordNlpLingTokensregexSequenceMatchAction:);
  methods[2].selector = @selector(getNewEnv);
  methods[3].selector = @selector(compileWithNSString:);
  methods[4].selector = @selector(compileWithEduStanfordNlpLingTokensregexEnv:withNSString:);
  methods[5].selector = @selector(compileWithNSStringArray:);
  methods[6].selector = @selector(compileWithEduStanfordNlpLingTokensregexEnv:withNSStringArray:);
  methods[7].selector = @selector(compileWithEduStanfordNlpLingTokensregexSequencePattern_PatternExpr:);
  methods[8].selector = @selector(getMatcherWithJavaUtilList:);
  methods[9].selector = @selector(matcherWithJavaUtilList:);
  methods[10].selector = @selector(description);
  methods[11].selector = @selector(getMultiPatternMatcherWithJavaUtilCollection:);
  methods[12].selector = @selector(getMultiPatternMatcherWithEduStanfordNlpLingTokensregexTokenSequencePatternArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpLingTokensregexTokenSequencePattern_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "ANY_NODE_PATTERN", "LEduStanfordNlpLingTokensregexTokenSequencePattern;", .constantValue.asLong = 0, 0x19, -1, 19, -1, -1 },
    { "DEFAULT_ENV", "LEduStanfordNlpLingTokensregexEnv;", .constantValue.asLong = 0, 0x1a, -1, 20, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LEduStanfordNlpLingTokensregexSequencePattern_PatternExpr;", "LNSString;LEduStanfordNlpLingTokensregexSequencePattern_PatternExpr;LEduStanfordNlpLingTokensregexSequenceMatchAction;", "(Ljava/lang/String;Ledu/stanford/nlp/ling/tokensregex/SequencePattern$PatternExpr;Ledu/stanford/nlp/ling/tokensregex/SequenceMatchAction<Ledu/stanford/nlp/util/CoreMap;>;)V", "compile", "LNSString;", "LEduStanfordNlpLingTokensregexEnv;LNSString;", "[LNSString;", "LEduStanfordNlpLingTokensregexEnv;[LNSString;", "LEduStanfordNlpLingTokensregexSequencePattern_PatternExpr;", "getMatcher", "LJavaUtilList;", "(Ljava/util/List<+Ledu/stanford/nlp/util/CoreMap;>;)Ledu/stanford/nlp/ling/tokensregex/TokenSequenceMatcher;", "matcher", "toString", "getMultiPatternMatcher", "LJavaUtilCollection;", "(Ljava/util/Collection<Ledu/stanford/nlp/ling/tokensregex/TokenSequencePattern;>;)Ledu/stanford/nlp/ling/tokensregex/MultiPatternMatcher<Ledu/stanford/nlp/util/CoreMap;>;", "[LEduStanfordNlpLingTokensregexTokenSequencePattern;", "([Ledu/stanford/nlp/ling/tokensregex/TokenSequencePattern;)Ledu/stanford/nlp/ling/tokensregex/MultiPatternMatcher<Ledu/stanford/nlp/util/CoreMap;>;", &EduStanfordNlpLingTokensregexTokenSequencePattern_ANY_NODE_PATTERN, &EduStanfordNlpLingTokensregexTokenSequencePattern_DEFAULT_ENV, "Ledu/stanford/nlp/ling/tokensregex/SequencePattern<Ledu/stanford/nlp/util/CoreMap;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTokensregexTokenSequencePattern = { "TokenSequencePattern", "edu.stanford.nlp.ling.tokensregex", ptrTable, methods, fields, 7, 0x1, 13, 3, -1, -1, -1, 21, -1 };
  return &_EduStanfordNlpLingTokensregexTokenSequencePattern;
}

+ (void)initialize {
  if (self == [EduStanfordNlpLingTokensregexTokenSequencePattern class]) {
    EduStanfordNlpLingTokensregexTokenSequencePattern_ANY_NODE_PATTERN = EduStanfordNlpLingTokensregexTokenSequencePattern_compileWithEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_(JreLoadStatic(EduStanfordNlpLingTokensregexSequencePattern, ANY_NODE_PATTERN_EXPR));
    EduStanfordNlpLingTokensregexTokenSequencePattern_DEFAULT_ENV = EduStanfordNlpLingTokensregexTokenSequencePattern_getNewEnv();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpLingTokensregexTokenSequencePattern)
  }
}

@end

void EduStanfordNlpLingTokensregexTokenSequencePattern_initWithNSString_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_(EduStanfordNlpLingTokensregexTokenSequencePattern *self, NSString *patternStr, EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *nodeSequencePattern) {
  EduStanfordNlpLingTokensregexSequencePattern_initWithNSString_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_(self, patternStr, nodeSequencePattern);
}

EduStanfordNlpLingTokensregexTokenSequencePattern *new_EduStanfordNlpLingTokensregexTokenSequencePattern_initWithNSString_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_(NSString *patternStr, EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *nodeSequencePattern) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTokenSequencePattern, initWithNSString_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_, patternStr, nodeSequencePattern)
}

EduStanfordNlpLingTokensregexTokenSequencePattern *create_EduStanfordNlpLingTokensregexTokenSequencePattern_initWithNSString_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_(NSString *patternStr, EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *nodeSequencePattern) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTokenSequencePattern, initWithNSString_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_, patternStr, nodeSequencePattern)
}

void EduStanfordNlpLingTokensregexTokenSequencePattern_initWithNSString_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_withEduStanfordNlpLingTokensregexSequenceMatchAction_(EduStanfordNlpLingTokensregexTokenSequencePattern *self, NSString *patternStr, EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *nodeSequencePattern, id<EduStanfordNlpLingTokensregexSequenceMatchAction> action) {
  EduStanfordNlpLingTokensregexSequencePattern_initWithNSString_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_withEduStanfordNlpLingTokensregexSequenceMatchAction_(self, patternStr, nodeSequencePattern, action);
}

EduStanfordNlpLingTokensregexTokenSequencePattern *new_EduStanfordNlpLingTokensregexTokenSequencePattern_initWithNSString_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_withEduStanfordNlpLingTokensregexSequenceMatchAction_(NSString *patternStr, EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *nodeSequencePattern, id<EduStanfordNlpLingTokensregexSequenceMatchAction> action) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTokensregexTokenSequencePattern, initWithNSString_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_withEduStanfordNlpLingTokensregexSequenceMatchAction_, patternStr, nodeSequencePattern, action)
}

EduStanfordNlpLingTokensregexTokenSequencePattern *create_EduStanfordNlpLingTokensregexTokenSequencePattern_initWithNSString_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_withEduStanfordNlpLingTokensregexSequenceMatchAction_(NSString *patternStr, EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *nodeSequencePattern, id<EduStanfordNlpLingTokensregexSequenceMatchAction> action) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTokensregexTokenSequencePattern, initWithNSString_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_withEduStanfordNlpLingTokensregexSequenceMatchAction_, patternStr, nodeSequencePattern, action)
}

EduStanfordNlpLingTokensregexEnv *EduStanfordNlpLingTokensregexTokenSequencePattern_getNewEnv() {
  EduStanfordNlpLingTokensregexTokenSequencePattern_initialize();
  EduStanfordNlpLingTokensregexEnv *env = new_EduStanfordNlpLingTokensregexEnv_initWithEduStanfordNlpLingTokensregexSequencePattern_Parser_(new_EduStanfordNlpLingTokensregexParserTokenSequenceParser_init());
  [env initDefaultBindings];
  return env;
}

EduStanfordNlpLingTokensregexTokenSequencePattern *EduStanfordNlpLingTokensregexTokenSequencePattern_compileWithNSString_(NSString *string) {
  EduStanfordNlpLingTokensregexTokenSequencePattern_initialize();
  return EduStanfordNlpLingTokensregexTokenSequencePattern_compileWithEduStanfordNlpLingTokensregexEnv_withNSString_(EduStanfordNlpLingTokensregexTokenSequencePattern_DEFAULT_ENV, string);
}

EduStanfordNlpLingTokensregexTokenSequencePattern *EduStanfordNlpLingTokensregexTokenSequencePattern_compileWithEduStanfordNlpLingTokensregexEnv_withNSString_(EduStanfordNlpLingTokensregexEnv *env, NSString *string) {
  EduStanfordNlpLingTokensregexTokenSequencePattern_initialize();
  @try {
    EduStanfordNlpUtilPair *p = [((id<EduStanfordNlpLingTokensregexSequencePattern_Parser>) nil_chk(((EduStanfordNlpLingTokensregexEnv *) nil_chk(env))->parser_)) parseSequenceWithActionWithEduStanfordNlpLingTokensregexEnv:env withNSString:string];
    return new_EduStanfordNlpLingTokensregexTokenSequencePattern_initWithNSString_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_withEduStanfordNlpLingTokensregexSequenceMatchAction_(string, [((EduStanfordNlpUtilPair *) nil_chk(p)) first], [p second]);
  }
  @catch (JavaLangException *ex) {
    @throw new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$$@", @"When parsing ", string, @"\t\t", ex));
  }
}

EduStanfordNlpLingTokensregexTokenSequencePattern *EduStanfordNlpLingTokensregexTokenSequencePattern_compileWithNSStringArray_(IOSObjectArray *strings) {
  EduStanfordNlpLingTokensregexTokenSequencePattern_initialize();
  return EduStanfordNlpLingTokensregexTokenSequencePattern_compileWithEduStanfordNlpLingTokensregexEnv_withNSStringArray_(EduStanfordNlpLingTokensregexTokenSequencePattern_DEFAULT_ENV, strings);
}

EduStanfordNlpLingTokensregexTokenSequencePattern *EduStanfordNlpLingTokensregexTokenSequencePattern_compileWithEduStanfordNlpLingTokensregexEnv_withNSStringArray_(EduStanfordNlpLingTokensregexEnv *env, IOSObjectArray *strings) {
  EduStanfordNlpLingTokensregexTokenSequencePattern_initialize();
  @try {
    id<JavaUtilList> patterns = new_JavaUtilArrayList_init();
    {
      IOSObjectArray *a__ = strings;
      NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      NSString * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        NSString *string = *b__++;
        EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *pattern = [((id<EduStanfordNlpLingTokensregexSequencePattern_Parser>) nil_chk(((EduStanfordNlpLingTokensregexEnv *) nil_chk(env))->parser_)) parseSequenceWithEduStanfordNlpLingTokensregexEnv:env withNSString:string];
        [patterns addWithId:pattern];
      }
    }
    EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *nodeSequencePattern = new_EduStanfordNlpLingTokensregexSequencePattern_SequencePatternExpr_initWithJavaUtilList_(patterns);
    return new_EduStanfordNlpLingTokensregexTokenSequencePattern_initWithNSString_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_(EduStanfordNlpUtilStringUtils_joinWithNSObjectArray_(strings), nodeSequencePattern);
  }
  @catch (JavaLangException *ex) {
    @throw new_JavaLangRuntimeException_initWithNSException_(ex);
  }
}

EduStanfordNlpLingTokensregexTokenSequencePattern *EduStanfordNlpLingTokensregexTokenSequencePattern_compileWithEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_(EduStanfordNlpLingTokensregexSequencePattern_PatternExpr *nodeSequencePattern) {
  EduStanfordNlpLingTokensregexTokenSequencePattern_initialize();
  return new_EduStanfordNlpLingTokensregexTokenSequencePattern_initWithNSString_withEduStanfordNlpLingTokensregexSequencePattern_PatternExpr_(nil, nodeSequencePattern);
}

EduStanfordNlpLingTokensregexMultiPatternMatcher *EduStanfordNlpLingTokensregexTokenSequencePattern_getMultiPatternMatcherWithJavaUtilCollection_(id<JavaUtilCollection> patterns) {
  EduStanfordNlpLingTokensregexTokenSequencePattern_initialize();
  return new_EduStanfordNlpLingTokensregexMultiPatternMatcher_initWithEduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger_withJavaUtilCollection_(new_EduStanfordNlpLingTokensregexMultiPatternMatcher_BasicSequencePatternTrigger_initWithEduStanfordNlpLingTokensregexMultiPatternMatcher_NodePatternTrigger_(new_EduStanfordNlpLingTokensregexCoreMapNodePatternTrigger_initWithJavaUtilCollection_(patterns)), patterns);
}

EduStanfordNlpLingTokensregexMultiPatternMatcher *EduStanfordNlpLingTokensregexTokenSequencePattern_getMultiPatternMatcherWithEduStanfordNlpLingTokensregexTokenSequencePatternArray_(IOSObjectArray *patterns) {
  EduStanfordNlpLingTokensregexTokenSequencePattern_initialize();
  return new_EduStanfordNlpLingTokensregexMultiPatternMatcher_initWithEduStanfordNlpLingTokensregexMultiPatternMatcher_SequencePatternTrigger_withEduStanfordNlpLingTokensregexSequencePatternArray_(new_EduStanfordNlpLingTokensregexMultiPatternMatcher_BasicSequencePatternTrigger_initWithEduStanfordNlpLingTokensregexMultiPatternMatcher_NodePatternTrigger_(new_EduStanfordNlpLingTokensregexCoreMapNodePatternTrigger_initWithEduStanfordNlpLingTokensregexSequencePatternArray_(patterns)), [IOSObjectArray newArrayWithObjects:(id[]){ patterns } count:1 type:EduStanfordNlpLingTokensregexSequencePattern_class_()]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTokensregexTokenSequencePattern)
