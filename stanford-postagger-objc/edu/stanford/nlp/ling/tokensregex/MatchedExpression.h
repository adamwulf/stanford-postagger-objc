//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/tokensregex/MatchedExpression.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexMatchedExpression")
#ifdef RESTRICT_EduStanfordNlpLingTokensregexMatchedExpression
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexMatchedExpression 0
#else
#define INCLUDE_ALL_EduStanfordNlpLingTokensregexMatchedExpression 1
#endif
#undef RESTRICT_EduStanfordNlpLingTokensregexMatchedExpression

#if !defined (EduStanfordNlpLingTokensregexMatchedExpression_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexMatchedExpression || defined(INCLUDE_EduStanfordNlpLingTokensregexMatchedExpression))
#define EduStanfordNlpLingTokensregexMatchedExpression_

@class EduStanfordNlpLingTokensregexEnv;
@class EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor;
@class EduStanfordNlpPipelineCoreMapAggregator;
@class EduStanfordNlpUtilInterval;
@protocol EduStanfordNlpLingTokensregexTypesValue;
@protocol EduStanfordNlpUtilCoreMap;
@protocol JavaUtilComparator;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexMatchedExpression : NSObject {
 @public
  NSString *text_;
  EduStanfordNlpUtilInterval *charOffsets_;
  EduStanfordNlpUtilInterval *tokenOffsets_;
  EduStanfordNlpUtilInterval *chunkOffsets_;
  id<EduStanfordNlpUtilCoreMap> annotation_;
  id context_;
  EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *extractFunc_;
  id<EduStanfordNlpLingTokensregexTypesValue> value_;
  jdouble priority_;
  jdouble weight_;
  jint order_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpUtilInterval:(EduStanfordNlpUtilInterval *)charOffsets
                    withEduStanfordNlpUtilInterval:(EduStanfordNlpUtilInterval *)tokenOffsets
withEduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor:(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *)extractFunc
                                        withDouble:(jdouble)priority
                                        withDouble:(jdouble)weight;

- (instancetype)initWithEduStanfordNlpLingTokensregexMatchedExpression:(EduStanfordNlpLingTokensregexMatchedExpression *)me;

- (jboolean)extractAnnotationWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                    withEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)sourceAnnotation;

- (jboolean)extractAnnotationWithEduStanfordNlpLingTokensregexEnv:(EduStanfordNlpLingTokensregexEnv *)env
                                                 withJavaUtilList:(id<JavaUtilList>)source;

- (id<EduStanfordNlpUtilCoreMap>)getAnnotation;

+ (EduStanfordNlpLingTokensregexMatchedExpression *)getBestMatchedWithJavaUtilList:(id<JavaUtilList>)matches
                                                      withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)scorer;

- (EduStanfordNlpUtilInterval *)getCharOffsets;

- (EduStanfordNlpUtilInterval *)getChunkOffsets;

- (jint)getOrder;

- (jdouble)getPriority;

- (NSString *)getText;

- (EduStanfordNlpUtilInterval *)getTokenOffsets;

- (id<EduStanfordNlpLingTokensregexTypesValue>)getValue;

- (jdouble)getWeight;

- (jboolean)isIncludeNested;

+ (id<JavaUtilList>)removeNestedWithJavaUtilList:(id<JavaUtilList>)chunks;

+ (id<JavaUtilList>)removeNullValuesWithJavaUtilList:(id<JavaUtilList>)chunks;

+ (id<JavaUtilList>)removeOverlappingWithJavaUtilList:(id<JavaUtilList>)chunks;

+ (id<JavaUtilList>)replaceMergedWithJavaUtilList:(id<JavaUtilList>)list
                                 withJavaUtilList:(id<JavaUtilList>)matchedExprs;

+ (id<JavaUtilList>)replaceMergedUsingTokenOffsetsWithJavaUtilList:(id<JavaUtilList>)list
                                                  withJavaUtilList:(id<JavaUtilList>)matchedExprs;

- (void)setIncludeNestedWithBoolean:(jboolean)includeNested;

- (NSString *)description;

#pragma mark Protected

- (jboolean)extractAnnotationWithJavaUtilList:(id<JavaUtilList>)source
  withEduStanfordNlpPipelineCoreMapAggregator:(EduStanfordNlpPipelineCoreMapAggregator *)aggregator;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpLingTokensregexMatchedExpression)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexMatchedExpression, text_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexMatchedExpression, charOffsets_, EduStanfordNlpUtilInterval *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexMatchedExpression, tokenOffsets_, EduStanfordNlpUtilInterval *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexMatchedExpression, chunkOffsets_, EduStanfordNlpUtilInterval *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexMatchedExpression, annotation_, id<EduStanfordNlpUtilCoreMap>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexMatchedExpression, context_, id)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexMatchedExpression, extractFunc_, EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexMatchedExpression, value_, id<EduStanfordNlpLingTokensregexTypesValue>)

inline id<JavaUtilFunctionFunction> EduStanfordNlpLingTokensregexMatchedExpression_get_COREMAP_TO_TOKEN_OFFSETS_INTERVAL_FUNC();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilFunctionFunction> EduStanfordNlpLingTokensregexMatchedExpression_COREMAP_TO_TOKEN_OFFSETS_INTERVAL_FUNC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexMatchedExpression, COREMAP_TO_TOKEN_OFFSETS_INTERVAL_FUNC, id<JavaUtilFunctionFunction>)

inline id<JavaUtilFunctionFunction> EduStanfordNlpLingTokensregexMatchedExpression_get_COREMAP_TO_CHAR_OFFSETS_INTERVAL_FUNC();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilFunctionFunction> EduStanfordNlpLingTokensregexMatchedExpression_COREMAP_TO_CHAR_OFFSETS_INTERVAL_FUNC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexMatchedExpression, COREMAP_TO_CHAR_OFFSETS_INTERVAL_FUNC, id<JavaUtilFunctionFunction>)

inline id<JavaUtilFunctionFunction> EduStanfordNlpLingTokensregexMatchedExpression_get_EXPR_TO_TOKEN_OFFSETS_INTERVAL_FUNC();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilFunctionFunction> EduStanfordNlpLingTokensregexMatchedExpression_EXPR_TO_TOKEN_OFFSETS_INTERVAL_FUNC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexMatchedExpression, EXPR_TO_TOKEN_OFFSETS_INTERVAL_FUNC, id<JavaUtilFunctionFunction>)

inline id<JavaUtilComparator> EduStanfordNlpLingTokensregexMatchedExpression_get_EXPR_PRIORITY_COMPARATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilComparator> EduStanfordNlpLingTokensregexMatchedExpression_EXPR_PRIORITY_COMPARATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexMatchedExpression, EXPR_PRIORITY_COMPARATOR, id<JavaUtilComparator>)

inline id<JavaUtilComparator> EduStanfordNlpLingTokensregexMatchedExpression_get_EXPR_ORDER_COMPARATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilComparator> EduStanfordNlpLingTokensregexMatchedExpression_EXPR_ORDER_COMPARATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexMatchedExpression, EXPR_ORDER_COMPARATOR, id<JavaUtilComparator>)

inline id<JavaUtilComparator> EduStanfordNlpLingTokensregexMatchedExpression_get_EXPR_LENGTH_COMPARATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilComparator> EduStanfordNlpLingTokensregexMatchedExpression_EXPR_LENGTH_COMPARATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexMatchedExpression, EXPR_LENGTH_COMPARATOR, id<JavaUtilComparator>)

inline id<JavaUtilComparator> EduStanfordNlpLingTokensregexMatchedExpression_get_EXPR_TOKEN_OFFSET_COMPARATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilComparator> EduStanfordNlpLingTokensregexMatchedExpression_EXPR_TOKEN_OFFSET_COMPARATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexMatchedExpression, EXPR_TOKEN_OFFSET_COMPARATOR, id<JavaUtilComparator>)

inline id<JavaUtilComparator> EduStanfordNlpLingTokensregexMatchedExpression_get_EXPR_TOKEN_OFFSETS_NESTED_FIRST_COMPARATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilComparator> EduStanfordNlpLingTokensregexMatchedExpression_EXPR_TOKEN_OFFSETS_NESTED_FIRST_COMPARATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexMatchedExpression, EXPR_TOKEN_OFFSETS_NESTED_FIRST_COMPARATOR, id<JavaUtilComparator>)

inline id<JavaUtilComparator> EduStanfordNlpLingTokensregexMatchedExpression_get_EXPR_PRIORITY_LENGTH_COMPARATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilComparator> EduStanfordNlpLingTokensregexMatchedExpression_EXPR_PRIORITY_LENGTH_COMPARATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexMatchedExpression, EXPR_PRIORITY_LENGTH_COMPARATOR, id<JavaUtilComparator>)

inline id<JavaUtilComparator> EduStanfordNlpLingTokensregexMatchedExpression_get_EXPR_LENGTH_PRIORITY_COMPARATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilComparator> EduStanfordNlpLingTokensregexMatchedExpression_EXPR_LENGTH_PRIORITY_COMPARATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexMatchedExpression, EXPR_LENGTH_PRIORITY_COMPARATOR, id<JavaUtilComparator>)

inline id<JavaUtilFunctionFunction> EduStanfordNlpLingTokensregexMatchedExpression_get_EXPR_WEIGHT_SCORER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilFunctionFunction> EduStanfordNlpLingTokensregexMatchedExpression_EXPR_WEIGHT_SCORER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpLingTokensregexMatchedExpression, EXPR_WEIGHT_SCORER, id<JavaUtilFunctionFunction>)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexMatchedExpression_initWithEduStanfordNlpLingTokensregexMatchedExpression_(EduStanfordNlpLingTokensregexMatchedExpression *self, EduStanfordNlpLingTokensregexMatchedExpression *me);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexMatchedExpression *new_EduStanfordNlpLingTokensregexMatchedExpression_initWithEduStanfordNlpLingTokensregexMatchedExpression_(EduStanfordNlpLingTokensregexMatchedExpression *me) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexMatchedExpression *create_EduStanfordNlpLingTokensregexMatchedExpression_initWithEduStanfordNlpLingTokensregexMatchedExpression_(EduStanfordNlpLingTokensregexMatchedExpression *me);

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexMatchedExpression_initWithEduStanfordNlpUtilInterval_withEduStanfordNlpUtilInterval_withEduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor_withDouble_withDouble_(EduStanfordNlpLingTokensregexMatchedExpression *self, EduStanfordNlpUtilInterval *charOffsets, EduStanfordNlpUtilInterval *tokenOffsets, EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *extractFunc, jdouble priority, jdouble weight);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexMatchedExpression *new_EduStanfordNlpLingTokensregexMatchedExpression_initWithEduStanfordNlpUtilInterval_withEduStanfordNlpUtilInterval_withEduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor_withDouble_withDouble_(EduStanfordNlpUtilInterval *charOffsets, EduStanfordNlpUtilInterval *tokenOffsets, EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *extractFunc, jdouble priority, jdouble weight) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexMatchedExpression *create_EduStanfordNlpLingTokensregexMatchedExpression_initWithEduStanfordNlpUtilInterval_withEduStanfordNlpUtilInterval_withEduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor_withDouble_withDouble_(EduStanfordNlpUtilInterval *charOffsets, EduStanfordNlpUtilInterval *tokenOffsets, EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *extractFunc, jdouble priority, jdouble weight);

FOUNDATION_EXPORT id<JavaUtilList> EduStanfordNlpLingTokensregexMatchedExpression_replaceMergedWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> list, id<JavaUtilList> matchedExprs);

FOUNDATION_EXPORT id<JavaUtilList> EduStanfordNlpLingTokensregexMatchedExpression_replaceMergedUsingTokenOffsetsWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> list, id<JavaUtilList> matchedExprs);

FOUNDATION_EXPORT id<JavaUtilList> EduStanfordNlpLingTokensregexMatchedExpression_removeNullValuesWithJavaUtilList_(id<JavaUtilList> chunks);

FOUNDATION_EXPORT id<JavaUtilList> EduStanfordNlpLingTokensregexMatchedExpression_removeNestedWithJavaUtilList_(id<JavaUtilList> chunks);

FOUNDATION_EXPORT id<JavaUtilList> EduStanfordNlpLingTokensregexMatchedExpression_removeOverlappingWithJavaUtilList_(id<JavaUtilList> chunks);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexMatchedExpression *EduStanfordNlpLingTokensregexMatchedExpression_getBestMatchedWithJavaUtilList_withJavaUtilFunctionFunction_(id<JavaUtilList> matches, id<JavaUtilFunctionFunction> scorer);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexMatchedExpression)

#endif

#if !defined (EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor_) && (INCLUDE_ALL_EduStanfordNlpLingTokensregexMatchedExpression || defined(INCLUDE_EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor))
#define EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor_

#define RESTRICT_JavaUtilFunctionFunction 1
#define INCLUDE_JavaUtilFunctionFunction 1
#include "java/util/function/Function.h"

@class EduStanfordNlpLingTokensregexMatchedExpression;
@class EduStanfordNlpPipelineCoreMapAggregator;
@class EduStanfordNlpUtilInterval;
@class IOSClass;
@protocol EduStanfordNlpLingTokensregexTypesValue;
@protocol EduStanfordNlpUtilCoreMap;
@protocol JavaUtilList;

@interface EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor : NSObject < JavaUtilFunctionFunction > {
 @public
  NSString *name_;
  jdouble priority_;
  jdouble weight_;
  IOSClass *tokensAnnotationField_;
  id<JavaUtilList> tokensResultAnnotationField_;
  id<JavaUtilList> resultAnnotationField_;
  IOSClass *resultNestedAnnotationField_;
  jboolean includeNested_;
  id<JavaUtilFunctionFunction> valueExtractor_;
  id<JavaUtilFunctionFunction> expressionToValue_;
  id<JavaUtilFunctionFunction> resultAnnotationExtractor_;
  EduStanfordNlpPipelineCoreMapAggregator *tokensAggregator_;
}

#pragma mark Public

- (instancetype)init;

- (void)annotateWithEduStanfordNlpLingTokensregexMatchedExpression:(EduStanfordNlpLingTokensregexMatchedExpression *)matchedExpression;

- (void)annotateWithEduStanfordNlpLingTokensregexMatchedExpression:(EduStanfordNlpLingTokensregexMatchedExpression *)matchedExpression
                                                  withJavaUtilList:(id<JavaUtilList>)nested;

- (id<EduStanfordNlpLingTokensregexTypesValue>)applyWithId:(id<EduStanfordNlpUtilCoreMap>)inArg;

- (EduStanfordNlpLingTokensregexMatchedExpression *)createMatchedExpressionWithEduStanfordNlpUtilInterval:(EduStanfordNlpUtilInterval *)charOffsets
                                                                           withEduStanfordNlpUtilInterval:(EduStanfordNlpUtilInterval *)tokenOffsets;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor)

J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor, name_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor, tokensAnnotationField_, IOSClass *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor, tokensResultAnnotationField_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor, resultAnnotationField_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor, resultNestedAnnotationField_, IOSClass *)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor, valueExtractor_, id<JavaUtilFunctionFunction>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor, expressionToValue_, id<JavaUtilFunctionFunction>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor, resultAnnotationExtractor_, id<JavaUtilFunctionFunction>)
J2OBJC_FIELD_SETTER(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor, tokensAggregator_, EduStanfordNlpPipelineCoreMapAggregator *)

FOUNDATION_EXPORT void EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor_init(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *self);

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *new_EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor *create_EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpLingTokensregexMatchedExpression_SingleAnnotationExtractor)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpLingTokensregexMatchedExpression")
