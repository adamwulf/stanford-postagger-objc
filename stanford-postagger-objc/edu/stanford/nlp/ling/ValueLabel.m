//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/ValueLabel.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/ling/LabelFactory.h"
#include "edu/stanford/nlp/ling/ValueLabel.h"
#include "java/lang/UnsupportedOperationException.h"

inline jlong EduStanfordNlpLingValueLabel_get_serialVersionUID();
#define EduStanfordNlpLingValueLabel_serialVersionUID -1413303679077285530LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpLingValueLabel, serialVersionUID, jlong)

@implementation EduStanfordNlpLingValueLabel

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingValueLabel_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)value {
  return nil;
}

- (void)setValueWithNSString:(NSString *)value {
}

- (NSString *)description {
  NSString *val = [self value];
  return (val == nil) ? @"" : val;
}

- (void)setFromStringWithNSString:(NSString *)labelStr {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (jboolean)isEqual:(id)obj {
  NSString *val = [self value];
  return ([obj isKindOfClass:[EduStanfordNlpLingValueLabel class]]) && (val == nil ? [((id<EduStanfordNlpLingLabel>) nil_chk(((id<EduStanfordNlpLingLabel>) cast_check(obj, EduStanfordNlpLingLabel_class_())))) value] == nil : [val isEqual:[((id<EduStanfordNlpLingLabel>) nil_chk(((id<EduStanfordNlpLingLabel>) cast_check(obj, EduStanfordNlpLingLabel_class_())))) value]]);
}

- (NSUInteger)hash {
  NSString *val = [self value];
  return val == nil ? 3 : ((jint) [val hash]);
}

- (jint)compareToWithId:(EduStanfordNlpLingValueLabel *)valueLabel {
  (void) cast_chk(valueLabel, [EduStanfordNlpLingValueLabel class]);
  return [((NSString *) nil_chk([self value])) compareToWithId:[((EduStanfordNlpLingValueLabel *) nil_chk(valueLabel)) value]];
}

- (id<EduStanfordNlpLingLabelFactory>)labelFactory {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingLabelFactory;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(value);
  methods[2].selector = @selector(setValueWithNSString:);
  methods[3].selector = @selector(description);
  methods[4].selector = @selector(setFromStringWithNSString:);
  methods[5].selector = @selector(isEqual:);
  methods[6].selector = @selector(hash);
  methods[7].selector = @selector(compareToWithId:);
  methods[8].selector = @selector(labelFactory);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpLingValueLabel_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setValue", "LNSString;", "toString", "setFromString", "equals", "LNSObject;", "hashCode", "compareTo", "LEduStanfordNlpLingValueLabel;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/Label;Ljava/lang/Comparable<Ledu/stanford/nlp/ling/ValueLabel;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingValueLabel = { "ValueLabel", "edu.stanford.nlp.ling", ptrTable, methods, fields, 7, 0x401, 9, 1, -1, -1, -1, 9, -1 };
  return &_EduStanfordNlpLingValueLabel;
}

@end

void EduStanfordNlpLingValueLabel_init(EduStanfordNlpLingValueLabel *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingValueLabel)
