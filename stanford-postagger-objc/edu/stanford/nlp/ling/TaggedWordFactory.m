//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/ling/TaggedWordFactory.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/ling/TaggedWord.h"
#include "edu/stanford/nlp/ling/TaggedWordFactory.h"

@interface EduStanfordNlpLingTaggedWordFactory () {
 @public
  jchar divider_;
}

@end

@implementation EduStanfordNlpLingTaggedWordFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpLingTaggedWordFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithChar:(jchar)divider {
  EduStanfordNlpLingTaggedWordFactory_initWithChar_(self, divider);
  return self;
}

- (id<EduStanfordNlpLingLabel>)newLabelWithNSString:(NSString *)labelStr {
  return new_EduStanfordNlpLingTaggedWord_initWithNSString_(labelStr);
}

- (id<EduStanfordNlpLingLabel>)newLabelWithNSString:(NSString *)labelStr
                                            withInt:(jint)options {
  if (options == EduStanfordNlpLingTaggedWordFactory_TAG_LABEL) {
    return new_EduStanfordNlpLingTaggedWord_initWithNSString_withNSString_(nil, labelStr);
  }
  return new_EduStanfordNlpLingTaggedWord_initWithNSString_(labelStr);
}

- (id<EduStanfordNlpLingLabel>)newLabelFromStringWithNSString:(NSString *)word {
  jint where = [((NSString *) nil_chk(word)) lastIndexOf:divider_];
  if (where >= 0) {
    return new_EduStanfordNlpLingTaggedWord_initWithNSString_withNSString_([word substring:0 endIndex:where], [word substring:where + 1]);
  }
  else {
    return new_EduStanfordNlpLingTaggedWord_initWithNSString_(word);
  }
}

- (id<EduStanfordNlpLingLabel>)newLabelWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)oldLabel {
  return new_EduStanfordNlpLingTaggedWord_initWithEduStanfordNlpLingLabel_(oldLabel);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingLabel;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingLabel;", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingLabel;", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingLabel;", 0x1, 1, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithChar:);
  methods[2].selector = @selector(newLabelWithNSString:);
  methods[3].selector = @selector(newLabelWithNSString:withInt:);
  methods[4].selector = @selector(newLabelFromStringWithNSString:);
  methods[5].selector = @selector(newLabelWithEduStanfordNlpLingLabel:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TAG_LABEL", "I", .constantValue.asInt = EduStanfordNlpLingTaggedWordFactory_TAG_LABEL, 0x19, -1, -1, -1, -1 },
    { "divider_", "C", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "C", "newLabel", "LNSString;", "LNSString;I", "newLabelFromString", "LEduStanfordNlpLingLabel;" };
  static const J2ObjcClassInfo _EduStanfordNlpLingTaggedWordFactory = { "TaggedWordFactory", "edu.stanford.nlp.ling", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpLingTaggedWordFactory;
}

@end

void EduStanfordNlpLingTaggedWordFactory_init(EduStanfordNlpLingTaggedWordFactory *self) {
  EduStanfordNlpLingTaggedWordFactory_initWithChar_(self, '/');
}

EduStanfordNlpLingTaggedWordFactory *new_EduStanfordNlpLingTaggedWordFactory_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTaggedWordFactory, init)
}

EduStanfordNlpLingTaggedWordFactory *create_EduStanfordNlpLingTaggedWordFactory_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTaggedWordFactory, init)
}

void EduStanfordNlpLingTaggedWordFactory_initWithChar_(EduStanfordNlpLingTaggedWordFactory *self, jchar divider) {
  NSObject_init(self);
  self->divider_ = divider;
}

EduStanfordNlpLingTaggedWordFactory *new_EduStanfordNlpLingTaggedWordFactory_initWithChar_(jchar divider) {
  J2OBJC_NEW_IMPL(EduStanfordNlpLingTaggedWordFactory, initWithChar_, divider)
}

EduStanfordNlpLingTaggedWordFactory *create_EduStanfordNlpLingTaggedWordFactory_initWithChar_(jchar divider) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpLingTaggedWordFactory, initWithChar_, divider)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpLingTaggedWordFactory)
