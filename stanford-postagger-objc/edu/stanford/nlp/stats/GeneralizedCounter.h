//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/stats/GeneralizedCounter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpStatsGeneralizedCounter")
#ifdef RESTRICT_EduStanfordNlpStatsGeneralizedCounter
#define INCLUDE_ALL_EduStanfordNlpStatsGeneralizedCounter 0
#else
#define INCLUDE_ALL_EduStanfordNlpStatsGeneralizedCounter 1
#endif
#undef RESTRICT_EduStanfordNlpStatsGeneralizedCounter

#if !defined (EduStanfordNlpStatsGeneralizedCounter_) && (INCLUDE_ALL_EduStanfordNlpStatsGeneralizedCounter || defined(INCLUDE_EduStanfordNlpStatsGeneralizedCounter))
#define EduStanfordNlpStatsGeneralizedCounter_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class EduStanfordNlpStatsClassicCounter;
@class IOSDoubleArray;
@class IOSObjectArray;
@class JavaIoPrintWriter;
@protocol JavaUtilList;
@protocol JavaUtilSet;

@interface EduStanfordNlpStatsGeneralizedCounter : NSObject < JavaIoSerializable >

#pragma mark Public

- (instancetype)initWithInt:(jint)depth;

- (EduStanfordNlpStatsGeneralizedCounter *)conditionalizeWithJavaUtilList:(id<JavaUtilList>)l;

- (EduStanfordNlpStatsGeneralizedCounter *)conditionalizeOnceWithId:(id)o;

- (jboolean)containsKeyWithJavaUtilList:(id<JavaUtilList>)key;

- (EduStanfordNlpStatsClassicCounter *)counterView;

- (jint)depth;

- (id<JavaUtilSet>)entrySet;

- (jdouble)getCountWithId:(id)o1
                   withId:(id)o2;

- (jdouble)getCountWithId:(id)o1
                   withId:(id)o2
                   withId:(id)o3;

- (jdouble)getCountWithId:(id)o;

- (IOSDoubleArray *)getCountsWithJavaUtilList:(id<JavaUtilList>)l;

- (void)incrementCountWithJavaUtilList:(id<JavaUtilList>)l;

- (void)incrementCountWithJavaUtilList:(id<JavaUtilList>)l
                            withDouble:(jdouble)count;

- (void)incrementCountWithJavaUtilList:(id<JavaUtilList>)l
                                withId:(id)o;

- (void)incrementCountWithJavaUtilList:(id<JavaUtilList>)l
                                withId:(id)o
                            withDouble:(jdouble)count;

- (void)incrementCount1DWithId:(id)o;

- (void)incrementCount1DWithId:(id)o
                    withDouble:(jdouble)count;

- (void)incrementCount2DWithId:(id)first
                        withId:(id)second;

- (void)incrementCount2DWithId:(id)first
                        withId:(id)second
                    withDouble:(jdouble)count;

- (void)incrementCount3DWithId:(id)first
                        withId:(id)second
                        withId:(id)third;

- (void)incrementCount3DWithId:(id)first
                        withId:(id)second
                        withId:(id)third
                    withDouble:(jdouble)count;

- (jboolean)isEmpty;

- (id<JavaUtilSet>)keySet;

- (id<JavaUtilSet>)lowestLevelCounterEntrySet;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (EduStanfordNlpStatsClassicCounter *)oneDimensionalCounterView;

- (void)prettyPrint;

- (void)prettyPrintWithJavaIoPrintWriter:(JavaIoPrintWriter *)pw;

- (void)prettyPrintWithJavaIoPrintWriter:(JavaIoPrintWriter *)pw
                            withNSString:(NSString *)bufferIncrement;

- (EduStanfordNlpStatsGeneralizedCounter *)reverseKeys;

- (id<JavaUtilSet>)topLevelKeySet;

- (NSString *)description;

- (NSString *)toStringWithNSString:(NSString *)param;

- (jdouble)totalCount;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpStatsGeneralizedCounter)

FOUNDATION_EXPORT void EduStanfordNlpStatsGeneralizedCounter_initWithInt_(EduStanfordNlpStatsGeneralizedCounter *self, jint depth);

FOUNDATION_EXPORT EduStanfordNlpStatsGeneralizedCounter *new_EduStanfordNlpStatsGeneralizedCounter_initWithInt_(jint depth) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpStatsGeneralizedCounter *create_EduStanfordNlpStatsGeneralizedCounter_initWithInt_(jint depth);

FOUNDATION_EXPORT void EduStanfordNlpStatsGeneralizedCounter_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpStatsGeneralizedCounter)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpStatsGeneralizedCounter")
