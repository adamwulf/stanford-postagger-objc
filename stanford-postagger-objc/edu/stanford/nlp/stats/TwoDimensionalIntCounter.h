//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/stats/TwoDimensionalIntCounter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpStatsTwoDimensionalIntCounter")
#ifdef RESTRICT_EduStanfordNlpStatsTwoDimensionalIntCounter
#define INCLUDE_ALL_EduStanfordNlpStatsTwoDimensionalIntCounter 0
#else
#define INCLUDE_ALL_EduStanfordNlpStatsTwoDimensionalIntCounter 1
#endif
#undef RESTRICT_EduStanfordNlpStatsTwoDimensionalIntCounter

#if !defined (EduStanfordNlpStatsTwoDimensionalIntCounter_) && (INCLUDE_ALL_EduStanfordNlpStatsTwoDimensionalIntCounter || defined(INCLUDE_EduStanfordNlpStatsTwoDimensionalIntCounter))
#define EduStanfordNlpStatsTwoDimensionalIntCounter_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class EduStanfordNlpStatsIntCounter;
@class EduStanfordNlpUtilMapFactory;
@class IOSObjectArray;
@class JavaTextNumberFormat;
@protocol JavaUtilComparator;
@protocol JavaUtilList;
@protocol JavaUtilSet;

@interface EduStanfordNlpStatsTwoDimensionalIntCounter : NSObject < JavaIoSerializable >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)initialCapacity;

- (instancetype)initWithEduStanfordNlpUtilMapFactory:(EduStanfordNlpUtilMapFactory *)outerFactory
                    withEduStanfordNlpUtilMapFactory:(EduStanfordNlpUtilMapFactory *)innerFactory;

- (instancetype)initWithEduStanfordNlpUtilMapFactory:(EduStanfordNlpUtilMapFactory *)outerFactory
                    withEduStanfordNlpUtilMapFactory:(EduStanfordNlpUtilMapFactory *)innerFactory
                                             withInt:(jint)initialCapacity;

- (void)addAllWithId:(id)key
withEduStanfordNlpStatsIntCounter:(EduStanfordNlpStatsIntCounter *)c;

- (void)addAllWithEduStanfordNlpStatsTwoDimensionalIntCounter:(EduStanfordNlpStatsTwoDimensionalIntCounter *)c;

- (void)clean;

- (jboolean)containsKeyWithId:(id)o1
                       withId:(id)o2;

- (void)decrementCountWithId:(id)o1
                      withId:(id)o2;

- (void)decrementCountWithId:(id)o1
                      withId:(id)o2
                  withDouble:(jdouble)count;

- (void)decrementCountWithId:(id)o1
                      withId:(id)o2
                     withInt:(jint)count;

- (jint)defaultReturnValue;

- (void)defaultReturnValueWithDouble:(jdouble)rv;

- (void)defaultReturnValueWithInt:(jint)rv;

- (id<JavaUtilSet>)entrySet;

- (jboolean)isEqual:(id)o;

- (id<JavaUtilSet>)firstKeySet;

- (EduStanfordNlpStatsIntCounter *)flatten;

- (jint)getCountWithId:(id)o1
                withId:(id)o2;

- (EduStanfordNlpStatsIntCounter *)getCounterWithId:(id)o;

- (EduStanfordNlpUtilMapFactory *)getInnerMapFactory;

- (EduStanfordNlpUtilMapFactory *)getOuterMapFactory;

- (NSUInteger)hash;

- (void)incrementCountWithId:(id)o1
                      withId:(id)o2;

- (void)incrementCountWithId:(id)o1
                      withId:(id)o2
                  withDouble:(jdouble)count;

- (void)incrementCountWithId:(id)o1
                      withId:(id)o2
                     withInt:(jint)count;

- (jboolean)isEmpty;

- (void)removeWithId:(id)key;

- (jint)removeWithId:(id)o1
              withId:(id)o2;

- (void)removeZeroCounts;

+ (EduStanfordNlpStatsTwoDimensionalIntCounter *)reverseIndexOrderWithEduStanfordNlpStatsTwoDimensionalIntCounter:(EduStanfordNlpStatsTwoDimensionalIntCounter *)cc;

- (id<JavaUtilSet>)secondKeySet;

- (void)setCountWithId:(id)o1
                withId:(id)o2
            withDouble:(jdouble)count;

- (void)setCountWithId:(id)o1
                withId:(id)o2
               withInt:(jint)count;

- (EduStanfordNlpStatsIntCounter *)setCounterWithId:(id)o
                  withEduStanfordNlpStatsIntCounter:(EduStanfordNlpStatsIntCounter *)c;

- (jint)size;

- (void)subtractAllWithId:(id)key
withEduStanfordNlpStatsIntCounter:(EduStanfordNlpStatsIntCounter *)c;

- (void)subtractAllWithEduStanfordNlpStatsTwoDimensionalIntCounter:(EduStanfordNlpStatsTwoDimensionalIntCounter *)c
                                                       withBoolean:(jboolean)removeKeys;

- (NSString *)toCSVStringWithJavaTextNumberFormat:(JavaTextNumberFormat *)nf;

+ (NSString *)toCSVStringWithEduStanfordNlpStatsTwoDimensionalIntCounter:(EduStanfordNlpStatsTwoDimensionalIntCounter *)counter
                                                withJavaTextNumberFormat:(JavaTextNumberFormat *)nf
                                                  withJavaUtilComparator:(id<JavaUtilComparator>)key1Comparator
                                                  withJavaUtilComparator:(id<JavaUtilComparator>)key2Comparator;

- (IOSObjectArray *)toMatrixWithJavaUtilList:(id<JavaUtilList>)firstKeys
                            withJavaUtilList:(id<JavaUtilList>)secondKeys;

- (NSString *)toMatrixStringWithInt:(jint)cellSize;

- (NSString *)description;

- (jint)totalCount;

- (jint)totalCountWithId:(id)k1;

- (EduStanfordNlpStatsIntCounter *)totalCounts;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpStatsTwoDimensionalIntCounter)

FOUNDATION_EXPORT EduStanfordNlpStatsTwoDimensionalIntCounter *EduStanfordNlpStatsTwoDimensionalIntCounter_reverseIndexOrderWithEduStanfordNlpStatsTwoDimensionalIntCounter_(EduStanfordNlpStatsTwoDimensionalIntCounter *cc);

FOUNDATION_EXPORT NSString *EduStanfordNlpStatsTwoDimensionalIntCounter_toCSVStringWithEduStanfordNlpStatsTwoDimensionalIntCounter_withJavaTextNumberFormat_withJavaUtilComparator_withJavaUtilComparator_(EduStanfordNlpStatsTwoDimensionalIntCounter *counter, JavaTextNumberFormat *nf, id<JavaUtilComparator> key1Comparator, id<JavaUtilComparator> key2Comparator);

FOUNDATION_EXPORT void EduStanfordNlpStatsTwoDimensionalIntCounter_init(EduStanfordNlpStatsTwoDimensionalIntCounter *self);

FOUNDATION_EXPORT EduStanfordNlpStatsTwoDimensionalIntCounter *new_EduStanfordNlpStatsTwoDimensionalIntCounter_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpStatsTwoDimensionalIntCounter *create_EduStanfordNlpStatsTwoDimensionalIntCounter_init();

FOUNDATION_EXPORT void EduStanfordNlpStatsTwoDimensionalIntCounter_initWithInt_(EduStanfordNlpStatsTwoDimensionalIntCounter *self, jint initialCapacity);

FOUNDATION_EXPORT EduStanfordNlpStatsTwoDimensionalIntCounter *new_EduStanfordNlpStatsTwoDimensionalIntCounter_initWithInt_(jint initialCapacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpStatsTwoDimensionalIntCounter *create_EduStanfordNlpStatsTwoDimensionalIntCounter_initWithInt_(jint initialCapacity);

FOUNDATION_EXPORT void EduStanfordNlpStatsTwoDimensionalIntCounter_initWithEduStanfordNlpUtilMapFactory_withEduStanfordNlpUtilMapFactory_(EduStanfordNlpStatsTwoDimensionalIntCounter *self, EduStanfordNlpUtilMapFactory *outerFactory, EduStanfordNlpUtilMapFactory *innerFactory);

FOUNDATION_EXPORT EduStanfordNlpStatsTwoDimensionalIntCounter *new_EduStanfordNlpStatsTwoDimensionalIntCounter_initWithEduStanfordNlpUtilMapFactory_withEduStanfordNlpUtilMapFactory_(EduStanfordNlpUtilMapFactory *outerFactory, EduStanfordNlpUtilMapFactory *innerFactory) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpStatsTwoDimensionalIntCounter *create_EduStanfordNlpStatsTwoDimensionalIntCounter_initWithEduStanfordNlpUtilMapFactory_withEduStanfordNlpUtilMapFactory_(EduStanfordNlpUtilMapFactory *outerFactory, EduStanfordNlpUtilMapFactory *innerFactory);

FOUNDATION_EXPORT void EduStanfordNlpStatsTwoDimensionalIntCounter_initWithEduStanfordNlpUtilMapFactory_withEduStanfordNlpUtilMapFactory_withInt_(EduStanfordNlpStatsTwoDimensionalIntCounter *self, EduStanfordNlpUtilMapFactory *outerFactory, EduStanfordNlpUtilMapFactory *innerFactory, jint initialCapacity);

FOUNDATION_EXPORT EduStanfordNlpStatsTwoDimensionalIntCounter *new_EduStanfordNlpStatsTwoDimensionalIntCounter_initWithEduStanfordNlpUtilMapFactory_withEduStanfordNlpUtilMapFactory_withInt_(EduStanfordNlpUtilMapFactory *outerFactory, EduStanfordNlpUtilMapFactory *innerFactory, jint initialCapacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpStatsTwoDimensionalIntCounter *create_EduStanfordNlpStatsTwoDimensionalIntCounter_initWithEduStanfordNlpUtilMapFactory_withEduStanfordNlpUtilMapFactory_withInt_(EduStanfordNlpUtilMapFactory *outerFactory, EduStanfordNlpUtilMapFactory *innerFactory, jint initialCapacity);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpStatsTwoDimensionalIntCounter)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpStatsTwoDimensionalIntCounter")
