//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/stats/Distribution.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpStatsDistribution")
#ifdef RESTRICT_EduStanfordNlpStatsDistribution
#define INCLUDE_ALL_EduStanfordNlpStatsDistribution 0
#else
#define INCLUDE_ALL_EduStanfordNlpStatsDistribution 1
#endif
#undef RESTRICT_EduStanfordNlpStatsDistribution

#if !defined (EduStanfordNlpStatsDistribution_) && (INCLUDE_ALL_EduStanfordNlpStatsDistribution || defined(INCLUDE_EduStanfordNlpStatsDistribution))
#define EduStanfordNlpStatsDistribution_

#define RESTRICT_EduStanfordNlpStatsSampler 1
#define INCLUDE_EduStanfordNlpStatsSampler 1
#include "edu/stanford/nlp/stats/Sampler.h"

#define RESTRICT_EduStanfordNlpStatsProbabilityDistribution 1
#define INCLUDE_EduStanfordNlpStatsProbabilityDistribution 1
#include "edu/stanford/nlp/stats/ProbabilityDistribution.h"

@class IOSObjectArray;
@class JavaTextNumberFormat;
@class JavaUtilRandom;
@protocol EduStanfordNlpStatsCounter;
@protocol JavaUtilCollection;
@protocol JavaUtilSet;

@interface EduStanfordNlpStatsDistribution : NSObject < EduStanfordNlpStatsSampler, EduStanfordNlpStatsProbabilityDistribution > {
 @public
  id<EduStanfordNlpStatsCounter> counter_;
}

#pragma mark Public

+ (EduStanfordNlpStatsDistribution *)absolutelyDiscountedDistributionWithEduStanfordNlpStatsCounter:(id<EduStanfordNlpStatsCounter>)counter
                                                                                            withInt:(jint)numberOfKeys
                                                                                         withDouble:(jdouble)discount;

- (void)addToKeySetWithId:(id)o;

- (id)argmax;

- (jboolean)containsKeyWithId:(id)key;

+ (EduStanfordNlpStatsDistribution *)distributionFromLogisticCounterWithEduStanfordNlpStatsCounter:(id<EduStanfordNlpStatsCounter>)cntr;

+ (EduStanfordNlpStatsDistribution *)distributionWithDirichletPriorWithEduStanfordNlpStatsCounter:(id<EduStanfordNlpStatsCounter>)c
                                                              withEduStanfordNlpStatsDistribution:(EduStanfordNlpStatsDistribution *)prior
                                                                                       withDouble:(jdouble)weight;

- (id)drawSample;

- (id)drawSampleWithJavaUtilRandom:(JavaUtilRandom *)random;

+ (EduStanfordNlpStatsDistribution *)dynamicCounterWithDirichletPriorWithEduStanfordNlpStatsCounter:(id<EduStanfordNlpStatsCounter>)c
                                                                withEduStanfordNlpStatsDistribution:(EduStanfordNlpStatsDistribution *)prior
                                                                                         withDouble:(jdouble)weight;

- (jboolean)equalsWithEduStanfordNlpStatsDistribution:(EduStanfordNlpStatsDistribution *)distribution;

- (jboolean)isEqual:(id)o;

- (jdouble)getCountWithId:(id)key;

- (id<EduStanfordNlpStatsCounter>)getCounter;

+ (EduStanfordNlpStatsDistribution *)getDistributionWithEduStanfordNlpStatsCounter:(id<EduStanfordNlpStatsCounter>)counter;

+ (EduStanfordNlpStatsDistribution *)getDistributionFromLogValuesWithEduStanfordNlpStatsCounter:(id<EduStanfordNlpStatsCounter>)counter;

+ (EduStanfordNlpStatsDistribution *)getDistributionFromPartiallySpecifiedCounterWithEduStanfordNlpStatsCounter:(id<EduStanfordNlpStatsCounter>)c
                                                                                                        withInt:(jint)numKeys;

+ (EduStanfordNlpStatsDistribution *)getDistributionWithReservedMassWithEduStanfordNlpStatsCounter:(id<EduStanfordNlpStatsCounter>)counter
                                                                                        withDouble:(jdouble)reservedMass;

- (jint)getNumberOfKeys;

+ (EduStanfordNlpStatsDistribution *)getPerturbedDistributionWithEduStanfordNlpStatsCounter:(id<EduStanfordNlpStatsCounter>)wordCounter
                                                                         withJavaUtilRandom:(JavaUtilRandom *)r;

+ (EduStanfordNlpStatsDistribution *)getPerturbedUniformDistributionWithJavaUtilCollection:(id<JavaUtilCollection>)s
                                                                        withJavaUtilRandom:(JavaUtilRandom *)r;

- (jdouble)getReservedMass;

+ (EduStanfordNlpStatsDistribution *)getUniformDistributionWithJavaUtilCollection:(id<JavaUtilCollection>)s;

+ (EduStanfordNlpStatsDistribution *)goodTuringSmoothedCounterWithEduStanfordNlpStatsCounter:(id<EduStanfordNlpStatsCounter>)counter
                                                                                     withInt:(jint)numberOfKeys;

+ (EduStanfordNlpStatsDistribution *)goodTuringWithExplicitUnknownWithEduStanfordNlpStatsCounter:(id<EduStanfordNlpStatsCounter>)counter
                                                                                          withId:(id)UNK;

- (NSUInteger)hash;

- (id<JavaUtilSet>)keySet;

+ (EduStanfordNlpStatsDistribution *)laplaceSmoothedDistributionWithEduStanfordNlpStatsCounter:(id<EduStanfordNlpStatsCounter>)counter
                                                                                       withInt:(jint)numberOfKeys;

+ (EduStanfordNlpStatsDistribution *)laplaceSmoothedDistributionWithEduStanfordNlpStatsCounter:(id<EduStanfordNlpStatsCounter>)counter
                                                                                       withInt:(jint)numberOfKeys
                                                                                    withDouble:(jdouble)lambda;

+ (EduStanfordNlpStatsDistribution *)laplaceWithExplicitUnknownWithEduStanfordNlpStatsCounter:(id<EduStanfordNlpStatsCounter>)counter
                                                                                   withDouble:(jdouble)lambda
                                                                                       withId:(id)UNK;

- (jdouble)logProbabilityOfWithId:(id)key;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (jdouble)probabilityOfWithId:(id)key;

- (id)sampleFrom;

- (id)sampleFromWithJavaUtilRandom:(JavaUtilRandom *)random;

+ (EduStanfordNlpStatsDistribution *)simpleGoodTuringWithEduStanfordNlpStatsCounter:(id<EduStanfordNlpStatsCounter>)counter
                                                                            withInt:(jint)numberOfKeys;

- (NSString *)description;

- (NSString *)toStringWithJavaTextNumberFormat:(JavaTextNumberFormat *)nf;

- (jdouble)totalCount;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpStatsDistribution)

J2OBJC_FIELD_SETTER(EduStanfordNlpStatsDistribution, counter_, id<EduStanfordNlpStatsCounter>)

FOUNDATION_EXPORT EduStanfordNlpStatsDistribution *EduStanfordNlpStatsDistribution_getDistributionFromPartiallySpecifiedCounterWithEduStanfordNlpStatsCounter_withInt_(id<EduStanfordNlpStatsCounter> c, jint numKeys);

FOUNDATION_EXPORT EduStanfordNlpStatsDistribution *EduStanfordNlpStatsDistribution_getUniformDistributionWithJavaUtilCollection_(id<JavaUtilCollection> s);

FOUNDATION_EXPORT EduStanfordNlpStatsDistribution *EduStanfordNlpStatsDistribution_getPerturbedUniformDistributionWithJavaUtilCollection_withJavaUtilRandom_(id<JavaUtilCollection> s, JavaUtilRandom *r);

FOUNDATION_EXPORT EduStanfordNlpStatsDistribution *EduStanfordNlpStatsDistribution_getPerturbedDistributionWithEduStanfordNlpStatsCounter_withJavaUtilRandom_(id<EduStanfordNlpStatsCounter> wordCounter, JavaUtilRandom *r);

FOUNDATION_EXPORT EduStanfordNlpStatsDistribution *EduStanfordNlpStatsDistribution_getDistributionWithEduStanfordNlpStatsCounter_(id<EduStanfordNlpStatsCounter> counter);

FOUNDATION_EXPORT EduStanfordNlpStatsDistribution *EduStanfordNlpStatsDistribution_getDistributionWithReservedMassWithEduStanfordNlpStatsCounter_withDouble_(id<EduStanfordNlpStatsCounter> counter, jdouble reservedMass);

FOUNDATION_EXPORT EduStanfordNlpStatsDistribution *EduStanfordNlpStatsDistribution_getDistributionFromLogValuesWithEduStanfordNlpStatsCounter_(id<EduStanfordNlpStatsCounter> counter);

FOUNDATION_EXPORT EduStanfordNlpStatsDistribution *EduStanfordNlpStatsDistribution_absolutelyDiscountedDistributionWithEduStanfordNlpStatsCounter_withInt_withDouble_(id<EduStanfordNlpStatsCounter> counter, jint numberOfKeys, jdouble discount);

FOUNDATION_EXPORT EduStanfordNlpStatsDistribution *EduStanfordNlpStatsDistribution_laplaceSmoothedDistributionWithEduStanfordNlpStatsCounter_withInt_(id<EduStanfordNlpStatsCounter> counter, jint numberOfKeys);

FOUNDATION_EXPORT EduStanfordNlpStatsDistribution *EduStanfordNlpStatsDistribution_laplaceSmoothedDistributionWithEduStanfordNlpStatsCounter_withInt_withDouble_(id<EduStanfordNlpStatsCounter> counter, jint numberOfKeys, jdouble lambda);

FOUNDATION_EXPORT EduStanfordNlpStatsDistribution *EduStanfordNlpStatsDistribution_laplaceWithExplicitUnknownWithEduStanfordNlpStatsCounter_withDouble_withId_(id<EduStanfordNlpStatsCounter> counter, jdouble lambda, id UNK);

FOUNDATION_EXPORT EduStanfordNlpStatsDistribution *EduStanfordNlpStatsDistribution_goodTuringSmoothedCounterWithEduStanfordNlpStatsCounter_withInt_(id<EduStanfordNlpStatsCounter> counter, jint numberOfKeys);

FOUNDATION_EXPORT EduStanfordNlpStatsDistribution *EduStanfordNlpStatsDistribution_goodTuringWithExplicitUnknownWithEduStanfordNlpStatsCounter_withId_(id<EduStanfordNlpStatsCounter> counter, id UNK);

FOUNDATION_EXPORT EduStanfordNlpStatsDistribution *EduStanfordNlpStatsDistribution_simpleGoodTuringWithEduStanfordNlpStatsCounter_withInt_(id<EduStanfordNlpStatsCounter> counter, jint numberOfKeys);

FOUNDATION_EXPORT EduStanfordNlpStatsDistribution *EduStanfordNlpStatsDistribution_distributionWithDirichletPriorWithEduStanfordNlpStatsCounter_withEduStanfordNlpStatsDistribution_withDouble_(id<EduStanfordNlpStatsCounter> c, EduStanfordNlpStatsDistribution *prior, jdouble weight);

FOUNDATION_EXPORT EduStanfordNlpStatsDistribution *EduStanfordNlpStatsDistribution_dynamicCounterWithDirichletPriorWithEduStanfordNlpStatsCounter_withEduStanfordNlpStatsDistribution_withDouble_(id<EduStanfordNlpStatsCounter> c, EduStanfordNlpStatsDistribution *prior, jdouble weight);

FOUNDATION_EXPORT EduStanfordNlpStatsDistribution *EduStanfordNlpStatsDistribution_distributionFromLogisticCounterWithEduStanfordNlpStatsCounter_(id<EduStanfordNlpStatsCounter> cntr);

FOUNDATION_EXPORT void EduStanfordNlpStatsDistribution_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpStatsDistribution)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpStatsDistribution")
