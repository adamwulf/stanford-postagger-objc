//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/stats/TwoDimensionalCounterInterface.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/stats/TwoDimensionalCounterInterface.h"

@interface EduStanfordNlpStatsTwoDimensionalCounterInterface : NSObject

@end

@implementation EduStanfordNlpStatsTwoDimensionalCounterInterface

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "D", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x401, 5, 3, -1, 6, -1, -1 },
    { NULL, "V", 0x401, 5, 7, -1, 8, -1, -1 },
    { NULL, "V", 0x401, 9, 3, -1, 6, -1, -1 },
    { NULL, "V", 0x401, 9, 7, -1, 8, -1, -1 },
    { NULL, "V", 0x401, 10, 7, -1, 8, -1, -1 },
    { NULL, "D", 0x401, 11, 3, -1, 12, -1, -1 },
    { NULL, "D", 0x401, 13, 3, -1, 12, -1, -1 },
    { NULL, "D", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x401, 14, 15, -1, 16, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x401, -1, -1, -1, 17, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x401, -1, -1, -1, 18, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 11, 15, -1, 19, -1, -1 },
    { NULL, "LNSString;", 0x401, 20, 21, -1, -1, -1, -1 },
    { NULL, "[[D", 0x401, 22, 23, -1, 24, -1, -1 },
    { NULL, "LNSString;", 0x401, 25, 26, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpStatsCounter;", 0x401, 27, 15, -1, 28, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(defaultReturnValueWithDouble:);
  methods[1].selector = @selector(defaultReturnValue);
  methods[2].selector = @selector(size);
  methods[3].selector = @selector(containsKeyWithId:withId:);
  methods[4].selector = @selector(incrementCountWithId:withId:);
  methods[5].selector = @selector(incrementCountWithId:withId:withDouble:);
  methods[6].selector = @selector(decrementCountWithId:withId:);
  methods[7].selector = @selector(decrementCountWithId:withId:withDouble:);
  methods[8].selector = @selector(setCountWithId:withId:withDouble:);
  methods[9].selector = @selector(removeWithId:withId:);
  methods[10].selector = @selector(getCountWithId:withId:);
  methods[11].selector = @selector(totalCount);
  methods[12].selector = @selector(totalCountWithId:);
  methods[13].selector = @selector(firstKeySet);
  methods[14].selector = @selector(secondKeySet);
  methods[15].selector = @selector(isEmpty);
  methods[16].selector = @selector(removeWithId:);
  methods[17].selector = @selector(toMatrixStringWithInt:);
  methods[18].selector = @selector(toMatrixWithJavaUtilList:withJavaUtilList:);
  methods[19].selector = @selector(toCSVStringWithJavaTextNumberFormat:);
  methods[20].selector = @selector(getCounterWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "defaultReturnValue", "D", "containsKey", "LNSObject;LNSObject;", "(TK1;TK2;)Z", "incrementCount", "(TK1;TK2;)V", "LNSObject;LNSObject;D", "(TK1;TK2;D)V", "decrementCount", "setCount", "remove", "(TK1;TK2;)D", "getCount", "totalCount", "LNSObject;", "(TK1;)D", "()Ljava/util/Set<TK1;>;", "()Ljava/util/Set<TK2;>;", "(TK1;)V", "toMatrixString", "I", "toMatrix", "LJavaUtilList;LJavaUtilList;", "(Ljava/util/List<TK1;>;Ljava/util/List<TK2;>;)[[D", "toCSVString", "LJavaTextNumberFormat;", "getCounter", "(TK1;)Ledu/stanford/nlp/stats/Counter<TK2;>;", "<K1:Ljava/lang/Object;K2:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _EduStanfordNlpStatsTwoDimensionalCounterInterface = { "TwoDimensionalCounterInterface", "edu.stanford.nlp.stats", ptrTable, methods, NULL, 7, 0x609, 21, 0, -1, -1, -1, 29, -1 };
  return &_EduStanfordNlpStatsTwoDimensionalCounterInterface;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(EduStanfordNlpStatsTwoDimensionalCounterInterface)
