//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/io/EncodingFileReader.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/io/EncodingFileReader.h"
#include "java/io/File.h"
#include "java/io/FileDescriptor.h"
#include "java/io/FileInputStream.h"
#include "java/io/InputStreamReader.h"

inline NSString *EduStanfordNlpIoEncodingFileReader_get_DEFAULT_ENCODING();
static NSString *EduStanfordNlpIoEncodingFileReader_DEFAULT_ENCODING = @"UTF-8";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpIoEncodingFileReader, DEFAULT_ENCODING, NSString *)

@implementation EduStanfordNlpIoEncodingFileReader

- (instancetype)initWithNSString:(NSString *)fileName {
  EduStanfordNlpIoEncodingFileReader_initWithNSString_(self, fileName);
  return self;
}

- (instancetype)initWithNSString:(NSString *)fileName
                    withNSString:(NSString *)encoding {
  EduStanfordNlpIoEncodingFileReader_initWithNSString_withNSString_(self, fileName, encoding);
  return self;
}

- (instancetype)initWithJavaIoFile:(JavaIoFile *)file {
  EduStanfordNlpIoEncodingFileReader_initWithJavaIoFile_(self, file);
  return self;
}

- (instancetype)initWithJavaIoFile:(JavaIoFile *)file
                      withNSString:(NSString *)encoding {
  EduStanfordNlpIoEncodingFileReader_initWithJavaIoFile_withNSString_(self, file, encoding);
  return self;
}

- (instancetype)initWithJavaIoFileDescriptor:(JavaIoFileDescriptor *)fd {
  EduStanfordNlpIoEncodingFileReader_initWithJavaIoFileDescriptor_(self, fd);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithNSString:withNSString:);
  methods[2].selector = @selector(initWithJavaIoFile:);
  methods[3].selector = @selector(initWithJavaIoFile:withNSString:);
  methods[4].selector = @selector(initWithJavaIoFileDescriptor:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_ENCODING", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LJavaIoUnsupportedEncodingException;LJavaIoFileNotFoundException;", "LNSString;LNSString;", "LJavaIoFile;", "LJavaIoFile;LNSString;", "LJavaIoFileDescriptor;", &EduStanfordNlpIoEncodingFileReader_DEFAULT_ENCODING };
  static const J2ObjcClassInfo _EduStanfordNlpIoEncodingFileReader = { "EncodingFileReader", "edu.stanford.nlp.io", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpIoEncodingFileReader;
}

@end

void EduStanfordNlpIoEncodingFileReader_initWithNSString_(EduStanfordNlpIoEncodingFileReader *self, NSString *fileName) {
  JavaIoInputStreamReader_initWithJavaIoInputStream_withNSString_(self, new_JavaIoFileInputStream_initWithNSString_(fileName), EduStanfordNlpIoEncodingFileReader_DEFAULT_ENCODING);
}

EduStanfordNlpIoEncodingFileReader *new_EduStanfordNlpIoEncodingFileReader_initWithNSString_(NSString *fileName) {
  J2OBJC_NEW_IMPL(EduStanfordNlpIoEncodingFileReader, initWithNSString_, fileName)
}

EduStanfordNlpIoEncodingFileReader *create_EduStanfordNlpIoEncodingFileReader_initWithNSString_(NSString *fileName) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpIoEncodingFileReader, initWithNSString_, fileName)
}

void EduStanfordNlpIoEncodingFileReader_initWithNSString_withNSString_(EduStanfordNlpIoEncodingFileReader *self, NSString *fileName, NSString *encoding) {
  JavaIoInputStreamReader_initWithJavaIoInputStream_withNSString_(self, new_JavaIoFileInputStream_initWithNSString_(fileName), encoding == nil ? EduStanfordNlpIoEncodingFileReader_DEFAULT_ENCODING : encoding);
}

EduStanfordNlpIoEncodingFileReader *new_EduStanfordNlpIoEncodingFileReader_initWithNSString_withNSString_(NSString *fileName, NSString *encoding) {
  J2OBJC_NEW_IMPL(EduStanfordNlpIoEncodingFileReader, initWithNSString_withNSString_, fileName, encoding)
}

EduStanfordNlpIoEncodingFileReader *create_EduStanfordNlpIoEncodingFileReader_initWithNSString_withNSString_(NSString *fileName, NSString *encoding) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpIoEncodingFileReader, initWithNSString_withNSString_, fileName, encoding)
}

void EduStanfordNlpIoEncodingFileReader_initWithJavaIoFile_(EduStanfordNlpIoEncodingFileReader *self, JavaIoFile *file) {
  JavaIoInputStreamReader_initWithJavaIoInputStream_withNSString_(self, new_JavaIoFileInputStream_initWithJavaIoFile_(file), EduStanfordNlpIoEncodingFileReader_DEFAULT_ENCODING);
}

EduStanfordNlpIoEncodingFileReader *new_EduStanfordNlpIoEncodingFileReader_initWithJavaIoFile_(JavaIoFile *file) {
  J2OBJC_NEW_IMPL(EduStanfordNlpIoEncodingFileReader, initWithJavaIoFile_, file)
}

EduStanfordNlpIoEncodingFileReader *create_EduStanfordNlpIoEncodingFileReader_initWithJavaIoFile_(JavaIoFile *file) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpIoEncodingFileReader, initWithJavaIoFile_, file)
}

void EduStanfordNlpIoEncodingFileReader_initWithJavaIoFile_withNSString_(EduStanfordNlpIoEncodingFileReader *self, JavaIoFile *file, NSString *encoding) {
  JavaIoInputStreamReader_initWithJavaIoInputStream_withNSString_(self, new_JavaIoFileInputStream_initWithJavaIoFile_(file), encoding == nil ? EduStanfordNlpIoEncodingFileReader_DEFAULT_ENCODING : encoding);
}

EduStanfordNlpIoEncodingFileReader *new_EduStanfordNlpIoEncodingFileReader_initWithJavaIoFile_withNSString_(JavaIoFile *file, NSString *encoding) {
  J2OBJC_NEW_IMPL(EduStanfordNlpIoEncodingFileReader, initWithJavaIoFile_withNSString_, file, encoding)
}

EduStanfordNlpIoEncodingFileReader *create_EduStanfordNlpIoEncodingFileReader_initWithJavaIoFile_withNSString_(JavaIoFile *file, NSString *encoding) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpIoEncodingFileReader, initWithJavaIoFile_withNSString_, file, encoding)
}

void EduStanfordNlpIoEncodingFileReader_initWithJavaIoFileDescriptor_(EduStanfordNlpIoEncodingFileReader *self, JavaIoFileDescriptor *fd) {
  JavaIoInputStreamReader_initWithJavaIoInputStream_(self, new_JavaIoFileInputStream_initWithJavaIoFileDescriptor_(fd));
}

EduStanfordNlpIoEncodingFileReader *new_EduStanfordNlpIoEncodingFileReader_initWithJavaIoFileDescriptor_(JavaIoFileDescriptor *fd) {
  J2OBJC_NEW_IMPL(EduStanfordNlpIoEncodingFileReader, initWithJavaIoFileDescriptor_, fd)
}

EduStanfordNlpIoEncodingFileReader *create_EduStanfordNlpIoEncodingFileReader_initWithJavaIoFileDescriptor_(JavaIoFileDescriptor *fd) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpIoEncodingFileReader, initWithJavaIoFileDescriptor_, fd)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpIoEncodingFileReader)
