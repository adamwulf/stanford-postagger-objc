//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/io/RuntimeIOException.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/io/RuntimeIOException.h"
#include "java/lang/RuntimeException.h"

inline jlong EduStanfordNlpIoRuntimeIOException_get_serialVersionUID();
#define EduStanfordNlpIoRuntimeIOException_serialVersionUID -8572218999165094626LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpIoRuntimeIOException, serialVersionUID, jlong)

@implementation EduStanfordNlpIoRuntimeIOException

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpIoRuntimeIOException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)message {
  EduStanfordNlpIoRuntimeIOException_initWithNSString_(self, message);
  return self;
}

- (instancetype)initWithNSException:(NSException *)cause {
  EduStanfordNlpIoRuntimeIOException_initWithNSException_(self, cause);
  return self;
}

- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)cause {
  EduStanfordNlpIoRuntimeIOException_initWithNSString_withNSException_(self, message, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(initWithNSException:);
  methods[3].selector = @selector(initWithNSString:withNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpIoRuntimeIOException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LNSException;", "LNSString;LNSException;" };
  static const J2ObjcClassInfo _EduStanfordNlpIoRuntimeIOException = { "RuntimeIOException", "edu.stanford.nlp.io", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpIoRuntimeIOException;
}

@end

void EduStanfordNlpIoRuntimeIOException_init(EduStanfordNlpIoRuntimeIOException *self) {
  JavaLangRuntimeException_init(self);
}

EduStanfordNlpIoRuntimeIOException *new_EduStanfordNlpIoRuntimeIOException_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpIoRuntimeIOException, init)
}

EduStanfordNlpIoRuntimeIOException *create_EduStanfordNlpIoRuntimeIOException_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpIoRuntimeIOException, init)
}

void EduStanfordNlpIoRuntimeIOException_initWithNSString_(EduStanfordNlpIoRuntimeIOException *self, NSString *message) {
  JavaLangRuntimeException_initWithNSString_(self, message);
}

EduStanfordNlpIoRuntimeIOException *new_EduStanfordNlpIoRuntimeIOException_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(EduStanfordNlpIoRuntimeIOException, initWithNSString_, message)
}

EduStanfordNlpIoRuntimeIOException *create_EduStanfordNlpIoRuntimeIOException_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpIoRuntimeIOException, initWithNSString_, message)
}

void EduStanfordNlpIoRuntimeIOException_initWithNSException_(EduStanfordNlpIoRuntimeIOException *self, NSException *cause) {
  JavaLangRuntimeException_initWithNSException_(self, cause);
}

EduStanfordNlpIoRuntimeIOException *new_EduStanfordNlpIoRuntimeIOException_initWithNSException_(NSException *cause) {
  J2OBJC_NEW_IMPL(EduStanfordNlpIoRuntimeIOException, initWithNSException_, cause)
}

EduStanfordNlpIoRuntimeIOException *create_EduStanfordNlpIoRuntimeIOException_initWithNSException_(NSException *cause) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpIoRuntimeIOException, initWithNSException_, cause)
}

void EduStanfordNlpIoRuntimeIOException_initWithNSString_withNSException_(EduStanfordNlpIoRuntimeIOException *self, NSString *message, NSException *cause) {
  JavaLangRuntimeException_initWithNSString_withNSException_(self, message, cause);
}

EduStanfordNlpIoRuntimeIOException *new_EduStanfordNlpIoRuntimeIOException_initWithNSString_withNSException_(NSString *message, NSException *cause) {
  J2OBJC_NEW_IMPL(EduStanfordNlpIoRuntimeIOException, initWithNSString_withNSException_, message, cause)
}

EduStanfordNlpIoRuntimeIOException *create_EduStanfordNlpIoRuntimeIOException_initWithNSString_withNSException_(NSString *message, NSException *cause) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpIoRuntimeIOException, initWithNSString_withNSException_, message, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpIoRuntimeIOException)
