//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/tagger/maxent/ASBCunkDict.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/tagger/maxent/ASBCunkDict.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "java/io/BufferedReader.h"
#include "java/io/FileInputStream.h"
#include "java/io/FileNotFoundException.h"
#include "java/io/IOException.h"
#include "java/io/InputStreamReader.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@interface EduStanfordNlpTaggerMaxentASBCunkDict ()

+ (EduStanfordNlpTaggerMaxentASBCunkDict *)getInstance;

- (instancetype)init;

+ (void)readASBCunkDictWithNSString:(NSString *)filename;

+ (id<JavaUtilSet>)getWithNSString:(NSString *)a;

@end

inline NSString *EduStanfordNlpTaggerMaxentASBCunkDict_get_defaultFilename();
static NSString *EduStanfordNlpTaggerMaxentASBCunkDict_defaultFilename = @"/u/nlp/data/pos-tagger/asbc_amb.fixed.gb18030";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentASBCunkDict, defaultFilename, NSString *)

inline EduStanfordNlpTaggerMaxentASBCunkDict *EduStanfordNlpTaggerMaxentASBCunkDict_get_ASBCunkDictSingleton();
inline EduStanfordNlpTaggerMaxentASBCunkDict *EduStanfordNlpTaggerMaxentASBCunkDict_set_ASBCunkDictSingleton(EduStanfordNlpTaggerMaxentASBCunkDict *value);
static EduStanfordNlpTaggerMaxentASBCunkDict *EduStanfordNlpTaggerMaxentASBCunkDict_ASBCunkDictSingleton;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTaggerMaxentASBCunkDict, ASBCunkDictSingleton, EduStanfordNlpTaggerMaxentASBCunkDict *)

inline id<JavaUtilMap> EduStanfordNlpTaggerMaxentASBCunkDict_get_ASBCunk_dict();
inline id<JavaUtilMap> EduStanfordNlpTaggerMaxentASBCunkDict_set_ASBCunk_dict(id<JavaUtilMap> value);
static id<JavaUtilMap> EduStanfordNlpTaggerMaxentASBCunkDict_ASBCunk_dict;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTaggerMaxentASBCunkDict, ASBCunk_dict, id<JavaUtilMap>)

__attribute__((unused)) static EduStanfordNlpTaggerMaxentASBCunkDict *EduStanfordNlpTaggerMaxentASBCunkDict_getInstance();

__attribute__((unused)) static void EduStanfordNlpTaggerMaxentASBCunkDict_init(EduStanfordNlpTaggerMaxentASBCunkDict *self);

__attribute__((unused)) static EduStanfordNlpTaggerMaxentASBCunkDict *new_EduStanfordNlpTaggerMaxentASBCunkDict_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTaggerMaxentASBCunkDict *create_EduStanfordNlpTaggerMaxentASBCunkDict_init();

__attribute__((unused)) static void EduStanfordNlpTaggerMaxentASBCunkDict_readASBCunkDictWithNSString_(NSString *filename);

__attribute__((unused)) static id<JavaUtilSet> EduStanfordNlpTaggerMaxentASBCunkDict_getWithNSString_(NSString *a);

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTaggerMaxentASBCunkDict)

@implementation EduStanfordNlpTaggerMaxentASBCunkDict

+ (EduStanfordNlpTaggerMaxentASBCunkDict *)getInstance {
  return EduStanfordNlpTaggerMaxentASBCunkDict_getInstance();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentASBCunkDict_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)readASBCunkDictWithNSString:(NSString *)filename {
  EduStanfordNlpTaggerMaxentASBCunkDict_readASBCunkDictWithNSString_(filename);
}

+ (NSString *)getTagWithNSString:(NSString *)a1
                    withNSString:(NSString *)a2 {
  return EduStanfordNlpTaggerMaxentASBCunkDict_getTagWithNSString_withNSString_(a1, a2);
}

+ (id<JavaUtilSet>)getWithNSString:(NSString *)a {
  return EduStanfordNlpTaggerMaxentASBCunkDict_getWithNSString_(a);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEduStanfordNlpTaggerMaxentASBCunkDict;", 0x2a, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xc, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0xa, 4, 1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getInstance);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(readASBCunkDictWithNSString:);
  methods[3].selector = @selector(getTagWithNSString:withNSString:);
  methods[4].selector = @selector(getWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "defaultFilename", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "ASBCunkDictSingleton", "LEduStanfordNlpTaggerMaxentASBCunkDict;", .constantValue.asLong = 0, 0xa, -1, 7, -1, -1 },
    { "ASBCunk_dict", "LJavaUtilMap;", .constantValue.asLong = 0, 0xa, -1, 8, 9, -1 },
  };
  static const void *ptrTable[] = { "readASBCunkDict", "LNSString;", "getTag", "LNSString;LNSString;", "get", "(Ljava/lang/String;)Ljava/util/Set<Ljava/lang/String;>;", &EduStanfordNlpTaggerMaxentASBCunkDict_defaultFilename, &EduStanfordNlpTaggerMaxentASBCunkDict_ASBCunkDictSingleton, &EduStanfordNlpTaggerMaxentASBCunkDict_ASBCunk_dict, "Ljava/util/Map<Ljava/lang/String;Ljava/util/Set<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentASBCunkDict = { "ASBCunkDict", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x1, 5, 3, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentASBCunkDict;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTaggerMaxentASBCunkDict class]) {
    EduStanfordNlpTaggerMaxentASBCunkDict_ASBCunkDictSingleton = nil;
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTaggerMaxentASBCunkDict)
  }
}

@end

EduStanfordNlpTaggerMaxentASBCunkDict *EduStanfordNlpTaggerMaxentASBCunkDict_getInstance() {
  EduStanfordNlpTaggerMaxentASBCunkDict_initialize();
  @synchronized(EduStanfordNlpTaggerMaxentASBCunkDict_class_()) {
    if (EduStanfordNlpTaggerMaxentASBCunkDict_ASBCunkDictSingleton == nil) {
      EduStanfordNlpTaggerMaxentASBCunkDict_ASBCunkDictSingleton = new_EduStanfordNlpTaggerMaxentASBCunkDict_init();
    }
    return EduStanfordNlpTaggerMaxentASBCunkDict_ASBCunkDictSingleton;
  }
}

void EduStanfordNlpTaggerMaxentASBCunkDict_init(EduStanfordNlpTaggerMaxentASBCunkDict *self) {
  NSObject_init(self);
  EduStanfordNlpTaggerMaxentASBCunkDict_readASBCunkDictWithNSString_(EduStanfordNlpTaggerMaxentASBCunkDict_defaultFilename);
}

EduStanfordNlpTaggerMaxentASBCunkDict *new_EduStanfordNlpTaggerMaxentASBCunkDict_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentASBCunkDict, init)
}

EduStanfordNlpTaggerMaxentASBCunkDict *create_EduStanfordNlpTaggerMaxentASBCunkDict_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentASBCunkDict, init)
}

void EduStanfordNlpTaggerMaxentASBCunkDict_readASBCunkDictWithNSString_(NSString *filename) {
  EduStanfordNlpTaggerMaxentASBCunkDict_initialize();
  @try {
    JavaIoBufferedReader *ASBCunkDetectorReader = new_JavaIoBufferedReader_initWithJavaIoReader_(new_JavaIoInputStreamReader_initWithJavaIoInputStream_withNSString_(new_JavaIoFileInputStream_initWithNSString_(filename), @"GB18030"));
    NSString *ASBCunkDetectorLine;
    EduStanfordNlpTaggerMaxentASBCunkDict_ASBCunk_dict = EduStanfordNlpUtilGenerics_newHashMap();
    while ((ASBCunkDetectorLine = [ASBCunkDetectorReader readLine]) != nil) {
      IOSObjectArray *fields = [((NSString *) nil_chk(ASBCunkDetectorLine)) split:@" "];
      NSString *tag = IOSObjectArray_Get(nil_chk(fields), 1);
      id<JavaUtilSet> words = [((id<JavaUtilMap>) nil_chk(EduStanfordNlpTaggerMaxentASBCunkDict_ASBCunk_dict)) getWithId:tag];
      if (words == nil) {
        words = EduStanfordNlpUtilGenerics_newHashSet();
        (void) [((id<JavaUtilMap>) nil_chk(EduStanfordNlpTaggerMaxentASBCunkDict_ASBCunk_dict)) putWithId:tag withId:words];
      }
      [((id<JavaUtilSet>) nil_chk(words)) addWithId:IOSObjectArray_Get(fields, 0)];
    }
  }
  @catch (JavaIoFileNotFoundException *e) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"ASBCunk not found:"];
    JavaLangSystem_exitWithInt_(-1);
  }
  @catch (JavaIoIOException *e) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"ASBCunk"];
    JavaLangSystem_exitWithInt_(-1);
  }
}

NSString *EduStanfordNlpTaggerMaxentASBCunkDict_getTagWithNSString_withNSString_(NSString *a1, NSString *a2) {
  EduStanfordNlpTaggerMaxentASBCunkDict_initialize();
  EduStanfordNlpTaggerMaxentASBCunkDict *dict = EduStanfordNlpTaggerMaxentASBCunkDict_getInstance();
  if (EduStanfordNlpTaggerMaxentASBCunkDict_getWithNSString_(a1) == nil) {
    return @"0";
  }
  if ([((id<JavaUtilSet>) nil_chk(EduStanfordNlpTaggerMaxentASBCunkDict_getWithNSString_(a1))) containsWithId:a2]) {
    return @"1";
  }
  return @"0";
}

id<JavaUtilSet> EduStanfordNlpTaggerMaxentASBCunkDict_getWithNSString_(NSString *a) {
  EduStanfordNlpTaggerMaxentASBCunkDict_initialize();
  return [((id<JavaUtilMap>) nil_chk(EduStanfordNlpTaggerMaxentASBCunkDict_ASBCunk_dict)) getWithId:a];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentASBCunkDict)
