//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/tagger/maxent/TagCount.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/io/RuntimeIOException.h"
#include "edu/stanford/nlp/stats/IntCounter.h"
#include "edu/stanford/nlp/tagger/maxent/TagCount.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "java/io/DataInputStream.h"
#include "java/io/DataOutputStream.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/util/Collection.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@interface EduStanfordNlpTaggerMaxentTagCount () {
 @public
  id<JavaUtilMap> map_;
  jint ambClassId_;
  IOSObjectArray *getTagsCache_;
  jint sumCache_;
}

- (instancetype)init;

- (jint)calculateSumCache;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentTagCount, map_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentTagCount, getTagsCache_, IOSObjectArray *)

inline NSString *EduStanfordNlpTaggerMaxentTagCount_get_NULL_SYMBOL();
static NSString *EduStanfordNlpTaggerMaxentTagCount_NULL_SYMBOL = @"<<NULL>>";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentTagCount, NULL_SYMBOL, NSString *)

__attribute__((unused)) static void EduStanfordNlpTaggerMaxentTagCount_init(EduStanfordNlpTaggerMaxentTagCount *self);

__attribute__((unused)) static EduStanfordNlpTaggerMaxentTagCount *new_EduStanfordNlpTaggerMaxentTagCount_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTaggerMaxentTagCount *create_EduStanfordNlpTaggerMaxentTagCount_init();

__attribute__((unused)) static jint EduStanfordNlpTaggerMaxentTagCount_calculateSumCache(EduStanfordNlpTaggerMaxentTagCount *self);

@implementation EduStanfordNlpTaggerMaxentTagCount

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentTagCount_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithEduStanfordNlpStatsIntCounter:(EduStanfordNlpStatsIntCounter *)tagCounts {
  EduStanfordNlpTaggerMaxentTagCount_initWithEduStanfordNlpStatsIntCounter_(self, tagCounts);
  return self;
}

- (void)saveWithJavaIoDataOutputStream:(JavaIoDataOutputStream *)rf {
  @try {
    [((JavaIoDataOutputStream *) nil_chk(rf)) writeIntWithInt:[((id<JavaUtilMap>) nil_chk(map_)) size]];
    for (NSString * __strong tag in nil_chk([((id<JavaUtilMap>) nil_chk(map_)) keySet])) {
      if (tag == nil) {
        [rf writeUTFWithNSString:EduStanfordNlpTaggerMaxentTagCount_NULL_SYMBOL];
      }
      else {
        [rf writeUTFWithNSString:tag];
      }
      [rf writeIntWithInt:[((JavaLangInteger *) nil_chk([((id<JavaUtilMap>) nil_chk(map_)) getWithId:tag])) intValue]];
    }
  }
  @catch (JavaLangException *e) {
    [((JavaLangException *) nil_chk(e)) printStackTrace];
  }
}

- (void)setAmbClassIdWithInt:(jint)ambClassId {
  self->ambClassId_ = ambClassId;
}

- (jint)getAmbClassId {
  return ambClassId_;
}

+ (EduStanfordNlpTaggerMaxentTagCount *)readTagCountWithJavaIoDataInputStream:(JavaIoDataInputStream *)rf {
  return EduStanfordNlpTaggerMaxentTagCount_readTagCountWithJavaIoDataInputStream_(rf);
}

- (jint)sum {
  return sumCache_;
}

- (jint)getWithNSString:(NSString *)tag {
  JavaLangInteger *count = [((id<JavaUtilMap>) nil_chk(map_)) getWithId:tag];
  if (count == nil) {
    return 0;
  }
  return [count intValue];
}

- (jint)calculateSumCache {
  return EduStanfordNlpTaggerMaxentTagCount_calculateSumCache(self);
}

- (IOSObjectArray *)getTags {
  return getTagsCache_;
}

- (jint)numTags {
  return [((id<JavaUtilMap>) nil_chk(map_)) size];
}

- (NSString *)getFirstTag {
  NSString *maxTag = nil;
  jint max = 0;
  for (NSString * __strong tag in nil_chk([((id<JavaUtilMap>) nil_chk(map_)) keySet])) {
    jint count = [((JavaLangInteger *) nil_chk([((id<JavaUtilMap>) nil_chk(map_)) getWithId:tag])) intValue];
    if (count > max) {
      maxTag = tag;
      max = count;
    }
  }
  return maxTag;
}

- (NSString *)description {
  return [((id<JavaUtilMap>) nil_chk(map_)) description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTaggerMaxentTagCount;", 0x9, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithEduStanfordNlpStatsIntCounter:);
  methods[2].selector = @selector(saveWithJavaIoDataOutputStream:);
  methods[3].selector = @selector(setAmbClassIdWithInt:);
  methods[4].selector = @selector(getAmbClassId);
  methods[5].selector = @selector(readTagCountWithJavaIoDataInputStream:);
  methods[6].selector = @selector(sum);
  methods[7].selector = @selector(getWithNSString:);
  methods[8].selector = @selector(calculateSumCache);
  methods[9].selector = @selector(getTags);
  methods[10].selector = @selector(numTags);
  methods[11].selector = @selector(getFirstTag);
  methods[12].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "map_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 11, -1 },
    { "ambClassId_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "getTagsCache_", "[LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sumCache_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "NULL_SYMBOL", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpStatsIntCounter;", "(Ledu/stanford/nlp/stats/IntCounter<Ljava/lang/String;>;)V", "save", "LJavaIoDataOutputStream;", "setAmbClassId", "I", "readTagCount", "LJavaIoDataInputStream;", "get", "LNSString;", "toString", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", &EduStanfordNlpTaggerMaxentTagCount_NULL_SYMBOL };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentTagCount = { "TagCount", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 13, 5, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentTagCount;
}

@end

void EduStanfordNlpTaggerMaxentTagCount_init(EduStanfordNlpTaggerMaxentTagCount *self) {
  NSObject_init(self);
  self->map_ = EduStanfordNlpUtilGenerics_newHashMap();
  self->ambClassId_ = -1;
}

EduStanfordNlpTaggerMaxentTagCount *new_EduStanfordNlpTaggerMaxentTagCount_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentTagCount, init)
}

EduStanfordNlpTaggerMaxentTagCount *create_EduStanfordNlpTaggerMaxentTagCount_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentTagCount, init)
}

void EduStanfordNlpTaggerMaxentTagCount_initWithEduStanfordNlpStatsIntCounter_(EduStanfordNlpTaggerMaxentTagCount *self, EduStanfordNlpStatsIntCounter *tagCounts) {
  NSObject_init(self);
  self->map_ = EduStanfordNlpUtilGenerics_newHashMap();
  self->ambClassId_ = -1;
  for (NSString * __strong tag in nil_chk([((EduStanfordNlpStatsIntCounter *) nil_chk(tagCounts)) keySet])) {
    (void) [((id<JavaUtilMap>) nil_chk(self->map_)) putWithId:tag withId:JavaLangInteger_valueOfWithInt_([tagCounts getIntCountWithId:tag])];
  }
  self->getTagsCache_ = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(self->map_)) keySet])) toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(self->map_)) keySet])) size] type:NSString_class_()]];
  self->sumCache_ = EduStanfordNlpTaggerMaxentTagCount_calculateSumCache(self);
}

EduStanfordNlpTaggerMaxentTagCount *new_EduStanfordNlpTaggerMaxentTagCount_initWithEduStanfordNlpStatsIntCounter_(EduStanfordNlpStatsIntCounter *tagCounts) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentTagCount, initWithEduStanfordNlpStatsIntCounter_, tagCounts)
}

EduStanfordNlpTaggerMaxentTagCount *create_EduStanfordNlpTaggerMaxentTagCount_initWithEduStanfordNlpStatsIntCounter_(EduStanfordNlpStatsIntCounter *tagCounts) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentTagCount, initWithEduStanfordNlpStatsIntCounter_, tagCounts)
}

EduStanfordNlpTaggerMaxentTagCount *EduStanfordNlpTaggerMaxentTagCount_readTagCountWithJavaIoDataInputStream_(JavaIoDataInputStream *rf) {
  EduStanfordNlpTaggerMaxentTagCount_initialize();
  @try {
    EduStanfordNlpTaggerMaxentTagCount *tc = new_EduStanfordNlpTaggerMaxentTagCount_init();
    jint numTags = [((JavaIoDataInputStream *) nil_chk(rf)) readInt];
    tc->map_ = EduStanfordNlpUtilGenerics_newHashMapWithInt_(numTags);
    for (jint i = 0; i < numTags; i++) {
      NSString *tag = [rf readUTF];
      jint count = [rf readInt];
      if ([((NSString *) nil_chk(tag)) isEqual:EduStanfordNlpTaggerMaxentTagCount_NULL_SYMBOL]) tag = nil;
      (void) [((id<JavaUtilMap>) nil_chk(tc->map_)) putWithId:tag withId:JavaLangInteger_valueOfWithInt_(count)];
    }
    tc->getTagsCache_ = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(tc->map_)) keySet])) toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(tc->map_)) keySet])) size] type:NSString_class_()]];
    tc->sumCache_ = EduStanfordNlpTaggerMaxentTagCount_calculateSumCache(tc);
    return tc;
  }
  @catch (JavaIoIOException *e) {
    @throw new_EduStanfordNlpIoRuntimeIOException_initWithNSException_(e);
  }
}

jint EduStanfordNlpTaggerMaxentTagCount_calculateSumCache(EduStanfordNlpTaggerMaxentTagCount *self) {
  jint s = 0;
  for (JavaLangInteger * __strong i in nil_chk([((id<JavaUtilMap>) nil_chk(self->map_)) values])) {
    s += [((JavaLangInteger *) nil_chk(i)) intValue];
  }
  return s;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentTagCount)
