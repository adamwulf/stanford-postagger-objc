//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/tagger/maxent/PairsHolder.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/WordTag.h"
#include "edu/stanford/nlp/tagger/maxent/History.h"
#include "edu/stanford/nlp/tagger/maxent/PairsHolder.h"
#include "java/util/ArrayList.h"

@interface EduStanfordNlpTaggerMaxentPairsHolder () {
 @public
  JavaUtilArrayList *arr_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentPairsHolder, arr_, JavaUtilArrayList *)

@implementation EduStanfordNlpTaggerMaxentPairsHolder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentPairsHolder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setSizeWithInt:(jint)s {
  while ([((JavaUtilArrayList *) nil_chk(arr_)) size] < s) {
    [arr_ addWithId:new_EduStanfordNlpLingWordTag_initWithNSString_withNSString_(nil, @"NN")];
  }
}

- (jint)getSize {
  return [((JavaUtilArrayList *) nil_chk(arr_)) size];
}

- (void)clear {
  [((JavaUtilArrayList *) nil_chk(arr_)) clear];
}

- (void)addWithEduStanfordNlpLingWordTag:(EduStanfordNlpLingWordTag *)wordtag {
  [((JavaUtilArrayList *) nil_chk(arr_)) addWithId:wordtag];
}

- (void)setWordWithInt:(jint)pos
          withNSString:(NSString *)word {
  [((EduStanfordNlpLingWordTag *) nil_chk([((JavaUtilArrayList *) nil_chk(arr_)) getWithInt:pos])) setWordWithNSString:word];
}

- (void)setTagWithInt:(jint)pos
         withNSString:(NSString *)tag {
  [((EduStanfordNlpLingWordTag *) nil_chk([((JavaUtilArrayList *) nil_chk(arr_)) getWithInt:pos])) setTagWithNSString:tag];
}

- (NSString *)getTagWithInt:(jint)position {
  return [((EduStanfordNlpLingWordTag *) nil_chk([((JavaUtilArrayList *) nil_chk(arr_)) getWithInt:position])) tag];
}

- (NSString *)getWordWithInt:(jint)position {
  return [((EduStanfordNlpLingWordTag *) nil_chk([((JavaUtilArrayList *) nil_chk(arr_)) getWithInt:position])) word];
}

- (NSString *)getWordWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                                                   withInt:(jint)position {
  if (((((EduStanfordNlpTaggerMaxentHistory *) nil_chk(h))->current_ + position) >= h->start_) && (h->current_ + position <= h->end_)) {
    return [((EduStanfordNlpLingWordTag *) nil_chk([((JavaUtilArrayList *) nil_chk(arr_)) getWithInt:h->current_ + position])) word];
  }
  else {
    return @"NA";
  }
}

- (NSString *)getTagWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                                                  withInt:(jint)position {
  if (((((EduStanfordNlpTaggerMaxentHistory *) nil_chk(h))->current_ + position) >= h->start_) && (h->current_ + position <= h->end_)) {
    return [((EduStanfordNlpLingWordTag *) nil_chk([((JavaUtilArrayList *) nil_chk(arr_)) getWithInt:h->current_ + position])) tag];
  }
  else {
    return @"NA";
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 6, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 7, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 8, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 8, 9, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 7, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setSizeWithInt:);
  methods[2].selector = @selector(getSize);
  methods[3].selector = @selector(clear);
  methods[4].selector = @selector(addWithEduStanfordNlpLingWordTag:);
  methods[5].selector = @selector(setWordWithInt:withNSString:);
  methods[6].selector = @selector(setTagWithInt:withNSString:);
  methods[7].selector = @selector(getTagWithInt:);
  methods[8].selector = @selector(getWordWithInt:);
  methods[9].selector = @selector(getWordWithEduStanfordNlpTaggerMaxentHistory:withInt:);
  methods[10].selector = @selector(getTagWithEduStanfordNlpTaggerMaxentHistory:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "arr_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x12, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "setSize", "I", "add", "LEduStanfordNlpLingWordTag;", "setWord", "ILNSString;", "setTag", "getTag", "getWord", "LEduStanfordNlpTaggerMaxentHistory;I", "Ljava/util/ArrayList<Ledu/stanford/nlp/ling/WordTag;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentPairsHolder = { "PairsHolder", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x1, 11, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentPairsHolder;
}

@end

void EduStanfordNlpTaggerMaxentPairsHolder_init(EduStanfordNlpTaggerMaxentPairsHolder *self) {
  NSObject_init(self);
  self->arr_ = new_JavaUtilArrayList_init();
}

EduStanfordNlpTaggerMaxentPairsHolder *new_EduStanfordNlpTaggerMaxentPairsHolder_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentPairsHolder, init)
}

EduStanfordNlpTaggerMaxentPairsHolder *create_EduStanfordNlpTaggerMaxentPairsHolder_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentPairsHolder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentPairsHolder)
