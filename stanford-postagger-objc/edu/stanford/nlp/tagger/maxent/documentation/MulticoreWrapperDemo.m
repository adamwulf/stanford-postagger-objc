//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/tagger/maxent/documentation/MulticoreWrapperDemo.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/tagger/maxent/MaxentTagger.h"
#include "edu/stanford/nlp/tagger/maxent/documentation/MulticoreWrapperDemo.h"
#include "edu/stanford/nlp/util/concurrent/MulticoreWrapper.h"
#include "edu/stanford/nlp/util/concurrent/ThreadsafeProcessor.h"
#include "java/io/BufferedReader.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"

@interface EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo ()

- (instancetype)init;

@end

__attribute__((unused)) static void EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_init(EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo *self);

__attribute__((unused)) static EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo *new_EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo *create_EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_init();

@interface EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1 : NSObject < EduStanfordNlpUtilConcurrentThreadsafeProcessor > {
 @public
  EduStanfordNlpTaggerMaxentMaxentTagger *val$tagger_;
}

- (NSString *)processWithId:(NSString *)input;

- (id<EduStanfordNlpUtilConcurrentThreadsafeProcessor>)newInstance OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithEduStanfordNlpTaggerMaxentMaxentTagger:(EduStanfordNlpTaggerMaxentMaxentTagger *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1)

J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1, val$tagger_, EduStanfordNlpTaggerMaxentMaxentTagger *)

__attribute__((unused)) static void EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1_initWithEduStanfordNlpTaggerMaxentMaxentTagger_(EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1 *self, EduStanfordNlpTaggerMaxentMaxentTagger *capture$0);

__attribute__((unused)) static EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1 *new_EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1_initWithEduStanfordNlpTaggerMaxentMaxentTagger_(EduStanfordNlpTaggerMaxentMaxentTagger *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1 *create_EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1_initWithEduStanfordNlpTaggerMaxentMaxentTagger_(EduStanfordNlpTaggerMaxentMaxentTagger *capture$0);

@implementation EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_mainWithNSStringArray_(args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "main", "[LNSString;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo = { "MulticoreWrapperDemo", "edu.stanford.nlp.tagger.maxent.documentation", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo;
}

@end

void EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_init(EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo *self) {
  NSObject_init(self);
}

EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo *new_EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo, init)
}

EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo *create_EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo, init)
}

void EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_mainWithNSStringArray_(IOSObjectArray *args) {
  EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_initialize();
  if (((IOSObjectArray *) nil_chk(args))->size_ != 1) {
    (void) [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printfWithNSString:@"Usage: java %s model_file < input_file%n" withNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ [EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_class_() getName] } count:1 type:NSObject_class_()]];
    JavaLangSystem_exitWithInt_(-1);
  }
  @try {
    NSString *modelFile = IOSObjectArray_Get(args, 0);
    EduStanfordNlpTaggerMaxentMaxentTagger *tagger = new_EduStanfordNlpTaggerMaxentMaxentTagger_initWithNSString_(modelFile);
    jint nThreads = 4;
    EduStanfordNlpUtilConcurrentMulticoreWrapper *wrapper = new_EduStanfordNlpUtilConcurrentMulticoreWrapper_initWithInt_withEduStanfordNlpUtilConcurrentThreadsafeProcessor_(nThreads, new_EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1_initWithEduStanfordNlpTaggerMaxentMaxentTagger_(tagger));
    JavaIoBufferedReader *br = new_JavaIoBufferedReader_initWithJavaIoReader_(new_JavaIoInputStreamReader_initWithJavaIoInputStream_(JreLoadStatic(JavaLangSystem, in)));
    for (NSString *line; (line = [br readLine]) != nil; ) {
      [wrapper putWithId:line];
      while ([wrapper peek]) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:[wrapper poll]];
      }
    }
    [wrapper join];
    while ([wrapper peek]) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:[wrapper poll]];
    }
  }
  @catch (JavaIoIOException *e) {
    [((JavaIoIOException *) nil_chk(e)) printStackTrace];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo)

@implementation EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1

- (NSString *)processWithId:(NSString *)input {
  return [((EduStanfordNlpTaggerMaxentMaxentTagger *) nil_chk(val$tagger_)) tagStringWithNSString:input];
}

- (id<EduStanfordNlpUtilConcurrentThreadsafeProcessor>)newInstance {
  return self;
}

- (instancetype)initWithEduStanfordNlpTaggerMaxentMaxentTagger:(EduStanfordNlpTaggerMaxentMaxentTagger *)capture$0 {
  EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1_initWithEduStanfordNlpTaggerMaxentMaxentTagger_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpUtilConcurrentThreadsafeProcessor;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(processWithId:);
  methods[1].selector = @selector(newInstance);
  methods[2].selector = @selector(initWithEduStanfordNlpTaggerMaxentMaxentTagger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$tagger_", "LEduStanfordNlpTaggerMaxentMaxentTagger;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "process", "LNSString;", "()Ledu/stanford/nlp/util/concurrent/ThreadsafeProcessor<Ljava/lang/String;Ljava/lang/String;>;", "LEduStanfordNlpTaggerMaxentMaxentTagger;", "LEduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo;", "mainWithNSStringArray:", "Ljava/lang/Object;Ledu/stanford/nlp/util/concurrent/ThreadsafeProcessor<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1 = { "", "edu.stanford.nlp.tagger.maxent.documentation", ptrTable, methods, fields, 7, 0x8008, 3, 1, 4, -1, 5, 6, -1 };
  return &_EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1;
}

@end

void EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1_initWithEduStanfordNlpTaggerMaxentMaxentTagger_(EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1 *self, EduStanfordNlpTaggerMaxentMaxentTagger *capture$0) {
  self->val$tagger_ = capture$0;
  NSObject_init(self);
}

EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1 *new_EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1_initWithEduStanfordNlpTaggerMaxentMaxentTagger_(EduStanfordNlpTaggerMaxentMaxentTagger *capture$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1, initWithEduStanfordNlpTaggerMaxentMaxentTagger_, capture$0)
}

EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1 *create_EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1_initWithEduStanfordNlpTaggerMaxentMaxentTagger_(EduStanfordNlpTaggerMaxentMaxentTagger *capture$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentDocumentationMulticoreWrapperDemo_$1, initWithEduStanfordNlpTaggerMaxentMaxentTagger_, capture$0)
}
