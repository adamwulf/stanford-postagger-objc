//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/tagger/maxent/ExtractorVerbalVBNZero.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/tagger/maxent/Dictionary.h"
#include "edu/stanford/nlp/tagger/maxent/DictionaryExtractor.h"
#include "edu/stanford/nlp/tagger/maxent/Extractor.h"
#include "edu/stanford/nlp/tagger/maxent/ExtractorVerbalVBNZero.h"
#include "edu/stanford/nlp/tagger/maxent/History.h"
#include "edu/stanford/nlp/tagger/maxent/PairsHolder.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

@interface EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero () {
 @public
  jint bound_;
}

@end

inline NSString *EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_get_vbnTag();
static NSString *EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_vbnTag = @"VBN";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero, vbnTag, NSString *)

inline NSString *EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_get_vbdTag();
static NSString *EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_vbdTag = @"VBD";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero, vbdTag, NSString *)

inline NSString *EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_get_jjTag();
static NSString *EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_jjTag = @"JJ";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero, jjTag, NSString *)

inline NSString *EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_get_edSuff();
static NSString *EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_edSuff = @"ed";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero, edSuff, NSString *)

inline NSString *EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_get_enSuff();
static NSString *EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_enSuff = @"en";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero, enSuff, NSString *)

inline NSString *EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_get_oneSt();
static NSString *EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_oneSt = @"1";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero, oneSt, NSString *)

inline NSString *EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_get_naWord();
static NSString *EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_naWord = @"NA";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero, naWord, NSString *)

inline JavaUtilRegexPattern *EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_get_stopper();
static JavaUtilRegexPattern *EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_stopper;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero, stopper, JavaUtilRegexPattern *)

inline JavaUtilRegexPattern *EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_get_vbnWord();
static JavaUtilRegexPattern *EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_vbnWord;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero, vbnWord, JavaUtilRegexPattern *)

inline jlong EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_serialVersionUID -5881204185400060636LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero, serialVersionUID, jlong)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero)

@implementation EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero

- (instancetype)initWithInt:(jint)bound {
  EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_initWithInt_(self, bound);
  return self;
}

- (jboolean)preconditionWithNSString:(NSString *)tag {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$$$Z", @"VBN: Testing precondition on ", tag, @": ", ([((NSString *) nil_chk(tag)) isEqual:EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_vbnTag] || [tag isEqual:EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_vbdTag] || [tag isEqual:EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_jjTag]))];
  return [tag isEqual:EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_vbnTag] || [tag isEqual:EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_vbdTag] || [tag isEqual:EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_jjTag];
}

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *cword = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:0];
  jint allCount = [((EduStanfordNlpTaggerMaxentDictionary *) nil_chk(dict_)) sumWithNSString:cword];
  jint vBNCount = [((EduStanfordNlpTaggerMaxentDictionary *) nil_chk(dict_)) getCountWithNSString:cword withNSString:EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_vbnTag];
  jint vBDCount = [((EduStanfordNlpTaggerMaxentDictionary *) nil_chk(dict_)) getCountWithNSString:cword withNSString:EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_vbdTag];
  if ((allCount == 0) && (!([((NSString *) nil_chk(cword)) hasSuffix:EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_edSuff] || [cword hasSuffix:EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_enSuff]))) {
    return EduStanfordNlpTaggerMaxentExtractor_zeroSt;
  }
  if ((allCount > 0) && (vBNCount + vBDCount <= allCount / 100)) {
    return EduStanfordNlpTaggerMaxentExtractor_zeroSt;
  }
  NSString *lastverb = EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_naWord;
  for (jint index = -1; index >= -bound_; index--) {
    NSString *word2 = [pH getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:index];
    if ([@"NA" isEqual:word2]) {
      break;
    }
    if ([((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_stopper)) matcherWithJavaLangCharSequence:word2])) matches]) {
      break;
    }
    if ([((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_vbnWord)) matcherWithJavaLangCharSequence:word2])) matches]) {
      lastverb = word2;
      break;
    }
    index--;
  }
  if (![((NSString *) nil_chk(lastverb)) isEqual:EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_naWord]) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$$$$", @"VBN: For ", cword, @", found preceding VBN cue ", lastverb)];
    return EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_oneSt;
  }
  return EduStanfordNlpTaggerMaxentExtractor_zeroSt;
}

- (NSString *)description {
  return JreStrcat("$IC", @"ExtractorVerbalVBNZero(bound=", bound_, ')');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(preconditionWithNSString:);
  methods[2].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "vbnTag", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "vbdTag", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
    { "jjTag", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "edSuff", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
    { "enSuff", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 10, -1, -1 },
    { "oneSt", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "naWord", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
    { "bound_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "stopper", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 13, -1, -1 },
    { "vbnWord", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 14, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "precondition", "LNSString;", "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;", "toString", &EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_vbnTag, &EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_vbdTag, &EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_jjTag, &EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_edSuff, &EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_enSuff, &EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_oneSt, &EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_naWord, &EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_stopper, &EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_vbnWord };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero = { "ExtractorVerbalVBNZero", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x1, 4, 11, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero class]) {
    EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_stopper = JavaUtilRegexPattern_compileWithNSString_(@"(?i:and|or|but|,|;|-|--)");
    EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_vbnWord = JavaUtilRegexPattern_compileWithNSString_(@"(?i:have|has|having|had|is|am|are|was|were|be|being|been|'ve|'s|s|'d|'re|'m|gotten|got|gets|get|getting)");
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero)
  }
}

@end

void EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_initWithInt_(EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero *self, jint bound) {
  EduStanfordNlpTaggerMaxentDictionaryExtractor_init(self);
  self->bound_ = bound;
}

EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero *new_EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_initWithInt_(jint bound) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero, initWithInt_, bound)
}

EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero *create_EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero_initWithInt_(jint bound) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero, initWithInt_, bound)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorVerbalVBNZero)
