//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/tagger/maxent/ReadDataTagged.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/TaggedWord.h"
#include "edu/stanford/nlp/ling/WordTag.h"
#include "edu/stanford/nlp/stats/IntCounter.h"
#include "edu/stanford/nlp/tagger/common/Tagger.h"
#include "edu/stanford/nlp/tagger/io/TaggedFileReader.h"
#include "edu/stanford/nlp/tagger/io/TaggedFileRecord.h"
#include "edu/stanford/nlp/tagger/maxent/DataWordTag.h"
#include "edu/stanford/nlp/tagger/maxent/Dictionary.h"
#include "edu/stanford/nlp/tagger/maxent/Extractors.h"
#include "edu/stanford/nlp/tagger/maxent/History.h"
#include "edu/stanford/nlp/tagger/maxent/MaxentTagger.h"
#include "edu/stanford/nlp/tagger/maxent/PairsHolder.h"
#include "edu/stanford/nlp/tagger/maxent/ReadDataTagged.h"
#include "edu/stanford/nlp/tagger/maxent/TaggerConfig.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "java/io/PrintStream.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/function/Function.h"

@interface EduStanfordNlpTaggerMaxentReadDataTagged () {
 @public
  JavaUtilArrayList *v_;
  jint numElements_;
  jint totalSentences_;
  jint totalWords_;
  EduStanfordNlpTaggerMaxentPairsHolder *pairs_;
  EduStanfordNlpTaggerMaxentMaxentTagger *maxentTagger_;
}

- (void)loadFileWithEduStanfordNlpTaggerIoTaggedFileReader:(id<EduStanfordNlpTaggerIoTaggedFileReader>)reader
                                           withJavaUtilMap:(id<JavaUtilMap>)wordTagCounts;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentReadDataTagged, v_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentReadDataTagged, pairs_, EduStanfordNlpTaggerMaxentPairsHolder *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentReadDataTagged, maxentTagger_, EduStanfordNlpTaggerMaxentMaxentTagger *)

__attribute__((unused)) static void EduStanfordNlpTaggerMaxentReadDataTagged_loadFileWithEduStanfordNlpTaggerIoTaggedFileReader_withJavaUtilMap_(EduStanfordNlpTaggerMaxentReadDataTagged *self, id<EduStanfordNlpTaggerIoTaggedFileReader> reader, id<JavaUtilMap> wordTagCounts);

@implementation EduStanfordNlpTaggerMaxentReadDataTagged

- (instancetype)initWithEduStanfordNlpTaggerMaxentTaggerConfig:(EduStanfordNlpTaggerMaxentTaggerConfig *)config
                    withEduStanfordNlpTaggerMaxentMaxentTagger:(EduStanfordNlpTaggerMaxentMaxentTagger *)maxentTagger
                     withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pairs {
  EduStanfordNlpTaggerMaxentReadDataTagged_initWithEduStanfordNlpTaggerMaxentTaggerConfig_withEduStanfordNlpTaggerMaxentMaxentTagger_withEduStanfordNlpTaggerMaxentPairsHolder_(self, config, maxentTagger, pairs);
  return self;
}

- (void)release__ {
  [((JavaUtilArrayList *) nil_chk(v_)) clear];
}

- (EduStanfordNlpTaggerMaxentDataWordTag *)getWithInt:(jint)index {
  return [((JavaUtilArrayList *) nil_chk(v_)) getWithInt:index];
}

- (void)loadFileWithEduStanfordNlpTaggerIoTaggedFileReader:(id<EduStanfordNlpTaggerIoTaggedFileReader>)reader
                                           withJavaUtilMap:(id<JavaUtilMap>)wordTagCounts {
  EduStanfordNlpTaggerMaxentReadDataTagged_loadFileWithEduStanfordNlpTaggerIoTaggedFileReader_withJavaUtilMap_(self, reader, wordTagCounts);
}

- (jint)getSize {
  return numElements_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, 1, -1, -1, -1 },
    { NULL, "V", 0x0, 2, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTaggerMaxentDataWordTag;", 0x0, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 5, 6, -1, 7, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTaggerMaxentTaggerConfig:withEduStanfordNlpTaggerMaxentMaxentTagger:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[1].selector = @selector(release__);
  methods[2].selector = @selector(getWithInt:);
  methods[3].selector = @selector(loadFileWithEduStanfordNlpTaggerIoTaggedFileReader:withJavaUtilMap:);
  methods[4].selector = @selector(getSize);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "v_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x12, -1, -1, 8, -1 },
    { "numElements_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "totalSentences_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "totalWords_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pairs_", "LEduStanfordNlpTaggerMaxentPairsHolder;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "maxentTagger_", "LEduStanfordNlpTaggerMaxentMaxentTagger;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTaggerMaxentTaggerConfig;LEduStanfordNlpTaggerMaxentMaxentTagger;LEduStanfordNlpTaggerMaxentPairsHolder;", "LJavaIoIOException;", "release", "get", "I", "loadFile", "LEduStanfordNlpTaggerIoTaggedFileReader;LJavaUtilMap;", "(Ledu/stanford/nlp/tagger/io/TaggedFileReader;Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/stats/IntCounter<Ljava/lang/String;>;>;)V", "Ljava/util/ArrayList<Ledu/stanford/nlp/tagger/maxent/DataWordTag;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentReadDataTagged = { "ReadDataTagged", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x1, 5, 6, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentReadDataTagged;
}

@end

void EduStanfordNlpTaggerMaxentReadDataTagged_initWithEduStanfordNlpTaggerMaxentTaggerConfig_withEduStanfordNlpTaggerMaxentMaxentTagger_withEduStanfordNlpTaggerMaxentPairsHolder_(EduStanfordNlpTaggerMaxentReadDataTagged *self, EduStanfordNlpTaggerMaxentTaggerConfig *config, EduStanfordNlpTaggerMaxentMaxentTagger *maxentTagger, EduStanfordNlpTaggerMaxentPairsHolder *pairs) {
  NSObject_init(self);
  self->v_ = new_JavaUtilArrayList_init();
  self->numElements_ = 0;
  self->totalSentences_ = 0;
  self->totalWords_ = 0;
  self->maxentTagger_ = maxentTagger;
  self->pairs_ = pairs;
  id<JavaUtilList> fileRecords = EduStanfordNlpTaggerIoTaggedFileRecord_createRecordsWithJavaUtilProperties_withNSString_(config, [((EduStanfordNlpTaggerMaxentTaggerConfig *) nil_chk(config)) getFile]);
  id<JavaUtilMap> wordTagCounts = EduStanfordNlpUtilGenerics_newHashMap();
  for (EduStanfordNlpTaggerIoTaggedFileRecord * __strong record in nil_chk(fileRecords)) {
    EduStanfordNlpTaggerMaxentReadDataTagged_loadFileWithEduStanfordNlpTaggerIoTaggedFileReader_withJavaUtilMap_(self, [((EduStanfordNlpTaggerIoTaggedFileRecord *) nil_chk(record)) reader], wordTagCounts);
  }
  [((EduStanfordNlpTaggerMaxentDictionary *) nil_chk(((EduStanfordNlpTaggerMaxentMaxentTagger *) nil_chk(maxentTagger))->dict_)) fillWordTagCountsWithJavaUtilMap:wordTagCounts];
}

EduStanfordNlpTaggerMaxentReadDataTagged *new_EduStanfordNlpTaggerMaxentReadDataTagged_initWithEduStanfordNlpTaggerMaxentTaggerConfig_withEduStanfordNlpTaggerMaxentMaxentTagger_withEduStanfordNlpTaggerMaxentPairsHolder_(EduStanfordNlpTaggerMaxentTaggerConfig *config, EduStanfordNlpTaggerMaxentMaxentTagger *maxentTagger, EduStanfordNlpTaggerMaxentPairsHolder *pairs) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentReadDataTagged, initWithEduStanfordNlpTaggerMaxentTaggerConfig_withEduStanfordNlpTaggerMaxentMaxentTagger_withEduStanfordNlpTaggerMaxentPairsHolder_, config, maxentTagger, pairs)
}

EduStanfordNlpTaggerMaxentReadDataTagged *create_EduStanfordNlpTaggerMaxentReadDataTagged_initWithEduStanfordNlpTaggerMaxentTaggerConfig_withEduStanfordNlpTaggerMaxentMaxentTagger_withEduStanfordNlpTaggerMaxentPairsHolder_(EduStanfordNlpTaggerMaxentTaggerConfig *config, EduStanfordNlpTaggerMaxentMaxentTagger *maxentTagger, EduStanfordNlpTaggerMaxentPairsHolder *pairs) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentReadDataTagged, initWithEduStanfordNlpTaggerMaxentTaggerConfig_withEduStanfordNlpTaggerMaxentMaxentTagger_withEduStanfordNlpTaggerMaxentPairsHolder_, config, maxentTagger, pairs)
}

void EduStanfordNlpTaggerMaxentReadDataTagged_loadFileWithEduStanfordNlpTaggerIoTaggedFileReader_withJavaUtilMap_(EduStanfordNlpTaggerMaxentReadDataTagged *self, id<EduStanfordNlpTaggerIoTaggedFileReader> reader, id<JavaUtilMap> wordTagCounts) {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$$", @"Loading tagged words from ", [((id<EduStanfordNlpTaggerIoTaggedFileReader>) nil_chk(reader)) filename])];
  JavaUtilArrayList *words = new_JavaUtilArrayList_init();
  JavaUtilArrayList *tags = new_JavaUtilArrayList_init();
  jint numSentences = 0;
  jint numWords = 0;
  jint maxLen = JavaLangInteger_MIN_VALUE;
  jint minLen = JavaLangInteger_MAX_VALUE;
  for (id<JavaUtilList> __strong sentence in reader) {
    if (((EduStanfordNlpTaggerMaxentMaxentTagger *) nil_chk(self->maxentTagger_))->wordFunction_ != nil) {
      id<JavaUtilList> newSentence = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(sentence)) size]);
      for (EduStanfordNlpLingTaggedWord * __strong word in sentence) {
        EduStanfordNlpLingTaggedWord *newWord = new_EduStanfordNlpLingTaggedWord_initWithNSString_withNSString_([((id<JavaUtilFunctionFunction>) nil_chk(self->maxentTagger_->wordFunction_)) applyWithId:[((EduStanfordNlpLingTaggedWord *) nil_chk(word)) word]], [word tag]);
        [newSentence addWithId:newWord];
      }
      sentence = newSentence;
    }
    for (EduStanfordNlpLingTaggedWord * __strong tw in nil_chk(sentence)) {
      if (tw != nil) {
        [words addWithId:[tw word]];
        [tags addWithId:[tw tag]];
        if (![((id<JavaUtilMap>) nil_chk(self->maxentTagger_->tagTokens_)) containsKeyWithId:[tw tag]]) {
          (void) [self->maxentTagger_->tagTokens_ putWithId:[tw tag] withId:EduStanfordNlpUtilGenerics_newHashSet()];
        }
        [((id<JavaUtilSet>) nil_chk([self->maxentTagger_->tagTokens_ getWithId:[tw tag]])) addWithId:[tw word]];
      }
    }
    maxLen = ([sentence size] > maxLen ? [sentence size] : maxLen);
    minLen = ([sentence size] < minLen ? [sentence size] : minLen);
    [words addWithId:EduStanfordNlpTaggerCommonTagger_EOS_WORD];
    [tags addWithId:EduStanfordNlpTaggerCommonTagger_EOS_TAG];
    self->numElements_ = self->numElements_ + [sentence size] + 1;
    for (jint i = 0; i < [sentence size] + 1; i++) {
      EduStanfordNlpTaggerMaxentHistory *h = new_EduStanfordNlpTaggerMaxentHistory_initWithInt_withInt_withInt_withEduStanfordNlpTaggerMaxentPairsHolder_withEduStanfordNlpTaggerMaxentExtractors_(self->totalWords_ + self->totalSentences_, self->totalWords_ + self->totalSentences_ + [sentence size], self->totalWords_ + self->totalSentences_ + i, self->pairs_, self->maxentTagger_->extractors_);
      NSString *tag = [tags getWithInt:i];
      NSString *word = [words getWithInt:i];
      [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(self->pairs_)) addWithEduStanfordNlpLingWordTag:new_EduStanfordNlpLingWordTag_initWithNSString_withNSString_(word, tag)];
      jint y = [self->maxentTagger_ addTagWithNSString:tag];
      EduStanfordNlpTaggerMaxentDataWordTag *dat = new_EduStanfordNlpTaggerMaxentDataWordTag_initWithEduStanfordNlpTaggerMaxentHistory_withInt_withNSString_(h, y, tag);
      [((JavaUtilArrayList *) nil_chk(self->v_)) addWithId:dat];
      EduStanfordNlpStatsIntCounter *tagCounts = [((id<JavaUtilMap>) nil_chk(wordTagCounts)) getWithId:word];
      if (tagCounts == nil) {
        tagCounts = new_EduStanfordNlpStatsIntCounter_init();
        (void) [wordTagCounts putWithId:word withId:tagCounts];
      }
      [tagCounts incrementCountWithId:tag withInt:1];
    }
    self->totalSentences_++;
    self->totalWords_ += [sentence size];
    numSentences++;
    numWords += [sentence size];
    [words clear];
    [tags clear];
    if ((numSentences % 100000) == 0) [JreLoadStatic(JavaLangSystem, err) printlnWithNSString:JreStrcat("$I$I$I$", @"Read ", numSentences, @" sentences, min ", minLen, @" words, max ", maxLen, @" words ... [still reading]")];
  }
  [JreLoadStatic(JavaLangSystem, err) printlnWithNSString:JreStrcat("$I$$$", @"Read ", numWords, @" words from ", [reader filename], @" [done].")];
  [JreLoadStatic(JavaLangSystem, err) printlnWithNSString:JreStrcat("$I$I$I$", @"Read ", numSentences, @" sentences, min ", minLen, @" words, max ", maxLen, @" words.")];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentReadDataTagged)
