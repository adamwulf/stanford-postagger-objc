//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/tagger/maxent/History.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/tagger/maxent/Extractor.h"
#include "edu/stanford/nlp/tagger/maxent/Extractors.h"
#include "edu/stanford/nlp/tagger/maxent/History.h"
#include "edu/stanford/nlp/tagger/maxent/PairsHolder.h"
#include "java/io/PrintStream.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"

@interface EduStanfordNlpTaggerMaxentHistory ()

- (NSString *)getXWithInt:(jint)index;

@end

__attribute__((unused)) static NSString *EduStanfordNlpTaggerMaxentHistory_getXWithInt_(EduStanfordNlpTaggerMaxentHistory *self, jint index);

@implementation EduStanfordNlpTaggerMaxentHistory

- (instancetype)initWithEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pairs
                     withEduStanfordNlpTaggerMaxentExtractors:(EduStanfordNlpTaggerMaxentExtractors *)extractors {
  EduStanfordNlpTaggerMaxentHistory_initWithEduStanfordNlpTaggerMaxentPairsHolder_withEduStanfordNlpTaggerMaxentExtractors_(self, pairs, extractors);
  return self;
}

- (instancetype)initWithInt:(jint)start
                    withInt:(jint)end
                    withInt:(jint)current
withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pairs
withEduStanfordNlpTaggerMaxentExtractors:(EduStanfordNlpTaggerMaxentExtractors *)extractors {
  EduStanfordNlpTaggerMaxentHistory_initWithInt_withInt_withInt_withEduStanfordNlpTaggerMaxentPairsHolder_withEduStanfordNlpTaggerMaxentExtractors_(self, start, end, current, pairs, extractors);
  return self;
}

- (void)init__WithInt:(jint)start
              withInt:(jint)end
              withInt:(jint)current {
  self->start_ = start;
  self->end_ = end;
  self->current_ = current;
}

- (NSString *)getXWithInt:(jint)index {
  return EduStanfordNlpTaggerMaxentHistory_getXWithInt_(self, index);
}

- (IOSObjectArray *)getX {
  IOSObjectArray *x = [IOSObjectArray newArrayWithLength:[((EduStanfordNlpTaggerMaxentExtractors *) nil_chk(extractors_)) size] type:NSString_class_()];
  for (jint i = 0; i < x->size_; i++) {
    (void) IOSObjectArray_Set(x, i, EduStanfordNlpTaggerMaxentHistory_getXWithInt_(self, i));
  }
  return x;
}

- (void)printWithJavaIoPrintStream:(JavaIoPrintStream *)ps {
  IOSObjectArray *str = [self getX];
  {
    IOSObjectArray *a__ = str;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *aStr = *b__++;
      [((JavaIoPrintStream *) nil_chk(ps)) printWithNSString:aStr];
      [ps printWithChar:0x0009];
    }
  }
  [((JavaIoPrintStream *) nil_chk(ps)) println];
}

- (void)printSent {
  [self printWithJavaIoPrintStream:JreLoadStatic(JavaLangSystem, out)];
  for (jint i = self->start_; i < self->end_; i++) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printWithNSString:JreStrcat("$C$C", [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pairs_)) getTagWithInt:i], ' ', [pairs_ getWordWithInt:i], 0x0009)];
  }
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) println];
}

- (void)setTagWithInt:(jint)pos
         withNSString:(NSString *)tag {
  [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pairs_)) setTagWithInt:pos + start_ withNSString:tag];
}

- (void)setWithInt:(jint)start
           withInt:(jint)end
           withInt:(jint)current {
  self->start_ = start;
  self->end_ = end;
  self->current_ = current;
}

- (NSString *)description {
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  IOSObjectArray *str = [self getX];
  {
    IOSObjectArray *a__ = str;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *aStr = *b__++;
      (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:aStr])) appendWithChar:0x0009];
    }
  }
  return [sb description];
}

- (NSUInteger)hash {
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  for (jint i = 0; i < [((EduStanfordNlpTaggerMaxentExtractors *) nil_chk(extractors_)) size]; i++) {
    (void) [sb appendWithNSString:EduStanfordNlpTaggerMaxentHistory_getXWithInt_(self, i)];
  }
  return ((jint) [((NSString *) nil_chk([sb description])) hash]);
}

- (jboolean)isEqual:(id)h1 {
  return [h1 isKindOfClass:[EduStanfordNlpTaggerMaxentHistory class]] && [((EduStanfordNlpTaggerMaxentExtractors *) nil_chk(extractors_)) equalsWithEduStanfordNlpTaggerMaxentHistory:self withEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *) cast_chk(h1, [EduStanfordNlpTaggerMaxentHistory class])];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 10, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 11, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 12, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 13, 14, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTaggerMaxentPairsHolder:withEduStanfordNlpTaggerMaxentExtractors:);
  methods[1].selector = @selector(initWithInt:withInt:withInt:withEduStanfordNlpTaggerMaxentPairsHolder:withEduStanfordNlpTaggerMaxentExtractors:);
  methods[2].selector = @selector(init__WithInt:withInt:withInt:);
  methods[3].selector = @selector(getXWithInt:);
  methods[4].selector = @selector(getX);
  methods[5].selector = @selector(printWithJavaIoPrintStream:);
  methods[6].selector = @selector(printSent);
  methods[7].selector = @selector(setTagWithInt:withNSString:);
  methods[8].selector = @selector(setWithInt:withInt:withInt:);
  methods[9].selector = @selector(description);
  methods[10].selector = @selector(hash);
  methods[11].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "start_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "end_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "current_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "pairs_", "LEduStanfordNlpTaggerMaxentPairsHolder;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "extractors_", "LEduStanfordNlpTaggerMaxentExtractors;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTaggerMaxentPairsHolder;LEduStanfordNlpTaggerMaxentExtractors;", "IIILEduStanfordNlpTaggerMaxentPairsHolder;LEduStanfordNlpTaggerMaxentExtractors;", "init", "III", "getX", "I", "print", "LJavaIoPrintStream;", "setTag", "ILNSString;", "set", "toString", "hashCode", "equals", "LNSObject;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentHistory = { "History", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x1, 12, 5, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentHistory;
}

@end

void EduStanfordNlpTaggerMaxentHistory_initWithEduStanfordNlpTaggerMaxentPairsHolder_withEduStanfordNlpTaggerMaxentExtractors_(EduStanfordNlpTaggerMaxentHistory *self, EduStanfordNlpTaggerMaxentPairsHolder *pairs, EduStanfordNlpTaggerMaxentExtractors *extractors) {
  NSObject_init(self);
  self->pairs_ = pairs;
  self->extractors_ = extractors;
}

EduStanfordNlpTaggerMaxentHistory *new_EduStanfordNlpTaggerMaxentHistory_initWithEduStanfordNlpTaggerMaxentPairsHolder_withEduStanfordNlpTaggerMaxentExtractors_(EduStanfordNlpTaggerMaxentPairsHolder *pairs, EduStanfordNlpTaggerMaxentExtractors *extractors) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentHistory, initWithEduStanfordNlpTaggerMaxentPairsHolder_withEduStanfordNlpTaggerMaxentExtractors_, pairs, extractors)
}

EduStanfordNlpTaggerMaxentHistory *create_EduStanfordNlpTaggerMaxentHistory_initWithEduStanfordNlpTaggerMaxentPairsHolder_withEduStanfordNlpTaggerMaxentExtractors_(EduStanfordNlpTaggerMaxentPairsHolder *pairs, EduStanfordNlpTaggerMaxentExtractors *extractors) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentHistory, initWithEduStanfordNlpTaggerMaxentPairsHolder_withEduStanfordNlpTaggerMaxentExtractors_, pairs, extractors)
}

void EduStanfordNlpTaggerMaxentHistory_initWithInt_withInt_withInt_withEduStanfordNlpTaggerMaxentPairsHolder_withEduStanfordNlpTaggerMaxentExtractors_(EduStanfordNlpTaggerMaxentHistory *self, jint start, jint end, jint current, EduStanfordNlpTaggerMaxentPairsHolder *pairs, EduStanfordNlpTaggerMaxentExtractors *extractors) {
  NSObject_init(self);
  self->pairs_ = pairs;
  self->extractors_ = extractors;
  [self init__WithInt:start withInt:end withInt:current];
}

EduStanfordNlpTaggerMaxentHistory *new_EduStanfordNlpTaggerMaxentHistory_initWithInt_withInt_withInt_withEduStanfordNlpTaggerMaxentPairsHolder_withEduStanfordNlpTaggerMaxentExtractors_(jint start, jint end, jint current, EduStanfordNlpTaggerMaxentPairsHolder *pairs, EduStanfordNlpTaggerMaxentExtractors *extractors) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentHistory, initWithInt_withInt_withInt_withEduStanfordNlpTaggerMaxentPairsHolder_withEduStanfordNlpTaggerMaxentExtractors_, start, end, current, pairs, extractors)
}

EduStanfordNlpTaggerMaxentHistory *create_EduStanfordNlpTaggerMaxentHistory_initWithInt_withInt_withInt_withEduStanfordNlpTaggerMaxentPairsHolder_withEduStanfordNlpTaggerMaxentExtractors_(jint start, jint end, jint current, EduStanfordNlpTaggerMaxentPairsHolder *pairs, EduStanfordNlpTaggerMaxentExtractors *extractors) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentHistory, initWithInt_withInt_withInt_withEduStanfordNlpTaggerMaxentPairsHolder_withEduStanfordNlpTaggerMaxentExtractors_, start, end, current, pairs, extractors)
}

NSString *EduStanfordNlpTaggerMaxentHistory_getXWithInt_(EduStanfordNlpTaggerMaxentHistory *self, jint index) {
  return [((EduStanfordNlpTaggerMaxentExtractor *) nil_chk([((EduStanfordNlpTaggerMaxentExtractors *) nil_chk(self->extractors_)) getWithInt:index])) extractWithEduStanfordNlpTaggerMaxentHistory:self];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentHistory)
