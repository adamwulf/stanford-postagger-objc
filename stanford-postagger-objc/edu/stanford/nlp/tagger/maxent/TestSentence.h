//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/tagger/maxent/TestSentence.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpTaggerMaxentTestSentence")
#ifdef RESTRICT_EduStanfordNlpTaggerMaxentTestSentence
#define INCLUDE_ALL_EduStanfordNlpTaggerMaxentTestSentence 0
#else
#define INCLUDE_ALL_EduStanfordNlpTaggerMaxentTestSentence 1
#endif
#undef RESTRICT_EduStanfordNlpTaggerMaxentTestSentence

#if !defined (EduStanfordNlpTaggerMaxentTestSentence_) && (INCLUDE_ALL_EduStanfordNlpTaggerMaxentTestSentence || defined(INCLUDE_EduStanfordNlpTaggerMaxentTestSentence))
#define EduStanfordNlpTaggerMaxentTestSentence_

#define RESTRICT_EduStanfordNlpSequencesSequenceModel 1
#define INCLUDE_EduStanfordNlpSequencesSequenceModel 1
#include "edu/stanford/nlp/sequences/SequenceModel.h"

@class EduStanfordNlpIoPrintFile;
@class EduStanfordNlpTaggerMaxentHistory;
@class EduStanfordNlpTaggerMaxentMaxentTagger;
@class EduStanfordNlpTaggerMaxentPairsHolder;
@class EduStanfordNlpUtilConfusionMatrix;
@class IOSDoubleArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaUtilArrayList;
@protocol JavaUtilList;
@protocol JavaUtilMap;

@interface EduStanfordNlpTaggerMaxentTestSentence : NSObject < EduStanfordNlpSequencesSequenceModel > {
 @public
  jboolean VERBOSE_;
  NSString *tagSeparator_;
  NSString *encoding_;
  EduStanfordNlpTaggerMaxentPairsHolder *pairs_;
  id<JavaUtilList> sent_;
  id<JavaUtilList> originalTags_;
  id<JavaUtilList> origWords_;
  jint size_;
  IOSObjectArray *correctTags_;
  IOSObjectArray *finalTags_;
  JavaUtilArrayList *result_;
  jint numRight_;
  jint numWrong_;
  jint numUnknown_;
  jint numWrongUnknown_;
  volatile_id localScores_;
  volatile_id localContextScores_;
  EduStanfordNlpTaggerMaxentMaxentTagger *maxentTagger_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpTaggerMaxentMaxentTagger:(EduStanfordNlpTaggerMaxentMaxentTagger *)maxentTagger;

- (IOSIntArray *)getPossibleValuesWithInt:(jint)pos;

- (jint)leftWindow;

- (jint)length;

- (jint)rightWindow;

- (jdouble)scoreOfWithIntArray:(IOSIntArray *)sequence;

- (jdouble)scoreOfWithIntArray:(IOSIntArray *)tags
                       withInt:(jint)pos;

- (IOSDoubleArray *)scoresOfWithIntArray:(IOSIntArray *)tags
                                 withInt:(jint)pos;

- (void)setCorrectTagsWithJavaUtilList:(id<JavaUtilList>)sentence;

- (JavaUtilArrayList *)tagSentenceWithJavaUtilList:(id<JavaUtilList>)s
                                       withBoolean:(jboolean)reuseTags;

#pragma mark Protected

- (void)calculateProbsWithDoubleArray3:(IOSObjectArray *)probabilities;

- (void)cleanUpScorer;

- (IOSDoubleArray *)getHistoriesWithNSStringArray:(IOSObjectArray *)tags
            withEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h;

- (void)init__ OBJC_METHOD_FAMILY_NONE;

- (void)initializeScorer OBJC_METHOD_FAMILY_NONE;

- (void)revertWithInt:(jint)prevSize;

- (IOSObjectArray *)stringTagsAtWithInt:(jint)pos;

- (void)updateConfusionMatrixWithNSStringArray:(IOSObjectArray *)finalTags
         withEduStanfordNlpUtilConfusionMatrix:(EduStanfordNlpUtilConfusionMatrix *)confusionMatrix;

- (void)writeTagsAndErrorsWithNSStringArray:(IOSObjectArray *)finalTags
              withEduStanfordNlpIoPrintFile:(EduStanfordNlpIoPrintFile *)pf
                                withBoolean:(jboolean)verboseResults;

#pragma mark Package-Private

- (NSString *)getTaggedNice;

- (JavaUtilArrayList *)getTaggedSentence;

- (void)printTopWithEduStanfordNlpIoPrintFile:(EduStanfordNlpIoPrintFile *)pfu;

- (void)printUnknownWithInt:(jint)numSent
withEduStanfordNlpIoPrintFile:(EduStanfordNlpIoPrintFile *)pfu;

+ (NSString *)toNiceWithNSString:(NSString *)s;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpTaggerMaxentTestSentence)

J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentTestSentence, tagSeparator_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentTestSentence, encoding_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentTestSentence, pairs_, EduStanfordNlpTaggerMaxentPairsHolder *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentTestSentence, sent_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentTestSentence, originalTags_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentTestSentence, origWords_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentTestSentence, correctTags_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentTestSentence, finalTags_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentTestSentence, result_, JavaUtilArrayList *)
J2OBJC_VOLATILE_FIELD_SETTER(EduStanfordNlpTaggerMaxentTestSentence, localScores_, id<JavaUtilMap>)
J2OBJC_VOLATILE_FIELD_SETTER(EduStanfordNlpTaggerMaxentTestSentence, localContextScores_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentTestSentence, maxentTagger_, EduStanfordNlpTaggerMaxentMaxentTagger *)

inline NSString *EduStanfordNlpTaggerMaxentTestSentence_get_naTag();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpTaggerMaxentTestSentence_naTag;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentTestSentence, naTag, NSString *)

inline jboolean EduStanfordNlpTaggerMaxentTestSentence_get_DBG();
#define EduStanfordNlpTaggerMaxentTestSentence_DBG false
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentTestSentence, DBG, jboolean)

inline jint EduStanfordNlpTaggerMaxentTestSentence_get_kBestSize();
#define EduStanfordNlpTaggerMaxentTestSentence_kBestSize 1
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentTestSentence, kBestSize, jint)

FOUNDATION_EXPORT void EduStanfordNlpTaggerMaxentTestSentence_initWithEduStanfordNlpTaggerMaxentMaxentTagger_(EduStanfordNlpTaggerMaxentTestSentence *self, EduStanfordNlpTaggerMaxentMaxentTagger *maxentTagger);

FOUNDATION_EXPORT EduStanfordNlpTaggerMaxentTestSentence *new_EduStanfordNlpTaggerMaxentTestSentence_initWithEduStanfordNlpTaggerMaxentMaxentTagger_(EduStanfordNlpTaggerMaxentMaxentTagger *maxentTagger) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTaggerMaxentTestSentence *create_EduStanfordNlpTaggerMaxentTestSentence_initWithEduStanfordNlpTaggerMaxentMaxentTagger_(EduStanfordNlpTaggerMaxentMaxentTagger *maxentTagger);

FOUNDATION_EXPORT NSString *EduStanfordNlpTaggerMaxentTestSentence_toNiceWithNSString_(NSString *s);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTaggerMaxentTestSentence)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpTaggerMaxentTestSentence")
