//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/tagger/maxent/TaggerFeature.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/maxent/Feature.h"
#include "edu/stanford/nlp/tagger/maxent/FeatureKey.h"
#include "edu/stanford/nlp/tagger/maxent/TaggerExperiments.h"
#include "edu/stanford/nlp/tagger/maxent/TaggerFeature.h"
#include "edu/stanford/nlp/tagger/maxent/TaggerFeatures.h"

@interface EduStanfordNlpTaggerMaxentTaggerFeature () {
 @public
  jint start_;
  jint end_;
  EduStanfordNlpTaggerMaxentFeatureKey *key_;
  jint yTag_;
  EduStanfordNlpTaggerMaxentTaggerExperiments *domain_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentTaggerFeature, key_, EduStanfordNlpTaggerMaxentFeatureKey *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentTaggerFeature, domain_, EduStanfordNlpTaggerMaxentTaggerExperiments *)

@implementation EduStanfordNlpTaggerMaxentTaggerFeature

- (instancetype)initWithInt:(jint)start
                    withInt:(jint)end
withEduStanfordNlpTaggerMaxentFeatureKey:(EduStanfordNlpTaggerMaxentFeatureKey *)key
                    withInt:(jint)yTag
withEduStanfordNlpTaggerMaxentTaggerExperiments:(EduStanfordNlpTaggerMaxentTaggerExperiments *)domain {
  EduStanfordNlpTaggerMaxentTaggerFeature_initWithInt_withInt_withEduStanfordNlpTaggerMaxentFeatureKey_withInt_withEduStanfordNlpTaggerMaxentTaggerExperiments_(self, start, end, key, yTag, domain);
  return self;
}

- (jdouble)getValWithInt:(jint)index {
  return 1.0;
}

- (jint)getYWithInt:(jint)index {
  return yTag_;
}

- (jint)len {
  return end_ - start_ + 1;
}

- (jint)getXWithInt:(jint)index {
  return IOSIntArray_Get(nil_chk(((EduStanfordNlpTaggerMaxentTaggerFeatures *) nil_chk([((EduStanfordNlpTaggerMaxentTaggerExperiments *) nil_chk(domain_)) getTaggerFeatures]))->xIndexed_), start_ + index);
}

- (jint)getYTag {
  return yTag_;
}

- (jdouble)getValWithInt:(jint)x
                 withInt:(jint)y {
  jint num = x * ((EduStanfordNlpTaggerMaxentTaggerExperiments *) nil_chk(domain_))->ySize_ + y;
  if (!([self getYTag] == y)) {
    return 0;
  }
  for (jint i = 0; i < [self len]; i++) {
    if ([self getXWithInt:i] == num) {
      return 1;
    }
  }
  return 0;
}

- (jdouble)ftilde {
  jdouble s = 0.0;
  jint y = [self getYTag];
  for (jint example = start_; example < end_ + 1; example++) {
    jint x = IOSIntArray_Get(nil_chk(((EduStanfordNlpTaggerMaxentTaggerFeatures *) nil_chk([((EduStanfordNlpTaggerMaxentTaggerExperiments *) nil_chk(domain_)) getTaggerFeatures]))->xIndexed_), example);
    s = s + [domain_ ptildeXYWithInt:x withInt:y];
  }
  return s;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 1, 5, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:withInt:withEduStanfordNlpTaggerMaxentFeatureKey:withInt:withEduStanfordNlpTaggerMaxentTaggerExperiments:);
  methods[1].selector = @selector(getValWithInt:);
  methods[2].selector = @selector(getYWithInt:);
  methods[3].selector = @selector(len);
  methods[4].selector = @selector(getXWithInt:);
  methods[5].selector = @selector(getYTag);
  methods[6].selector = @selector(getValWithInt:withInt:);
  methods[7].selector = @selector(ftilde);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "start_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "end_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "key_", "LEduStanfordNlpTaggerMaxentFeatureKey;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "yTag_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "domain_", "LEduStanfordNlpTaggerMaxentTaggerExperiments;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "IILEduStanfordNlpTaggerMaxentFeatureKey;ILEduStanfordNlpTaggerMaxentTaggerExperiments;", "getVal", "I", "getY", "getX", "II" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentTaggerFeature = { "TaggerFeature", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x1, 8, 5, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentTaggerFeature;
}

@end

void EduStanfordNlpTaggerMaxentTaggerFeature_initWithInt_withInt_withEduStanfordNlpTaggerMaxentFeatureKey_withInt_withEduStanfordNlpTaggerMaxentTaggerExperiments_(EduStanfordNlpTaggerMaxentTaggerFeature *self, jint start, jint end, EduStanfordNlpTaggerMaxentFeatureKey *key, jint yTag, EduStanfordNlpTaggerMaxentTaggerExperiments *domain) {
  EduStanfordNlpMaxentFeature_init(self);
  self->start_ = start;
  self->end_ = end;
  self->key_ = key;
  self->domain_ = domain;
  self->yTag_ = yTag;
}

EduStanfordNlpTaggerMaxentTaggerFeature *new_EduStanfordNlpTaggerMaxentTaggerFeature_initWithInt_withInt_withEduStanfordNlpTaggerMaxentFeatureKey_withInt_withEduStanfordNlpTaggerMaxentTaggerExperiments_(jint start, jint end, EduStanfordNlpTaggerMaxentFeatureKey *key, jint yTag, EduStanfordNlpTaggerMaxentTaggerExperiments *domain) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentTaggerFeature, initWithInt_withInt_withEduStanfordNlpTaggerMaxentFeatureKey_withInt_withEduStanfordNlpTaggerMaxentTaggerExperiments_, start, end, key, yTag, domain)
}

EduStanfordNlpTaggerMaxentTaggerFeature *create_EduStanfordNlpTaggerMaxentTaggerFeature_initWithInt_withInt_withEduStanfordNlpTaggerMaxentFeatureKey_withInt_withEduStanfordNlpTaggerMaxentTaggerExperiments_(jint start, jint end, EduStanfordNlpTaggerMaxentFeatureKey *key, jint yTag, EduStanfordNlpTaggerMaxentTaggerExperiments *domain) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentTaggerFeature, initWithInt_withInt_withEduStanfordNlpTaggerMaxentFeatureKey_withInt_withEduStanfordNlpTaggerMaxentTaggerExperiments_, start, end, key, yTag, domain)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentTaggerFeature)
