//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/tagger/maxent/AmbiguityClass.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/tagger/maxent/AmbiguityClass.h"
#include "edu/stanford/nlp/tagger/maxent/Dictionary.h"
#include "edu/stanford/nlp/tagger/maxent/TTags.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/List.h"

@interface EduStanfordNlpTaggerMaxentAmbiguityClass () {
 @public
  id<JavaUtilList> sortedIds_;
  NSString *key_;
  NSString *word_;
  jboolean single_;
}

- (jboolean)addWithInt:(jint)tagId;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentAmbiguityClass, sortedIds_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentAmbiguityClass, key_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentAmbiguityClass, word_, NSString *)

__attribute__((unused)) static jboolean EduStanfordNlpTaggerMaxentAmbiguityClass_addWithInt_(EduStanfordNlpTaggerMaxentAmbiguityClass *self, jint tagId);

@implementation EduStanfordNlpTaggerMaxentAmbiguityClass

- (instancetype)initWithNSString:(NSString *)word
                     withBoolean:(jboolean)single
withEduStanfordNlpTaggerMaxentDictionary:(EduStanfordNlpTaggerMaxentDictionary *)dict
withEduStanfordNlpTaggerMaxentTTags:(EduStanfordNlpTaggerMaxentTTags *)ttags {
  EduStanfordNlpTaggerMaxentAmbiguityClass_initWithNSString_withBoolean_withEduStanfordNlpTaggerMaxentDictionary_withEduStanfordNlpTaggerMaxentTTags_(self, word, single, dict, ttags);
  return self;
}

- (NSString *)getWord {
  return word_;
}

- (jboolean)addWithInt:(jint)tagId {
  return EduStanfordNlpTaggerMaxentAmbiguityClass_addWithInt_(self, tagId);
}

- (NSString *)description {
  if (single_) {
    return word_;
  }
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  for (JavaLangInteger * __strong sID in nil_chk(sortedIds_)) {
    (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithChar:':'])) appendWithInt:[((JavaLangInteger *) nil_chk(sID)) intValue]];
  }
  return [sb description];
}

- (NSUInteger)hash {
  return ((jint) [((NSString *) nil_chk(key_)) hash]);
}

- (jboolean)isEqual:(id)o {
  return [o isKindOfClass:[EduStanfordNlpTaggerMaxentAmbiguityClass class]] && [((NSString *) nil_chk(key_)) isEqual:((EduStanfordNlpTaggerMaxentAmbiguityClass *) nil_chk(((EduStanfordNlpTaggerMaxentAmbiguityClass *) cast_chk(o, [EduStanfordNlpTaggerMaxentAmbiguityClass class]))))->key_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withBoolean:withEduStanfordNlpTaggerMaxentDictionary:withEduStanfordNlpTaggerMaxentTTags:);
  methods[1].selector = @selector(getWord);
  methods[2].selector = @selector(addWithInt:);
  methods[3].selector = @selector(description);
  methods[4].selector = @selector(hash);
  methods[5].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sortedIds_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 7, -1 },
    { "key_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "word_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "single_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;ZLEduStanfordNlpTaggerMaxentDictionary;LEduStanfordNlpTaggerMaxentTTags;", "add", "I", "toString", "hashCode", "equals", "LNSObject;", "Ljava/util/List<Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentAmbiguityClass = { "AmbiguityClass", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x1, 6, 4, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentAmbiguityClass;
}

@end

void EduStanfordNlpTaggerMaxentAmbiguityClass_initWithNSString_withBoolean_withEduStanfordNlpTaggerMaxentDictionary_withEduStanfordNlpTaggerMaxentTTags_(EduStanfordNlpTaggerMaxentAmbiguityClass *self, NSString *word, jboolean single, EduStanfordNlpTaggerMaxentDictionary *dict, EduStanfordNlpTaggerMaxentTTags *ttags) {
  NSObject_init(self);
  self->single_ = single;
  if (single) {
    self->word_ = word;
    self->sortedIds_ = JavaUtilCollections_emptyList();
  }
  else {
    self->word_ = nil;
    IOSObjectArray *tags = [((EduStanfordNlpTaggerMaxentDictionary *) nil_chk(dict)) getTagsWithNSString:word];
    self->sortedIds_ = new_JavaUtilArrayList_initWithInt_(((IOSObjectArray *) nil_chk(tags))->size_);
    {
      IOSObjectArray *a__ = tags;
      NSString * const *b__ = a__->buffer_;
      NSString * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        NSString *tag = *b__++;
        EduStanfordNlpTaggerMaxentAmbiguityClass_addWithInt_(self, [((EduStanfordNlpTaggerMaxentTTags *) nil_chk(ttags)) getIndexWithNSString:tag]);
      }
    }
  }
  self->key_ = [self description];
}

EduStanfordNlpTaggerMaxentAmbiguityClass *new_EduStanfordNlpTaggerMaxentAmbiguityClass_initWithNSString_withBoolean_withEduStanfordNlpTaggerMaxentDictionary_withEduStanfordNlpTaggerMaxentTTags_(NSString *word, jboolean single, EduStanfordNlpTaggerMaxentDictionary *dict, EduStanfordNlpTaggerMaxentTTags *ttags) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentAmbiguityClass, initWithNSString_withBoolean_withEduStanfordNlpTaggerMaxentDictionary_withEduStanfordNlpTaggerMaxentTTags_, word, single, dict, ttags)
}

EduStanfordNlpTaggerMaxentAmbiguityClass *create_EduStanfordNlpTaggerMaxentAmbiguityClass_initWithNSString_withBoolean_withEduStanfordNlpTaggerMaxentDictionary_withEduStanfordNlpTaggerMaxentTTags_(NSString *word, jboolean single, EduStanfordNlpTaggerMaxentDictionary *dict, EduStanfordNlpTaggerMaxentTTags *ttags) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentAmbiguityClass, initWithNSString_withBoolean_withEduStanfordNlpTaggerMaxentDictionary_withEduStanfordNlpTaggerMaxentTTags_, word, single, dict, ttags)
}

jboolean EduStanfordNlpTaggerMaxentAmbiguityClass_addWithInt_(EduStanfordNlpTaggerMaxentAmbiguityClass *self, jint tagId) {
  for (jint j = 0; j < [((id<JavaUtilList>) nil_chk(self->sortedIds_)) size]; j++) {
    if (tagId < [((JavaLangInteger *) nil_chk([self->sortedIds_ getWithInt:j])) intValue]) {
      [self->sortedIds_ addWithInt:j withId:JavaLangInteger_valueOfWithInt_(tagId)];
      return true;
    }
    if (tagId == [((JavaLangInteger *) nil_chk([self->sortedIds_ getWithInt:j])) intValue]) {
      return false;
    }
  }
  [self->sortedIds_ addWithId:JavaLangInteger_valueOfWithInt_(tagId)];
  return true;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentAmbiguityClass)
