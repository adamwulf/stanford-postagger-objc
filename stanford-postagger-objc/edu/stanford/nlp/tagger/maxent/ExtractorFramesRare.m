//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/tagger/maxent/ExtractorFramesRare.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/international/french/FrenchUnknownWordSignatures.h"
#include "edu/stanford/nlp/international/spanish/SpanishUnknownWordSignatures.h"
#include "edu/stanford/nlp/tagger/maxent/ASBCunkDict.h"
#include "edu/stanford/nlp/tagger/maxent/CTBunkDict.h"
#include "edu/stanford/nlp/tagger/maxent/CtbDict.h"
#include "edu/stanford/nlp/tagger/maxent/Dictionary.h"
#include "edu/stanford/nlp/tagger/maxent/Extractor.h"
#include "edu/stanford/nlp/tagger/maxent/ExtractorDistsim.h"
#include "edu/stanford/nlp/tagger/maxent/ExtractorDistsimConjunction.h"
#include "edu/stanford/nlp/tagger/maxent/ExtractorFramesRare.h"
#include "edu/stanford/nlp/tagger/maxent/ExtractorWordShapeClassifier.h"
#include "edu/stanford/nlp/tagger/maxent/ExtractorWordShapeConjunction.h"
#include "edu/stanford/nlp/tagger/maxent/History.h"
#include "edu/stanford/nlp/tagger/maxent/MaxentTagger.h"
#include "edu/stanford/nlp/tagger/maxent/PairsHolder.h"
#include "edu/stanford/nlp/tagger/maxent/TTags.h"
#include "edu/stanford/nlp/tagger/maxent/TestSentence.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "edu/stanford/nlp/util/StringUtils.h"
#include "java/io/PrintStream.h"
#include "java/lang/Character.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "java/util/Set.h"

@interface EduStanfordNlpTaggerMaxentExtractorFramesRare ()

- (instancetype)init;

+ (void)getNaaclExtractorsWithJavaUtilArrayList:(JavaUtilArrayList *)extrs;

+ (void)getCaselessNaaclExtractorsWithJavaUtilArrayList:(JavaUtilArrayList *)extrs;

+ (IOSObjectArray *)naacl2003Conjunctions;

+ (IOSObjectArray *)lcTagFeaturesWithEduStanfordNlpTaggerMaxentTTags:(EduStanfordNlpTaggerMaxentTTags *)ttags;

+ (IOSObjectArray *)ctbPreFeaturesWithInt:(jint)n;

+ (IOSObjectArray *)ctbSufFeaturesWithInt:(jint)n;

+ (IOSObjectArray *)asbcUnkFeaturesWithInt:(jint)n;

+ (IOSObjectArray *)ctbUnkDictFeaturesWithInt:(jint)n;

@end

inline EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cWordSuff1();
static EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff1;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cWordSuff1, EduStanfordNlpTaggerMaxentExtractor *)

inline EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cWordSuff2();
static EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff2;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cWordSuff2, EduStanfordNlpTaggerMaxentExtractor *)

inline EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cWordSuff3();
static EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff3;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cWordSuff3, EduStanfordNlpTaggerMaxentExtractor *)

inline EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cWordSuff4();
static EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff4;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cWordSuff4, EduStanfordNlpTaggerMaxentExtractor *)

inline EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cWordUppCase();
static EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordUppCase;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cWordUppCase, EduStanfordNlpTaggerMaxentExtractor *)

inline EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cWordNumber();
static EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordNumber;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cWordNumber, EduStanfordNlpTaggerMaxentExtractor *)

inline EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cWordDash();
static EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordDash;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cWordDash, EduStanfordNlpTaggerMaxentExtractor *)

inline EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cNoLower();
static EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_cNoLower;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cNoLower, EduStanfordNlpTaggerMaxentExtractor *)

inline EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cAllCapitalized();
static EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_cAllCapitalized;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cAllCapitalized, EduStanfordNlpTaggerMaxentExtractor *)

inline EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cCompany();
static EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_cCompany;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cCompany, EduStanfordNlpTaggerMaxentExtractor *)

inline EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cCaselessCompany();
static EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_cCaselessCompany;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cCaselessCompany, EduStanfordNlpTaggerMaxentExtractor *)

inline EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cLetterDigitDash();
static EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_cLetterDigitDash;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cLetterDigitDash, EduStanfordNlpTaggerMaxentExtractor *)

inline EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cUpperDigitDash();
static EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_cUpperDigitDash;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cUpperDigitDash, EduStanfordNlpTaggerMaxentExtractor *)

inline EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cCapDist();
static EduStanfordNlpTaggerMaxentExtractor *EduStanfordNlpTaggerMaxentExtractorFramesRare_cCapDist;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cCapDist, EduStanfordNlpTaggerMaxentExtractor *)

inline IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_eFrames_motley_naacl2003();
static IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_eFrames_motley_naacl2003;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, eFrames_motley_naacl2003, IOSObjectArray *)

inline IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_eFrames_motley_naacl2003_left();
static IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_eFrames_motley_naacl2003_left;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, eFrames_motley_naacl2003_left, IOSObjectArray *)

inline IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_eFrames_motley_caseless_naacl2003();
static IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_eFrames_motley_caseless_naacl2003;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, eFrames_motley_caseless_naacl2003, IOSObjectArray *)

inline EduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cWordFrenchNounSuffix();
static EduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix *EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordFrenchNounSuffix;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cWordFrenchNounSuffix, EduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix *)

inline EduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cWordFrenchAdvSuffix();
static EduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix *EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordFrenchAdvSuffix;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cWordFrenchAdvSuffix, EduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix *)

inline EduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cWordFrenchVerbSuffix();
static EduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix *EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordFrenchVerbSuffix;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cWordFrenchVerbSuffix, EduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix *)

inline EduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cWordFrenchAdjSuffix();
static EduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix *EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordFrenchAdjSuffix;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cWordFrenchAdjSuffix, EduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix *)

inline EduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cWordFrenchPluralSuffix();
static EduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix *EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordFrenchPluralSuffix;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cWordFrenchPluralSuffix, EduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix *)

inline IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_french_unknown_extractors();
static IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_french_unknown_extractors;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, french_unknown_extractors, IOSObjectArray *)

inline EduStanfordNlpTaggerMaxentExtractorSpanishGender *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cWordSpanishGender();
static EduStanfordNlpTaggerMaxentExtractorSpanishGender *EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSpanishGender;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cWordSpanishGender, EduStanfordNlpTaggerMaxentExtractorSpanishGender *)

inline EduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cWordSpanishConditionalSuffix();
static EduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix *EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSpanishConditionalSuffix;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cWordSpanishConditionalSuffix, EduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix *)

inline EduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_cWordSpanishImperfectErIrSuffix();
static EduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix *EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSpanishImperfectErIrSuffix;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, cWordSpanishImperfectErIrSuffix, EduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix *)

inline IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_get_spanish_unknown_extractors();
static IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_spanish_unknown_extractors;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTaggerMaxentExtractorFramesRare, spanish_unknown_extractors, IOSObjectArray *)

__attribute__((unused)) static void EduStanfordNlpTaggerMaxentExtractorFramesRare_init(EduStanfordNlpTaggerMaxentExtractorFramesRare *self);

__attribute__((unused)) static EduStanfordNlpTaggerMaxentExtractorFramesRare *new_EduStanfordNlpTaggerMaxentExtractorFramesRare_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTaggerMaxentExtractorFramesRare *create_EduStanfordNlpTaggerMaxentExtractorFramesRare_init();

__attribute__((unused)) static void EduStanfordNlpTaggerMaxentExtractorFramesRare_getNaaclExtractorsWithJavaUtilArrayList_(JavaUtilArrayList *extrs);

__attribute__((unused)) static void EduStanfordNlpTaggerMaxentExtractorFramesRare_getCaselessNaaclExtractorsWithJavaUtilArrayList_(JavaUtilArrayList *extrs);

__attribute__((unused)) static IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_naacl2003Conjunctions();

__attribute__((unused)) static IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_lcTagFeaturesWithEduStanfordNlpTaggerMaxentTTags_(EduStanfordNlpTaggerMaxentTTags *ttags);

__attribute__((unused)) static IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_ctbPreFeaturesWithInt_(jint n);

__attribute__((unused)) static IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_ctbSufFeaturesWithInt_(jint n);

__attribute__((unused)) static IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_asbcUnkFeaturesWithInt_(jint n);

__attribute__((unused)) static IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_ctbUnkDictFeaturesWithInt_(jint n);

inline jlong EduStanfordNlpTaggerMaxentRareExtractor_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentRareExtractor_serialVersionUID -7682607870855426599LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentRareExtractor, serialVersionUID, jlong)

@interface EduStanfordNlpTaggerMaxentCompanyNameDetector ()

- (jboolean)companyNameEndWithNSString:(NSString *)s;

@end

inline jlong EduStanfordNlpTaggerMaxentCompanyNameDetector_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentCompanyNameDetector_serialVersionUID 21LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentCompanyNameDetector, serialVersionUID, jlong)

__attribute__((unused)) static jboolean EduStanfordNlpTaggerMaxentCompanyNameDetector_companyNameEndWithNSString_(EduStanfordNlpTaggerMaxentCompanyNameDetector *self, NSString *s);

@interface EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector () {
 @public
  id<JavaUtilSet> companyNameEnds_;
}

- (jboolean)companyNameEndWithNSString:(NSString *)s;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector, companyNameEnds_, id<JavaUtilSet>)

inline jlong EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector_serialVersionUID 21LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector, serialVersionUID, jlong)

__attribute__((unused)) static jboolean EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector_companyNameEndWithNSString_(EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector *self, NSString *s);

inline jlong EduStanfordNlpTaggerMaxentExtractorUCase_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorUCase_serialVersionUID 22LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorUCase, serialVersionUID, jlong)

inline jlong EduStanfordNlpTaggerMaxentExtractorLetterDigitDash_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorLetterDigitDash_serialVersionUID 23LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorLetterDigitDash, serialVersionUID, jlong)

inline jlong EduStanfordNlpTaggerMaxentExtractorUpperDigitDash_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorUpperDigitDash_serialVersionUID 33LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorUpperDigitDash, serialVersionUID, jlong)

inline jlong EduStanfordNlpTaggerMaxentExtractorLetterDashDigit_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorLetterDashDigit_serialVersionUID 33LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorLetterDashDigit, serialVersionUID, jlong)

inline jlong EduStanfordNlpTaggerMaxentExtractorCapDistLC_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorCapDistLC_serialVersionUID 34LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorCapDistLC, serialVersionUID, jlong)

@interface EduStanfordNlpTaggerMaxentExtractorCapLCSeen () {
 @public
  EduStanfordNlpTaggerMaxentExtractor *cCapDist_;
  EduStanfordNlpTaggerMaxentDictionary *dict_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentExtractorCapLCSeen, cCapDist_, EduStanfordNlpTaggerMaxentExtractor *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentExtractorCapLCSeen, dict_, EduStanfordNlpTaggerMaxentDictionary *)

inline jlong EduStanfordNlpTaggerMaxentExtractorCapLCSeen_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorCapLCSeen_serialVersionUID 35LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorCapLCSeen, serialVersionUID, jlong)

inline jlong EduStanfordNlpTaggerMaxentExtractorMidSentenceCap_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorMidSentenceCap_serialVersionUID 24LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorMidSentenceCap, serialVersionUID, jlong)

@interface EduStanfordNlpTaggerMaxentExtractorStartSentenceCap () {
 @public
  EduStanfordNlpTaggerMaxentDictionary *dict_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentExtractorStartSentenceCap, dict_, EduStanfordNlpTaggerMaxentDictionary *)

inline jlong EduStanfordNlpTaggerMaxentExtractorStartSentenceCap_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorStartSentenceCap_serialVersionUID 25LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorStartSentenceCap, serialVersionUID, jlong)

@interface EduStanfordNlpTaggerMaxentExtractorMidSentenceCapC () {
 @public
  EduStanfordNlpTaggerMaxentDictionary *dict_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentExtractorMidSentenceCapC, dict_, EduStanfordNlpTaggerMaxentDictionary *)

inline jlong EduStanfordNlpTaggerMaxentExtractorMidSentenceCapC_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorMidSentenceCapC_serialVersionUID 26LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorMidSentenceCapC, serialVersionUID, jlong)

@interface EduStanfordNlpTaggerMaxentExtractorCapC () {
 @public
  EduStanfordNlpTaggerMaxentDictionary *dict_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentExtractorCapC, dict_, EduStanfordNlpTaggerMaxentDictionary *)

inline jlong EduStanfordNlpTaggerMaxentExtractorCapC_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorCapC_serialVersionUID 26LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorCapC, serialVersionUID, jlong)

inline jlong EduStanfordNlpTaggerMaxentExtractorAllCap_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorAllCap_serialVersionUID 27LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorAllCap, serialVersionUID, jlong)

inline jlong EduStanfordNlpTaggerMaxentExtractorAllCapitalized_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorAllCapitalized_serialVersionUID 32LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorAllCapitalized, serialVersionUID, jlong)

inline jlong EduStanfordNlpTaggerMaxentExtractorCNumber_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorCNumber_serialVersionUID 28LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorCNumber, serialVersionUID, jlong)

inline jlong EduStanfordNlpTaggerMaxentExtractorDash_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorDash_serialVersionUID 29LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorDash, serialVersionUID, jlong)

@interface EduStanfordNlpTaggerMaxentExtractorWordSuff () {
 @public
  jint num_, position_ExtractorWordSuff_;
}

@end

inline jlong EduStanfordNlpTaggerMaxentExtractorWordSuff_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorWordSuff_serialVersionUID 724767436530LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorWordSuff, serialVersionUID, jlong)

@interface EduStanfordNlpTaggerMaxentExtractorWordPref () {
 @public
  jint num_, position_ExtractorWordPref_;
}

@end

inline jlong EduStanfordNlpTaggerMaxentExtractorWordPref_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorWordPref_serialVersionUID 724767436531LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorWordPref, serialVersionUID, jlong)

@interface EduStanfordNlpTaggerMaxentExtractorsConjunction () {
 @public
  EduStanfordNlpTaggerMaxentExtractor *extractor1_;
  EduStanfordNlpTaggerMaxentExtractor *extractor2_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentExtractorsConjunction, extractor1_, EduStanfordNlpTaggerMaxentExtractor *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentExtractorsConjunction, extractor2_, EduStanfordNlpTaggerMaxentExtractor *)

inline jlong EduStanfordNlpTaggerMaxentExtractorsConjunction_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorsConjunction_serialVersionUID 36LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorsConjunction, serialVersionUID, jlong)

@interface EduStanfordNlpTaggerMaxentPluralAcronymDetector ()

+ (jboolean)pluralAcronymWithNSString:(NSString *)s;

@end

inline jlong EduStanfordNlpTaggerMaxentPluralAcronymDetector_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentPluralAcronymDetector_serialVersionUID 33LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentPluralAcronymDetector, serialVersionUID, jlong)

__attribute__((unused)) static jboolean EduStanfordNlpTaggerMaxentPluralAcronymDetector_pluralAcronymWithNSString_(NSString *s);

@interface EduStanfordNlpTaggerMaxentCtbPreDetector () {
 @public
  NSString *t1_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentCtbPreDetector, t1_, NSString *)

inline jlong EduStanfordNlpTaggerMaxentCtbPreDetector_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentCtbPreDetector_serialVersionUID 43LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentCtbPreDetector, serialVersionUID, jlong)

@interface EduStanfordNlpTaggerMaxentCtbSufDetector () {
 @public
  NSString *t1_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentCtbSufDetector, t1_, NSString *)

inline jlong EduStanfordNlpTaggerMaxentCtbSufDetector_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentCtbSufDetector_serialVersionUID 44LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentCtbSufDetector, serialVersionUID, jlong)

@interface EduStanfordNlpTaggerMaxentASBCunkDetector () {
 @public
  NSString *t1_;
  jint n1_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentASBCunkDetector, t1_, NSString *)

inline jlong EduStanfordNlpTaggerMaxentASBCunkDetector_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentASBCunkDetector_serialVersionUID 57LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentASBCunkDetector, serialVersionUID, jlong)

@interface EduStanfordNlpTaggerMaxentCTBunkDictDetector () {
 @public
  NSString *t1_;
  jint n1_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerMaxentCTBunkDictDetector, t1_, NSString *)

inline jlong EduStanfordNlpTaggerMaxentCTBunkDictDetector_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentCTBunkDictDetector_serialVersionUID 80LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentCTBunkDictDetector, serialVersionUID, jlong)

inline jlong EduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix_serialVersionUID 848772358776880060LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix, serialVersionUID, jlong)

inline jlong EduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix_serialVersionUID 9141591417435848689LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix, serialVersionUID, jlong)

inline jlong EduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix_serialVersionUID -1762307766086637191LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix, serialVersionUID, jlong)

inline jlong EduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix_serialVersionUID -5838046941039275411LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix, serialVersionUID, jlong)

inline jlong EduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix_serialVersionUID 1139695807527192176LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix, serialVersionUID, jlong)

inline jlong EduStanfordNlpTaggerMaxentExtractorSpanishGender_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorSpanishGender_serialVersionUID -7359312929174070404LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorSpanishGender, serialVersionUID, jlong)

inline jlong EduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix_serialVersionUID 4383251116043848632LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix, serialVersionUID, jlong)

inline jlong EduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix_get_serialVersionUID();
#define EduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix_serialVersionUID -5804047931816433075LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix, serialVersionUID, jlong)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTaggerMaxentExtractorFramesRare)

@implementation EduStanfordNlpTaggerMaxentExtractorFramesRare

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorFramesRare_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)getNaaclExtractorsWithJavaUtilArrayList:(JavaUtilArrayList *)extrs {
  EduStanfordNlpTaggerMaxentExtractorFramesRare_getNaaclExtractorsWithJavaUtilArrayList_(extrs);
}

+ (void)getCaselessNaaclExtractorsWithJavaUtilArrayList:(JavaUtilArrayList *)extrs {
  EduStanfordNlpTaggerMaxentExtractorFramesRare_getCaselessNaaclExtractorsWithJavaUtilArrayList_(extrs);
}

+ (IOSObjectArray *)getExtractorFramesRareWithNSString:(NSString *)identifier
                   withEduStanfordNlpTaggerMaxentTTags:(EduStanfordNlpTaggerMaxentTTags *)ttags {
  return EduStanfordNlpTaggerMaxentExtractorFramesRare_getExtractorFramesRareWithNSString_withEduStanfordNlpTaggerMaxentTTags_(identifier, ttags);
}

+ (IOSObjectArray *)naacl2003Conjunctions {
  return EduStanfordNlpTaggerMaxentExtractorFramesRare_naacl2003Conjunctions();
}

+ (IOSObjectArray *)lcTagFeaturesWithEduStanfordNlpTaggerMaxentTTags:(EduStanfordNlpTaggerMaxentTTags *)ttags {
  return EduStanfordNlpTaggerMaxentExtractorFramesRare_lcTagFeaturesWithEduStanfordNlpTaggerMaxentTTags_(ttags);
}

+ (IOSObjectArray *)ctbPreFeaturesWithInt:(jint)n {
  return EduStanfordNlpTaggerMaxentExtractorFramesRare_ctbPreFeaturesWithInt_(n);
}

+ (IOSObjectArray *)ctbSufFeaturesWithInt:(jint)n {
  return EduStanfordNlpTaggerMaxentExtractorFramesRare_ctbSufFeaturesWithInt_(n);
}

+ (IOSObjectArray *)asbcUnkFeaturesWithInt:(jint)n {
  return EduStanfordNlpTaggerMaxentExtractorFramesRare_asbcUnkFeaturesWithInt_(n);
}

+ (IOSObjectArray *)ctbUnkDictFeaturesWithInt:(jint)n {
  return EduStanfordNlpTaggerMaxentExtractorFramesRare_ctbUnkDictFeaturesWithInt_(n);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0xa, 3, 1, -1, 2, -1, -1 },
    { NULL, "[LEduStanfordNlpTaggerMaxentExtractor;", 0xc, 4, 5, -1, -1, -1, -1 },
    { NULL, "[LEduStanfordNlpTaggerMaxentExtractor;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LEduStanfordNlpTaggerMaxentExtractor;", 0xa, 6, 7, -1, -1, -1, -1 },
    { NULL, "[LEduStanfordNlpTaggerMaxentExtractor;", 0xa, 8, 9, -1, -1, -1, -1 },
    { NULL, "[LEduStanfordNlpTaggerMaxentExtractor;", 0xa, 10, 9, -1, -1, -1, -1 },
    { NULL, "[LEduStanfordNlpTaggerMaxentExtractor;", 0xa, 11, 9, -1, -1, -1, -1 },
    { NULL, "[LEduStanfordNlpTaggerMaxentExtractor;", 0xa, 12, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getNaaclExtractorsWithJavaUtilArrayList:);
  methods[2].selector = @selector(getCaselessNaaclExtractorsWithJavaUtilArrayList:);
  methods[3].selector = @selector(getExtractorFramesRareWithNSString:withEduStanfordNlpTaggerMaxentTTags:);
  methods[4].selector = @selector(naacl2003Conjunctions);
  methods[5].selector = @selector(lcTagFeaturesWithEduStanfordNlpTaggerMaxentTTags:);
  methods[6].selector = @selector(ctbPreFeaturesWithInt:);
  methods[7].selector = @selector(ctbSufFeaturesWithInt:);
  methods[8].selector = @selector(asbcUnkFeaturesWithInt:);
  methods[9].selector = @selector(ctbUnkDictFeaturesWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "cWordSuff1", "LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x1a, -1, 13, -1, -1 },
    { "cWordSuff2", "LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x1a, -1, 14, -1, -1 },
    { "cWordSuff3", "LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x1a, -1, 15, -1, -1 },
    { "cWordSuff4", "LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x1a, -1, 16, -1, -1 },
    { "cWordUppCase", "LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x1a, -1, 17, -1, -1 },
    { "cWordNumber", "LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x1a, -1, 18, -1, -1 },
    { "cWordDash", "LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x1a, -1, 19, -1, -1 },
    { "cNoLower", "LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x1a, -1, 20, -1, -1 },
    { "cAllCapitalized", "LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x1a, -1, 21, -1, -1 },
    { "cCompany", "LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x1a, -1, 22, -1, -1 },
    { "cCaselessCompany", "LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x1a, -1, 23, -1, -1 },
    { "cLetterDigitDash", "LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x1a, -1, 24, -1, -1 },
    { "cUpperDigitDash", "LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x1a, -1, 25, -1, -1 },
    { "cCapDist", "LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x1a, -1, 26, -1, -1 },
    { "eFrames_motley_naacl2003", "[LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x1a, -1, 27, -1, -1 },
    { "eFrames_motley_naacl2003_left", "[LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x1a, -1, 28, -1, -1 },
    { "eFrames_motley_caseless_naacl2003", "[LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x1a, -1, 29, -1, -1 },
    { "cWordFrenchNounSuffix", "LEduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix;", .constantValue.asLong = 0, 0x1a, -1, 30, -1, -1 },
    { "cWordFrenchAdvSuffix", "LEduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix;", .constantValue.asLong = 0, 0x1a, -1, 31, -1, -1 },
    { "cWordFrenchVerbSuffix", "LEduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix;", .constantValue.asLong = 0, 0x1a, -1, 32, -1, -1 },
    { "cWordFrenchAdjSuffix", "LEduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix;", .constantValue.asLong = 0, 0x1a, -1, 33, -1, -1 },
    { "cWordFrenchPluralSuffix", "LEduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix;", .constantValue.asLong = 0, 0x1a, -1, 34, -1, -1 },
    { "french_unknown_extractors", "[LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x1a, -1, 35, -1, -1 },
    { "cWordSpanishGender", "LEduStanfordNlpTaggerMaxentExtractorSpanishGender;", .constantValue.asLong = 0, 0x1a, -1, 36, -1, -1 },
    { "cWordSpanishConditionalSuffix", "LEduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix;", .constantValue.asLong = 0, 0x1a, -1, 37, -1, -1 },
    { "cWordSpanishImperfectErIrSuffix", "LEduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix;", .constantValue.asLong = 0, 0x1a, -1, 38, -1, -1 },
    { "spanish_unknown_extractors", "[LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x1a, -1, 39, -1, -1 },
  };
  static const void *ptrTable[] = { "getNaaclExtractors", "LJavaUtilArrayList;", "(Ljava/util/ArrayList<Ledu/stanford/nlp/tagger/maxent/Extractor;>;)V", "getCaselessNaaclExtractors", "getExtractorFramesRare", "LNSString;LEduStanfordNlpTaggerMaxentTTags;", "lcTagFeatures", "LEduStanfordNlpTaggerMaxentTTags;", "ctbPreFeatures", "I", "ctbSufFeatures", "asbcUnkFeatures", "ctbUnkDictFeatures", &EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff1, &EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff2, &EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff3, &EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff4, &EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordUppCase, &EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordNumber, &EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordDash, &EduStanfordNlpTaggerMaxentExtractorFramesRare_cNoLower, &EduStanfordNlpTaggerMaxentExtractorFramesRare_cAllCapitalized, &EduStanfordNlpTaggerMaxentExtractorFramesRare_cCompany, &EduStanfordNlpTaggerMaxentExtractorFramesRare_cCaselessCompany, &EduStanfordNlpTaggerMaxentExtractorFramesRare_cLetterDigitDash, &EduStanfordNlpTaggerMaxentExtractorFramesRare_cUpperDigitDash, &EduStanfordNlpTaggerMaxentExtractorFramesRare_cCapDist, &EduStanfordNlpTaggerMaxentExtractorFramesRare_eFrames_motley_naacl2003, &EduStanfordNlpTaggerMaxentExtractorFramesRare_eFrames_motley_naacl2003_left, &EduStanfordNlpTaggerMaxentExtractorFramesRare_eFrames_motley_caseless_naacl2003, &EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordFrenchNounSuffix, &EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordFrenchAdvSuffix, &EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordFrenchVerbSuffix, &EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordFrenchAdjSuffix, &EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordFrenchPluralSuffix, &EduStanfordNlpTaggerMaxentExtractorFramesRare_french_unknown_extractors, &EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSpanishGender, &EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSpanishConditionalSuffix, &EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSpanishImperfectErIrSuffix, &EduStanfordNlpTaggerMaxentExtractorFramesRare_spanish_unknown_extractors };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorFramesRare = { "ExtractorFramesRare", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x1, 10, 27, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorFramesRare;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTaggerMaxentExtractorFramesRare class]) {
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff1 = new_EduStanfordNlpTaggerMaxentExtractorWordSuff_initWithInt_withInt_(1, 0);
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff2 = new_EduStanfordNlpTaggerMaxentExtractorWordSuff_initWithInt_withInt_(2, 0);
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff3 = new_EduStanfordNlpTaggerMaxentExtractorWordSuff_initWithInt_withInt_(3, 0);
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff4 = new_EduStanfordNlpTaggerMaxentExtractorWordSuff_initWithInt_withInt_(4, 0);
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordUppCase = new_EduStanfordNlpTaggerMaxentExtractorUCase_init();
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordNumber = new_EduStanfordNlpTaggerMaxentExtractorCNumber_init();
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordDash = new_EduStanfordNlpTaggerMaxentExtractorDash_init();
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cNoLower = new_EduStanfordNlpTaggerMaxentExtractorAllCap_init();
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cAllCapitalized = new_EduStanfordNlpTaggerMaxentExtractorAllCapitalized_init();
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cCompany = new_EduStanfordNlpTaggerMaxentCompanyNameDetector_init();
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cCaselessCompany = new_EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector_init();
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cLetterDigitDash = new_EduStanfordNlpTaggerMaxentExtractorLetterDigitDash_init();
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cUpperDigitDash = new_EduStanfordNlpTaggerMaxentExtractorUpperDigitDash_init();
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cCapDist = new_EduStanfordNlpTaggerMaxentExtractorCapDistLC_init();
    EduStanfordNlpTaggerMaxentExtractorFramesRare_eFrames_motley_naacl2003 = [IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordUppCase, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordNumber, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordDash, EduStanfordNlpTaggerMaxentExtractorFramesRare_cNoLower, EduStanfordNlpTaggerMaxentExtractorFramesRare_cLetterDigitDash, EduStanfordNlpTaggerMaxentExtractorFramesRare_cCompany, EduStanfordNlpTaggerMaxentExtractorFramesRare_cAllCapitalized, EduStanfordNlpTaggerMaxentExtractorFramesRare_cUpperDigitDash } count:8 type:EduStanfordNlpTaggerMaxentExtractor_class_()];
    EduStanfordNlpTaggerMaxentExtractorFramesRare_eFrames_motley_naacl2003_left = [IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordUppCase, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordNumber, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordDash, EduStanfordNlpTaggerMaxentExtractorFramesRare_cNoLower, EduStanfordNlpTaggerMaxentExtractorFramesRare_cLetterDigitDash, EduStanfordNlpTaggerMaxentExtractorFramesRare_cAllCapitalized, EduStanfordNlpTaggerMaxentExtractorFramesRare_cUpperDigitDash } count:7 type:EduStanfordNlpTaggerMaxentExtractor_class_()];
    EduStanfordNlpTaggerMaxentExtractorFramesRare_eFrames_motley_caseless_naacl2003 = [IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordNumber, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordDash, EduStanfordNlpTaggerMaxentExtractorFramesRare_cLetterDigitDash, EduStanfordNlpTaggerMaxentExtractorFramesRare_cCaselessCompany } count:4 type:EduStanfordNlpTaggerMaxentExtractor_class_()];
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordFrenchNounSuffix = new_EduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix_init();
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordFrenchAdvSuffix = new_EduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix_init();
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordFrenchVerbSuffix = new_EduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix_init();
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordFrenchAdjSuffix = new_EduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix_init();
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordFrenchPluralSuffix = new_EduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix_init();
    EduStanfordNlpTaggerMaxentExtractorFramesRare_french_unknown_extractors = [IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordFrenchNounSuffix, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordFrenchAdvSuffix, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordFrenchVerbSuffix, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordFrenchAdjSuffix, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordFrenchPluralSuffix } count:5 type:EduStanfordNlpTaggerMaxentExtractor_class_()];
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSpanishGender = new_EduStanfordNlpTaggerMaxentExtractorSpanishGender_init();
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSpanishConditionalSuffix = new_EduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix_init();
    EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSpanishImperfectErIrSuffix = new_EduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix_init();
    EduStanfordNlpTaggerMaxentExtractorFramesRare_spanish_unknown_extractors = [IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSpanishGender, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSpanishConditionalSuffix, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSpanishImperfectErIrSuffix } count:3 type:EduStanfordNlpTaggerMaxentExtractor_class_()];
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTaggerMaxentExtractorFramesRare)
  }
}

@end

void EduStanfordNlpTaggerMaxentExtractorFramesRare_init(EduStanfordNlpTaggerMaxentExtractorFramesRare *self) {
  NSObject_init(self);
}

EduStanfordNlpTaggerMaxentExtractorFramesRare *new_EduStanfordNlpTaggerMaxentExtractorFramesRare_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorFramesRare, init)
}

EduStanfordNlpTaggerMaxentExtractorFramesRare *create_EduStanfordNlpTaggerMaxentExtractorFramesRare_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorFramesRare, init)
}

void EduStanfordNlpTaggerMaxentExtractorFramesRare_getNaaclExtractorsWithJavaUtilArrayList_(JavaUtilArrayList *extrs) {
  EduStanfordNlpTaggerMaxentExtractorFramesRare_initialize();
  [((JavaUtilArrayList *) nil_chk(extrs)) addWithId:new_EduStanfordNlpTaggerMaxentExtractorStartSentenceCap_init()];
  [extrs addWithId:new_EduStanfordNlpTaggerMaxentExtractorMidSentenceCapC_init()];
  [extrs addWithId:new_EduStanfordNlpTaggerMaxentExtractorMidSentenceCap_init()];
  for (jint i = 1; i <= 10; i++) {
    [extrs addWithId:new_EduStanfordNlpTaggerMaxentExtractorWordSuff_initWithInt_withInt_(i, 0)];
  }
  for (jint i = 1; i <= 10; i++) {
    [extrs addWithId:new_EduStanfordNlpTaggerMaxentExtractorWordPref_initWithInt_withInt_(i, 0)];
  }
}

void EduStanfordNlpTaggerMaxentExtractorFramesRare_getCaselessNaaclExtractorsWithJavaUtilArrayList_(JavaUtilArrayList *extrs) {
  EduStanfordNlpTaggerMaxentExtractorFramesRare_initialize();
  for (jint i = 1; i <= 10; i++) {
    [((JavaUtilArrayList *) nil_chk(extrs)) addWithId:new_EduStanfordNlpTaggerMaxentExtractorWordSuff_initWithInt_withInt_(i, 0)];
  }
  for (jint i = 1; i <= 10; i++) {
    [((JavaUtilArrayList *) nil_chk(extrs)) addWithId:new_EduStanfordNlpTaggerMaxentExtractorWordPref_initWithInt_withInt_(i, 0)];
  }
}

IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_getExtractorFramesRareWithNSString_withEduStanfordNlpTaggerMaxentTTags_(NSString *identifier, EduStanfordNlpTaggerMaxentTTags *ttags) {
  EduStanfordNlpTaggerMaxentExtractorFramesRare_initialize();
  JavaUtilArrayList *extrs = new_JavaUtilArrayList_init();
  id<JavaUtilList> args = EduStanfordNlpUtilStringUtils_valueSplitWithNSString_withNSString_withNSString_(identifier, @"[a-zA-Z0-9]*(?:\\([^)]*\\))?", @"\\s*,\\s*");
  for (NSString * __strong arg in nil_chk(args)) {
    if ([@"naacl2003unknowns" equalsIgnoreCase:arg]) {
      [extrs addAllWithJavaUtilCollection:JavaUtilArrays_asListWithNSObjectArray_(EduStanfordNlpTaggerMaxentExtractorFramesRare_eFrames_motley_naacl2003)];
      EduStanfordNlpTaggerMaxentExtractorFramesRare_getNaaclExtractorsWithJavaUtilArrayList_(extrs);
    }
    else if ([(@"lnaacl2003unknowns") equalsIgnoreCase:arg]) {
      [extrs addAllWithJavaUtilCollection:JavaUtilArrays_asListWithNSObjectArray_(EduStanfordNlpTaggerMaxentExtractorFramesRare_eFrames_motley_naacl2003_left)];
      EduStanfordNlpTaggerMaxentExtractorFramesRare_getNaaclExtractorsWithJavaUtilArrayList_(extrs);
    }
    else if ([@"caselessnaacl2003unknowns" equalsIgnoreCase:arg]) {
      [extrs addAllWithJavaUtilCollection:JavaUtilArrays_asListWithNSObjectArray_(EduStanfordNlpTaggerMaxentExtractorFramesRare_eFrames_motley_caseless_naacl2003)];
      EduStanfordNlpTaggerMaxentExtractorFramesRare_getCaselessNaaclExtractorsWithJavaUtilArrayList_(extrs);
    }
    else if ([@"naacl2003conjunctions" equalsIgnoreCase:arg]) {
      [extrs addAllWithJavaUtilCollection:JavaUtilArrays_asListWithNSObjectArray_(EduStanfordNlpTaggerMaxentExtractorFramesRare_naacl2003Conjunctions())];
    }
    else if ([@"frenchunknowns" equalsIgnoreCase:arg]) {
      [extrs addAllWithJavaUtilCollection:JavaUtilArrays_asListWithNSObjectArray_(EduStanfordNlpTaggerMaxentExtractorFramesRare_french_unknown_extractors)];
    }
    else if ([((NSString *) nil_chk(arg)) hasPrefix:@"wordshapes("]) {
      jint lWindow = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedNumWithNSString_withInt_(arg, 1);
      jint rWindow = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedNumWithNSString_withInt_(arg, 2);
      NSString *wsc = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedArgWithNSString_withInt_(arg, 3);
      if (wsc == nil) {
        wsc = @"chris2";
      }
      for (jint i = lWindow; i <= rWindow; i++) {
        [extrs addWithId:new_EduStanfordNlpTaggerMaxentExtractorWordShapeClassifier_initWithInt_withNSString_(i, wsc)];
      }
    }
    else if ([arg hasPrefix:@"wordshapeconjunction("]) {
      jint lWindow = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedNumWithNSString_withInt_(arg, 1);
      jint rWindow = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedNumWithNSString_withInt_(arg, 2);
      NSString *wsc = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedArgWithNSString_withInt_(arg, 3);
      if (wsc == nil) {
        wsc = @"chris2";
      }
      for (jint i = lWindow; i <= rWindow; i++) {
        [extrs addWithId:new_EduStanfordNlpTaggerMaxentExtractorWordShapeConjunction_initWithInt_withInt_withNSString_(lWindow, rWindow, wsc)];
      }
    }
    else if ([arg hasPrefix:@"unicodeshapes("]) {
      jint lWindow = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedNumWithNSString_withInt_(arg, 1);
      jint rWindow = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedNumWithNSString_withInt_(arg, 2);
      for (jint i = lWindow; i <= rWindow; i++) {
        [extrs addWithId:new_EduStanfordNlpTaggerMaxentExtractorWordShapeClassifier_initWithInt_withNSString_(i, @"chris4")];
      }
    }
    else if ([arg hasPrefix:@"unicodeshapeconjunction("]) {
      jint lWindow = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedNumWithNSString_withInt_(arg, 1);
      jint rWindow = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedNumWithNSString_withInt_(arg, 2);
      [extrs addWithId:new_EduStanfordNlpTaggerMaxentExtractorWordShapeConjunction_initWithInt_withInt_withNSString_(lWindow, rWindow, @"chris4")];
    }
    else if ([arg hasPrefix:@"chinesedictionaryfeatures("]) {
      @throw new_JavaLangRuntimeException_initWithNSString_(@"These features are no longer supported.  The paths and data files associated with this material are out of date, and the classes used are not thread-safe.  Those problems would need to be fixed to use this feature.");
    }
    else if ([arg equalsIgnoreCase:@"motleyUnknown"]) {
      [extrs addAllWithJavaUtilCollection:JavaUtilArrays_asListWithNSObjectArray_(EduStanfordNlpTaggerMaxentExtractorFramesRare_eFrames_motley_naacl2003)];
    }
    else if ([arg hasPrefix:@"suffix("]) {
      jint max = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedNumWithNSString_withInt_(arg, 1);
      jint position = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedNumWithNSString_withInt_(arg, 2);
      for (jint i = 1; i <= max; i++) {
        [extrs addWithId:new_EduStanfordNlpTaggerMaxentExtractorWordSuff_initWithInt_withInt_(i, position)];
      }
    }
    else if ([arg hasPrefix:@"prefix("]) {
      jint max = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedNumWithNSString_withInt_(arg, 1);
      jint position = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedNumWithNSString_withInt_(arg, 2);
      for (jint i = 1; i <= max; i++) {
        [extrs addWithId:new_EduStanfordNlpTaggerMaxentExtractorWordPref_initWithInt_withInt_(i, position)];
      }
    }
    else if ([arg hasPrefix:@"prefixsuffix("]) {
      jint max = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedNumWithNSString_withInt_(arg, 1);
      for (jint i = 1; i <= max; i++) {
        [extrs addWithId:new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(new_EduStanfordNlpTaggerMaxentExtractorWordPref_initWithInt_withInt_(i, 0), new_EduStanfordNlpTaggerMaxentExtractorWordSuff_initWithInt_withInt_(i, 0))];
      }
    }
    else if ([arg hasPrefix:@"capitalizationsuffix("]) {
      jint max = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedNumWithNSString_withInt_(arg, 1);
      for (jint i = 1; i <= max; i++) {
        [extrs addWithId:new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordUppCase, new_EduStanfordNlpTaggerMaxentExtractorWordSuff_initWithInt_withInt_(i, 0))];
      }
    }
    else if ([arg hasPrefix:@"distsim("]) {
      NSString *path = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedArgWithNSString_withInt_(arg, 1);
      jint lWindow = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedNumWithNSString_withInt_(arg, 2);
      jint rWindow = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedNumWithNSString_withInt_(arg, 3);
      for (jint i = lWindow; i <= rWindow; i++) {
        [extrs addWithId:new_EduStanfordNlpTaggerMaxentExtractorDistsim_initWithNSString_withInt_(path, i)];
      }
    }
    else if ([arg hasPrefix:@"distsimconjunction("]) {
      NSString *path = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedArgWithNSString_withInt_(arg, 1);
      jint lWindow = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedNumWithNSString_withInt_(arg, 2);
      jint rWindow = EduStanfordNlpTaggerMaxentExtractor_getParenthesizedNumWithNSString_withInt_(arg, 3);
      [extrs addWithId:new_EduStanfordNlpTaggerMaxentExtractorDistsimConjunction_initWithNSString_withInt_withInt_(path, lWindow, rWindow)];
    }
    else if ([arg equalsIgnoreCase:@"lctagfeatures"]) {
      [extrs addAllWithJavaUtilCollection:JavaUtilArrays_asListWithNSObjectArray_(EduStanfordNlpTaggerMaxentExtractorFramesRare_lcTagFeaturesWithEduStanfordNlpTaggerMaxentTTags_(ttags))];
    }
  }
  return [extrs toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[extrs size] type:EduStanfordNlpTaggerMaxentExtractor_class_()]];
}

IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_naacl2003Conjunctions() {
  EduStanfordNlpTaggerMaxentExtractorFramesRare_initialize();
  IOSObjectArray *newW = [IOSObjectArray newArrayWithLength:24 type:EduStanfordNlpTaggerMaxentExtractor_class_()];
  (void) IOSObjectArray_SetAndConsume(newW, 0, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordUppCase, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff1));
  (void) IOSObjectArray_SetAndConsume(newW, 1, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordUppCase, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff2));
  (void) IOSObjectArray_SetAndConsume(newW, 2, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordUppCase, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff3));
  (void) IOSObjectArray_SetAndConsume(newW, 3, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordUppCase, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff4));
  (void) IOSObjectArray_SetAndConsume(newW, 4, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(EduStanfordNlpTaggerMaxentExtractorFramesRare_cNoLower, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff1));
  (void) IOSObjectArray_SetAndConsume(newW, 5, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(EduStanfordNlpTaggerMaxentExtractorFramesRare_cNoLower, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff2));
  (void) IOSObjectArray_SetAndConsume(newW, 6, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(EduStanfordNlpTaggerMaxentExtractorFramesRare_cNoLower, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff3));
  (void) IOSObjectArray_SetAndConsume(newW, 7, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(EduStanfordNlpTaggerMaxentExtractorFramesRare_cNoLower, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff4));
  EduStanfordNlpTaggerMaxentExtractor *cMidSentence = new_EduStanfordNlpTaggerMaxentExtractorMidSentenceCap_init();
  (void) IOSObjectArray_SetAndConsume(newW, 8, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(cMidSentence, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff1));
  (void) IOSObjectArray_SetAndConsume(newW, 9, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(cMidSentence, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff2));
  (void) IOSObjectArray_SetAndConsume(newW, 10, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(cMidSentence, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff3));
  (void) IOSObjectArray_SetAndConsume(newW, 11, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(cMidSentence, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff4));
  EduStanfordNlpTaggerMaxentExtractor *cWordStartUCase = new_EduStanfordNlpTaggerMaxentExtractorStartSentenceCap_init();
  (void) IOSObjectArray_SetAndConsume(newW, 12, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(cWordStartUCase, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff1));
  (void) IOSObjectArray_SetAndConsume(newW, 13, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(cWordStartUCase, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff2));
  (void) IOSObjectArray_SetAndConsume(newW, 14, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(cWordStartUCase, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff3));
  (void) IOSObjectArray_SetAndConsume(newW, 15, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(cWordStartUCase, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff4));
  EduStanfordNlpTaggerMaxentExtractor *cWordMidUCase = new_EduStanfordNlpTaggerMaxentExtractorMidSentenceCapC_init();
  (void) IOSObjectArray_SetAndConsume(newW, 16, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(cWordMidUCase, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff1));
  (void) IOSObjectArray_SetAndConsume(newW, 17, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(cWordMidUCase, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff2));
  (void) IOSObjectArray_SetAndConsume(newW, 18, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(cWordMidUCase, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff3));
  (void) IOSObjectArray_SetAndConsume(newW, 19, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(cWordMidUCase, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff4));
  (void) IOSObjectArray_SetAndConsume(newW, 20, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(EduStanfordNlpTaggerMaxentExtractorFramesRare_cCapDist, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff1));
  (void) IOSObjectArray_SetAndConsume(newW, 21, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(EduStanfordNlpTaggerMaxentExtractorFramesRare_cCapDist, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff2));
  (void) IOSObjectArray_SetAndConsume(newW, 22, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(EduStanfordNlpTaggerMaxentExtractorFramesRare_cCapDist, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff3));
  (void) IOSObjectArray_SetAndConsume(newW, 23, new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(EduStanfordNlpTaggerMaxentExtractorFramesRare_cCapDist, EduStanfordNlpTaggerMaxentExtractorFramesRare_cWordSuff4));
  return newW;
}

IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_lcTagFeaturesWithEduStanfordNlpTaggerMaxentTTags_(EduStanfordNlpTaggerMaxentTTags *ttags) {
  EduStanfordNlpTaggerMaxentExtractorFramesRare_initialize();
  IOSObjectArray *newE = [IOSObjectArray newArrayWithLength:[((EduStanfordNlpTaggerMaxentTTags *) nil_chk(ttags)) getSize] type:EduStanfordNlpTaggerMaxentExtractor_class_()];
  for (jint i = 0; i < [ttags getSize]; i++) {
    NSString *tag = [ttags getTagWithInt:i];
    (void) IOSObjectArray_SetAndConsume(newE, i, new_EduStanfordNlpTaggerMaxentExtractorCapLCSeen_initWithNSString_(tag));
  }
  return newE;
}

IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_ctbPreFeaturesWithInt_(jint n) {
  EduStanfordNlpTaggerMaxentExtractorFramesRare_initialize();
  IOSObjectArray *tagsets = [IOSObjectArray newArrayWithObjects:(id[]){ @"AD", @"AS", @"BA", @"CC", @"CD", @"CS", @"DEC", @"DEG", @"DER", @"DEV", @"DT", @"ETC", @"FW", @"IJ", @"JJ", @"LB", @"LC", @"M", @"MSP", @"NN", @"NP", @"NR", @"NT", @"OD", @"P", @"PN", @"PU", @"SB", @"SP", @"VA", @"VC", @"VE", @"VV" } count:33 type:NSString_class_()];
  IOSObjectArray *newW = [IOSObjectArray newArrayWithLength:tagsets->size_ type:EduStanfordNlpTaggerMaxentExtractor_class_()];
  for (jint k = 0; k < tagsets->size_; k++) {
    (void) IOSObjectArray_SetAndConsume(newW, k, new_EduStanfordNlpTaggerMaxentCtbPreDetector_initWithNSString_withInt_(IOSObjectArray_Get(tagsets, k), n));
  }
  return newW;
}

IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_ctbSufFeaturesWithInt_(jint n) {
  EduStanfordNlpTaggerMaxentExtractorFramesRare_initialize();
  IOSObjectArray *tagsets = [IOSObjectArray newArrayWithObjects:(id[]){ @"AD", @"AS", @"BA", @"CC", @"CD", @"CS", @"DEC", @"DEG", @"DER", @"DEV", @"DT", @"ETC", @"FW", @"IJ", @"JJ", @"LB", @"LC", @"M", @"MSP", @"NN", @"NP", @"NR", @"NT", @"OD", @"P", @"PN", @"PU", @"SB", @"SP", @"VA", @"VC", @"VE", @"VV" } count:33 type:NSString_class_()];
  IOSObjectArray *newW = [IOSObjectArray newArrayWithLength:tagsets->size_ type:EduStanfordNlpTaggerMaxentExtractor_class_()];
  for (jint k = 0; k < tagsets->size_; k++) {
    (void) IOSObjectArray_SetAndConsume(newW, k, new_EduStanfordNlpTaggerMaxentCtbSufDetector_initWithNSString_withInt_(IOSObjectArray_Get(tagsets, k), n));
  }
  return newW;
}

IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_asbcUnkFeaturesWithInt_(jint n) {
  EduStanfordNlpTaggerMaxentExtractorFramesRare_initialize();
  IOSObjectArray *tagsets = [IOSObjectArray newArrayWithObjects:(id[]){ @"A", @"Caa", @"Cab", @"Cba", @"Cbb", @"D", @"DE", @"DK", @"Da", @"Dd", @"De", @"Des", @"Dfa", @"Dfb", @"Di", @"Dk", @"FW", @"I", @" Na", @"Nb", @" Nc", @"Ncb", @"Ncd", @" Nd", @"Neaq", @"Nep", @"Neqa", @"Neqb", @"Nes", @"Neu", @"Nf", @"Ng", @"Nh", @"P", @"PU", @"SHI", @"T", @"VA", @"VAC", @"VB", @"VC", @"VCL", @"VD", @"VE", @"VF", @"VG", @"VH", @"VHC", @"VI", @"VJ", @"VK", @"VL", @"V_2" } count:53 type:NSString_class_()];
  IOSObjectArray *newW = [IOSObjectArray newArrayWithLength:tagsets->size_ type:EduStanfordNlpTaggerMaxentExtractor_class_()];
  for (jint k = 0; k < tagsets->size_; k++) {
    (void) IOSObjectArray_SetAndConsume(newW, k, new_EduStanfordNlpTaggerMaxentASBCunkDetector_initWithNSString_withInt_(IOSObjectArray_Get(tagsets, k), n));
  }
  return newW;
}

IOSObjectArray *EduStanfordNlpTaggerMaxentExtractorFramesRare_ctbUnkDictFeaturesWithInt_(jint n) {
  EduStanfordNlpTaggerMaxentExtractorFramesRare_initialize();
  IOSObjectArray *tagsets = [IOSObjectArray newArrayWithObjects:(id[]){ @"A", @"Caa", @"Cab", @"Cba", @"Cbb", @"D", @"DE", @"DK", @"Da", @"Dd", @"De", @"Des", @"Dfa", @"Dfb", @"Di", @"Dk", @"FW", @"I", @" Na", @"Nb", @" Nc", @"Ncb", @"Ncd", @" Nd", @"Neaq", @"Nep", @"Neqa", @"Neqb", @"Nes", @"Neu", @"Nf", @"Ng", @"Nh", @"P", @"PU", @"SHI", @"T", @"VA", @"VAC", @"VB", @"VC", @"VCL", @"VD", @"VE", @"VF", @"VG", @"VH", @"VHC", @"VI", @"VJ", @"VK", @"VL", @"V_2" } count:53 type:NSString_class_()];
  IOSObjectArray *newW = [IOSObjectArray newArrayWithLength:tagsets->size_ type:EduStanfordNlpTaggerMaxentExtractor_class_()];
  for (jint k = 0; k < tagsets->size_; k++) {
    (void) IOSObjectArray_SetAndConsume(newW, k, new_EduStanfordNlpTaggerMaxentCTBunkDictDetector_initWithNSString_withInt_(IOSObjectArray_Get(tagsets, k), n));
  }
  return newW;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorFramesRare)

NSString *EduStanfordNlpTaggerMaxentRareExtractor_naTag = @"NA";

@implementation EduStanfordNlpTaggerMaxentRareExtractor

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)position {
  EduStanfordNlpTaggerMaxentRareExtractor_initWithInt_(self, position);
  return self;
}

+ (jboolean)startsUpperCaseWithNSString:(NSString *)s {
  return EduStanfordNlpTaggerMaxentRareExtractor_startsUpperCaseWithNSString_(s);
}

+ (jboolean)startsLowerCaseWithNSString:(NSString *)s {
  return EduStanfordNlpTaggerMaxentRareExtractor_startsLowerCaseWithNSString_(s);
}

+ (jboolean)containsDashWithNSString:(NSString *)s {
  return EduStanfordNlpTaggerMaxentRareExtractor_containsDashWithNSString_(s);
}

+ (jboolean)containsNumberWithNSString:(NSString *)s {
  return EduStanfordNlpTaggerMaxentRareExtractor_containsNumberWithNSString_(s);
}

+ (jboolean)containsLetterWithNSString:(NSString *)s {
  return EduStanfordNlpTaggerMaxentRareExtractor_containsLetterWithNSString_(s);
}

+ (jboolean)containsUpperCaseWithNSString:(NSString *)s {
  return EduStanfordNlpTaggerMaxentRareExtractor_containsUpperCaseWithNSString_(s);
}

+ (jboolean)allUpperCaseWithNSString:(NSString *)s {
  return EduStanfordNlpTaggerMaxentRareExtractor_allUpperCaseWithNSString_(s);
}

+ (jboolean)noneLowerCaseWithNSString:(NSString *)s {
  return EduStanfordNlpTaggerMaxentRareExtractor_noneLowerCaseWithNSString_(s);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x8, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0xc, 3, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0xc, 4, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0xc, 5, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0xc, 6, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0xc, 7, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0xc, 8, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x8, 9, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithInt:);
  methods[2].selector = @selector(startsUpperCaseWithNSString:);
  methods[3].selector = @selector(startsLowerCaseWithNSString:);
  methods[4].selector = @selector(containsDashWithNSString:);
  methods[5].selector = @selector(containsNumberWithNSString:);
  methods[6].selector = @selector(containsLetterWithNSString:);
  methods[7].selector = @selector(containsUpperCaseWithNSString:);
  methods[8].selector = @selector(allUpperCaseWithNSString:);
  methods[9].selector = @selector(noneLowerCaseWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "naTag", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 10, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentRareExtractor_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "startsUpperCase", "LNSString;", "startsLowerCase", "containsDash", "containsNumber", "containsLetter", "containsUpperCase", "allUpperCase", "noneLowerCase", &EduStanfordNlpTaggerMaxentRareExtractor_naTag };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentRareExtractor = { "RareExtractor", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 10, 2, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentRareExtractor;
}

@end

void EduStanfordNlpTaggerMaxentRareExtractor_init(EduStanfordNlpTaggerMaxentRareExtractor *self) {
  EduStanfordNlpTaggerMaxentExtractor_init(self);
}

EduStanfordNlpTaggerMaxentRareExtractor *new_EduStanfordNlpTaggerMaxentRareExtractor_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentRareExtractor, init)
}

EduStanfordNlpTaggerMaxentRareExtractor *create_EduStanfordNlpTaggerMaxentRareExtractor_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentRareExtractor, init)
}

void EduStanfordNlpTaggerMaxentRareExtractor_initWithInt_(EduStanfordNlpTaggerMaxentRareExtractor *self, jint position) {
  EduStanfordNlpTaggerMaxentExtractor_initWithInt_withBoolean_(self, position, false);
}

EduStanfordNlpTaggerMaxentRareExtractor *new_EduStanfordNlpTaggerMaxentRareExtractor_initWithInt_(jint position) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentRareExtractor, initWithInt_, position)
}

EduStanfordNlpTaggerMaxentRareExtractor *create_EduStanfordNlpTaggerMaxentRareExtractor_initWithInt_(jint position) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentRareExtractor, initWithInt_, position)
}

jboolean EduStanfordNlpTaggerMaxentRareExtractor_startsUpperCaseWithNSString_(NSString *s) {
  EduStanfordNlpTaggerMaxentRareExtractor_initialize();
  if (s == nil || ((jint) [s length]) == 0) {
    return false;
  }
  jchar ch = [s charAtWithInt:0];
  return JavaLangCharacter_isUpperCaseWithChar_(ch);
}

jboolean EduStanfordNlpTaggerMaxentRareExtractor_startsLowerCaseWithNSString_(NSString *s) {
  EduStanfordNlpTaggerMaxentRareExtractor_initialize();
  if (s == nil) {
    return false;
  }
  jchar ch = [s charAtWithInt:0];
  return JavaLangCharacter_isLowerCaseWithChar_(ch);
}

jboolean EduStanfordNlpTaggerMaxentRareExtractor_containsDashWithNSString_(NSString *s) {
  EduStanfordNlpTaggerMaxentRareExtractor_initialize();
  return s != nil && [s indexOf:'-'] >= 0;
}

jboolean EduStanfordNlpTaggerMaxentRareExtractor_containsNumberWithNSString_(NSString *s) {
  EduStanfordNlpTaggerMaxentRareExtractor_initialize();
  if (s == nil) {
    return false;
  }
  for (jint i = 0, len = ((jint) [s length]); i < len; i++) {
    if (JavaLangCharacter_isDigitWithChar_([s charAtWithInt:i])) {
      return true;
    }
  }
  return false;
}

jboolean EduStanfordNlpTaggerMaxentRareExtractor_containsLetterWithNSString_(NSString *s) {
  EduStanfordNlpTaggerMaxentRareExtractor_initialize();
  if (s == nil) {
    return false;
  }
  for (jint i = 0, len = ((jint) [s length]); i < len; i++) {
    if (JavaLangCharacter_isLetterWithChar_([s charAtWithInt:i])) {
      return true;
    }
  }
  return false;
}

jboolean EduStanfordNlpTaggerMaxentRareExtractor_containsUpperCaseWithNSString_(NSString *s) {
  EduStanfordNlpTaggerMaxentRareExtractor_initialize();
  if (s == nil) {
    return false;
  }
  for (jint i = 0, len = ((jint) [s length]); i < len; i++) {
    if (JavaLangCharacter_isUpperCaseWithChar_([s charAtWithInt:i])) {
      return true;
    }
  }
  return false;
}

jboolean EduStanfordNlpTaggerMaxentRareExtractor_allUpperCaseWithNSString_(NSString *s) {
  EduStanfordNlpTaggerMaxentRareExtractor_initialize();
  if (s == nil) {
    return false;
  }
  for (jint i = 0, len = ((jint) [s length]); i < len; i++) {
    if (!JavaLangCharacter_isUpperCaseWithChar_([s charAtWithInt:i])) {
      return false;
    }
  }
  return true;
}

jboolean EduStanfordNlpTaggerMaxentRareExtractor_noneLowerCaseWithNSString_(NSString *s) {
  EduStanfordNlpTaggerMaxentRareExtractor_initialize();
  if (s == nil) {
    return false;
  }
  for (jint i = 0, len = ((jint) [s length]); i < len; i++) {
    if (JavaLangCharacter_isLowerCaseWithChar_([s charAtWithInt:i])) {
      return false;
    }
  }
  return true;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentRareExtractor)

@implementation EduStanfordNlpTaggerMaxentCompanyNameDetector

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentCompanyNameDetector_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)companyNameEndWithNSString:(NSString *)s {
  return EduStanfordNlpTaggerMaxentCompanyNameDetector_companyNameEndWithNSString_(self, s);
}

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *s = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:0];
  if (!EduStanfordNlpTaggerMaxentRareExtractor_startsUpperCaseWithNSString_(s)) {
    return @"0";
  }
  for (jint i = 0; i <= EduStanfordNlpTaggerMaxentCompanyNameDetector_COMPANY_NAME_WINDOW; i++) {
    NSString *s1 = [pH getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:i];
    if (EduStanfordNlpTaggerMaxentCompanyNameDetector_companyNameEndWithNSString_(self, s1)) {
      return @"1";
    }
  }
  return @"0";
}

- (jboolean)isLocal {
  return false;
}

- (jboolean)isDynamic {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(companyNameEndWithNSString:);
  methods[2].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[3].selector = @selector(isLocal);
  methods[4].selector = @selector(isDynamic);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "COMPANY_NAME_WINDOW", "I", .constantValue.asInt = EduStanfordNlpTaggerMaxentCompanyNameDetector_COMPANY_NAME_WINDOW, 0x18, -1, -1, -1, -1 },
    { "companyNameEnds_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x10, -1, -1, 4, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentCompanyNameDetector_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "companyNameEnd", "LNSString;", "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;", "Ljava/util/Set<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentCompanyNameDetector = { "CompanyNameDetector", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 5, 3, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentCompanyNameDetector;
}

@end

void EduStanfordNlpTaggerMaxentCompanyNameDetector_init(EduStanfordNlpTaggerMaxentCompanyNameDetector *self) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
  self->companyNameEnds_ = EduStanfordNlpUtilGenerics_newHashSet();
  [((id<JavaUtilSet>) nil_chk(self->companyNameEnds_)) addWithId:@"Company"];
  [self->companyNameEnds_ addWithId:@"COMPANY"];
  [self->companyNameEnds_ addWithId:@"Co."];
  [self->companyNameEnds_ addWithId:@"Co"];
  [self->companyNameEnds_ addWithId:@"Cos."];
  [self->companyNameEnds_ addWithId:@"CO."];
  [self->companyNameEnds_ addWithId:@"COS."];
  [self->companyNameEnds_ addWithId:@"Corporation"];
  [self->companyNameEnds_ addWithId:@"CORPORATION"];
  [self->companyNameEnds_ addWithId:@"Corp."];
  [self->companyNameEnds_ addWithId:@"Corp"];
  [self->companyNameEnds_ addWithId:@"CORP."];
  [self->companyNameEnds_ addWithId:@"Incorporated"];
  [self->companyNameEnds_ addWithId:@"INCORPORATED"];
  [self->companyNameEnds_ addWithId:@"Inc."];
  [self->companyNameEnds_ addWithId:@"Inc"];
  [self->companyNameEnds_ addWithId:@"INC."];
  [self->companyNameEnds_ addWithId:@"Association"];
  [self->companyNameEnds_ addWithId:@"ASSOCIATION"];
  [self->companyNameEnds_ addWithId:@"Assn"];
  [self->companyNameEnds_ addWithId:@"ASSN"];
  [self->companyNameEnds_ addWithId:@"Limited"];
  [self->companyNameEnds_ addWithId:@"LIMITED"];
  [self->companyNameEnds_ addWithId:@"Ltd."];
  [self->companyNameEnds_ addWithId:@"LTD."];
  [self->companyNameEnds_ addWithId:@"L.P."];
}

EduStanfordNlpTaggerMaxentCompanyNameDetector *new_EduStanfordNlpTaggerMaxentCompanyNameDetector_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentCompanyNameDetector, init)
}

EduStanfordNlpTaggerMaxentCompanyNameDetector *create_EduStanfordNlpTaggerMaxentCompanyNameDetector_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentCompanyNameDetector, init)
}

jboolean EduStanfordNlpTaggerMaxentCompanyNameDetector_companyNameEndWithNSString_(EduStanfordNlpTaggerMaxentCompanyNameDetector *self, NSString *s) {
  return [((id<JavaUtilSet>) nil_chk(self->companyNameEnds_)) containsWithId:s];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentCompanyNameDetector)

@implementation EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)companyNameEndWithNSString:(NSString *)s {
  return EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector_companyNameEndWithNSString_(self, s);
}

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *s = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:0];
  for (jint i = 0; i <= EduStanfordNlpTaggerMaxentCompanyNameDetector_COMPANY_NAME_WINDOW; i++) {
    NSString *s1 = [pH getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:i];
    if (EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector_companyNameEndWithNSString_(self, s1)) {
      return @"1";
    }
  }
  return @"0";
}

- (jboolean)isLocal {
  return false;
}

- (jboolean)isDynamic {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(companyNameEndWithNSString:);
  methods[2].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[3].selector = @selector(isLocal);
  methods[4].selector = @selector(isDynamic);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "companyNameEnds_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x12, -1, -1, 4, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "companyNameEnd", "LNSString;", "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;", "Ljava/util/Set<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector = { "CaselessCompanyNameDetector", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 5, 2, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector;
}

@end

void EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector_init(EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector *self) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
  self->companyNameEnds_ = EduStanfordNlpUtilGenerics_newHashSet();
  EduStanfordNlpTaggerMaxentCompanyNameDetector *cased = new_EduStanfordNlpTaggerMaxentCompanyNameDetector_init();
  for (NSString * __strong name in nil_chk(cased->companyNameEnds_)) {
    [((id<JavaUtilSet>) nil_chk(self->companyNameEnds_)) addWithId:[((NSString *) nil_chk(name)) lowercaseString]];
  }
}

EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector *new_EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector, init)
}

EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector *create_EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector, init)
}

jboolean EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector_companyNameEndWithNSString_(EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector *self, NSString *s) {
  return [((id<JavaUtilSet>) nil_chk(self->companyNameEnds_)) containsWithId:s];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentCaselessCompanyNameDetector)

@implementation EduStanfordNlpTaggerMaxentExtractorUCase

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorUCase_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *s = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:0];
  if (EduStanfordNlpTaggerMaxentRareExtractor_containsUpperCaseWithNSString_(s)) {
    return @"1";
  }
  return @"0";
}

- (jboolean)isLocal {
  return true;
}

- (jboolean)isDynamic {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[2].selector = @selector(isLocal);
  methods[3].selector = @selector(isDynamic);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorUCase_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorUCase = { "ExtractorUCase", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 4, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorUCase;
}

@end

void EduStanfordNlpTaggerMaxentExtractorUCase_init(EduStanfordNlpTaggerMaxentExtractorUCase *self) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
}

EduStanfordNlpTaggerMaxentExtractorUCase *new_EduStanfordNlpTaggerMaxentExtractorUCase_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorUCase, init)
}

EduStanfordNlpTaggerMaxentExtractorUCase *create_EduStanfordNlpTaggerMaxentExtractorUCase_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorUCase, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorUCase)

@implementation EduStanfordNlpTaggerMaxentExtractorLetterDigitDash

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorLetterDigitDash_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *s = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:0];
  if (EduStanfordNlpTaggerMaxentRareExtractor_containsLetterWithNSString_(s) && EduStanfordNlpTaggerMaxentRareExtractor_containsDashWithNSString_(s) && EduStanfordNlpTaggerMaxentRareExtractor_containsNumberWithNSString_(s)) {
    return @"1";
  }
  return @"0";
}

- (jboolean)isLocal {
  return true;
}

- (jboolean)isDynamic {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[2].selector = @selector(isLocal);
  methods[3].selector = @selector(isDynamic);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorLetterDigitDash_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorLetterDigitDash = { "ExtractorLetterDigitDash", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 4, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorLetterDigitDash;
}

@end

void EduStanfordNlpTaggerMaxentExtractorLetterDigitDash_init(EduStanfordNlpTaggerMaxentExtractorLetterDigitDash *self) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
}

EduStanfordNlpTaggerMaxentExtractorLetterDigitDash *new_EduStanfordNlpTaggerMaxentExtractorLetterDigitDash_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorLetterDigitDash, init)
}

EduStanfordNlpTaggerMaxentExtractorLetterDigitDash *create_EduStanfordNlpTaggerMaxentExtractorLetterDigitDash_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorLetterDigitDash, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorLetterDigitDash)

@implementation EduStanfordNlpTaggerMaxentExtractorUpperDigitDash

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorUpperDigitDash_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *s = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:0];
  if (EduStanfordNlpTaggerMaxentRareExtractor_containsUpperCaseWithNSString_(s) && EduStanfordNlpTaggerMaxentRareExtractor_containsDashWithNSString_(s) && EduStanfordNlpTaggerMaxentRareExtractor_containsNumberWithNSString_(s)) {
    return @"1";
  }
  return @"0";
}

- (jboolean)isLocal {
  return true;
}

- (jboolean)isDynamic {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[2].selector = @selector(isLocal);
  methods[3].selector = @selector(isDynamic);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorUpperDigitDash_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorUpperDigitDash = { "ExtractorUpperDigitDash", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 4, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorUpperDigitDash;
}

@end

void EduStanfordNlpTaggerMaxentExtractorUpperDigitDash_init(EduStanfordNlpTaggerMaxentExtractorUpperDigitDash *self) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
}

EduStanfordNlpTaggerMaxentExtractorUpperDigitDash *new_EduStanfordNlpTaggerMaxentExtractorUpperDigitDash_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorUpperDigitDash, init)
}

EduStanfordNlpTaggerMaxentExtractorUpperDigitDash *create_EduStanfordNlpTaggerMaxentExtractorUpperDigitDash_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorUpperDigitDash, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorUpperDigitDash)

@implementation EduStanfordNlpTaggerMaxentExtractorLetterDashDigit

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorLetterDashDigit_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *s = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:0];
  if (s == nil) return @"0";
  jboolean seenLetter = false;
  jboolean seenDash = false;
  jboolean seenNumber = false;
  for (jint i = 0, len = ((jint) [s length]); i < len; i++) {
    jchar ch = [s charAtWithInt:i];
    if (JavaLangCharacter_isLetterWithChar_(ch)) {
      seenLetter = true;
    }
    else if (seenLetter && ch == '-') {
      seenDash = true;
    }
    else if (seenDash && JavaLangCharacter_isDigitWithChar_(ch)) {
      seenNumber = true;
      break;
    }
  }
  if (seenNumber) {
    return @"1";
  }
  return @"0";
}

- (jboolean)isLocal {
  return true;
}

- (jboolean)isDynamic {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[2].selector = @selector(isLocal);
  methods[3].selector = @selector(isDynamic);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorLetterDashDigit_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorLetterDashDigit = { "ExtractorLetterDashDigit", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 4, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorLetterDashDigit;
}

@end

void EduStanfordNlpTaggerMaxentExtractorLetterDashDigit_init(EduStanfordNlpTaggerMaxentExtractorLetterDashDigit *self) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
}

EduStanfordNlpTaggerMaxentExtractorLetterDashDigit *new_EduStanfordNlpTaggerMaxentExtractorLetterDashDigit_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorLetterDashDigit, init)
}

EduStanfordNlpTaggerMaxentExtractorLetterDashDigit *create_EduStanfordNlpTaggerMaxentExtractorLetterDashDigit_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorLetterDashDigit, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorLetterDashDigit)

@implementation EduStanfordNlpTaggerMaxentExtractorCapDistLC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorCapDistLC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *word = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:0];
  NSString *ret;
  if (!EduStanfordNlpTaggerMaxentRareExtractor_startsUpperCaseWithNSString_(word)) {
    if (verbose_) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"did not apply because not start with upper case"];
    }
    return @"0";
  }
  if (EduStanfordNlpTaggerMaxentRareExtractor_allUpperCaseWithNSString_(word)) {
    ret = @"all:";
  }
  else {
    ret = @"start";
  }
  jint current = -1;
  jint distance = 1;
  while (true) {
    NSString *prevWord = [pH getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:current];
    if (EduStanfordNlpTaggerMaxentRareExtractor_startsLowerCaseWithNSString_(prevWord)) {
      if (verbose_) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$$$C$", @"returning ", (JreStrcat("$I", ret, current)), @"for ", word, ' ', prevWord)];
      }
      return JreStrcat("$I", ret, distance);
    }
    if ([((NSString *) nil_chk(prevWord)) isEqual:EduStanfordNlpTaggerMaxentRareExtractor_naTag] || [prevWord isEqual:@"``"]) {
      if (verbose_) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$$$C$", @"returning ", ret, @"infinity for ", word, ' ', prevWord)];
      }
      return JreStrcat("$$", ret, @"infinity");
    }
    current--;
    distance++;
  }
}

- (jboolean)isDynamic {
  return false;
}

- (jboolean)isLocal {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[2].selector = @selector(isDynamic);
  methods[3].selector = @selector(isLocal);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "verbose_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorCapDistLC_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorCapDistLC = { "ExtractorCapDistLC", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 4, 2, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorCapDistLC;
}

@end

void EduStanfordNlpTaggerMaxentExtractorCapDistLC_init(EduStanfordNlpTaggerMaxentExtractorCapDistLC *self) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
  self->verbose_ = false;
}

EduStanfordNlpTaggerMaxentExtractorCapDistLC *new_EduStanfordNlpTaggerMaxentExtractorCapDistLC_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorCapDistLC, init)
}

EduStanfordNlpTaggerMaxentExtractorCapDistLC *create_EduStanfordNlpTaggerMaxentExtractorCapDistLC_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorCapDistLC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorCapDistLC)

@implementation EduStanfordNlpTaggerMaxentExtractorCapLCSeen

- (instancetype)initWithNSString:(NSString *)tag {
  EduStanfordNlpTaggerMaxentExtractorCapLCSeen_initWithNSString_(self, tag);
  return self;
}

- (void)setGlobalHolderWithEduStanfordNlpTaggerMaxentMaxentTagger:(EduStanfordNlpTaggerMaxentMaxentTagger *)tagger {
  self->dict_ = ((EduStanfordNlpTaggerMaxentMaxentTagger *) nil_chk(tagger))->dict_;
}

- (jboolean)preconditionWithNSString:(NSString *)tag1 {
  return [((NSString *) nil_chk(tag_)) isEqual:tag1];
}

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *res = [((EduStanfordNlpTaggerMaxentExtractor *) nil_chk(cCapDist_)) extractWithEduStanfordNlpTaggerMaxentHistory:h withEduStanfordNlpTaggerMaxentPairsHolder:pH];
  if ([((NSString *) nil_chk(res)) isEqual:@"0"]) {
    return res;
  }
  NSString *word = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:0];
  if ([((EduStanfordNlpTaggerMaxentDictionary *) nil_chk(dict_)) getCountWithNSString:word withNSString:tag_] > cutoff_) {
    return JreStrcat("$$", res, tag_);
  }
  else {
    return @"0";
  }
}

- (jboolean)isLocal {
  return false;
}

- (jboolean)isDynamic {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 4, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(setGlobalHolderWithEduStanfordNlpTaggerMaxentMaxentTagger:);
  methods[2].selector = @selector(preconditionWithNSString:);
  methods[3].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[4].selector = @selector(isLocal);
  methods[5].selector = @selector(isDynamic);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "tag_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "cutoff_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "cCapDist_", "LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "dict_", "LEduStanfordNlpTaggerMaxentDictionary;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorCapLCSeen_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "setGlobalHolder", "LEduStanfordNlpTaggerMaxentMaxentTagger;", "precondition", "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorCapLCSeen = { "ExtractorCapLCSeen", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 6, 5, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorCapLCSeen;
}

@end

void EduStanfordNlpTaggerMaxentExtractorCapLCSeen_initWithNSString_(EduStanfordNlpTaggerMaxentExtractorCapLCSeen *self, NSString *tag) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
  self->cutoff_ = 1;
  self->cCapDist_ = new_EduStanfordNlpTaggerMaxentExtractorCapDistLC_init();
  self->tag_ = tag;
}

EduStanfordNlpTaggerMaxentExtractorCapLCSeen *new_EduStanfordNlpTaggerMaxentExtractorCapLCSeen_initWithNSString_(NSString *tag) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorCapLCSeen, initWithNSString_, tag)
}

EduStanfordNlpTaggerMaxentExtractorCapLCSeen *create_EduStanfordNlpTaggerMaxentExtractorCapLCSeen_initWithNSString_(NSString *tag) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorCapLCSeen, initWithNSString_, tag)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorCapLCSeen)

@implementation EduStanfordNlpTaggerMaxentExtractorMidSentenceCap

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorMidSentenceCap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *prevTag = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getTagWithEduStanfordNlpTaggerMaxentHistory:h withInt:-1];
  if (prevTag == nil) {
    return @"0";
  }
  if ([prevTag isEqual:EduStanfordNlpTaggerMaxentRareExtractor_naTag]) {
    return @"0";
  }
  NSString *s = [pH getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:0];
  if (EduStanfordNlpTaggerMaxentRareExtractor_containsUpperCaseWithNSString_(s)) {
    return @"1";
  }
  return @"0";
}

- (jboolean)isLocal {
  return false;
}

- (jboolean)isDynamic {
  return true;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[2].selector = @selector(isLocal);
  methods[3].selector = @selector(isDynamic);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorMidSentenceCap_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorMidSentenceCap = { "ExtractorMidSentenceCap", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 4, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorMidSentenceCap;
}

@end

void EduStanfordNlpTaggerMaxentExtractorMidSentenceCap_init(EduStanfordNlpTaggerMaxentExtractorMidSentenceCap *self) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
}

EduStanfordNlpTaggerMaxentExtractorMidSentenceCap *new_EduStanfordNlpTaggerMaxentExtractorMidSentenceCap_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorMidSentenceCap, init)
}

EduStanfordNlpTaggerMaxentExtractorMidSentenceCap *create_EduStanfordNlpTaggerMaxentExtractorMidSentenceCap_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorMidSentenceCap, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorMidSentenceCap)

@implementation EduStanfordNlpTaggerMaxentExtractorStartSentenceCap

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorStartSentenceCap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setGlobalHolderWithEduStanfordNlpTaggerMaxentMaxentTagger:(EduStanfordNlpTaggerMaxentMaxentTagger *)tagger {
  self->dict_ = ((EduStanfordNlpTaggerMaxentMaxentTagger *) nil_chk(tagger))->dict_;
}

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *prevTag = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getTagWithEduStanfordNlpTaggerMaxentHistory:h withInt:-1];
  if (prevTag == nil) {
    return EduStanfordNlpTaggerMaxentExtractor_zeroSt;
  }
  if (![prevTag isEqual:EduStanfordNlpTaggerMaxentRareExtractor_naTag]) {
    return EduStanfordNlpTaggerMaxentExtractor_zeroSt;
  }
  NSString *s = [pH getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:0];
  if (EduStanfordNlpTaggerMaxentRareExtractor_startsUpperCaseWithNSString_(s)) {
    NSString *s1 = [((NSString *) nil_chk(s)) lowercaseString];
    if ([((EduStanfordNlpTaggerMaxentDictionary *) nil_chk(dict_)) isUnknownWithNSString:s1]) {
      return EduStanfordNlpTaggerMaxentExtractor_zeroSt;
    }
    return [((EduStanfordNlpTaggerMaxentDictionary *) nil_chk(dict_)) getFirstTagWithNSString:s1];
  }
  return EduStanfordNlpTaggerMaxentExtractor_zeroSt;
}

- (jboolean)isLocal {
  return false;
}

- (jboolean)isDynamic {
  return true;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setGlobalHolderWithEduStanfordNlpTaggerMaxentMaxentTagger:);
  methods[2].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[3].selector = @selector(isLocal);
  methods[4].selector = @selector(isDynamic);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "dict_", "LEduStanfordNlpTaggerMaxentDictionary;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorStartSentenceCap_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setGlobalHolder", "LEduStanfordNlpTaggerMaxentMaxentTagger;", "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorStartSentenceCap = { "ExtractorStartSentenceCap", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 5, 2, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorStartSentenceCap;
}

@end

void EduStanfordNlpTaggerMaxentExtractorStartSentenceCap_init(EduStanfordNlpTaggerMaxentExtractorStartSentenceCap *self) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
}

EduStanfordNlpTaggerMaxentExtractorStartSentenceCap *new_EduStanfordNlpTaggerMaxentExtractorStartSentenceCap_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorStartSentenceCap, init)
}

EduStanfordNlpTaggerMaxentExtractorStartSentenceCap *create_EduStanfordNlpTaggerMaxentExtractorStartSentenceCap_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorStartSentenceCap, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorStartSentenceCap)

@implementation EduStanfordNlpTaggerMaxentExtractorMidSentenceCapC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorMidSentenceCapC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setGlobalHolderWithEduStanfordNlpTaggerMaxentMaxentTagger:(EduStanfordNlpTaggerMaxentMaxentTagger *)tagger {
  self->dict_ = ((EduStanfordNlpTaggerMaxentMaxentTagger *) nil_chk(tagger))->dict_;
}

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *prevTag = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getTagWithEduStanfordNlpTaggerMaxentHistory:h withInt:-1];
  if (prevTag == nil) {
    return EduStanfordNlpTaggerMaxentExtractor_zeroSt;
  }
  if ([prevTag isEqual:EduStanfordNlpTaggerMaxentRareExtractor_naTag]) {
    return EduStanfordNlpTaggerMaxentExtractor_zeroSt;
  }
  NSString *s = [pH getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:0];
  if (EduStanfordNlpTaggerMaxentRareExtractor_startsUpperCaseWithNSString_(s)) {
    NSString *s1 = [((NSString *) nil_chk(s)) lowercaseString];
    if ([((EduStanfordNlpTaggerMaxentDictionary *) nil_chk(dict_)) isUnknownWithNSString:s1]) {
      return EduStanfordNlpTaggerMaxentExtractor_zeroSt;
    }
    return [((EduStanfordNlpTaggerMaxentDictionary *) nil_chk(dict_)) getFirstTagWithNSString:s1];
  }
  return EduStanfordNlpTaggerMaxentExtractor_zeroSt;
}

- (jboolean)isLocal {
  return false;
}

- (jboolean)isDynamic {
  return true;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setGlobalHolderWithEduStanfordNlpTaggerMaxentMaxentTagger:);
  methods[2].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[3].selector = @selector(isLocal);
  methods[4].selector = @selector(isDynamic);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "dict_", "LEduStanfordNlpTaggerMaxentDictionary;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorMidSentenceCapC_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setGlobalHolder", "LEduStanfordNlpTaggerMaxentMaxentTagger;", "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorMidSentenceCapC = { "ExtractorMidSentenceCapC", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 5, 2, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorMidSentenceCapC;
}

@end

void EduStanfordNlpTaggerMaxentExtractorMidSentenceCapC_init(EduStanfordNlpTaggerMaxentExtractorMidSentenceCapC *self) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
}

EduStanfordNlpTaggerMaxentExtractorMidSentenceCapC *new_EduStanfordNlpTaggerMaxentExtractorMidSentenceCapC_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorMidSentenceCapC, init)
}

EduStanfordNlpTaggerMaxentExtractorMidSentenceCapC *create_EduStanfordNlpTaggerMaxentExtractorMidSentenceCapC_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorMidSentenceCapC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorMidSentenceCapC)

@implementation EduStanfordNlpTaggerMaxentExtractorCapC

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorCapC_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setGlobalHolderWithEduStanfordNlpTaggerMaxentMaxentTagger:(EduStanfordNlpTaggerMaxentMaxentTagger *)tagger {
  self->dict_ = ((EduStanfordNlpTaggerMaxentMaxentTagger *) nil_chk(tagger))->dict_;
}

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *s = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:0];
  if (EduStanfordNlpTaggerMaxentRareExtractor_startsUpperCaseWithNSString_(s)) {
    NSString *s1 = [((NSString *) nil_chk(s)) lowercaseString];
    if ([((EduStanfordNlpTaggerMaxentDictionary *) nil_chk(dict_)) isUnknownWithNSString:s1]) {
      return EduStanfordNlpTaggerMaxentExtractor_zeroSt;
    }
    return [((EduStanfordNlpTaggerMaxentDictionary *) nil_chk(dict_)) getFirstTagWithNSString:s1];
  }
  return EduStanfordNlpTaggerMaxentExtractor_zeroSt;
}

- (jboolean)isLocal {
  return true;
}

- (jboolean)isDynamic {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setGlobalHolderWithEduStanfordNlpTaggerMaxentMaxentTagger:);
  methods[2].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[3].selector = @selector(isLocal);
  methods[4].selector = @selector(isDynamic);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "dict_", "LEduStanfordNlpTaggerMaxentDictionary;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorCapC_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setGlobalHolder", "LEduStanfordNlpTaggerMaxentMaxentTagger;", "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorCapC = { "ExtractorCapC", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 5, 2, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorCapC;
}

@end

void EduStanfordNlpTaggerMaxentExtractorCapC_init(EduStanfordNlpTaggerMaxentExtractorCapC *self) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
}

EduStanfordNlpTaggerMaxentExtractorCapC *new_EduStanfordNlpTaggerMaxentExtractorCapC_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorCapC, init)
}

EduStanfordNlpTaggerMaxentExtractorCapC *create_EduStanfordNlpTaggerMaxentExtractorCapC_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorCapC, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorCapC)

@implementation EduStanfordNlpTaggerMaxentExtractorAllCap

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorAllCap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *s = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:0];
  if (EduStanfordNlpTaggerMaxentRareExtractor_noneLowerCaseWithNSString_(s)) {
    return @"1";
  }
  return @"0";
}

- (jboolean)isLocal {
  return true;
}

- (jboolean)isDynamic {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[2].selector = @selector(isLocal);
  methods[3].selector = @selector(isDynamic);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorAllCap_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorAllCap = { "ExtractorAllCap", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 4, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorAllCap;
}

@end

void EduStanfordNlpTaggerMaxentExtractorAllCap_init(EduStanfordNlpTaggerMaxentExtractorAllCap *self) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
}

EduStanfordNlpTaggerMaxentExtractorAllCap *new_EduStanfordNlpTaggerMaxentExtractorAllCap_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorAllCap, init)
}

EduStanfordNlpTaggerMaxentExtractorAllCap *create_EduStanfordNlpTaggerMaxentExtractorAllCap_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorAllCap, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorAllCap)

@implementation EduStanfordNlpTaggerMaxentExtractorAllCapitalized

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorAllCapitalized_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *s = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:0];
  if (EduStanfordNlpTaggerMaxentRareExtractor_allUpperCaseWithNSString_(s)) {
    return @"1";
  }
  return @"0";
}

- (jboolean)isLocal {
  return true;
}

- (jboolean)isDynamic {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[2].selector = @selector(isLocal);
  methods[3].selector = @selector(isDynamic);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorAllCapitalized_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorAllCapitalized = { "ExtractorAllCapitalized", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 4, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorAllCapitalized;
}

@end

void EduStanfordNlpTaggerMaxentExtractorAllCapitalized_init(EduStanfordNlpTaggerMaxentExtractorAllCapitalized *self) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
}

EduStanfordNlpTaggerMaxentExtractorAllCapitalized *new_EduStanfordNlpTaggerMaxentExtractorAllCapitalized_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorAllCapitalized, init)
}

EduStanfordNlpTaggerMaxentExtractorAllCapitalized *create_EduStanfordNlpTaggerMaxentExtractorAllCapitalized_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorAllCapitalized, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorAllCapitalized)

@implementation EduStanfordNlpTaggerMaxentExtractorCNumber

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorCNumber_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *s = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:0];
  if (EduStanfordNlpTaggerMaxentRareExtractor_containsNumberWithNSString_(s)) {
    return @"1";
  }
  return @"0";
}

- (jboolean)isLocal {
  return true;
}

- (jboolean)isDynamic {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[2].selector = @selector(isLocal);
  methods[3].selector = @selector(isDynamic);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorCNumber_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorCNumber = { "ExtractorCNumber", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 4, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorCNumber;
}

@end

void EduStanfordNlpTaggerMaxentExtractorCNumber_init(EduStanfordNlpTaggerMaxentExtractorCNumber *self) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
}

EduStanfordNlpTaggerMaxentExtractorCNumber *new_EduStanfordNlpTaggerMaxentExtractorCNumber_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorCNumber, init)
}

EduStanfordNlpTaggerMaxentExtractorCNumber *create_EduStanfordNlpTaggerMaxentExtractorCNumber_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorCNumber, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorCNumber)

@implementation EduStanfordNlpTaggerMaxentExtractorDash

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorDash_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *s = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:0];
  if (EduStanfordNlpTaggerMaxentRareExtractor_containsDashWithNSString_(s)) {
    return @"1";
  }
  return @"0";
}

- (jboolean)isLocal {
  return true;
}

- (jboolean)isDynamic {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[2].selector = @selector(isLocal);
  methods[3].selector = @selector(isDynamic);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorDash_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorDash = { "ExtractorDash", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 4, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorDash;
}

@end

void EduStanfordNlpTaggerMaxentExtractorDash_init(EduStanfordNlpTaggerMaxentExtractorDash *self) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
}

EduStanfordNlpTaggerMaxentExtractorDash *new_EduStanfordNlpTaggerMaxentExtractorDash_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorDash, init)
}

EduStanfordNlpTaggerMaxentExtractorDash *create_EduStanfordNlpTaggerMaxentExtractorDash_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorDash, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorDash)

@implementation EduStanfordNlpTaggerMaxentExtractorWordSuff

- (instancetype)initWithInt:(jint)num
                    withInt:(jint)position {
  EduStanfordNlpTaggerMaxentExtractorWordSuff_initWithInt_withInt_(self, num, position);
  return self;
}

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *word = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:position_ExtractorWordSuff_];
  if (((jint) [((NSString *) nil_chk(word)) length]) < num_) {
    return @"######";
  }
  return [word substring:((jint) [word length]) - num_];
}

- (NSString *)description {
  return JreStrcat("$$I$IC", EduStanfordNlpUtilStringUtils_getShortClassNameWithId_(self), @"(len", num_, @",w", position_ExtractorWordSuff_, ')');
}

- (jboolean)isLocal {
  return position_ExtractorWordSuff_ == 0;
}

- (jboolean)isDynamic {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:withInt:);
  methods[1].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[2].selector = @selector(description);
  methods[3].selector = @selector(isLocal);
  methods[4].selector = @selector(isDynamic);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "num_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "position_ExtractorWordSuff_", "I", .constantValue.asLong = 0, 0x12, 4, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorWordSuff_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "II", "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;", "toString", "position" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorWordSuff = { "ExtractorWordSuff", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 5, 3, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorWordSuff;
}

@end

void EduStanfordNlpTaggerMaxentExtractorWordSuff_initWithInt_withInt_(EduStanfordNlpTaggerMaxentExtractorWordSuff *self, jint num, jint position) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
  self->num_ = num;
  self->position_ExtractorWordSuff_ = position;
}

EduStanfordNlpTaggerMaxentExtractorWordSuff *new_EduStanfordNlpTaggerMaxentExtractorWordSuff_initWithInt_withInt_(jint num, jint position) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorWordSuff, initWithInt_withInt_, num, position)
}

EduStanfordNlpTaggerMaxentExtractorWordSuff *create_EduStanfordNlpTaggerMaxentExtractorWordSuff_initWithInt_withInt_(jint num, jint position) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorWordSuff, initWithInt_withInt_, num, position)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorWordSuff)

@implementation EduStanfordNlpTaggerMaxentExtractorWordPref

- (instancetype)initWithInt:(jint)num
                    withInt:(jint)position {
  EduStanfordNlpTaggerMaxentExtractorWordPref_initWithInt_withInt_(self, num, position);
  return self;
}

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *word = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:position_ExtractorWordPref_];
  if (((jint) [((NSString *) nil_chk(word)) length]) < num_) {
    return @"######";
  }
  else {
    return [word substring:0 endIndex:num_];
  }
}

- (NSString *)description {
  return JreStrcat("$$I$IC", EduStanfordNlpUtilStringUtils_getShortClassNameWithId_(self), @"(len", num_, @",w", position_ExtractorWordPref_, ')');
}

- (jboolean)isLocal {
  return position_ExtractorWordPref_ == 0;
}

- (jboolean)isDynamic {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:withInt:);
  methods[1].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[2].selector = @selector(description);
  methods[3].selector = @selector(isLocal);
  methods[4].selector = @selector(isDynamic);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "num_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "position_ExtractorWordPref_", "I", .constantValue.asLong = 0, 0x12, 4, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorWordPref_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "II", "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;", "toString", "position" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorWordPref = { "ExtractorWordPref", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 5, 3, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorWordPref;
}

@end

void EduStanfordNlpTaggerMaxentExtractorWordPref_initWithInt_withInt_(EduStanfordNlpTaggerMaxentExtractorWordPref *self, jint num, jint position) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
  self->num_ = num;
  self->position_ExtractorWordPref_ = position;
}

EduStanfordNlpTaggerMaxentExtractorWordPref *new_EduStanfordNlpTaggerMaxentExtractorWordPref_initWithInt_withInt_(jint num, jint position) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorWordPref, initWithInt_withInt_, num, position)
}

EduStanfordNlpTaggerMaxentExtractorWordPref *create_EduStanfordNlpTaggerMaxentExtractorWordPref_initWithInt_withInt_(jint num, jint position) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorWordPref, initWithInt_withInt_, num, position)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorWordPref)

@implementation EduStanfordNlpTaggerMaxentExtractorsConjunction

- (instancetype)initWithEduStanfordNlpTaggerMaxentExtractor:(EduStanfordNlpTaggerMaxentExtractor *)e1
                    withEduStanfordNlpTaggerMaxentExtractor:(EduStanfordNlpTaggerMaxentExtractor *)e2 {
  EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(self, e1, e2);
  return self;
}

- (void)setGlobalHolderWithEduStanfordNlpTaggerMaxentMaxentTagger:(EduStanfordNlpTaggerMaxentMaxentTagger *)tagger {
  [((EduStanfordNlpTaggerMaxentExtractor *) nil_chk(extractor1_)) setGlobalHolderWithEduStanfordNlpTaggerMaxentMaxentTagger:tagger];
  [((EduStanfordNlpTaggerMaxentExtractor *) nil_chk(extractor2_)) setGlobalHolderWithEduStanfordNlpTaggerMaxentMaxentTagger:tagger];
}

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *ex1 = [((EduStanfordNlpTaggerMaxentExtractor *) nil_chk(extractor1_)) extractWithEduStanfordNlpTaggerMaxentHistory:h withEduStanfordNlpTaggerMaxentPairsHolder:pH];
  if ([((NSString *) nil_chk(ex1)) isEqual:EduStanfordNlpTaggerMaxentExtractor_zeroSt]) {
    return EduStanfordNlpTaggerMaxentExtractor_zeroSt;
  }
  NSString *ex2 = [((EduStanfordNlpTaggerMaxentExtractor *) nil_chk(extractor2_)) extractWithEduStanfordNlpTaggerMaxentHistory:h withEduStanfordNlpTaggerMaxentPairsHolder:pH];
  if ([((NSString *) nil_chk(ex2)) isEqual:EduStanfordNlpTaggerMaxentExtractor_zeroSt]) {
    return EduStanfordNlpTaggerMaxentExtractor_zeroSt;
  }
  return JreStrcat("$C$", ex1, ':', ex2);
}

- (jboolean)isLocal {
  return JreLoadVolatileBoolean(&isLocal_);
}

- (jboolean)isDynamic {
  return JreLoadVolatileBoolean(&isDynamic_);
}

- (NSString *)description {
  return JreStrcat("$C@C@C", EduStanfordNlpUtilStringUtils_getShortClassNameWithId_(self), '(', extractor1_, ',', extractor2_, ')');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 3, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTaggerMaxentExtractor:withEduStanfordNlpTaggerMaxentExtractor:);
  methods[1].selector = @selector(setGlobalHolderWithEduStanfordNlpTaggerMaxentMaxentTagger:);
  methods[2].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[3].selector = @selector(isLocal);
  methods[4].selector = @selector(isDynamic);
  methods[5].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "extractor1_", "LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "extractor2_", "LEduStanfordNlpTaggerMaxentExtractor;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "isLocal_", "Z", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "isDynamic_", "Z", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorsConjunction_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTaggerMaxentExtractor;LEduStanfordNlpTaggerMaxentExtractor;", "setGlobalHolder", "LEduStanfordNlpTaggerMaxentMaxentTagger;", "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;", "toString" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorsConjunction = { "ExtractorsConjunction", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 6, 5, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorsConjunction;
}

@end

void EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(EduStanfordNlpTaggerMaxentExtractorsConjunction *self, EduStanfordNlpTaggerMaxentExtractor *e1, EduStanfordNlpTaggerMaxentExtractor *e2) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
  self->extractor1_ = e1;
  self->extractor2_ = e2;
  JreAssignVolatileBoolean(&self->isLocal_, [((EduStanfordNlpTaggerMaxentExtractor *) nil_chk(e1)) isLocal] && [((EduStanfordNlpTaggerMaxentExtractor *) nil_chk(e2)) isLocal]);
  JreAssignVolatileBoolean(&self->isDynamic_, [e1 isDynamic] || [((EduStanfordNlpTaggerMaxentExtractor *) nil_chk(e2)) isDynamic]);
}

EduStanfordNlpTaggerMaxentExtractorsConjunction *new_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(EduStanfordNlpTaggerMaxentExtractor *e1, EduStanfordNlpTaggerMaxentExtractor *e2) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorsConjunction, initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_, e1, e2)
}

EduStanfordNlpTaggerMaxentExtractorsConjunction *create_EduStanfordNlpTaggerMaxentExtractorsConjunction_initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_(EduStanfordNlpTaggerMaxentExtractor *e1, EduStanfordNlpTaggerMaxentExtractor *e2) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorsConjunction, initWithEduStanfordNlpTaggerMaxentExtractor_withEduStanfordNlpTaggerMaxentExtractor_, e1, e2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorsConjunction)

@implementation EduStanfordNlpTaggerMaxentPluralAcronymDetector

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentPluralAcronymDetector_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jboolean)pluralAcronymWithNSString:(NSString *)s {
  return EduStanfordNlpTaggerMaxentPluralAcronymDetector_pluralAcronymWithNSString_(s);
}

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *s = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:0];
  if (EduStanfordNlpTaggerMaxentPluralAcronymDetector_pluralAcronymWithNSString_(s)) {
    return @"1";
  }
  return @"0";
}

- (jboolean)isLocal {
  return true;
}

- (jboolean)isDynamic {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(pluralAcronymWithNSString:);
  methods[2].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[3].selector = @selector(isLocal);
  methods[4].selector = @selector(isDynamic);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentPluralAcronymDetector_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "pluralAcronym", "LNSString;", "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentPluralAcronymDetector = { "PluralAcronymDetector", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 5, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentPluralAcronymDetector;
}

@end

void EduStanfordNlpTaggerMaxentPluralAcronymDetector_init(EduStanfordNlpTaggerMaxentPluralAcronymDetector *self) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
}

EduStanfordNlpTaggerMaxentPluralAcronymDetector *new_EduStanfordNlpTaggerMaxentPluralAcronymDetector_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentPluralAcronymDetector, init)
}

EduStanfordNlpTaggerMaxentPluralAcronymDetector *create_EduStanfordNlpTaggerMaxentPluralAcronymDetector_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentPluralAcronymDetector, init)
}

jboolean EduStanfordNlpTaggerMaxentPluralAcronymDetector_pluralAcronymWithNSString_(NSString *s) {
  EduStanfordNlpTaggerMaxentPluralAcronymDetector_initialize();
  jint len = ((jint) [((NSString *) nil_chk(s)) length]);
  len--;
  if ([s charAtWithInt:len] != 's') {
    return false;
  }
  for (jint i = 0; i < len; i++) {
    if (!JavaLangCharacter_isUpperCaseWithChar_([s charAtWithInt:i])) {
      return false;
    }
  }
  return true;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentPluralAcronymDetector)

@implementation EduStanfordNlpTaggerMaxentCtbPreDetector

- (instancetype)initWithNSString:(NSString *)t2
                         withInt:(jint)n2 {
  EduStanfordNlpTaggerMaxentCtbPreDetector_initWithNSString_withInt_(self, t2, n2);
  return self;
}

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *s = EduStanfordNlpTaggerMaxentTestSentence_toNiceWithNSString_([((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:position_]);
  if (![((NSString *) nil_chk(s)) isEqual:@""] && [((NSString *) nil_chk(EduStanfordNlpTaggerMaxentCtbDict_getTagPreWithNSString_withNSString_(t1_, [s substring:0 endIndex:1]))) isEqual:@"1"]) return JreStrcat("$$", @"1:", t1_);
  return JreStrcat("$$", @"0:", t1_);
}

- (NSString *)description {
  return JreStrcat("$$$", [super description], @" tag=", t1_);
}

- (jboolean)isLocal {
  return false;
}

- (jboolean)isDynamic {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withInt:);
  methods[1].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[2].selector = @selector(description);
  methods[3].selector = @selector(isLocal);
  methods[4].selector = @selector(isDynamic);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "t1_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentCtbPreDetector_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;I", "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;", "toString" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentCtbPreDetector = { "CtbPreDetector", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 5, 2, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentCtbPreDetector;
}

@end

void EduStanfordNlpTaggerMaxentCtbPreDetector_initWithNSString_withInt_(EduStanfordNlpTaggerMaxentCtbPreDetector *self, NSString *t2, jint n2) {
  EduStanfordNlpTaggerMaxentRareExtractor_initWithInt_(self, n2);
  self->t1_ = t2;
}

EduStanfordNlpTaggerMaxentCtbPreDetector *new_EduStanfordNlpTaggerMaxentCtbPreDetector_initWithNSString_withInt_(NSString *t2, jint n2) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentCtbPreDetector, initWithNSString_withInt_, t2, n2)
}

EduStanfordNlpTaggerMaxentCtbPreDetector *create_EduStanfordNlpTaggerMaxentCtbPreDetector_initWithNSString_withInt_(NSString *t2, jint n2) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentCtbPreDetector, initWithNSString_withInt_, t2, n2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentCtbPreDetector)

@implementation EduStanfordNlpTaggerMaxentCtbSufDetector

- (instancetype)initWithNSString:(NSString *)t2
                         withInt:(jint)n2 {
  EduStanfordNlpTaggerMaxentCtbSufDetector_initWithNSString_withInt_(self, t2, n2);
  return self;
}

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *s = EduStanfordNlpTaggerMaxentTestSentence_toNiceWithNSString_([((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:position_]);
  if (![((NSString *) nil_chk(s)) isEqual:@""] && [((NSString *) nil_chk(EduStanfordNlpTaggerMaxentCtbDict_getTagSufWithNSString_withNSString_(t1_, [s substring:((jint) [s length]) - 1 endIndex:((jint) [s length])]))) isEqual:@"1"]) return JreStrcat("$$", @"1:", t1_);
  return JreStrcat("$$", @"0:", t1_);
}

- (jboolean)isLocal {
  return false;
}

- (jboolean)isDynamic {
  return false;
}

- (NSString *)description {
  return JreStrcat("$$$", [super description], @" tag=", t1_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withInt:);
  methods[1].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[2].selector = @selector(isLocal);
  methods[3].selector = @selector(isDynamic);
  methods[4].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "t1_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentCtbSufDetector_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;I", "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;", "toString" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentCtbSufDetector = { "CtbSufDetector", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 5, 2, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentCtbSufDetector;
}

@end

void EduStanfordNlpTaggerMaxentCtbSufDetector_initWithNSString_withInt_(EduStanfordNlpTaggerMaxentCtbSufDetector *self, NSString *t2, jint n2) {
  EduStanfordNlpTaggerMaxentRareExtractor_initWithInt_(self, n2);
  self->t1_ = t2;
}

EduStanfordNlpTaggerMaxentCtbSufDetector *new_EduStanfordNlpTaggerMaxentCtbSufDetector_initWithNSString_withInt_(NSString *t2, jint n2) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentCtbSufDetector, initWithNSString_withInt_, t2, n2)
}

EduStanfordNlpTaggerMaxentCtbSufDetector *create_EduStanfordNlpTaggerMaxentCtbSufDetector_initWithNSString_withInt_(NSString *t2, jint n2) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentCtbSufDetector, initWithNSString_withInt_, t2, n2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentCtbSufDetector)

@implementation EduStanfordNlpTaggerMaxentASBCunkDetector

- (instancetype)initWithNSString:(NSString *)t2
                         withInt:(jint)n2 {
  EduStanfordNlpTaggerMaxentASBCunkDetector_initWithNSString_withInt_(self, t2, n2);
  return self;
}

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *s = EduStanfordNlpTaggerMaxentTestSentence_toNiceWithNSString_([((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:n1_]);
  if ([((NSString *) nil_chk(EduStanfordNlpTaggerMaxentASBCunkDict_getTagWithNSString_withNSString_(t1_, s))) isEqual:@"1"]) return JreStrcat("$$", @"1:", t1_);
  return JreStrcat("$$", @"0:", t1_);
}

- (jboolean)isLocal {
  return false;
}

- (jboolean)isDynamic {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withInt:);
  methods[1].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[2].selector = @selector(isLocal);
  methods[3].selector = @selector(isDynamic);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "t1_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "n1_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentASBCunkDetector_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;I", "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentASBCunkDetector = { "ASBCunkDetector", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 4, 3, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentASBCunkDetector;
}

@end

void EduStanfordNlpTaggerMaxentASBCunkDetector_initWithNSString_withInt_(EduStanfordNlpTaggerMaxentASBCunkDetector *self, NSString *t2, jint n2) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
  self->t1_ = t2;
  self->n1_ = n2;
}

EduStanfordNlpTaggerMaxentASBCunkDetector *new_EduStanfordNlpTaggerMaxentASBCunkDetector_initWithNSString_withInt_(NSString *t2, jint n2) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentASBCunkDetector, initWithNSString_withInt_, t2, n2)
}

EduStanfordNlpTaggerMaxentASBCunkDetector *create_EduStanfordNlpTaggerMaxentASBCunkDetector_initWithNSString_withInt_(NSString *t2, jint n2) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentASBCunkDetector, initWithNSString_withInt_, t2, n2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentASBCunkDetector)

@implementation EduStanfordNlpTaggerMaxentCTBunkDictDetector

- (instancetype)initWithNSString:(NSString *)t2
                         withInt:(jint)n2 {
  EduStanfordNlpTaggerMaxentCTBunkDictDetector_initWithNSString_withInt_(self, t2, n2);
  return self;
}

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *s = EduStanfordNlpTaggerMaxentTestSentence_toNiceWithNSString_([((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:n1_]);
  if ([((NSString *) nil_chk(EduStanfordNlpTaggerMaxentCTBunkDict_getTagWithNSString_withNSString_(t1_, s))) isEqual:@"1"]) return JreStrcat("$$", @"1:", t1_);
  return JreStrcat("$$", @"0:", t1_);
}

- (jboolean)isLocal {
  return false;
}

- (jboolean)isDynamic {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withInt:);
  methods[1].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[2].selector = @selector(isLocal);
  methods[3].selector = @selector(isDynamic);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "t1_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "n1_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentCTBunkDictDetector_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;I", "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentCTBunkDictDetector = { "CTBunkDictDetector", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 4, 3, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentCTBunkDictDetector;
}

@end

void EduStanfordNlpTaggerMaxentCTBunkDictDetector_initWithNSString_withInt_(EduStanfordNlpTaggerMaxentCTBunkDictDetector *self, NSString *t2, jint n2) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
  self->t1_ = t2;
  self->n1_ = n2;
}

EduStanfordNlpTaggerMaxentCTBunkDictDetector *new_EduStanfordNlpTaggerMaxentCTBunkDictDetector_initWithNSString_withInt_(NSString *t2, jint n2) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentCTBunkDictDetector, initWithNSString_withInt_, t2, n2)
}

EduStanfordNlpTaggerMaxentCTBunkDictDetector *create_EduStanfordNlpTaggerMaxentCTBunkDictDetector_initWithNSString_withInt_(NSString *t2, jint n2) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentCTBunkDictDetector, initWithNSString_withInt_, t2, n2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentCTBunkDictDetector)

@implementation EduStanfordNlpTaggerMaxentCWordBooleanExtractor

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *cword = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:0];
  return [self extractFeatureWithNSString:cword] ? @"1" : @"0";
}

- (jboolean)extractFeatureWithNSString:(NSString *)cword {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isLocal {
  return true;
}

- (jboolean)isDynamic {
  return false;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentCWordBooleanExtractor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x400, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[1].selector = @selector(extractFeatureWithNSString:);
  methods[2].selector = @selector(isLocal);
  methods[3].selector = @selector(isDynamic);
  methods[4].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;", "extractFeature", "LNSString;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentCWordBooleanExtractor = { "CWordBooleanExtractor", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, NULL, 7, 0x400, 5, 0, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentCWordBooleanExtractor;
}

@end

void EduStanfordNlpTaggerMaxentCWordBooleanExtractor_init(EduStanfordNlpTaggerMaxentCWordBooleanExtractor *self) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentCWordBooleanExtractor)

@implementation EduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix

- (jboolean)extractFeatureWithNSString:(NSString *)cword {
  return EduStanfordNlpInternationalFrenchFrenchUnknownWordSignatures_hasNounSuffixWithNSString_(cword);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(extractFeatureWithNSString:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "extractFeature", "LNSString;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix = { "ExtractorFrenchNounSuffix", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 2, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix;
}

@end

void EduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix_init(EduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix *self) {
  EduStanfordNlpTaggerMaxentCWordBooleanExtractor_init(self);
}

EduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix *new_EduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix, init)
}

EduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix *create_EduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorFrenchNounSuffix)

@implementation EduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix

- (jboolean)extractFeatureWithNSString:(NSString *)cword {
  return EduStanfordNlpInternationalFrenchFrenchUnknownWordSignatures_hasAdvSuffixWithNSString_(cword);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(extractFeatureWithNSString:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "extractFeature", "LNSString;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix = { "ExtractorFrenchAdvSuffix", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 2, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix;
}

@end

void EduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix_init(EduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix *self) {
  EduStanfordNlpTaggerMaxentCWordBooleanExtractor_init(self);
}

EduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix *new_EduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix, init)
}

EduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix *create_EduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorFrenchAdvSuffix)

@implementation EduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix

- (jboolean)extractFeatureWithNSString:(NSString *)cword {
  return EduStanfordNlpInternationalFrenchFrenchUnknownWordSignatures_hasVerbSuffixWithNSString_(cword);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(extractFeatureWithNSString:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "extractFeature", "LNSString;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix = { "ExtractorFrenchVerbSuffix", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 2, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix;
}

@end

void EduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix_init(EduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix *self) {
  EduStanfordNlpTaggerMaxentCWordBooleanExtractor_init(self);
}

EduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix *new_EduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix, init)
}

EduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix *create_EduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorFrenchVerbSuffix)

@implementation EduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix

- (jboolean)extractFeatureWithNSString:(NSString *)cword {
  return EduStanfordNlpInternationalFrenchFrenchUnknownWordSignatures_hasAdjSuffixWithNSString_(cword);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(extractFeatureWithNSString:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "extractFeature", "LNSString;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix = { "ExtractorFrenchAdjSuffix", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 2, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix;
}

@end

void EduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix_init(EduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix *self) {
  EduStanfordNlpTaggerMaxentCWordBooleanExtractor_init(self);
}

EduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix *new_EduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix, init)
}

EduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix *create_EduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorFrenchAdjSuffix)

@implementation EduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix

- (jboolean)extractFeatureWithNSString:(NSString *)cword {
  return EduStanfordNlpInternationalFrenchFrenchUnknownWordSignatures_hasPossiblePluralWithNSString_(cword);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(extractFeatureWithNSString:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "extractFeature", "LNSString;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix = { "ExtractorFrenchPluralSuffix", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 2, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix;
}

@end

void EduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix_init(EduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix *self) {
  EduStanfordNlpTaggerMaxentCWordBooleanExtractor_init(self);
}

EduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix *new_EduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix, init)
}

EduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix *create_EduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorFrenchPluralSuffix)

@implementation EduStanfordNlpTaggerMaxentExtractorSpanishGender

- (NSString *)extractWithEduStanfordNlpTaggerMaxentHistory:(EduStanfordNlpTaggerMaxentHistory *)h
                 withEduStanfordNlpTaggerMaxentPairsHolder:(EduStanfordNlpTaggerMaxentPairsHolder *)pH {
  NSString *cword = [((EduStanfordNlpTaggerMaxentPairsHolder *) nil_chk(pH)) getWordWithEduStanfordNlpTaggerMaxentHistory:h withInt:0];
  if (EduStanfordNlpInternationalSpanishSpanishUnknownWordSignatures_hasMasculineSuffixWithNSString_(cword)) return @"m";
  else if (EduStanfordNlpInternationalSpanishSpanishUnknownWordSignatures_hasFeminineSuffixWithNSString_(cword)) return @"f";
  else return @"";
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorSpanishGender_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(extractWithEduStanfordNlpTaggerMaxentHistory:withEduStanfordNlpTaggerMaxentPairsHolder:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorSpanishGender_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "extract", "LEduStanfordNlpTaggerMaxentHistory;LEduStanfordNlpTaggerMaxentPairsHolder;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorSpanishGender = { "ExtractorSpanishGender", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 2, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorSpanishGender;
}

@end

void EduStanfordNlpTaggerMaxentExtractorSpanishGender_init(EduStanfordNlpTaggerMaxentExtractorSpanishGender *self) {
  EduStanfordNlpTaggerMaxentRareExtractor_init(self);
}

EduStanfordNlpTaggerMaxentExtractorSpanishGender *new_EduStanfordNlpTaggerMaxentExtractorSpanishGender_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorSpanishGender, init)
}

EduStanfordNlpTaggerMaxentExtractorSpanishGender *create_EduStanfordNlpTaggerMaxentExtractorSpanishGender_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorSpanishGender, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorSpanishGender)

@implementation EduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix

- (jboolean)extractFeatureWithNSString:(NSString *)cword {
  return EduStanfordNlpInternationalSpanishSpanishUnknownWordSignatures_hasConditionalSuffixWithNSString_(cword);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(extractFeatureWithNSString:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "extractFeature", "LNSString;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix = { "ExtractorSpanishConditionalSuffix", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 2, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix;
}

@end

void EduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix_init(EduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix *self) {
  EduStanfordNlpTaggerMaxentCWordBooleanExtractor_init(self);
}

EduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix *new_EduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix, init)
}

EduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix *create_EduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorSpanishConditionalSuffix)

@implementation EduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix

- (jboolean)extractFeatureWithNSString:(NSString *)cword {
  return EduStanfordNlpInternationalSpanishSpanishUnknownWordSignatures_hasImperfectErIrSuffixWithNSString_(cword);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(extractFeatureWithNSString:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "extractFeature", "LNSString;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix = { "ExtractorSpanishImperfectErIrSuffix", "edu.stanford.nlp.tagger.maxent", ptrTable, methods, fields, 7, 0x0, 2, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix;
}

@end

void EduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix_init(EduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix *self) {
  EduStanfordNlpTaggerMaxentCWordBooleanExtractor_init(self);
}

EduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix *new_EduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix, init)
}

EduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix *create_EduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerMaxentExtractorSpanishImperfectErIrSuffix)
