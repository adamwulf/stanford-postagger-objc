//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/tagger/io/TSVTaggedFileReader.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpTaggerIoTSVTaggedFileReader")
#ifdef RESTRICT_EduStanfordNlpTaggerIoTSVTaggedFileReader
#define INCLUDE_ALL_EduStanfordNlpTaggerIoTSVTaggedFileReader 0
#else
#define INCLUDE_ALL_EduStanfordNlpTaggerIoTSVTaggedFileReader 1
#endif
#undef RESTRICT_EduStanfordNlpTaggerIoTSVTaggedFileReader

#if !defined (EduStanfordNlpTaggerIoTSVTaggedFileReader_) && (INCLUDE_ALL_EduStanfordNlpTaggerIoTSVTaggedFileReader || defined(INCLUDE_EduStanfordNlpTaggerIoTSVTaggedFileReader))
#define EduStanfordNlpTaggerIoTSVTaggedFileReader_

#define RESTRICT_EduStanfordNlpTaggerIoTaggedFileReader 1
#define INCLUDE_EduStanfordNlpTaggerIoTaggedFileReader 1
#include "edu/stanford/nlp/tagger/io/TaggedFileReader.h"

@class EduStanfordNlpTaggerIoTaggedFileRecord;
@class JavaIoBufferedReader;
@protocol JavaUtilFunctionConsumer;
@protocol JavaUtilIterator;
@protocol JavaUtilList;
@protocol JavaUtilSpliterator;

@interface EduStanfordNlpTaggerIoTSVTaggedFileReader : NSObject < EduStanfordNlpTaggerIoTaggedFileReader > {
 @public
  JavaIoBufferedReader *reader_;
  NSString *filename_;
  jint wordColumn_, tagColumn_;
  id<JavaUtilList> next_;
  jint linesRead_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpTaggerIoTaggedFileRecord:(EduStanfordNlpTaggerIoTaggedFileRecord *)record;

- (NSString *)filename;

- (jboolean)hasNext;

- (id<JavaUtilIterator>)iterator;

- (id<JavaUtilList>)next;

- (void)remove;

#pragma mark Package-Private

- (void)primeNext;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTaggerIoTSVTaggedFileReader)

J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerIoTSVTaggedFileReader, reader_, JavaIoBufferedReader *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerIoTSVTaggedFileReader, filename_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTaggerIoTSVTaggedFileReader, next_, id<JavaUtilList>)

inline jint EduStanfordNlpTaggerIoTSVTaggedFileReader_get_DEFAULT_WORD_COLUMN();
#define EduStanfordNlpTaggerIoTSVTaggedFileReader_DEFAULT_WORD_COLUMN 0
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerIoTSVTaggedFileReader, DEFAULT_WORD_COLUMN, jint)

inline jint EduStanfordNlpTaggerIoTSVTaggedFileReader_get_DEFAULT_TAG_COLUMN();
#define EduStanfordNlpTaggerIoTSVTaggedFileReader_DEFAULT_TAG_COLUMN 1
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTaggerIoTSVTaggedFileReader, DEFAULT_TAG_COLUMN, jint)

FOUNDATION_EXPORT void EduStanfordNlpTaggerIoTSVTaggedFileReader_initWithEduStanfordNlpTaggerIoTaggedFileRecord_(EduStanfordNlpTaggerIoTSVTaggedFileReader *self, EduStanfordNlpTaggerIoTaggedFileRecord *record);

FOUNDATION_EXPORT EduStanfordNlpTaggerIoTSVTaggedFileReader *new_EduStanfordNlpTaggerIoTSVTaggedFileReader_initWithEduStanfordNlpTaggerIoTaggedFileRecord_(EduStanfordNlpTaggerIoTaggedFileRecord *record) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTaggerIoTSVTaggedFileReader *create_EduStanfordNlpTaggerIoTSVTaggedFileReader_initWithEduStanfordNlpTaggerIoTaggedFileRecord_(EduStanfordNlpTaggerIoTaggedFileRecord *record);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTaggerIoTSVTaggedFileReader)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpTaggerIoTSVTaggedFileReader")
