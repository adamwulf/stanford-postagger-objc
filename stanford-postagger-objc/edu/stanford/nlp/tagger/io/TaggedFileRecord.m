//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/tagger/io/TaggedFileRecord.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/io/NumberRangesFileFilter.h"
#include "edu/stanford/nlp/tagger/io/TSVTaggedFileReader.h"
#include "edu/stanford/nlp/tagger/io/TaggedFileReader.h"
#include "edu/stanford/nlp/tagger/io/TaggedFileRecord.h"
#include "edu/stanford/nlp/tagger/io/TextTaggedFileReader.h"
#include "edu/stanford/nlp/tagger/io/TreeTaggedFileReader.h"
#include "edu/stanford/nlp/tagger/maxent/TaggerConfig.h"
#include "edu/stanford/nlp/trees/TreeNormalizer.h"
#include "edu/stanford/nlp/trees/TreeReaderFactory.h"
#include "edu/stanford/nlp/trees/TreeTransformer.h"
#include "edu/stanford/nlp/util/ReflectionLoading.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/Properties.h"
#include "java/util/function/Predicate.h"

@interface EduStanfordNlpTaggerIoTaggedFileRecord ()

- (instancetype)initWithNSString:(NSString *)file
withEduStanfordNlpTaggerIoTaggedFileRecord_Format:(EduStanfordNlpTaggerIoTaggedFileRecord_Format *)format
                    withNSString:(NSString *)encoding
                    withNSString:(NSString *)tagSeparator
withEduStanfordNlpTreesTreeTransformer:(id<EduStanfordNlpTreesTreeTransformer>)treeTransformer
withEduStanfordNlpTreesTreeNormalizer:(EduStanfordNlpTreesTreeNormalizer *)treeNormalizer
withEduStanfordNlpTreesTreeReaderFactory:(id<EduStanfordNlpTreesTreeReaderFactory>)trf
withEduStanfordNlpIoNumberRangesFileFilter:(EduStanfordNlpIoNumberRangesFileFilter *)treeRange
   withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)treeFilter
             withJavaLangInteger:(JavaLangInteger *)wordColumn
             withJavaLangInteger:(JavaLangInteger *)tagColumn;

@end

__attribute__((unused)) static void EduStanfordNlpTaggerIoTaggedFileRecord_initWithNSString_withEduStanfordNlpTaggerIoTaggedFileRecord_Format_withNSString_withNSString_withEduStanfordNlpTreesTreeTransformer_withEduStanfordNlpTreesTreeNormalizer_withEduStanfordNlpTreesTreeReaderFactory_withEduStanfordNlpIoNumberRangesFileFilter_withJavaUtilFunctionPredicate_withJavaLangInteger_withJavaLangInteger_(EduStanfordNlpTaggerIoTaggedFileRecord *self, NSString *file, EduStanfordNlpTaggerIoTaggedFileRecord_Format *format, NSString *encoding, NSString *tagSeparator, id<EduStanfordNlpTreesTreeTransformer> treeTransformer, EduStanfordNlpTreesTreeNormalizer *treeNormalizer, id<EduStanfordNlpTreesTreeReaderFactory> trf, EduStanfordNlpIoNumberRangesFileFilter *treeRange, id<JavaUtilFunctionPredicate> treeFilter, JavaLangInteger *wordColumn, JavaLangInteger *tagColumn);

__attribute__((unused)) static EduStanfordNlpTaggerIoTaggedFileRecord *new_EduStanfordNlpTaggerIoTaggedFileRecord_initWithNSString_withEduStanfordNlpTaggerIoTaggedFileRecord_Format_withNSString_withNSString_withEduStanfordNlpTreesTreeTransformer_withEduStanfordNlpTreesTreeNormalizer_withEduStanfordNlpTreesTreeReaderFactory_withEduStanfordNlpIoNumberRangesFileFilter_withJavaUtilFunctionPredicate_withJavaLangInteger_withJavaLangInteger_(NSString *file, EduStanfordNlpTaggerIoTaggedFileRecord_Format *format, NSString *encoding, NSString *tagSeparator, id<EduStanfordNlpTreesTreeTransformer> treeTransformer, EduStanfordNlpTreesTreeNormalizer *treeNormalizer, id<EduStanfordNlpTreesTreeReaderFactory> trf, EduStanfordNlpIoNumberRangesFileFilter *treeRange, id<JavaUtilFunctionPredicate> treeFilter, JavaLangInteger *wordColumn, JavaLangInteger *tagColumn) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTaggerIoTaggedFileRecord *create_EduStanfordNlpTaggerIoTaggedFileRecord_initWithNSString_withEduStanfordNlpTaggerIoTaggedFileRecord_Format_withNSString_withNSString_withEduStanfordNlpTreesTreeTransformer_withEduStanfordNlpTreesTreeNormalizer_withEduStanfordNlpTreesTreeReaderFactory_withEduStanfordNlpIoNumberRangesFileFilter_withJavaUtilFunctionPredicate_withJavaLangInteger_withJavaLangInteger_(NSString *file, EduStanfordNlpTaggerIoTaggedFileRecord_Format *format, NSString *encoding, NSString *tagSeparator, id<EduStanfordNlpTreesTreeTransformer> treeTransformer, EduStanfordNlpTreesTreeNormalizer *treeNormalizer, id<EduStanfordNlpTreesTreeReaderFactory> trf, EduStanfordNlpIoNumberRangesFileFilter *treeRange, id<JavaUtilFunctionPredicate> treeFilter, JavaLangInteger *wordColumn, JavaLangInteger *tagColumn);

__attribute__((unused)) static void EduStanfordNlpTaggerIoTaggedFileRecord_Format_initWithNSString_withInt_(EduStanfordNlpTaggerIoTaggedFileRecord_Format *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static EduStanfordNlpTaggerIoTaggedFileRecord_Format *new_EduStanfordNlpTaggerIoTaggedFileRecord_Format_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

NSString *EduStanfordNlpTaggerIoTaggedFileRecord_FORMAT = @"format";
NSString *EduStanfordNlpTaggerIoTaggedFileRecord_ENCODING = @"encoding";
NSString *EduStanfordNlpTaggerIoTaggedFileRecord_TAG_SEPARATOR = @"tagSeparator";
NSString *EduStanfordNlpTaggerIoTaggedFileRecord_TREE_TRANSFORMER = @"treeTransformer";
NSString *EduStanfordNlpTaggerIoTaggedFileRecord_TREE_NORMALIZER = @"treeNormalizer";
NSString *EduStanfordNlpTaggerIoTaggedFileRecord_TREE_RANGE = @"treeRange";
NSString *EduStanfordNlpTaggerIoTaggedFileRecord_TREE_FILTER = @"treeFilter";
NSString *EduStanfordNlpTaggerIoTaggedFileRecord_WORD_COLUMN = @"wordColumn";
NSString *EduStanfordNlpTaggerIoTaggedFileRecord_TAG_COLUMN = @"tagColumn";
NSString *EduStanfordNlpTaggerIoTaggedFileRecord_TREE_READER = @"trf";

@implementation EduStanfordNlpTaggerIoTaggedFileRecord

- (instancetype)initWithNSString:(NSString *)file
withEduStanfordNlpTaggerIoTaggedFileRecord_Format:(EduStanfordNlpTaggerIoTaggedFileRecord_Format *)format
                    withNSString:(NSString *)encoding
                    withNSString:(NSString *)tagSeparator
withEduStanfordNlpTreesTreeTransformer:(id<EduStanfordNlpTreesTreeTransformer>)treeTransformer
withEduStanfordNlpTreesTreeNormalizer:(EduStanfordNlpTreesTreeNormalizer *)treeNormalizer
withEduStanfordNlpTreesTreeReaderFactory:(id<EduStanfordNlpTreesTreeReaderFactory>)trf
withEduStanfordNlpIoNumberRangesFileFilter:(EduStanfordNlpIoNumberRangesFileFilter *)treeRange
   withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)treeFilter
             withJavaLangInteger:(JavaLangInteger *)wordColumn
             withJavaLangInteger:(JavaLangInteger *)tagColumn {
  EduStanfordNlpTaggerIoTaggedFileRecord_initWithNSString_withEduStanfordNlpTaggerIoTaggedFileRecord_Format_withNSString_withNSString_withEduStanfordNlpTreesTreeTransformer_withEduStanfordNlpTreesTreeNormalizer_withEduStanfordNlpTreesTreeReaderFactory_withEduStanfordNlpIoNumberRangesFileFilter_withJavaUtilFunctionPredicate_withJavaLangInteger_withJavaLangInteger_(self, file, format, encoding, tagSeparator, treeTransformer, treeNormalizer, trf, treeRange, treeFilter, wordColumn, tagColumn);
  return self;
}

- (NSString *)description {
  JavaLangStringBuilder *s = new_JavaLangStringBuilder_init();
  (void) [s appendWithNSString:JreStrcat("$C@", EduStanfordNlpTaggerIoTaggedFileRecord_FORMAT, '=', format_)];
  (void) [s appendWithNSString:JreStrcat("C$C$", ',', EduStanfordNlpTaggerIoTaggedFileRecord_ENCODING, '=', encoding_)];
  (void) [s appendWithNSString:JreStrcat("C$C$", ',', EduStanfordNlpTaggerIoTaggedFileRecord_TAG_SEPARATOR, '=', tagSeparator_)];
  if (treeTransformer_ != nil) {
    (void) [s appendWithNSString:JreStrcat("C$C$", ',', EduStanfordNlpTaggerIoTaggedFileRecord_TREE_TRANSFORMER, '=', [[treeTransformer_ getClass] getName])];
  }
  if (trf_ != nil) {
    (void) [s appendWithNSString:JreStrcat("C$C$", ',', EduStanfordNlpTaggerIoTaggedFileRecord_TREE_READER, '=', [[trf_ getClass] getName])];
  }
  if (treeNormalizer_ != nil) {
    (void) [s appendWithNSString:JreStrcat("C$C$", ',', EduStanfordNlpTaggerIoTaggedFileRecord_TREE_NORMALIZER, '=', [[treeNormalizer_ getClass] getName])];
  }
  if (treeRange_ != nil) {
    (void) [s appendWithNSString:JreStrcat("C$C$", ',', EduStanfordNlpTaggerIoTaggedFileRecord_TREE_RANGE, '=', [((NSString *) nil_chk([treeRange_ description])) replaceAll:@"," withReplacement:@":"])];
  }
  if (treeRange_ != nil) {
    (void) [s appendWithNSString:JreStrcat("C$C$", ',', EduStanfordNlpTaggerIoTaggedFileRecord_TREE_FILTER, '=', [[((id<JavaUtilFunctionPredicate>) nil_chk(treeFilter_)) getClass] description])];
  }
  if (wordColumn_ != nil) {
    (void) [s appendWithNSString:JreStrcat("C$C@", ',', EduStanfordNlpTaggerIoTaggedFileRecord_WORD_COLUMN, '=', wordColumn_)];
  }
  if (tagColumn_ != nil) {
    (void) [s appendWithNSString:JreStrcat("C$C@", ',', EduStanfordNlpTaggerIoTaggedFileRecord_TAG_COLUMN, '=', tagColumn_)];
  }
  return [s description];
}

- (NSString *)filename {
  return file_;
}

- (id<EduStanfordNlpTaggerIoTaggedFileReader>)reader {
  switch ([format_ ordinal]) {
    case EduStanfordNlpTaggerIoTaggedFileRecord_Format_Enum_TEXT:
    return new_EduStanfordNlpTaggerIoTextTaggedFileReader_initWithEduStanfordNlpTaggerIoTaggedFileRecord_(self);
    case EduStanfordNlpTaggerIoTaggedFileRecord_Format_Enum_TREES:
    return new_EduStanfordNlpTaggerIoTreeTaggedFileReader_initWithEduStanfordNlpTaggerIoTaggedFileRecord_(self);
    case EduStanfordNlpTaggerIoTaggedFileRecord_Format_Enum_TSV:
    return new_EduStanfordNlpTaggerIoTSVTaggedFileReader_initWithEduStanfordNlpTaggerIoTaggedFileRecord_(self);
    default:
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"Unknown format ", format_));
  }
}

+ (id<JavaUtilList>)createRecordsWithJavaUtilProperties:(JavaUtilProperties *)config
                                           withNSString:(NSString *)description_ {
  return EduStanfordNlpTaggerIoTaggedFileRecord_createRecordsWithJavaUtilProperties_withNSString_(config, description_);
}

+ (EduStanfordNlpTaggerIoTaggedFileRecord *)createRecordWithJavaUtilProperties:(JavaUtilProperties *)config
                                                                  withNSString:(NSString *)description_ {
  return EduStanfordNlpTaggerIoTaggedFileRecord_createRecordWithJavaUtilProperties_withNSString_(config, description_);
}

+ (NSString *)getEncodingWithJavaUtilProperties:(JavaUtilProperties *)config {
  return EduStanfordNlpTaggerIoTaggedFileRecord_getEncodingWithJavaUtilProperties_(config);
}

+ (NSString *)getTagSeparatorWithJavaUtilProperties:(JavaUtilProperties *)config {
  return EduStanfordNlpTaggerIoTaggedFileRecord_getTagSeparatorWithJavaUtilProperties_(config);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTaggerIoTaggedFileReader;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 3, 4, -1, 5, -1, -1 },
    { NULL, "LEduStanfordNlpTaggerIoTaggedFileRecord;", 0x9, 6, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 9, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withEduStanfordNlpTaggerIoTaggedFileRecord_Format:withNSString:withNSString:withEduStanfordNlpTreesTreeTransformer:withEduStanfordNlpTreesTreeNormalizer:withEduStanfordNlpTreesTreeReaderFactory:withEduStanfordNlpIoNumberRangesFileFilter:withJavaUtilFunctionPredicate:withJavaLangInteger:withJavaLangInteger:);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(filename);
  methods[3].selector = @selector(reader);
  methods[4].selector = @selector(createRecordsWithJavaUtilProperties:withNSString:);
  methods[5].selector = @selector(createRecordWithJavaUtilProperties:withNSString:);
  methods[6].selector = @selector(getEncodingWithJavaUtilProperties:);
  methods[7].selector = @selector(getTagSeparatorWithJavaUtilProperties:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "file_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "format_", "LEduStanfordNlpTaggerIoTaggedFileRecord_Format;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "encoding_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "tagSeparator_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "treeTransformer_", "LEduStanfordNlpTreesTreeTransformer;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "treeNormalizer_", "LEduStanfordNlpTreesTreeNormalizer;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "treeRange_", "LEduStanfordNlpIoNumberRangesFileFilter;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "treeFilter_", "LJavaUtilFunctionPredicate;", .constantValue.asLong = 0, 0x10, -1, -1, 10, -1 },
    { "wordColumn_", "LJavaLangInteger;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "tagColumn_", "LJavaLangInteger;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "trf_", "LEduStanfordNlpTreesTreeReaderFactory;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "FORMAT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
    { "ENCODING", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 12, -1, -1 },
    { "TAG_SEPARATOR", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "TREE_TRANSFORMER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
    { "TREE_NORMALIZER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 15, -1, -1 },
    { "TREE_RANGE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 16, -1, -1 },
    { "TREE_FILTER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 17, -1, -1 },
    { "WORD_COLUMN", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 18, -1, -1 },
    { "TAG_COLUMN", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 19, -1, -1 },
    { "TREE_READER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 20, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LEduStanfordNlpTaggerIoTaggedFileRecord_Format;LNSString;LNSString;LEduStanfordNlpTreesTreeTransformer;LEduStanfordNlpTreesTreeNormalizer;LEduStanfordNlpTreesTreeReaderFactory;LEduStanfordNlpIoNumberRangesFileFilter;LJavaUtilFunctionPredicate;LJavaLangInteger;LJavaLangInteger;", "(Ljava/lang/String;Ledu/stanford/nlp/tagger/io/TaggedFileRecord$Format;Ljava/lang/String;Ljava/lang/String;Ledu/stanford/nlp/trees/TreeTransformer;Ledu/stanford/nlp/trees/TreeNormalizer;Ledu/stanford/nlp/trees/TreeReaderFactory;Ledu/stanford/nlp/io/NumberRangesFileFilter;Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/Tree;>;Ljava/lang/Integer;Ljava/lang/Integer;)V", "toString", "createRecords", "LJavaUtilProperties;LNSString;", "(Ljava/util/Properties;Ljava/lang/String;)Ljava/util/List<Ledu/stanford/nlp/tagger/io/TaggedFileRecord;>;", "createRecord", "getEncoding", "LJavaUtilProperties;", "getTagSeparator", "Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/Tree;>;", &EduStanfordNlpTaggerIoTaggedFileRecord_FORMAT, &EduStanfordNlpTaggerIoTaggedFileRecord_ENCODING, &EduStanfordNlpTaggerIoTaggedFileRecord_TAG_SEPARATOR, &EduStanfordNlpTaggerIoTaggedFileRecord_TREE_TRANSFORMER, &EduStanfordNlpTaggerIoTaggedFileRecord_TREE_NORMALIZER, &EduStanfordNlpTaggerIoTaggedFileRecord_TREE_RANGE, &EduStanfordNlpTaggerIoTaggedFileRecord_TREE_FILTER, &EduStanfordNlpTaggerIoTaggedFileRecord_WORD_COLUMN, &EduStanfordNlpTaggerIoTaggedFileRecord_TAG_COLUMN, &EduStanfordNlpTaggerIoTaggedFileRecord_TREE_READER, "LEduStanfordNlpTaggerIoTaggedFileRecord_Format;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerIoTaggedFileRecord = { "TaggedFileRecord", "edu.stanford.nlp.tagger.io", ptrTable, methods, fields, 7, 0x1, 8, 21, -1, 21, -1, -1, -1 };
  return &_EduStanfordNlpTaggerIoTaggedFileRecord;
}

@end

void EduStanfordNlpTaggerIoTaggedFileRecord_initWithNSString_withEduStanfordNlpTaggerIoTaggedFileRecord_Format_withNSString_withNSString_withEduStanfordNlpTreesTreeTransformer_withEduStanfordNlpTreesTreeNormalizer_withEduStanfordNlpTreesTreeReaderFactory_withEduStanfordNlpIoNumberRangesFileFilter_withJavaUtilFunctionPredicate_withJavaLangInteger_withJavaLangInteger_(EduStanfordNlpTaggerIoTaggedFileRecord *self, NSString *file, EduStanfordNlpTaggerIoTaggedFileRecord_Format *format, NSString *encoding, NSString *tagSeparator, id<EduStanfordNlpTreesTreeTransformer> treeTransformer, EduStanfordNlpTreesTreeNormalizer *treeNormalizer, id<EduStanfordNlpTreesTreeReaderFactory> trf, EduStanfordNlpIoNumberRangesFileFilter *treeRange, id<JavaUtilFunctionPredicate> treeFilter, JavaLangInteger *wordColumn, JavaLangInteger *tagColumn) {
  NSObject_init(self);
  self->file_ = file;
  self->format_ = format;
  self->encoding_ = encoding;
  self->tagSeparator_ = tagSeparator;
  self->treeTransformer_ = treeTransformer;
  self->treeNormalizer_ = treeNormalizer;
  self->treeRange_ = treeRange;
  self->treeFilter_ = treeFilter;
  self->wordColumn_ = wordColumn;
  self->tagColumn_ = tagColumn;
  self->trf_ = trf;
}

EduStanfordNlpTaggerIoTaggedFileRecord *new_EduStanfordNlpTaggerIoTaggedFileRecord_initWithNSString_withEduStanfordNlpTaggerIoTaggedFileRecord_Format_withNSString_withNSString_withEduStanfordNlpTreesTreeTransformer_withEduStanfordNlpTreesTreeNormalizer_withEduStanfordNlpTreesTreeReaderFactory_withEduStanfordNlpIoNumberRangesFileFilter_withJavaUtilFunctionPredicate_withJavaLangInteger_withJavaLangInteger_(NSString *file, EduStanfordNlpTaggerIoTaggedFileRecord_Format *format, NSString *encoding, NSString *tagSeparator, id<EduStanfordNlpTreesTreeTransformer> treeTransformer, EduStanfordNlpTreesTreeNormalizer *treeNormalizer, id<EduStanfordNlpTreesTreeReaderFactory> trf, EduStanfordNlpIoNumberRangesFileFilter *treeRange, id<JavaUtilFunctionPredicate> treeFilter, JavaLangInteger *wordColumn, JavaLangInteger *tagColumn) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerIoTaggedFileRecord, initWithNSString_withEduStanfordNlpTaggerIoTaggedFileRecord_Format_withNSString_withNSString_withEduStanfordNlpTreesTreeTransformer_withEduStanfordNlpTreesTreeNormalizer_withEduStanfordNlpTreesTreeReaderFactory_withEduStanfordNlpIoNumberRangesFileFilter_withJavaUtilFunctionPredicate_withJavaLangInteger_withJavaLangInteger_, file, format, encoding, tagSeparator, treeTransformer, treeNormalizer, trf, treeRange, treeFilter, wordColumn, tagColumn)
}

EduStanfordNlpTaggerIoTaggedFileRecord *create_EduStanfordNlpTaggerIoTaggedFileRecord_initWithNSString_withEduStanfordNlpTaggerIoTaggedFileRecord_Format_withNSString_withNSString_withEduStanfordNlpTreesTreeTransformer_withEduStanfordNlpTreesTreeNormalizer_withEduStanfordNlpTreesTreeReaderFactory_withEduStanfordNlpIoNumberRangesFileFilter_withJavaUtilFunctionPredicate_withJavaLangInteger_withJavaLangInteger_(NSString *file, EduStanfordNlpTaggerIoTaggedFileRecord_Format *format, NSString *encoding, NSString *tagSeparator, id<EduStanfordNlpTreesTreeTransformer> treeTransformer, EduStanfordNlpTreesTreeNormalizer *treeNormalizer, id<EduStanfordNlpTreesTreeReaderFactory> trf, EduStanfordNlpIoNumberRangesFileFilter *treeRange, id<JavaUtilFunctionPredicate> treeFilter, JavaLangInteger *wordColumn, JavaLangInteger *tagColumn) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTaggerIoTaggedFileRecord, initWithNSString_withEduStanfordNlpTaggerIoTaggedFileRecord_Format_withNSString_withNSString_withEduStanfordNlpTreesTreeTransformer_withEduStanfordNlpTreesTreeNormalizer_withEduStanfordNlpTreesTreeReaderFactory_withEduStanfordNlpIoNumberRangesFileFilter_withJavaUtilFunctionPredicate_withJavaLangInteger_withJavaLangInteger_, file, format, encoding, tagSeparator, treeTransformer, treeNormalizer, trf, treeRange, treeFilter, wordColumn, tagColumn)
}

id<JavaUtilList> EduStanfordNlpTaggerIoTaggedFileRecord_createRecordsWithJavaUtilProperties_withNSString_(JavaUtilProperties *config, NSString *description_) {
  EduStanfordNlpTaggerIoTaggedFileRecord_initialize();
  IOSObjectArray *pieces = [((NSString *) nil_chk(description_)) split:@";"];
  id<JavaUtilList> records = new_JavaUtilArrayList_init();
  {
    IOSObjectArray *a__ = pieces;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *piece = *b__++;
      [records addWithId:EduStanfordNlpTaggerIoTaggedFileRecord_createRecordWithJavaUtilProperties_withNSString_(config, piece)];
    }
  }
  return records;
}

EduStanfordNlpTaggerIoTaggedFileRecord *EduStanfordNlpTaggerIoTaggedFileRecord_createRecordWithJavaUtilProperties_withNSString_(JavaUtilProperties *config, NSString *description_) {
  EduStanfordNlpTaggerIoTaggedFileRecord_initialize();
  IOSObjectArray *pieces = [((NSString *) nil_chk(description_)) split:@","];
  if (((IOSObjectArray *) nil_chk(pieces))->size_ == 1) {
    return new_EduStanfordNlpTaggerIoTaggedFileRecord_initWithNSString_withEduStanfordNlpTaggerIoTaggedFileRecord_Format_withNSString_withNSString_withEduStanfordNlpTreesTreeTransformer_withEduStanfordNlpTreesTreeNormalizer_withEduStanfordNlpTreesTreeReaderFactory_withEduStanfordNlpIoNumberRangesFileFilter_withJavaUtilFunctionPredicate_withJavaLangInteger_withJavaLangInteger_(description_, JreLoadEnum(EduStanfordNlpTaggerIoTaggedFileRecord_Format, TEXT), EduStanfordNlpTaggerIoTaggedFileRecord_getEncodingWithJavaUtilProperties_(config), EduStanfordNlpTaggerIoTaggedFileRecord_getTagSeparatorWithJavaUtilProperties_(config), nil, nil, nil, nil, nil, nil, nil);
  }
  IOSObjectArray *args = [IOSObjectArray newArrayWithLength:pieces->size_ - 1 type:NSString_class_()];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(pieces, 0, args, 0, pieces->size_ - 1);
  NSString *file = IOSObjectArray_Get(pieces, pieces->size_ - 1);
  EduStanfordNlpTaggerIoTaggedFileRecord_Format *format = JreLoadEnum(EduStanfordNlpTaggerIoTaggedFileRecord_Format, TEXT);
  NSString *encoding = EduStanfordNlpTaggerIoTaggedFileRecord_getEncodingWithJavaUtilProperties_(config);
  NSString *tagSeparator = EduStanfordNlpTaggerIoTaggedFileRecord_getTagSeparatorWithJavaUtilProperties_(config);
  id<EduStanfordNlpTreesTreeTransformer> treeTransformer = nil;
  EduStanfordNlpTreesTreeNormalizer *treeNormalizer = nil;
  id<EduStanfordNlpTreesTreeReaderFactory> trf = nil;
  EduStanfordNlpIoNumberRangesFileFilter *treeRange = nil;
  id<JavaUtilFunctionPredicate> treeFilter = nil;
  JavaLangInteger *wordColumn = nil, *tagColumn = nil;
  {
    IOSObjectArray *a__ = args;
    NSString * const *b__ = a__->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *arg = *b__++;
      IOSObjectArray *argPieces = [((NSString *) nil_chk(arg)) split:@"=" limit:2];
      if (((IOSObjectArray *) nil_chk(argPieces))->size_ != 2) {
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"TaggedFileRecord argument ", arg, @" has an unexpected number of =s"));
      }
      if ([((NSString *) nil_chk(IOSObjectArray_Get(argPieces, 0))) equalsIgnoreCase:EduStanfordNlpTaggerIoTaggedFileRecord_FORMAT]) {
        format = EduStanfordNlpTaggerIoTaggedFileRecord_Format_valueOfWithNSString_(IOSObjectArray_Get(argPieces, 1));
      }
      else if ([((NSString *) nil_chk(IOSObjectArray_Get(argPieces, 0))) equalsIgnoreCase:EduStanfordNlpTaggerIoTaggedFileRecord_ENCODING]) {
        encoding = IOSObjectArray_Get(argPieces, 1);
      }
      else if ([((NSString *) nil_chk(IOSObjectArray_Get(argPieces, 0))) equalsIgnoreCase:EduStanfordNlpTaggerIoTaggedFileRecord_TAG_SEPARATOR]) {
        tagSeparator = IOSObjectArray_Get(argPieces, 1);
      }
      else if ([((NSString *) nil_chk(IOSObjectArray_Get(argPieces, 0))) equalsIgnoreCase:EduStanfordNlpTaggerIoTaggedFileRecord_TREE_TRANSFORMER]) {
        treeTransformer = EduStanfordNlpUtilReflectionLoading_loadByReflectionWithNSString_withNSObjectArray_(IOSObjectArray_Get(argPieces, 1), [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
      }
      else if ([((NSString *) nil_chk(IOSObjectArray_Get(argPieces, 0))) equalsIgnoreCase:EduStanfordNlpTaggerIoTaggedFileRecord_TREE_NORMALIZER]) {
        treeNormalizer = EduStanfordNlpUtilReflectionLoading_loadByReflectionWithNSString_withNSObjectArray_(IOSObjectArray_Get(argPieces, 1), [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
      }
      else if ([((NSString *) nil_chk(IOSObjectArray_Get(argPieces, 0))) equalsIgnoreCase:EduStanfordNlpTaggerIoTaggedFileRecord_TREE_READER]) {
        trf = EduStanfordNlpUtilReflectionLoading_loadByReflectionWithNSString_withNSObjectArray_(IOSObjectArray_Get(argPieces, 1), [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
      }
      else if ([((NSString *) nil_chk(IOSObjectArray_Get(argPieces, 0))) equalsIgnoreCase:EduStanfordNlpTaggerIoTaggedFileRecord_TREE_RANGE]) {
        NSString *range = [((NSString *) nil_chk(IOSObjectArray_Get(argPieces, 1))) replaceAll:@":" withReplacement:@","];
        treeRange = new_EduStanfordNlpIoNumberRangesFileFilter_initWithNSString_withBoolean_(range, true);
      }
      else if ([((NSString *) nil_chk(IOSObjectArray_Get(argPieces, 0))) equalsIgnoreCase:EduStanfordNlpTaggerIoTaggedFileRecord_TREE_FILTER]) {
        treeFilter = EduStanfordNlpUtilReflectionLoading_loadByReflectionWithNSString_withNSObjectArray_(IOSObjectArray_Get(argPieces, 1), [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
      }
      else if ([((NSString *) nil_chk(IOSObjectArray_Get(argPieces, 0))) equalsIgnoreCase:EduStanfordNlpTaggerIoTaggedFileRecord_WORD_COLUMN]) {
        wordColumn = JavaLangInteger_valueOfWithNSString_(IOSObjectArray_Get(argPieces, 1));
      }
      else if ([((NSString *) nil_chk(IOSObjectArray_Get(argPieces, 0))) equalsIgnoreCase:EduStanfordNlpTaggerIoTaggedFileRecord_TAG_COLUMN]) {
        tagColumn = JavaLangInteger_valueOfWithNSString_(IOSObjectArray_Get(argPieces, 1));
      }
      else {
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"TaggedFileRecord argument ", IOSObjectArray_Get(argPieces, 0), @" is unknown"));
      }
    }
  }
  return new_EduStanfordNlpTaggerIoTaggedFileRecord_initWithNSString_withEduStanfordNlpTaggerIoTaggedFileRecord_Format_withNSString_withNSString_withEduStanfordNlpTreesTreeTransformer_withEduStanfordNlpTreesTreeNormalizer_withEduStanfordNlpTreesTreeReaderFactory_withEduStanfordNlpIoNumberRangesFileFilter_withJavaUtilFunctionPredicate_withJavaLangInteger_withJavaLangInteger_(file, format, encoding, tagSeparator, treeTransformer, treeNormalizer, trf, treeRange, treeFilter, wordColumn, tagColumn);
}

NSString *EduStanfordNlpTaggerIoTaggedFileRecord_getEncodingWithJavaUtilProperties_(JavaUtilProperties *config) {
  EduStanfordNlpTaggerIoTaggedFileRecord_initialize();
  NSString *encoding = [((JavaUtilProperties *) nil_chk(config)) getPropertyWithNSString:EduStanfordNlpTaggerMaxentTaggerConfig_ENCODING_PROPERTY];
  if (encoding == nil) return EduStanfordNlpTaggerMaxentTaggerConfig_ENCODING;
  return encoding;
}

NSString *EduStanfordNlpTaggerIoTaggedFileRecord_getTagSeparatorWithJavaUtilProperties_(JavaUtilProperties *config) {
  EduStanfordNlpTaggerIoTaggedFileRecord_initialize();
  NSString *tagSeparator = [((JavaUtilProperties *) nil_chk(config)) getPropertyWithNSString:EduStanfordNlpTaggerMaxentTaggerConfig_TAG_SEPARATOR_PROPERTY];
  if (tagSeparator == nil) return EduStanfordNlpTaggerMaxentTaggerConfig_TAG_SEPARATOR;
  return tagSeparator;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerIoTaggedFileRecord)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTaggerIoTaggedFileRecord_Format)

EduStanfordNlpTaggerIoTaggedFileRecord_Format *EduStanfordNlpTaggerIoTaggedFileRecord_Format_values_[3];

@implementation EduStanfordNlpTaggerIoTaggedFileRecord_Format

+ (IOSObjectArray *)values {
  return EduStanfordNlpTaggerIoTaggedFileRecord_Format_values();
}

+ (EduStanfordNlpTaggerIoTaggedFileRecord_Format *)valueOfWithNSString:(NSString *)name {
  return EduStanfordNlpTaggerIoTaggedFileRecord_Format_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LEduStanfordNlpTaggerIoTaggedFileRecord_Format;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTaggerIoTaggedFileRecord_Format;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TEXT", "LEduStanfordNlpTaggerIoTaggedFileRecord_Format;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "TSV", "LEduStanfordNlpTaggerIoTaggedFileRecord_Format;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "TREES", "LEduStanfordNlpTaggerIoTaggedFileRecord_Format;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(EduStanfordNlpTaggerIoTaggedFileRecord_Format, TEXT), &JreEnum(EduStanfordNlpTaggerIoTaggedFileRecord_Format, TSV), &JreEnum(EduStanfordNlpTaggerIoTaggedFileRecord_Format, TREES), "LEduStanfordNlpTaggerIoTaggedFileRecord;", "Ljava/lang/Enum<Ledu/stanford/nlp/tagger/io/TaggedFileRecord$Format;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTaggerIoTaggedFileRecord_Format = { "Format", "edu.stanford.nlp.tagger.io", ptrTable, methods, fields, 7, 0x4019, 2, 3, 5, -1, -1, 6, -1 };
  return &_EduStanfordNlpTaggerIoTaggedFileRecord_Format;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTaggerIoTaggedFileRecord_Format class]) {
    JreEnum(EduStanfordNlpTaggerIoTaggedFileRecord_Format, TEXT) = new_EduStanfordNlpTaggerIoTaggedFileRecord_Format_initWithNSString_withInt_(@"TEXT", 0);
    JreEnum(EduStanfordNlpTaggerIoTaggedFileRecord_Format, TSV) = new_EduStanfordNlpTaggerIoTaggedFileRecord_Format_initWithNSString_withInt_(@"TSV", 1);
    JreEnum(EduStanfordNlpTaggerIoTaggedFileRecord_Format, TREES) = new_EduStanfordNlpTaggerIoTaggedFileRecord_Format_initWithNSString_withInt_(@"TREES", 2);
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTaggerIoTaggedFileRecord_Format)
  }
}

@end

void EduStanfordNlpTaggerIoTaggedFileRecord_Format_initWithNSString_withInt_(EduStanfordNlpTaggerIoTaggedFileRecord_Format *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

EduStanfordNlpTaggerIoTaggedFileRecord_Format *new_EduStanfordNlpTaggerIoTaggedFileRecord_Format_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTaggerIoTaggedFileRecord_Format, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *EduStanfordNlpTaggerIoTaggedFileRecord_Format_values() {
  EduStanfordNlpTaggerIoTaggedFileRecord_Format_initialize();
  return [IOSObjectArray arrayWithObjects:EduStanfordNlpTaggerIoTaggedFileRecord_Format_values_ count:3 type:EduStanfordNlpTaggerIoTaggedFileRecord_Format_class_()];
}

EduStanfordNlpTaggerIoTaggedFileRecord_Format *EduStanfordNlpTaggerIoTaggedFileRecord_Format_valueOfWithNSString_(NSString *name) {
  EduStanfordNlpTaggerIoTaggedFileRecord_Format_initialize();
  for (int i = 0; i < 3; i++) {
    EduStanfordNlpTaggerIoTaggedFileRecord_Format *e = EduStanfordNlpTaggerIoTaggedFileRecord_Format_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

EduStanfordNlpTaggerIoTaggedFileRecord_Format *EduStanfordNlpTaggerIoTaggedFileRecord_Format_fromOrdinal(NSUInteger ordinal) {
  EduStanfordNlpTaggerIoTaggedFileRecord_Format_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return EduStanfordNlpTaggerIoTaggedFileRecord_Format_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTaggerIoTaggedFileRecord_Format)
