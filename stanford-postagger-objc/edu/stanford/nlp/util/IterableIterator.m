//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/IterableIterator.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/util/IterableIterator.h"
#include "java/lang/Iterable.h"
#include "java/util/Iterator.h"
#include "java/util/Spliterator.h"
#include "java/util/Spliterators.h"
#include "java/util/function/Consumer.h"
#include "java/util/stream/Stream.h"

@interface EduStanfordNlpUtilIterableIterator () {
 @public
  id<JavaUtilIterator> it_;
  id<JavaLangIterable> iterable_;
  id<JavaUtilStreamStream> stream_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpUtilIterableIterator, it_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(EduStanfordNlpUtilIterableIterator, iterable_, id<JavaLangIterable>)
J2OBJC_FIELD_SETTER(EduStanfordNlpUtilIterableIterator, stream_, id<JavaUtilStreamStream>)

@implementation EduStanfordNlpUtilIterableIterator

- (instancetype)initWithJavaUtilIterator:(id<JavaUtilIterator>)it {
  EduStanfordNlpUtilIterableIterator_initWithJavaUtilIterator_(self, it);
  return self;
}

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)iterable {
  EduStanfordNlpUtilIterableIterator_initWithJavaLangIterable_(self, iterable);
  return self;
}

- (instancetype)initWithJavaUtilStreamStream:(id<JavaUtilStreamStream>)stream {
  EduStanfordNlpUtilIterableIterator_initWithJavaUtilStreamStream_(self, stream);
  return self;
}

- (jboolean)hasNext {
  return [((id<JavaUtilIterator>) nil_chk(it_)) hasNext];
}

- (id)next {
  return [((id<JavaUtilIterator>) nil_chk(it_)) next];
}

- (void)remove {
  [((id<JavaUtilIterator>) nil_chk(it_)) remove];
}

- (id<JavaUtilIterator>)iterator {
  if (iterable_ != nil) {
    return [iterable_ iterator];
  }
  else if (stream_ != nil) {
    return [stream_ iterator];
  }
  else {
    return self;
  }
}

- (id<JavaUtilSpliterator>)spliterator {
  if (iterable_ != nil) {
    return [iterable_ spliterator];
  }
  else if (stream_ != nil) {
    return [stream_ spliterator];
  }
  else {
    return JavaUtilSpliterators_spliteratorUnknownSizeWithJavaUtilIterator_withInt_(it_, JavaUtilSpliterator_ORDERED | JavaUtilSpliterator_CONCURRENT);
  }
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, 3, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, 5, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 6, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 7, -1, -1 },
    { NULL, "LJavaUtilSpliterator;", 0x1, -1, -1, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilIterator:);
  methods[1].selector = @selector(initWithJavaLangIterable:);
  methods[2].selector = @selector(initWithJavaUtilStreamStream:);
  methods[3].selector = @selector(hasNext);
  methods[4].selector = @selector(next);
  methods[5].selector = @selector(remove);
  methods[6].selector = @selector(iterator);
  methods[7].selector = @selector(spliterator);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "it_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x2, -1, -1, 9, -1 },
    { "iterable_", "LJavaLangIterable;", .constantValue.asLong = 0, 0x2, -1, -1, 10, -1 },
    { "stream_", "LJavaUtilStreamStream;", .constantValue.asLong = 0, 0x2, -1, -1, 11, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilIterator;", "(Ljava/util/Iterator<TE;>;)V", "LJavaLangIterable;", "(Ljava/lang/Iterable<TE;>;)V", "LJavaUtilStreamStream;", "(Ljava/util/stream/Stream<TE;>;)V", "()TE;", "()Ljava/util/Iterator<TE;>;", "()Ljava/util/Spliterator<TE;>;", "Ljava/util/Iterator<TE;>;", "Ljava/lang/Iterable<TE;>;", "Ljava/util/stream/Stream<TE;>;", "<E:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Iterator<TE;>;Ljava/lang/Iterable<TE;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilIterableIterator = { "IterableIterator", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0x1, 8, 3, -1, -1, -1, 12, -1 };
  return &_EduStanfordNlpUtilIterableIterator;
}

@end

void EduStanfordNlpUtilIterableIterator_initWithJavaUtilIterator_(EduStanfordNlpUtilIterableIterator *self, id<JavaUtilIterator> it) {
  NSObject_init(self);
  self->it_ = it;
}

EduStanfordNlpUtilIterableIterator *new_EduStanfordNlpUtilIterableIterator_initWithJavaUtilIterator_(id<JavaUtilIterator> it) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilIterableIterator, initWithJavaUtilIterator_, it)
}

EduStanfordNlpUtilIterableIterator *create_EduStanfordNlpUtilIterableIterator_initWithJavaUtilIterator_(id<JavaUtilIterator> it) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilIterableIterator, initWithJavaUtilIterator_, it)
}

void EduStanfordNlpUtilIterableIterator_initWithJavaLangIterable_(EduStanfordNlpUtilIterableIterator *self, id<JavaLangIterable> iterable) {
  NSObject_init(self);
  self->iterable_ = iterable;
  self->it_ = [((id<JavaLangIterable>) nil_chk(iterable)) iterator];
}

EduStanfordNlpUtilIterableIterator *new_EduStanfordNlpUtilIterableIterator_initWithJavaLangIterable_(id<JavaLangIterable> iterable) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilIterableIterator, initWithJavaLangIterable_, iterable)
}

EduStanfordNlpUtilIterableIterator *create_EduStanfordNlpUtilIterableIterator_initWithJavaLangIterable_(id<JavaLangIterable> iterable) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilIterableIterator, initWithJavaLangIterable_, iterable)
}

void EduStanfordNlpUtilIterableIterator_initWithJavaUtilStreamStream_(EduStanfordNlpUtilIterableIterator *self, id<JavaUtilStreamStream> stream) {
  NSObject_init(self);
  self->stream_ = stream;
  self->it_ = [((id<JavaUtilStreamStream>) nil_chk(stream)) iterator];
}

EduStanfordNlpUtilIterableIterator *new_EduStanfordNlpUtilIterableIterator_initWithJavaUtilStreamStream_(id<JavaUtilStreamStream> stream) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilIterableIterator, initWithJavaUtilStreamStream_, stream)
}

EduStanfordNlpUtilIterableIterator *create_EduStanfordNlpUtilIterableIterator_initWithJavaUtilStreamStream_(id<JavaUtilStreamStream> stream) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilIterableIterator, initWithJavaUtilStreamStream_, stream)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilIterableIterator)
