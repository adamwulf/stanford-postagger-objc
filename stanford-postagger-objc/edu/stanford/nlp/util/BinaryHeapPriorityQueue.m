//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/BinaryHeapPriorityQueue.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/util/BinaryHeapPriorityQueue.h"
#include "edu/stanford/nlp/util/ErasureUtils.h"
#include "edu/stanford/nlp/util/MapFactory.h"
#include "java/lang/Comparable.h"
#include "java/lang/Double.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/AbstractSet.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/function/Consumer.h"

@class EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry;

@interface EduStanfordNlpUtilBinaryHeapPriorityQueue () {
 @public
  id<JavaUtilList> indexToEntry_;
  id<JavaUtilMap> keyToEntry_;
}

- (EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)parentWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entry_;

- (EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)leftChildWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entry_;

- (EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)rightChildWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entry_;

- (jint)compareWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entryA
               withEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entryB;

+ (jint)compareWithDouble:(jdouble)a
               withDouble:(jdouble)b;

- (void)swapWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entryA
            withEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entryB;

- (EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)getEntryWithId:(id)key;

- (EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)getEntryWithInt:(jint)index;

- (EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)makeEntryWithId:(id)key;

- (void)heapifyUpWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entry_;

- (void)heapifyDownWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entry_;

- (void)heapifyWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entry_;

- (void)removeEntryWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entry_;

- (EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)getLastEntry;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpUtilBinaryHeapPriorityQueue, indexToEntry_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpUtilBinaryHeapPriorityQueue, keyToEntry_, id<JavaUtilMap>)

__attribute__((unused)) static EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *EduStanfordNlpUtilBinaryHeapPriorityQueue_parentWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_);

__attribute__((unused)) static EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *EduStanfordNlpUtilBinaryHeapPriorityQueue_leftChildWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_);

__attribute__((unused)) static EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *EduStanfordNlpUtilBinaryHeapPriorityQueue_rightChildWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_);

__attribute__((unused)) static jint EduStanfordNlpUtilBinaryHeapPriorityQueue_compareWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_withEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entryA, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entryB);

__attribute__((unused)) static jint EduStanfordNlpUtilBinaryHeapPriorityQueue_compareWithDouble_withDouble_(jdouble a, jdouble b);

__attribute__((unused)) static void EduStanfordNlpUtilBinaryHeapPriorityQueue_swapWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_withEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entryA, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entryB);

__attribute__((unused)) static EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *EduStanfordNlpUtilBinaryHeapPriorityQueue_getEntryWithId_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, id key);

__attribute__((unused)) static EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *EduStanfordNlpUtilBinaryHeapPriorityQueue_getEntryWithInt_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, jint index);

__attribute__((unused)) static EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *EduStanfordNlpUtilBinaryHeapPriorityQueue_makeEntryWithId_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, id key);

__attribute__((unused)) static void EduStanfordNlpUtilBinaryHeapPriorityQueue_heapifyUpWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_);

__attribute__((unused)) static void EduStanfordNlpUtilBinaryHeapPriorityQueue_heapifyDownWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_);

__attribute__((unused)) static void EduStanfordNlpUtilBinaryHeapPriorityQueue_heapifyWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_);

__attribute__((unused)) static void EduStanfordNlpUtilBinaryHeapPriorityQueue_removeEntryWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_);

__attribute__((unused)) static EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *EduStanfordNlpUtilBinaryHeapPriorityQueue_getLastEntry(EduStanfordNlpUtilBinaryHeapPriorityQueue *self);

@interface EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry : NSObject {
 @public
  id key_;
  jint index_;
  jdouble priority_;
}

- (NSString *)description;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry)

J2OBJC_FIELD_SETTER(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry, key_, id)

__attribute__((unused)) static void EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_init(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *self);

__attribute__((unused)) static EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *new_EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *create_EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry)

@implementation EduStanfordNlpUtilBinaryHeapPriorityQueue

- (jboolean)hasNext {
  return [self size] > 0;
}

- (id)next {
  if ([self size] == 0) {
    @throw new_JavaUtilNoSuchElementException_initWithNSString_(@"Empty PQ");
  }
  return [self removeFirst];
}

- (void)remove {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)parentWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entry_ {
  return EduStanfordNlpUtilBinaryHeapPriorityQueue_parentWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, entry_);
}

- (EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)leftChildWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entry_ {
  return EduStanfordNlpUtilBinaryHeapPriorityQueue_leftChildWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, entry_);
}

- (EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)rightChildWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entry_ {
  return EduStanfordNlpUtilBinaryHeapPriorityQueue_rightChildWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, entry_);
}

- (jint)compareWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entryA
               withEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entryB {
  return EduStanfordNlpUtilBinaryHeapPriorityQueue_compareWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_withEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, entryA, entryB);
}

+ (jint)compareWithDouble:(jdouble)a
               withDouble:(jdouble)b {
  return EduStanfordNlpUtilBinaryHeapPriorityQueue_compareWithDouble_withDouble_(a, b);
}

- (void)swapWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entryA
            withEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entryB {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_swapWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_withEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, entryA, entryB);
}

- (void)removeLastEntry {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_ = [((id<JavaUtilList>) nil_chk(indexToEntry_)) removeWithInt:[self size] - 1];
  (void) [((id<JavaUtilMap>) nil_chk(keyToEntry_)) removeWithId:((EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *) nil_chk(entry_))->key_];
}

- (EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)getEntryWithId:(id)key {
  return EduStanfordNlpUtilBinaryHeapPriorityQueue_getEntryWithId_(self, key);
}

- (EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)getEntryWithInt:(jint)index {
  return EduStanfordNlpUtilBinaryHeapPriorityQueue_getEntryWithInt_(self, index);
}

- (EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)makeEntryWithId:(id)key {
  return EduStanfordNlpUtilBinaryHeapPriorityQueue_makeEntryWithId_(self, key);
}

- (void)heapifyUpWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entry_ {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_heapifyUpWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, entry_);
}

- (void)heapifyDownWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entry_ {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_heapifyDownWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, entry_);
}

- (void)heapifyWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entry_ {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_heapifyWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, entry_);
}

- (id)removeFirst {
  id first = [self getFirst];
  [self removeWithId:first];
  return first;
}

- (id)getFirst {
  if ([self isEmpty]) {
    @throw new_JavaUtilNoSuchElementException_init();
  }
  return ((EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *) nil_chk(EduStanfordNlpUtilBinaryHeapPriorityQueue_getEntryWithInt_(self, 0)))->key_;
}

- (jdouble)getPriority {
  if ([self isEmpty]) {
    @throw new_JavaUtilNoSuchElementException_init();
  }
  return ((EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *) nil_chk(EduStanfordNlpUtilBinaryHeapPriorityQueue_getEntryWithInt_(self, 0)))->priority_;
}

- (id)getObjectWithId:(id)key {
  if (![self containsWithId:key]) return nil;
  EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *e = EduStanfordNlpUtilBinaryHeapPriorityQueue_getEntryWithId_(self, key);
  return ((EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *) nil_chk(e))->key_;
}

- (jdouble)getPriorityWithId:(id)key {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_ = EduStanfordNlpUtilBinaryHeapPriorityQueue_getEntryWithId_(self, key);
  if (entry_ == nil) {
    return JavaLangDouble_NEGATIVE_INFINITY;
  }
  return entry_->priority_;
}

- (jboolean)addWithId:(id)key {
  if ([self containsWithId:key]) {
    return false;
  }
  (void) EduStanfordNlpUtilBinaryHeapPriorityQueue_makeEntryWithId_(self, key);
  return true;
}

- (jboolean)addWithId:(id)key
           withDouble:(jdouble)priority {
  if ([self addWithId:key]) {
    [self relaxPriorityWithId:key withDouble:priority];
    return true;
  }
  return false;
}

- (jboolean)removeWithId:(id)key {
  id eKey = key;
  EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_ = EduStanfordNlpUtilBinaryHeapPriorityQueue_getEntryWithId_(self, eKey);
  if (entry_ == nil) {
    return false;
  }
  EduStanfordNlpUtilBinaryHeapPriorityQueue_removeEntryWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, entry_);
  return true;
}

- (void)removeEntryWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)entry_ {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_removeEntryWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, entry_);
}

- (EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *)getLastEntry {
  return EduStanfordNlpUtilBinaryHeapPriorityQueue_getLastEntry(self);
}

- (jboolean)relaxPriorityWithId:(id)key
                     withDouble:(jdouble)priority {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_ = EduStanfordNlpUtilBinaryHeapPriorityQueue_getEntryWithId_(self, key);
  if (entry_ == nil) {
    entry_ = EduStanfordNlpUtilBinaryHeapPriorityQueue_makeEntryWithId_(self, key);
  }
  if (EduStanfordNlpUtilBinaryHeapPriorityQueue_compareWithDouble_withDouble_(priority, ((EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *) nil_chk(entry_))->priority_) <= 0) {
    return false;
  }
  entry_->priority_ = priority;
  EduStanfordNlpUtilBinaryHeapPriorityQueue_heapifyUpWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, entry_);
  return true;
}

- (jboolean)decreasePriorityWithId:(id)key
                        withDouble:(jdouble)priority {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_ = EduStanfordNlpUtilBinaryHeapPriorityQueue_getEntryWithId_(self, key);
  if (entry_ == nil) {
    entry_ = EduStanfordNlpUtilBinaryHeapPriorityQueue_makeEntryWithId_(self, key);
  }
  if (EduStanfordNlpUtilBinaryHeapPriorityQueue_compareWithDouble_withDouble_(priority, ((EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *) nil_chk(entry_))->priority_) >= 0) {
    return false;
  }
  entry_->priority_ = priority;
  EduStanfordNlpUtilBinaryHeapPriorityQueue_heapifyDownWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, entry_);
  return true;
}

- (jboolean)changePriorityWithId:(id)key
                      withDouble:(jdouble)priority {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_ = EduStanfordNlpUtilBinaryHeapPriorityQueue_getEntryWithId_(self, key);
  if (entry_ == nil) {
    entry_ = EduStanfordNlpUtilBinaryHeapPriorityQueue_makeEntryWithId_(self, key);
  }
  if (EduStanfordNlpUtilBinaryHeapPriorityQueue_compareWithDouble_withDouble_(priority, ((EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *) nil_chk(entry_))->priority_) == 0) {
    return false;
  }
  entry_->priority_ = priority;
  EduStanfordNlpUtilBinaryHeapPriorityQueue_heapifyWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, entry_);
  return true;
}

- (jboolean)isEmpty {
  return [((id<JavaUtilList>) nil_chk(indexToEntry_)) isEmpty];
}

- (jint)size {
  return [((id<JavaUtilList>) nil_chk(indexToEntry_)) size];
}

- (jboolean)containsWithId:(id)key {
  return [((id<JavaUtilMap>) nil_chk(keyToEntry_)) containsKeyWithId:key];
}

- (id<JavaUtilList>)toSortedList {
  id<JavaUtilList> sortedList = new_JavaUtilArrayList_initWithInt_([self size]);
  EduStanfordNlpUtilBinaryHeapPriorityQueue *queue = [self deepCopy];
  while (![((EduStanfordNlpUtilBinaryHeapPriorityQueue *) nil_chk(queue)) isEmpty]) {
    [sortedList addWithId:[queue removeFirst]];
  }
  return sortedList;
}

- (EduStanfordNlpUtilBinaryHeapPriorityQueue *)deepCopyWithEduStanfordNlpUtilMapFactory:(EduStanfordNlpUtilMapFactory *)mapFactory {
  EduStanfordNlpUtilBinaryHeapPriorityQueue *queue = new_EduStanfordNlpUtilBinaryHeapPriorityQueue_initWithEduStanfordNlpUtilMapFactory_(mapFactory);
  for (EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry * __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(keyToEntry_)) values])) {
    [queue relaxPriorityWithId:((EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *) nil_chk(entry_))->key_ withDouble:entry_->priority_];
  }
  return queue;
}

- (EduStanfordNlpUtilBinaryHeapPriorityQueue *)deepCopy {
  return [self deepCopyWithEduStanfordNlpUtilMapFactory:EduStanfordNlpUtilMapFactory_hashMapFactory()];
}

- (id<JavaUtilIterator>)iterator {
  return [((id<JavaUtilCollection>) nil_chk(JavaUtilCollections_unmodifiableCollectionWithJavaUtilCollection_([self toSortedList]))) iterator];
}

- (void)clear {
  [((id<JavaUtilList>) nil_chk(indexToEntry_)) clear];
  [((id<JavaUtilMap>) nil_chk(keyToEntry_)) clear];
}

- (NSString *)description {
  return [self toStringWithInt:0];
}

- (NSString *)toStringWithInt:(jint)maxKeysToPrint {
  if (maxKeysToPrint <= 0) maxKeysToPrint = JavaLangInteger_MAX_VALUE;
  id<JavaUtilList> sortedKeys = [self toSortedList];
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_initWithNSString_(@"[");
  for (jint i = 0; i < maxKeysToPrint && i < [((id<JavaUtilList>) nil_chk(sortedKeys)) size]; i++) {
    id key = [((id<JavaUtilList>) nil_chk(sortedKeys)) getWithInt:i];
    (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithId:key])) appendWithChar:'='])) appendWithDouble:[self getPriorityWithId:key]];
    if (i < maxKeysToPrint - 1 && i < [sortedKeys size] - 1) {
      (void) [sb appendWithNSString:@", "];
    }
  }
  (void) [sb appendWithChar:']'];
  return [sb description];
}

- (NSString *)toVerticalString {
  id<JavaUtilList> sortedKeys = [self toSortedList];
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  for (id<JavaUtilIterator> keyI = [((id<JavaUtilList>) nil_chk(sortedKeys)) iterator]; [((id<JavaUtilIterator>) nil_chk(keyI)) hasNext]; ) {
    id key = [keyI next];
    (void) [sb appendWithId:key];
    (void) [sb appendWithChar:0x0009];
    (void) [sb appendWithDouble:[self getPriorityWithId:key]];
    if ([keyI hasNext]) {
      (void) [sb appendWithChar:0x000a];
    }
  }
  return [sb description];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)initCapacity {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_initWithInt_(self, initCapacity);
  return self;
}

- (instancetype)initWithEduStanfordNlpUtilMapFactory:(EduStanfordNlpUtilMapFactory *)mapFactory {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_initWithEduStanfordNlpUtilMapFactory_(self, mapFactory);
  return self;
}

- (instancetype)initWithEduStanfordNlpUtilMapFactory:(EduStanfordNlpUtilMapFactory *)mapFactory
                                             withInt:(jint)initCapacity {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_initWithEduStanfordNlpUtilMapFactory_withInt_(self, mapFactory, initCapacity);
  return self;
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry;", 0x2, 1, 2, -1, 3, -1, -1 },
    { NULL, "LEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry;", 0x2, 4, 2, -1, 3, -1, -1 },
    { NULL, "LEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry;", 0x2, 5, 2, -1, 3, -1, -1 },
    { NULL, "I", 0x2, 6, 7, -1, 8, -1, -1 },
    { NULL, "I", 0xa, 6, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 7, -1, 11, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry;", 0x2, 12, 13, -1, 14, -1, -1 },
    { NULL, "LEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry;", 0x2, 12, 15, -1, 16, -1, -1 },
    { NULL, "LEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry;", 0x2, 17, 13, -1, 14, -1, -1 },
    { NULL, "V", 0x2, 18, 2, -1, 19, -1, -1 },
    { NULL, "V", 0x2, 20, 2, -1, 19, -1, -1 },
    { NULL, "V", 0x2, 21, 2, -1, 19, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 22, 13, -1, 23, -1, -1 },
    { NULL, "D", 0x1, 24, 13, -1, 25, -1, -1 },
    { NULL, "Z", 0x1, 26, 13, -1, 27, -1, -1 },
    { NULL, "Z", 0x1, 26, 28, -1, 29, -1, -1 },
    { NULL, "Z", 0x1, 30, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 31, 2, -1, 19, -1, -1 },
    { NULL, "LEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry;", 0x2, -1, -1, -1, 32, -1, -1 },
    { NULL, "Z", 0x1, 33, 28, -1, 29, -1, -1 },
    { NULL, "Z", 0x1, 34, 28, -1, 29, -1, -1 },
    { NULL, "Z", 0x1, 35, 28, -1, 29, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 36, 13, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 37, -1, -1 },
    { NULL, "LEduStanfordNlpUtilBinaryHeapPriorityQueue;", 0x1, 38, 39, -1, 40, -1, -1 },
    { NULL, "LEduStanfordNlpUtilBinaryHeapPriorityQueue;", 0x1, -1, -1, -1, 41, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 42, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 43, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 43, 15, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 15, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 39, -1, 44, -1, -1 },
    { NULL, NULL, 0x1, -1, 45, -1, 46, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(hasNext);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(remove);
  methods[3].selector = @selector(parentWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:);
  methods[4].selector = @selector(leftChildWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:);
  methods[5].selector = @selector(rightChildWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:);
  methods[6].selector = @selector(compareWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:withEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:);
  methods[7].selector = @selector(compareWithDouble:withDouble:);
  methods[8].selector = @selector(swapWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:withEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:);
  methods[9].selector = @selector(removeLastEntry);
  methods[10].selector = @selector(getEntryWithId:);
  methods[11].selector = @selector(getEntryWithInt:);
  methods[12].selector = @selector(makeEntryWithId:);
  methods[13].selector = @selector(heapifyUpWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:);
  methods[14].selector = @selector(heapifyDownWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:);
  methods[15].selector = @selector(heapifyWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:);
  methods[16].selector = @selector(removeFirst);
  methods[17].selector = @selector(getFirst);
  methods[18].selector = @selector(getPriority);
  methods[19].selector = @selector(getObjectWithId:);
  methods[20].selector = @selector(getPriorityWithId:);
  methods[21].selector = @selector(addWithId:);
  methods[22].selector = @selector(addWithId:withDouble:);
  methods[23].selector = @selector(removeWithId:);
  methods[24].selector = @selector(removeEntryWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry:);
  methods[25].selector = @selector(getLastEntry);
  methods[26].selector = @selector(relaxPriorityWithId:withDouble:);
  methods[27].selector = @selector(decreasePriorityWithId:withDouble:);
  methods[28].selector = @selector(changePriorityWithId:withDouble:);
  methods[29].selector = @selector(isEmpty);
  methods[30].selector = @selector(size);
  methods[31].selector = @selector(containsWithId:);
  methods[32].selector = @selector(toSortedList);
  methods[33].selector = @selector(deepCopyWithEduStanfordNlpUtilMapFactory:);
  methods[34].selector = @selector(deepCopy);
  methods[35].selector = @selector(iterator);
  methods[36].selector = @selector(clear);
  methods[37].selector = @selector(description);
  methods[38].selector = @selector(toStringWithInt:);
  methods[39].selector = @selector(toVerticalString);
  methods[40].selector = @selector(init);
  methods[41].selector = @selector(initWithInt:);
  methods[42].selector = @selector(initWithEduStanfordNlpUtilMapFactory:);
  methods[43].selector = @selector(initWithEduStanfordNlpUtilMapFactory:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "indexToEntry_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 47, -1 },
    { "keyToEntry_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 48, -1 },
  };
  static const void *ptrTable[] = { "()TE;", "parent", "LEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry;", "(Ledu/stanford/nlp/util/BinaryHeapPriorityQueue$Entry<TE;>;)Ledu/stanford/nlp/util/BinaryHeapPriorityQueue$Entry<TE;>;", "leftChild", "rightChild", "compare", "LEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry;LEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry;", "(Ledu/stanford/nlp/util/BinaryHeapPriorityQueue$Entry<TE;>;Ledu/stanford/nlp/util/BinaryHeapPriorityQueue$Entry<TE;>;)I", "DD", "swap", "(Ledu/stanford/nlp/util/BinaryHeapPriorityQueue$Entry<TE;>;Ledu/stanford/nlp/util/BinaryHeapPriorityQueue$Entry<TE;>;)V", "getEntry", "LNSObject;", "(TE;)Ledu/stanford/nlp/util/BinaryHeapPriorityQueue$Entry<TE;>;", "I", "(I)Ledu/stanford/nlp/util/BinaryHeapPriorityQueue$Entry<TE;>;", "makeEntry", "heapifyUp", "(Ledu/stanford/nlp/util/BinaryHeapPriorityQueue$Entry<TE;>;)V", "heapifyDown", "heapify", "getObject", "(TE;)TE;", "getPriority", "(TE;)D", "add", "(TE;)Z", "LNSObject;D", "(TE;D)Z", "remove", "removeEntry", "()Ledu/stanford/nlp/util/BinaryHeapPriorityQueue$Entry<TE;>;", "relaxPriority", "decreasePriority", "changePriority", "contains", "()Ljava/util/List<TE;>;", "deepCopy", "LEduStanfordNlpUtilMapFactory;", "(Ledu/stanford/nlp/util/MapFactory<TE;Ledu/stanford/nlp/util/BinaryHeapPriorityQueue$Entry<TE;>;>;)Ledu/stanford/nlp/util/BinaryHeapPriorityQueue<TE;>;", "()Ledu/stanford/nlp/util/BinaryHeapPriorityQueue<TE;>;", "()Ljava/util/Iterator<TE;>;", "toString", "(Ledu/stanford/nlp/util/MapFactory<TE;Ledu/stanford/nlp/util/BinaryHeapPriorityQueue$Entry<TE;>;>;)V", "LEduStanfordNlpUtilMapFactory;I", "(Ledu/stanford/nlp/util/MapFactory<TE;Ledu/stanford/nlp/util/BinaryHeapPriorityQueue$Entry<TE;>;>;I)V", "Ljava/util/List<Ledu/stanford/nlp/util/BinaryHeapPriorityQueue$Entry<TE;>;>;", "Ljava/util/Map<TE;Ledu/stanford/nlp/util/BinaryHeapPriorityQueue$Entry<TE;>;>;", "<E:Ljava/lang/Object;>Ljava/util/AbstractSet<TE;>;Ledu/stanford/nlp/util/PriorityQueue<TE;>;Ljava/util/Iterator<TE;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilBinaryHeapPriorityQueue = { "BinaryHeapPriorityQueue", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0x1, 44, 2, -1, 2, -1, 49, -1 };
  return &_EduStanfordNlpUtilBinaryHeapPriorityQueue;
}

@end

EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *EduStanfordNlpUtilBinaryHeapPriorityQueue_parentWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_) {
  jint index = ((EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *) nil_chk(entry_))->index_;
  return (index > 0 ? EduStanfordNlpUtilBinaryHeapPriorityQueue_getEntryWithInt_(self, (index - 1) / 2) : nil);
}

EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *EduStanfordNlpUtilBinaryHeapPriorityQueue_leftChildWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_) {
  jint leftIndex = ((EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *) nil_chk(entry_))->index_ * 2 + 1;
  return (leftIndex < [self size] ? EduStanfordNlpUtilBinaryHeapPriorityQueue_getEntryWithInt_(self, leftIndex) : nil);
}

EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *EduStanfordNlpUtilBinaryHeapPriorityQueue_rightChildWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_) {
  jint index = ((EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *) nil_chk(entry_))->index_;
  jint rightIndex = index * 2 + 2;
  return (rightIndex < [self size] ? EduStanfordNlpUtilBinaryHeapPriorityQueue_getEntryWithInt_(self, rightIndex) : nil);
}

jint EduStanfordNlpUtilBinaryHeapPriorityQueue_compareWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_withEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entryA, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entryB) {
  jint result = EduStanfordNlpUtilBinaryHeapPriorityQueue_compareWithDouble_withDouble_(((EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *) nil_chk(entryA))->priority_, ((EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *) nil_chk(entryB))->priority_);
  if (result != 0) {
    return result;
  }
  if (([JavaLangComparable_class_() isInstance:entryA->key_]) && ([JavaLangComparable_class_() isInstance:entryB->key_])) {
    id<JavaLangComparable> key = EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(entryA->key_);
    return [((id<JavaLangComparable>) nil_chk(key)) compareToWithId:entryB->key_];
  }
  return result;
}

jint EduStanfordNlpUtilBinaryHeapPriorityQueue_compareWithDouble_withDouble_(jdouble a, jdouble b) {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_initialize();
  jdouble diff = a - b;
  if (diff > 0.0) {
    return 1;
  }
  if (diff < 0.0) {
    return -1;
  }
  return 0;
}

void EduStanfordNlpUtilBinaryHeapPriorityQueue_swapWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_withEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entryA, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entryB) {
  jint indexA = ((EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *) nil_chk(entryA))->index_;
  jint indexB = ((EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *) nil_chk(entryB))->index_;
  entryA->index_ = indexB;
  entryB->index_ = indexA;
  (void) [((id<JavaUtilList>) nil_chk(self->indexToEntry_)) setWithInt:indexA withId:entryB];
  (void) [self->indexToEntry_ setWithInt:indexB withId:entryA];
}

EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *EduStanfordNlpUtilBinaryHeapPriorityQueue_getEntryWithId_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, id key) {
  return [((id<JavaUtilMap>) nil_chk(self->keyToEntry_)) getWithId:key];
}

EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *EduStanfordNlpUtilBinaryHeapPriorityQueue_getEntryWithInt_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, jint index) {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_ = [((id<JavaUtilList>) nil_chk(self->indexToEntry_)) getWithInt:index];
  return entry_;
}

EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *EduStanfordNlpUtilBinaryHeapPriorityQueue_makeEntryWithId_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, id key) {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_ = new_EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_init();
  entry_->index_ = [self size];
  entry_->key_ = key;
  entry_->priority_ = JavaLangDouble_NEGATIVE_INFINITY;
  [((id<JavaUtilList>) nil_chk(self->indexToEntry_)) addWithId:entry_];
  (void) [((id<JavaUtilMap>) nil_chk(self->keyToEntry_)) putWithId:key withId:entry_];
  return entry_;
}

void EduStanfordNlpUtilBinaryHeapPriorityQueue_heapifyUpWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_) {
  while (true) {
    if (((EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *) nil_chk(entry_))->index_ == 0) {
      break;
    }
    EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *parentEntry = EduStanfordNlpUtilBinaryHeapPriorityQueue_parentWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, entry_);
    if (EduStanfordNlpUtilBinaryHeapPriorityQueue_compareWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_withEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, entry_, parentEntry) <= 0) {
      break;
    }
    EduStanfordNlpUtilBinaryHeapPriorityQueue_swapWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_withEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, entry_, parentEntry);
  }
}

void EduStanfordNlpUtilBinaryHeapPriorityQueue_heapifyDownWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_) {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *bestEntry;
  do {
    bestEntry = entry_;
    EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *leftEntry = EduStanfordNlpUtilBinaryHeapPriorityQueue_leftChildWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, entry_);
    if (leftEntry != nil) {
      if (EduStanfordNlpUtilBinaryHeapPriorityQueue_compareWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_withEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, bestEntry, leftEntry) < 0) {
        bestEntry = leftEntry;
      }
    }
    EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *rightEntry = EduStanfordNlpUtilBinaryHeapPriorityQueue_rightChildWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, entry_);
    if (rightEntry != nil) {
      if (EduStanfordNlpUtilBinaryHeapPriorityQueue_compareWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_withEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, bestEntry, rightEntry) < 0) {
        bestEntry = rightEntry;
      }
    }
    if (bestEntry != entry_) {
      EduStanfordNlpUtilBinaryHeapPriorityQueue_swapWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_withEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, bestEntry, entry_);
    }
  }
  while (bestEntry != entry_);
}

void EduStanfordNlpUtilBinaryHeapPriorityQueue_heapifyWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_) {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_heapifyUpWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, entry_);
  EduStanfordNlpUtilBinaryHeapPriorityQueue_heapifyDownWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, entry_);
}

void EduStanfordNlpUtilBinaryHeapPriorityQueue_removeEntryWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *entry_) {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *lastEntry = EduStanfordNlpUtilBinaryHeapPriorityQueue_getLastEntry(self);
  if (entry_ != lastEntry) {
    EduStanfordNlpUtilBinaryHeapPriorityQueue_swapWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_withEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, entry_, lastEntry);
    [self removeLastEntry];
    EduStanfordNlpUtilBinaryHeapPriorityQueue_heapifyWithEduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_(self, lastEntry);
  }
  else {
    [self removeLastEntry];
  }
}

EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *EduStanfordNlpUtilBinaryHeapPriorityQueue_getLastEntry(EduStanfordNlpUtilBinaryHeapPriorityQueue *self) {
  return EduStanfordNlpUtilBinaryHeapPriorityQueue_getEntryWithInt_(self, [self size] - 1);
}

void EduStanfordNlpUtilBinaryHeapPriorityQueue_init(EduStanfordNlpUtilBinaryHeapPriorityQueue *self) {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_initWithEduStanfordNlpUtilMapFactory_(self, EduStanfordNlpUtilMapFactory_hashMapFactory());
}

EduStanfordNlpUtilBinaryHeapPriorityQueue *new_EduStanfordNlpUtilBinaryHeapPriorityQueue_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilBinaryHeapPriorityQueue, init)
}

EduStanfordNlpUtilBinaryHeapPriorityQueue *create_EduStanfordNlpUtilBinaryHeapPriorityQueue_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilBinaryHeapPriorityQueue, init)
}

void EduStanfordNlpUtilBinaryHeapPriorityQueue_initWithInt_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, jint initCapacity) {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_initWithEduStanfordNlpUtilMapFactory_withInt_(self, EduStanfordNlpUtilMapFactory_hashMapFactory(), initCapacity);
}

EduStanfordNlpUtilBinaryHeapPriorityQueue *new_EduStanfordNlpUtilBinaryHeapPriorityQueue_initWithInt_(jint initCapacity) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilBinaryHeapPriorityQueue, initWithInt_, initCapacity)
}

EduStanfordNlpUtilBinaryHeapPriorityQueue *create_EduStanfordNlpUtilBinaryHeapPriorityQueue_initWithInt_(jint initCapacity) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilBinaryHeapPriorityQueue, initWithInt_, initCapacity)
}

void EduStanfordNlpUtilBinaryHeapPriorityQueue_initWithEduStanfordNlpUtilMapFactory_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, EduStanfordNlpUtilMapFactory *mapFactory) {
  JavaUtilAbstractSet_init(self);
  self->indexToEntry_ = new_JavaUtilArrayList_init();
  self->keyToEntry_ = [((EduStanfordNlpUtilMapFactory *) nil_chk(mapFactory)) newMap];
}

EduStanfordNlpUtilBinaryHeapPriorityQueue *new_EduStanfordNlpUtilBinaryHeapPriorityQueue_initWithEduStanfordNlpUtilMapFactory_(EduStanfordNlpUtilMapFactory *mapFactory) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilBinaryHeapPriorityQueue, initWithEduStanfordNlpUtilMapFactory_, mapFactory)
}

EduStanfordNlpUtilBinaryHeapPriorityQueue *create_EduStanfordNlpUtilBinaryHeapPriorityQueue_initWithEduStanfordNlpUtilMapFactory_(EduStanfordNlpUtilMapFactory *mapFactory) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilBinaryHeapPriorityQueue, initWithEduStanfordNlpUtilMapFactory_, mapFactory)
}

void EduStanfordNlpUtilBinaryHeapPriorityQueue_initWithEduStanfordNlpUtilMapFactory_withInt_(EduStanfordNlpUtilBinaryHeapPriorityQueue *self, EduStanfordNlpUtilMapFactory *mapFactory, jint initCapacity) {
  JavaUtilAbstractSet_init(self);
  self->indexToEntry_ = new_JavaUtilArrayList_initWithInt_(initCapacity);
  self->keyToEntry_ = [((EduStanfordNlpUtilMapFactory *) nil_chk(mapFactory)) newMapWithInt:initCapacity];
}

EduStanfordNlpUtilBinaryHeapPriorityQueue *new_EduStanfordNlpUtilBinaryHeapPriorityQueue_initWithEduStanfordNlpUtilMapFactory_withInt_(EduStanfordNlpUtilMapFactory *mapFactory, jint initCapacity) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilBinaryHeapPriorityQueue, initWithEduStanfordNlpUtilMapFactory_withInt_, mapFactory, initCapacity)
}

EduStanfordNlpUtilBinaryHeapPriorityQueue *create_EduStanfordNlpUtilBinaryHeapPriorityQueue_initWithEduStanfordNlpUtilMapFactory_withInt_(EduStanfordNlpUtilMapFactory *mapFactory, jint initCapacity) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilBinaryHeapPriorityQueue, initWithEduStanfordNlpUtilMapFactory_withInt_, mapFactory, initCapacity)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilBinaryHeapPriorityQueue)

@implementation EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry

- (NSString *)description {
  return JreStrcat("@$I$DC", key_, @" at ", index_, @" (", priority_, ')');
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(description);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "key_", "LNSObject;", .constantValue.asLong = 0, 0x1, -1, -1, 1, -1 },
    { "index_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "priority_", "D", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "toString", "TE;", "LEduStanfordNlpUtilBinaryHeapPriorityQueue;", "<E:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry = { "Entry", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0x1a, 2, 3, 2, -1, -1, 3, -1 };
  return &_EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry;
}

@end

void EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_init(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *self) {
  NSObject_init(self);
}

EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *new_EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry, init)
}

EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry *create_EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilBinaryHeapPriorityQueue_Entry)
