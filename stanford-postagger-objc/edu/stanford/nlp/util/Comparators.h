//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/Comparators.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpUtilComparators")
#ifdef RESTRICT_EduStanfordNlpUtilComparators
#define INCLUDE_ALL_EduStanfordNlpUtilComparators 0
#else
#define INCLUDE_ALL_EduStanfordNlpUtilComparators 1
#endif
#undef RESTRICT_EduStanfordNlpUtilComparators

#if !defined (EduStanfordNlpUtilComparators_) && (INCLUDE_ALL_EduStanfordNlpUtilComparators || defined(INCLUDE_EduStanfordNlpUtilComparators))
#define EduStanfordNlpUtilComparators_

@class IOSObjectArray;
@protocol JavaLangComparable;
@protocol JavaUtilComparator;
@protocol JavaUtilList;

@interface EduStanfordNlpUtilComparators : NSObject

#pragma mark Public

+ (id<JavaUtilComparator>)chainWithJavaUtilComparator:(id<JavaUtilComparator>)c1
                               withJavaUtilComparator:(id<JavaUtilComparator>)c2;

+ (id<JavaUtilComparator>)chainWithJavaUtilComparatorArray:(IOSObjectArray *)c;

+ (id<JavaUtilComparator>)chainWithJavaUtilList:(id<JavaUtilList>)c;

+ (id<JavaUtilComparator>)getArrayComparator;

+ (id<JavaUtilComparator>)getBooleanArrayComparator;

+ (id<JavaUtilComparator>)getListComparator;

+ (id<JavaUtilComparator>)getStringRepresentationComparator;

+ (jint)nullSafeCompareWithJavaLangComparable:(id<JavaLangComparable>)one
                       withJavaLangComparable:(id<JavaLangComparable>)two;

+ (id<JavaUtilComparator>)nullSafeNaturalComparator;

+ (id<JavaUtilComparator>)reverseWithJavaUtilComparator:(id<JavaUtilComparator>)c;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilComparators)

FOUNDATION_EXPORT id<JavaUtilComparator> EduStanfordNlpUtilComparators_chainWithJavaUtilComparator_withJavaUtilComparator_(id<JavaUtilComparator> c1, id<JavaUtilComparator> c2);

FOUNDATION_EXPORT id<JavaUtilComparator> EduStanfordNlpUtilComparators_chainWithJavaUtilList_(id<JavaUtilList> c);

FOUNDATION_EXPORT id<JavaUtilComparator> EduStanfordNlpUtilComparators_chainWithJavaUtilComparatorArray_(IOSObjectArray *c);

FOUNDATION_EXPORT id<JavaUtilComparator> EduStanfordNlpUtilComparators_reverseWithJavaUtilComparator_(id<JavaUtilComparator> c);

FOUNDATION_EXPORT id<JavaUtilComparator> EduStanfordNlpUtilComparators_nullSafeNaturalComparator();

FOUNDATION_EXPORT jint EduStanfordNlpUtilComparators_nullSafeCompareWithJavaLangComparable_withJavaLangComparable_(id<JavaLangComparable> one, id<JavaLangComparable> two);

FOUNDATION_EXPORT id<JavaUtilComparator> EduStanfordNlpUtilComparators_getListComparator();

FOUNDATION_EXPORT id<JavaUtilComparator> EduStanfordNlpUtilComparators_getStringRepresentationComparator();

FOUNDATION_EXPORT id<JavaUtilComparator> EduStanfordNlpUtilComparators_getBooleanArrayComparator();

FOUNDATION_EXPORT id<JavaUtilComparator> EduStanfordNlpUtilComparators_getArrayComparator();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilComparators)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpUtilComparators")
