//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/HasInterval.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/util/Comparators.h"
#include "edu/stanford/nlp/util/HasInterval.h"
#include "edu/stanford/nlp/util/Interval.h"
#include "java/lang/Integer.h"
#include "java/util/Comparator.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"

@interface EduStanfordNlpUtilHasInterval_$Lambda$1 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(id<EduStanfordNlpUtilHasInterval>)e1
               withId:(id<EduStanfordNlpUtilHasInterval>)e2;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpUtilHasInterval_$Lambda$1)

inline EduStanfordNlpUtilHasInterval_$Lambda$1 *EduStanfordNlpUtilHasInterval_$Lambda$1_get_instance();
static EduStanfordNlpUtilHasInterval_$Lambda$1 *EduStanfordNlpUtilHasInterval_$Lambda$1_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpUtilHasInterval_$Lambda$1, instance, EduStanfordNlpUtilHasInterval_$Lambda$1 *)

__attribute__((unused)) static void EduStanfordNlpUtilHasInterval_$Lambda$1_init(EduStanfordNlpUtilHasInterval_$Lambda$1 *self);

__attribute__((unused)) static EduStanfordNlpUtilHasInterval_$Lambda$1 *new_EduStanfordNlpUtilHasInterval_$Lambda$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilHasInterval_$Lambda$1 *create_EduStanfordNlpUtilHasInterval_$Lambda$1_init();

@interface EduStanfordNlpUtilHasInterval_$Lambda$2 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(id<EduStanfordNlpUtilHasInterval>)e1
               withId:(id<EduStanfordNlpUtilHasInterval>)e2;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpUtilHasInterval_$Lambda$2)

inline EduStanfordNlpUtilHasInterval_$Lambda$2 *EduStanfordNlpUtilHasInterval_$Lambda$2_get_instance();
static EduStanfordNlpUtilHasInterval_$Lambda$2 *EduStanfordNlpUtilHasInterval_$Lambda$2_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpUtilHasInterval_$Lambda$2, instance, EduStanfordNlpUtilHasInterval_$Lambda$2 *)

__attribute__((unused)) static void EduStanfordNlpUtilHasInterval_$Lambda$2_init(EduStanfordNlpUtilHasInterval_$Lambda$2 *self);

__attribute__((unused)) static EduStanfordNlpUtilHasInterval_$Lambda$2 *new_EduStanfordNlpUtilHasInterval_$Lambda$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilHasInterval_$Lambda$2 *create_EduStanfordNlpUtilHasInterval_$Lambda$2_init();

@interface EduStanfordNlpUtilHasInterval_$Lambda$3 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(id<EduStanfordNlpUtilHasInterval>)e1
               withId:(id<EduStanfordNlpUtilHasInterval>)e2;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpUtilHasInterval_$Lambda$3)

inline EduStanfordNlpUtilHasInterval_$Lambda$3 *EduStanfordNlpUtilHasInterval_$Lambda$3_get_instance();
static EduStanfordNlpUtilHasInterval_$Lambda$3 *EduStanfordNlpUtilHasInterval_$Lambda$3_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpUtilHasInterval_$Lambda$3, instance, EduStanfordNlpUtilHasInterval_$Lambda$3 *)

__attribute__((unused)) static void EduStanfordNlpUtilHasInterval_$Lambda$3_init(EduStanfordNlpUtilHasInterval_$Lambda$3 *self);

__attribute__((unused)) static EduStanfordNlpUtilHasInterval_$Lambda$3 *new_EduStanfordNlpUtilHasInterval_$Lambda$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilHasInterval_$Lambda$3 *create_EduStanfordNlpUtilHasInterval_$Lambda$3_init();

@interface EduStanfordNlpUtilHasInterval_$Lambda$4 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(id<EduStanfordNlpUtilHasInterval>)e1
               withId:(id<EduStanfordNlpUtilHasInterval>)e2;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpUtilHasInterval_$Lambda$4)

inline EduStanfordNlpUtilHasInterval_$Lambda$4 *EduStanfordNlpUtilHasInterval_$Lambda$4_get_instance();
static EduStanfordNlpUtilHasInterval_$Lambda$4 *EduStanfordNlpUtilHasInterval_$Lambda$4_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpUtilHasInterval_$Lambda$4, instance, EduStanfordNlpUtilHasInterval_$Lambda$4 *)

__attribute__((unused)) static void EduStanfordNlpUtilHasInterval_$Lambda$4_init(EduStanfordNlpUtilHasInterval_$Lambda$4 *self);

__attribute__((unused)) static EduStanfordNlpUtilHasInterval_$Lambda$4 *new_EduStanfordNlpUtilHasInterval_$Lambda$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilHasInterval_$Lambda$4 *create_EduStanfordNlpUtilHasInterval_$Lambda$4_init();

@interface EduStanfordNlpUtilHasInterval_$Lambda$5 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(id<EduStanfordNlpUtilHasInterval>)e1
               withId:(id<EduStanfordNlpUtilHasInterval>)e2;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpUtilHasInterval_$Lambda$5)

inline EduStanfordNlpUtilHasInterval_$Lambda$5 *EduStanfordNlpUtilHasInterval_$Lambda$5_get_instance();
static EduStanfordNlpUtilHasInterval_$Lambda$5 *EduStanfordNlpUtilHasInterval_$Lambda$5_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpUtilHasInterval_$Lambda$5, instance, EduStanfordNlpUtilHasInterval_$Lambda$5 *)

__attribute__((unused)) static void EduStanfordNlpUtilHasInterval_$Lambda$5_init(EduStanfordNlpUtilHasInterval_$Lambda$5 *self);

__attribute__((unused)) static EduStanfordNlpUtilHasInterval_$Lambda$5 *new_EduStanfordNlpUtilHasInterval_$Lambda$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilHasInterval_$Lambda$5 *create_EduStanfordNlpUtilHasInterval_$Lambda$5_init();

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpUtilHasInterval)

id<JavaUtilComparator> EduStanfordNlpUtilHasInterval_LENGTH_GT_COMPARATOR;
id<JavaUtilComparator> EduStanfordNlpUtilHasInterval_LENGTH_LT_COMPARATOR;
id<JavaUtilComparator> EduStanfordNlpUtilHasInterval_ENDPOINTS_COMPARATOR;
id<JavaUtilComparator> EduStanfordNlpUtilHasInterval_NESTED_FIRST_ENDPOINTS_COMPARATOR;
id<JavaUtilComparator> EduStanfordNlpUtilHasInterval_CONTAINS_FIRST_ENDPOINTS_COMPARATOR;
id<JavaUtilComparator> EduStanfordNlpUtilHasInterval_LENGTH_ENDPOINTS_COMPARATOR;

@implementation EduStanfordNlpUtilHasInterval

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEduStanfordNlpUtilInterval;", 0x401, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getInterval);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LENGTH_GT_COMPARATOR", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x19, -1, 1, 2, -1 },
    { "LENGTH_LT_COMPARATOR", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x19, -1, 3, 2, -1 },
    { "ENDPOINTS_COMPARATOR", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x19, -1, 4, 5, -1 },
    { "NESTED_FIRST_ENDPOINTS_COMPARATOR", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x19, -1, 6, 5, -1 },
    { "CONTAINS_FIRST_ENDPOINTS_COMPARATOR", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x19, -1, 7, 5, -1 },
    { "LENGTH_ENDPOINTS_COMPARATOR", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x19, -1, 8, 2, -1 },
  };
  static const void *ptrTable[] = { "()Ledu/stanford/nlp/util/Interval<TE;>;", &EduStanfordNlpUtilHasInterval_LENGTH_GT_COMPARATOR, "Ljava/util/Comparator<Ledu/stanford/nlp/util/HasInterval<Ljava/lang/Integer;>;>;", &EduStanfordNlpUtilHasInterval_LENGTH_LT_COMPARATOR, &EduStanfordNlpUtilHasInterval_ENDPOINTS_COMPARATOR, "Ljava/util/Comparator<Ledu/stanford/nlp/util/HasInterval;>;", &EduStanfordNlpUtilHasInterval_NESTED_FIRST_ENDPOINTS_COMPARATOR, &EduStanfordNlpUtilHasInterval_CONTAINS_FIRST_ENDPOINTS_COMPARATOR, &EduStanfordNlpUtilHasInterval_LENGTH_ENDPOINTS_COMPARATOR, "<E::Ljava/lang/Comparable<TE;>;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilHasInterval = { "HasInterval", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0x609, 1, 6, -1, -1, -1, 9, -1 };
  return &_EduStanfordNlpUtilHasInterval;
}

+ (void)initialize {
  if (self == [EduStanfordNlpUtilHasInterval class]) {
    EduStanfordNlpUtilHasInterval_LENGTH_GT_COMPARATOR = JreLoadStatic(EduStanfordNlpUtilHasInterval_$Lambda$1, instance);
    EduStanfordNlpUtilHasInterval_LENGTH_LT_COMPARATOR = JreLoadStatic(EduStanfordNlpUtilHasInterval_$Lambda$2, instance);
    EduStanfordNlpUtilHasInterval_ENDPOINTS_COMPARATOR = JreLoadStatic(EduStanfordNlpUtilHasInterval_$Lambda$3, instance);
    EduStanfordNlpUtilHasInterval_NESTED_FIRST_ENDPOINTS_COMPARATOR = JreLoadStatic(EduStanfordNlpUtilHasInterval_$Lambda$4, instance);
    EduStanfordNlpUtilHasInterval_CONTAINS_FIRST_ENDPOINTS_COMPARATOR = JreLoadStatic(EduStanfordNlpUtilHasInterval_$Lambda$5, instance);
    EduStanfordNlpUtilHasInterval_LENGTH_ENDPOINTS_COMPARATOR = EduStanfordNlpUtilComparators_chainWithJavaUtilComparator_withJavaUtilComparator_(EduStanfordNlpUtilHasInterval_LENGTH_GT_COMPARATOR, EduStanfordNlpUtilHasInterval_ENDPOINTS_COMPARATOR);
    J2OBJC_SET_INITIALIZED(EduStanfordNlpUtilHasInterval)
  }
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilHasInterval)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpUtilHasInterval_$Lambda$1)

@implementation EduStanfordNlpUtilHasInterval_$Lambda$1

- (jint)compareWithId:(id<EduStanfordNlpUtilHasInterval>)e1
               withId:(id<EduStanfordNlpUtilHasInterval>)e2 {
  jint len1 = [((JavaLangInteger *) nil_chk([((EduStanfordNlpUtilInterval *) nil_chk([((id<EduStanfordNlpUtilHasInterval>) nil_chk(e1)) getInterval])) getEnd])) intValue] - [((JavaLangInteger *) nil_chk([((EduStanfordNlpUtilInterval *) nil_chk([e1 getInterval])) getBegin])) intValue];
  jint len2 = [((JavaLangInteger *) nil_chk([((EduStanfordNlpUtilInterval *) nil_chk([((id<EduStanfordNlpUtilHasInterval>) nil_chk(e2)) getInterval])) getEnd])) intValue] - [((JavaLangInteger *) nil_chk([((EduStanfordNlpUtilInterval *) nil_chk([e2 getInterval])) getBegin])) intValue];
  if (len1 == len2) {
    return 0;
  }
  else {
    return (len1 > len2) ? -1 : 1;
  }
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [EduStanfordNlpUtilHasInterval_$Lambda$1 class]) {
    EduStanfordNlpUtilHasInterval_$Lambda$1_instance = new_EduStanfordNlpUtilHasInterval_$Lambda$1_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpUtilHasInterval_$Lambda$1)
  }
}

@end

void EduStanfordNlpUtilHasInterval_$Lambda$1_init(EduStanfordNlpUtilHasInterval_$Lambda$1 *self) {
  NSObject_init(self);
}

EduStanfordNlpUtilHasInterval_$Lambda$1 *new_EduStanfordNlpUtilHasInterval_$Lambda$1_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilHasInterval_$Lambda$1, init)
}

EduStanfordNlpUtilHasInterval_$Lambda$1 *create_EduStanfordNlpUtilHasInterval_$Lambda$1_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilHasInterval_$Lambda$1, init)
}

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpUtilHasInterval_$Lambda$2)

@implementation EduStanfordNlpUtilHasInterval_$Lambda$2

- (jint)compareWithId:(id<EduStanfordNlpUtilHasInterval>)e1
               withId:(id<EduStanfordNlpUtilHasInterval>)e2 {
  jint len1 = [((JavaLangInteger *) nil_chk([((EduStanfordNlpUtilInterval *) nil_chk([((id<EduStanfordNlpUtilHasInterval>) nil_chk(e1)) getInterval])) getEnd])) intValue] - [((JavaLangInteger *) nil_chk([((EduStanfordNlpUtilInterval *) nil_chk([e1 getInterval])) getBegin])) intValue];
  jint len2 = [((JavaLangInteger *) nil_chk([((EduStanfordNlpUtilInterval *) nil_chk([((id<EduStanfordNlpUtilHasInterval>) nil_chk(e2)) getInterval])) getEnd])) intValue] - [((JavaLangInteger *) nil_chk([((EduStanfordNlpUtilInterval *) nil_chk([e2 getInterval])) getBegin])) intValue];
  if (len1 == len2) {
    return 0;
  }
  else {
    return (len1 < len2) ? -1 : 1;
  }
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [EduStanfordNlpUtilHasInterval_$Lambda$2 class]) {
    EduStanfordNlpUtilHasInterval_$Lambda$2_instance = new_EduStanfordNlpUtilHasInterval_$Lambda$2_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpUtilHasInterval_$Lambda$2)
  }
}

@end

void EduStanfordNlpUtilHasInterval_$Lambda$2_init(EduStanfordNlpUtilHasInterval_$Lambda$2 *self) {
  NSObject_init(self);
}

EduStanfordNlpUtilHasInterval_$Lambda$2 *new_EduStanfordNlpUtilHasInterval_$Lambda$2_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilHasInterval_$Lambda$2, init)
}

EduStanfordNlpUtilHasInterval_$Lambda$2 *create_EduStanfordNlpUtilHasInterval_$Lambda$2_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilHasInterval_$Lambda$2, init)
}

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpUtilHasInterval_$Lambda$3)

@implementation EduStanfordNlpUtilHasInterval_$Lambda$3

- (jint)compareWithId:(id<EduStanfordNlpUtilHasInterval>)e1
               withId:(id<EduStanfordNlpUtilHasInterval>)e2 {
  return ([((EduStanfordNlpUtilInterval *) nil_chk([((id<EduStanfordNlpUtilHasInterval>) nil_chk(e1)) getInterval])) compareToWithId:[((id<EduStanfordNlpUtilHasInterval>) nil_chk(e2)) getInterval]]);
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [EduStanfordNlpUtilHasInterval_$Lambda$3 class]) {
    EduStanfordNlpUtilHasInterval_$Lambda$3_instance = new_EduStanfordNlpUtilHasInterval_$Lambda$3_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpUtilHasInterval_$Lambda$3)
  }
}

@end

void EduStanfordNlpUtilHasInterval_$Lambda$3_init(EduStanfordNlpUtilHasInterval_$Lambda$3 *self) {
  NSObject_init(self);
}

EduStanfordNlpUtilHasInterval_$Lambda$3 *new_EduStanfordNlpUtilHasInterval_$Lambda$3_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilHasInterval_$Lambda$3, init)
}

EduStanfordNlpUtilHasInterval_$Lambda$3 *create_EduStanfordNlpUtilHasInterval_$Lambda$3_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilHasInterval_$Lambda$3, init)
}

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpUtilHasInterval_$Lambda$4)

@implementation EduStanfordNlpUtilHasInterval_$Lambda$4

- (jint)compareWithId:(id<EduStanfordNlpUtilHasInterval>)e1
               withId:(id<EduStanfordNlpUtilHasInterval>)e2 {
  EduStanfordNlpUtilInterval_RelType *rel = [((EduStanfordNlpUtilInterval *) nil_chk([((id<EduStanfordNlpUtilHasInterval>) nil_chk(e1)) getInterval])) getRelationWithEduStanfordNlpUtilInterval:[((id<EduStanfordNlpUtilHasInterval>) nil_chk(e2)) getInterval]];
  if ([((EduStanfordNlpUtilInterval_RelType *) nil_chk(rel)) isEqual:JreLoadEnum(EduStanfordNlpUtilInterval_RelType, CONTAIN)]) {
    return 1;
  }
  else if ([rel isEqual:JreLoadEnum(EduStanfordNlpUtilInterval_RelType, INSIDE)]) {
    return -1;
  }
  else {
    return ([((EduStanfordNlpUtilInterval *) nil_chk([e1 getInterval])) compareToWithId:[e2 getInterval]]);
  }
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [EduStanfordNlpUtilHasInterval_$Lambda$4 class]) {
    EduStanfordNlpUtilHasInterval_$Lambda$4_instance = new_EduStanfordNlpUtilHasInterval_$Lambda$4_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpUtilHasInterval_$Lambda$4)
  }
}

@end

void EduStanfordNlpUtilHasInterval_$Lambda$4_init(EduStanfordNlpUtilHasInterval_$Lambda$4 *self) {
  NSObject_init(self);
}

EduStanfordNlpUtilHasInterval_$Lambda$4 *new_EduStanfordNlpUtilHasInterval_$Lambda$4_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilHasInterval_$Lambda$4, init)
}

EduStanfordNlpUtilHasInterval_$Lambda$4 *create_EduStanfordNlpUtilHasInterval_$Lambda$4_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilHasInterval_$Lambda$4, init)
}

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpUtilHasInterval_$Lambda$5)

@implementation EduStanfordNlpUtilHasInterval_$Lambda$5

- (jint)compareWithId:(id<EduStanfordNlpUtilHasInterval>)e1
               withId:(id<EduStanfordNlpUtilHasInterval>)e2 {
  EduStanfordNlpUtilInterval_RelType *rel = [((EduStanfordNlpUtilInterval *) nil_chk([((id<EduStanfordNlpUtilHasInterval>) nil_chk(e1)) getInterval])) getRelationWithEduStanfordNlpUtilInterval:[((id<EduStanfordNlpUtilHasInterval>) nil_chk(e2)) getInterval]];
  if ([((EduStanfordNlpUtilInterval_RelType *) nil_chk(rel)) isEqual:JreLoadEnum(EduStanfordNlpUtilInterval_RelType, CONTAIN)]) {
    return -1;
  }
  else if ([rel isEqual:JreLoadEnum(EduStanfordNlpUtilInterval_RelType, INSIDE)]) {
    return 1;
  }
  else {
    return ([((EduStanfordNlpUtilInterval *) nil_chk([e1 getInterval])) compareToWithId:[e2 getInterval]]);
  }
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [EduStanfordNlpUtilHasInterval_$Lambda$5 class]) {
    EduStanfordNlpUtilHasInterval_$Lambda$5_instance = new_EduStanfordNlpUtilHasInterval_$Lambda$5_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpUtilHasInterval_$Lambda$5)
  }
}

@end

void EduStanfordNlpUtilHasInterval_$Lambda$5_init(EduStanfordNlpUtilHasInterval_$Lambda$5 *self) {
  NSObject_init(self);
}

EduStanfordNlpUtilHasInterval_$Lambda$5 *new_EduStanfordNlpUtilHasInterval_$Lambda$5_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilHasInterval_$Lambda$5, init)
}

EduStanfordNlpUtilHasInterval_$Lambda$5 *create_EduStanfordNlpUtilHasInterval_$Lambda$5_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilHasInterval_$Lambda$5, init)
}
