//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/logging/RerouteChannel.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/util/logging/LogRecordHandler.h"
#include "edu/stanford/nlp/util/logging/Redwood.h"
#include "edu/stanford/nlp/util/logging/RerouteChannel.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface EduStanfordNlpUtilLoggingRerouteChannel () {
 @public
  id oldChannelName_;
  id newChannelName_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpUtilLoggingRerouteChannel, oldChannelName_, id)
J2OBJC_FIELD_SETTER(EduStanfordNlpUtilLoggingRerouteChannel, newChannelName_, id)

@implementation EduStanfordNlpUtilLoggingRerouteChannel

- (instancetype)initWithId:(id)oldChannelName
                    withId:(id)newChannelName {
  EduStanfordNlpUtilLoggingRerouteChannel_initWithId_withId_(self, oldChannelName, newChannelName);
  return self;
}

- (id<JavaUtilList>)handleWithEduStanfordNlpUtilLoggingRedwood_Record:(EduStanfordNlpUtilLoggingRedwood_Record *)record {
  id<JavaUtilList> results = new_JavaUtilArrayList_init();
  IOSObjectArray *channels = [((EduStanfordNlpUtilLoggingRedwood_Record *) nil_chk(record)) channels];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(channels))->size_; i++) {
    id channel = IOSObjectArray_Get(channels, i);
    if ([nil_chk(oldChannelName_) isEqual:channel]) {
      (void) IOSObjectArray_Set(channels, i, newChannelName_);
      EduStanfordNlpUtilLoggingRedwood_Record *reroutedRecord = new_EduStanfordNlpUtilLoggingRedwood_Record_initWithId_withNSObjectArray_withInt_withLong_(record->content_, channels, record->depth_, record->timesstamp_);
      [results addWithId:reroutedRecord];
      return results;
    }
  }
  [results addWithId:record];
  return results;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:withId:);
  methods[1].selector = @selector(handleWithEduStanfordNlpUtilLoggingRedwood_Record:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "oldChannelName_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "newChannelName_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LNSObject;", "handle", "LEduStanfordNlpUtilLoggingRedwood_Record;", "(Ledu/stanford/nlp/util/logging/Redwood$Record;)Ljava/util/List<Ledu/stanford/nlp/util/logging/Redwood$Record;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilLoggingRerouteChannel = { "RerouteChannel", "edu.stanford.nlp.util.logging", ptrTable, methods, fields, 7, 0x1, 2, 2, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpUtilLoggingRerouteChannel;
}

@end

void EduStanfordNlpUtilLoggingRerouteChannel_initWithId_withId_(EduStanfordNlpUtilLoggingRerouteChannel *self, id oldChannelName, id newChannelName) {
  EduStanfordNlpUtilLoggingLogRecordHandler_init(self);
  self->oldChannelName_ = oldChannelName;
  self->newChannelName_ = newChannelName;
}

EduStanfordNlpUtilLoggingRerouteChannel *new_EduStanfordNlpUtilLoggingRerouteChannel_initWithId_withId_(id oldChannelName, id newChannelName) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilLoggingRerouteChannel, initWithId_withId_, oldChannelName, newChannelName)
}

EduStanfordNlpUtilLoggingRerouteChannel *create_EduStanfordNlpUtilLoggingRerouteChannel_initWithId_withId_(id oldChannelName, id newChannelName) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilLoggingRerouteChannel, initWithId_withId_, oldChannelName, newChannelName)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilLoggingRerouteChannel)
