//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/logging/Color.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/util/logging/Color.h"
#include "edu/stanford/nlp/util/logging/Redwood.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"

__attribute__((unused)) static void EduStanfordNlpUtilLoggingColor_initWithNSString_withNSString_withInt_(EduStanfordNlpUtilLoggingColor *self, NSString *ansiCode, NSString *__name, jint __ordinal);

__attribute__((unused)) static EduStanfordNlpUtilLoggingColor *new_EduStanfordNlpUtilLoggingColor_initWithNSString_withNSString_withInt_(NSString *ansiCode, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpUtilLoggingColor)

EduStanfordNlpUtilLoggingColor *EduStanfordNlpUtilLoggingColor_values_[9];

@implementation EduStanfordNlpUtilLoggingColor

- (NSString *)applyWithNSString:(NSString *)toColor {
  JavaLangStringBuilder *b = new_JavaLangStringBuilder_init();
  if (JreLoadStatic(EduStanfordNlpUtilLoggingRedwood, supportsAnsi)) {
    (void) [b appendWithNSString:ansiCode_];
  }
  (void) [b appendWithNSString:toColor];
  if (JreLoadStatic(EduStanfordNlpUtilLoggingRedwood, supportsAnsi)) {
    (void) [b appendWithNSString:@"\x1b[0m"];
  }
  return [b description];
}

+ (IOSObjectArray *)values {
  return EduStanfordNlpUtilLoggingColor_values();
}

+ (EduStanfordNlpUtilLoggingColor *)valueOfWithNSString:(NSString *)name {
  return EduStanfordNlpUtilLoggingColor_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[LEduStanfordNlpUtilLoggingColor;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpUtilLoggingColor;", 0x9, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(applyWithNSString:);
  methods[1].selector = @selector(values);
  methods[2].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NONE", "LEduStanfordNlpUtilLoggingColor;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "BLACK", "LEduStanfordNlpUtilLoggingColor;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "WHITE", "LEduStanfordNlpUtilLoggingColor;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "RED", "LEduStanfordNlpUtilLoggingColor;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "GREEN", "LEduStanfordNlpUtilLoggingColor;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "YELLOW", "LEduStanfordNlpUtilLoggingColor;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "BLUE", "LEduStanfordNlpUtilLoggingColor;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
    { "MAGENTA", "LEduStanfordNlpUtilLoggingColor;", .constantValue.asLong = 0, 0x4019, -1, 10, -1, -1 },
    { "CYAN", "LEduStanfordNlpUtilLoggingColor;", .constantValue.asLong = 0, 0x4019, -1, 11, -1, -1 },
    { "ansiCode_", "LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "apply", "LNSString;", "valueOf", &JreEnum(EduStanfordNlpUtilLoggingColor, NONE), &JreEnum(EduStanfordNlpUtilLoggingColor, BLACK), &JreEnum(EduStanfordNlpUtilLoggingColor, WHITE), &JreEnum(EduStanfordNlpUtilLoggingColor, RED), &JreEnum(EduStanfordNlpUtilLoggingColor, GREEN), &JreEnum(EduStanfordNlpUtilLoggingColor, YELLOW), &JreEnum(EduStanfordNlpUtilLoggingColor, BLUE), &JreEnum(EduStanfordNlpUtilLoggingColor, MAGENTA), &JreEnum(EduStanfordNlpUtilLoggingColor, CYAN), "Ljava/lang/Enum<Ledu/stanford/nlp/util/logging/Color;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilLoggingColor = { "Color", "edu.stanford.nlp.util.logging", ptrTable, methods, fields, 7, 0x4011, 3, 10, -1, -1, -1, 12, -1 };
  return &_EduStanfordNlpUtilLoggingColor;
}

+ (void)initialize {
  if (self == [EduStanfordNlpUtilLoggingColor class]) {
    JreEnum(EduStanfordNlpUtilLoggingColor, NONE) = new_EduStanfordNlpUtilLoggingColor_initWithNSString_withNSString_withInt_(@"", @"NONE", 0);
    JreEnum(EduStanfordNlpUtilLoggingColor, BLACK) = new_EduStanfordNlpUtilLoggingColor_initWithNSString_withNSString_withInt_(@"\x1b[30m", @"BLACK", 1);
    JreEnum(EduStanfordNlpUtilLoggingColor, WHITE) = new_EduStanfordNlpUtilLoggingColor_initWithNSString_withNSString_withInt_(@"\x1b[37m", @"WHITE", 2);
    JreEnum(EduStanfordNlpUtilLoggingColor, RED) = new_EduStanfordNlpUtilLoggingColor_initWithNSString_withNSString_withInt_(@"\x1b[31m", @"RED", 3);
    JreEnum(EduStanfordNlpUtilLoggingColor, GREEN) = new_EduStanfordNlpUtilLoggingColor_initWithNSString_withNSString_withInt_(@"\x1b[32m", @"GREEN", 4);
    JreEnum(EduStanfordNlpUtilLoggingColor, YELLOW) = new_EduStanfordNlpUtilLoggingColor_initWithNSString_withNSString_withInt_(@"\x1b[33m", @"YELLOW", 5);
    JreEnum(EduStanfordNlpUtilLoggingColor, BLUE) = new_EduStanfordNlpUtilLoggingColor_initWithNSString_withNSString_withInt_(@"\x1b[34m", @"BLUE", 6);
    JreEnum(EduStanfordNlpUtilLoggingColor, MAGENTA) = new_EduStanfordNlpUtilLoggingColor_initWithNSString_withNSString_withInt_(@"\x1b[35m", @"MAGENTA", 7);
    JreEnum(EduStanfordNlpUtilLoggingColor, CYAN) = new_EduStanfordNlpUtilLoggingColor_initWithNSString_withNSString_withInt_(@"\x1b[36m", @"CYAN", 8);
    J2OBJC_SET_INITIALIZED(EduStanfordNlpUtilLoggingColor)
  }
}

@end

void EduStanfordNlpUtilLoggingColor_initWithNSString_withNSString_withInt_(EduStanfordNlpUtilLoggingColor *self, NSString *ansiCode, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  self->ansiCode_ = ansiCode;
}

EduStanfordNlpUtilLoggingColor *new_EduStanfordNlpUtilLoggingColor_initWithNSString_withNSString_withInt_(NSString *ansiCode, NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilLoggingColor, initWithNSString_withNSString_withInt_, ansiCode, __name, __ordinal)
}

IOSObjectArray *EduStanfordNlpUtilLoggingColor_values() {
  EduStanfordNlpUtilLoggingColor_initialize();
  return [IOSObjectArray arrayWithObjects:EduStanfordNlpUtilLoggingColor_values_ count:9 type:EduStanfordNlpUtilLoggingColor_class_()];
}

EduStanfordNlpUtilLoggingColor *EduStanfordNlpUtilLoggingColor_valueOfWithNSString_(NSString *name) {
  EduStanfordNlpUtilLoggingColor_initialize();
  for (int i = 0; i < 9; i++) {
    EduStanfordNlpUtilLoggingColor *e = EduStanfordNlpUtilLoggingColor_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

EduStanfordNlpUtilLoggingColor *EduStanfordNlpUtilLoggingColor_fromOrdinal(NSUInteger ordinal) {
  EduStanfordNlpUtilLoggingColor_initialize();
  if (ordinal >= 9) {
    return nil;
  }
  return EduStanfordNlpUtilLoggingColor_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilLoggingColor)
