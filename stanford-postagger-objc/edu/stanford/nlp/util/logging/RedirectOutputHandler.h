//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/logging/RedirectOutputHandler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpUtilLoggingRedirectOutputHandler")
#ifdef RESTRICT_EduStanfordNlpUtilLoggingRedirectOutputHandler
#define INCLUDE_ALL_EduStanfordNlpUtilLoggingRedirectOutputHandler 0
#else
#define INCLUDE_ALL_EduStanfordNlpUtilLoggingRedirectOutputHandler 1
#endif
#undef RESTRICT_EduStanfordNlpUtilLoggingRedirectOutputHandler

#if !defined (EduStanfordNlpUtilLoggingRedirectOutputHandler_) && (INCLUDE_ALL_EduStanfordNlpUtilLoggingRedirectOutputHandler || defined(INCLUDE_EduStanfordNlpUtilLoggingRedirectOutputHandler))
#define EduStanfordNlpUtilLoggingRedirectOutputHandler_

#define RESTRICT_EduStanfordNlpUtilLoggingOutputHandler 1
#define INCLUDE_EduStanfordNlpUtilLoggingOutputHandler 1
#include "edu/stanford/nlp/util/logging/OutputHandler.h"

@class IOSObjectArray;
@class JavaLangReflectMethod;
@class JavaLangStringBuilder;
@class JavaUtilLoggingLogger;
@protocol JavaUtilMap;

@interface EduStanfordNlpUtilLoggingRedirectOutputHandler : EduStanfordNlpUtilLoggingOutputHandler {
 @public
  id logger_;
  JavaLangReflectMethod *loggingMethod_;
}

#pragma mark Public

- (instancetype)initWithId:(id)logger
 withJavaLangReflectMethod:(JavaLangReflectMethod *)loggingMethod;

- (instancetype)initWithId:(id)logger
 withJavaLangReflectMethod:(JavaLangReflectMethod *)loggingMethod
           withJavaUtilMap:(id<JavaUtilMap>)channelMapping
                    withId:(id)defaultChannel;

+ (EduStanfordNlpUtilLoggingRedirectOutputHandler *)fromJavaUtilLoggingWithJavaUtilLoggingLogger:(JavaUtilLoggingLogger *)logger;

- (void)printWithNSObjectArray:(IOSObjectArray *)channels
                  withNSString:(NSString *)line;

#pragma mark Protected

- (jboolean)formatChannelWithJavaLangStringBuilder:(JavaLangStringBuilder *)b
                                      withNSString:(NSString *)channelStr
                                            withId:(id)channel;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilLoggingRedirectOutputHandler)

J2OBJC_FIELD_SETTER(EduStanfordNlpUtilLoggingRedirectOutputHandler, logger_, id)
J2OBJC_FIELD_SETTER(EduStanfordNlpUtilLoggingRedirectOutputHandler, loggingMethod_, JavaLangReflectMethod *)

FOUNDATION_EXPORT void EduStanfordNlpUtilLoggingRedirectOutputHandler_initWithId_withJavaLangReflectMethod_(EduStanfordNlpUtilLoggingRedirectOutputHandler *self, id logger, JavaLangReflectMethod *loggingMethod);

FOUNDATION_EXPORT EduStanfordNlpUtilLoggingRedirectOutputHandler *new_EduStanfordNlpUtilLoggingRedirectOutputHandler_initWithId_withJavaLangReflectMethod_(id logger, JavaLangReflectMethod *loggingMethod) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpUtilLoggingRedirectOutputHandler *create_EduStanfordNlpUtilLoggingRedirectOutputHandler_initWithId_withJavaLangReflectMethod_(id logger, JavaLangReflectMethod *loggingMethod);

FOUNDATION_EXPORT void EduStanfordNlpUtilLoggingRedirectOutputHandler_initWithId_withJavaLangReflectMethod_withJavaUtilMap_withId_(EduStanfordNlpUtilLoggingRedirectOutputHandler *self, id logger, JavaLangReflectMethod *loggingMethod, id<JavaUtilMap> channelMapping, id defaultChannel);

FOUNDATION_EXPORT EduStanfordNlpUtilLoggingRedirectOutputHandler *new_EduStanfordNlpUtilLoggingRedirectOutputHandler_initWithId_withJavaLangReflectMethod_withJavaUtilMap_withId_(id logger, JavaLangReflectMethod *loggingMethod, id<JavaUtilMap> channelMapping, id defaultChannel) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpUtilLoggingRedirectOutputHandler *create_EduStanfordNlpUtilLoggingRedirectOutputHandler_initWithId_withJavaLangReflectMethod_withJavaUtilMap_withId_(id logger, JavaLangReflectMethod *loggingMethod, id<JavaUtilMap> channelMapping, id defaultChannel);

FOUNDATION_EXPORT EduStanfordNlpUtilLoggingRedirectOutputHandler *EduStanfordNlpUtilLoggingRedirectOutputHandler_fromJavaUtilLoggingWithJavaUtilLoggingLogger_(JavaUtilLoggingLogger *logger);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilLoggingRedirectOutputHandler)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpUtilLoggingRedirectOutputHandler")
