//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/logging/RedwoodPrintStream.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/util/logging/Redwood.h"
#include "edu/stanford/nlp/util/logging/RedwoodPrintStream.h"
#include "java/io/PrintStream.h"
#include "java/lang/Boolean.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Character.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/StackTraceElement.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Thread.h"
#include "java/util/Locale.h"

@interface EduStanfordNlpUtilLoggingRedwoodPrintStream () {
 @public
  EduStanfordNlpUtilLoggingRedwood_Flag *tag_;
  JavaIoPrintStream *realStream_;
  JavaLangStringBuilder *buffer_;
  jboolean checkForThrowable_;
}

- (void)logWithId:(id)message;

- (void)logfWithNSString:(NSString *)format
       withNSObjectArray:(IOSObjectArray *)args;

- (void)logBWithId:(id)message;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpUtilLoggingRedwoodPrintStream, tag_, EduStanfordNlpUtilLoggingRedwood_Flag *)
J2OBJC_FIELD_SETTER(EduStanfordNlpUtilLoggingRedwoodPrintStream, realStream_, JavaIoPrintStream *)
J2OBJC_FIELD_SETTER(EduStanfordNlpUtilLoggingRedwoodPrintStream, buffer_, JavaLangStringBuilder *)

__attribute__((unused)) static void EduStanfordNlpUtilLoggingRedwoodPrintStream_logWithId_(EduStanfordNlpUtilLoggingRedwoodPrintStream *self, id message);

__attribute__((unused)) static void EduStanfordNlpUtilLoggingRedwoodPrintStream_logfWithNSString_withNSObjectArray_(EduStanfordNlpUtilLoggingRedwoodPrintStream *self, NSString *format, IOSObjectArray *args);

__attribute__((unused)) static void EduStanfordNlpUtilLoggingRedwoodPrintStream_logBWithId_(EduStanfordNlpUtilLoggingRedwoodPrintStream *self, id message);

@implementation EduStanfordNlpUtilLoggingRedwoodPrintStream

- (instancetype)initWithEduStanfordNlpUtilLoggingRedwood_Flag:(EduStanfordNlpUtilLoggingRedwood_Flag *)tag
                                        withJavaIoPrintStream:(JavaIoPrintStream *)realStream {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_initWithEduStanfordNlpUtilLoggingRedwood_Flag_withJavaIoPrintStream_(self, tag, realStream);
  return self;
}

- (void)logWithId:(id)message {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logWithId_(self, message);
}

- (void)logfWithNSString:(NSString *)format
       withNSObjectArray:(IOSObjectArray *)args {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logfWithNSString_withNSObjectArray_(self, format, args);
}

- (void)logBWithId:(id)message {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logBWithId_(self, message);
}

- (void)flush {
  [((JavaIoPrintStream *) nil_chk(realStream_)) flush];
}

- (void)close {
}

- (jboolean)checkError {
  return false;
}

- (void)setError {
}

- (void)clearError {
}

- (void)printWithBoolean:(jboolean)b {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logBWithId_(self, JavaLangBoolean_valueOfWithBoolean_(b));
}

- (void)printWithChar:(jchar)c {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logBWithId_(self, JavaLangCharacter_valueOfWithChar_(c));
}

- (void)printWithInt:(jint)i {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logBWithId_(self, JavaLangInteger_valueOfWithInt_(i));
}

- (void)printWithLong:(jlong)l {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logBWithId_(self, JavaLangLong_valueOfWithLong_(l));
}

- (void)printWithFloat:(jfloat)f {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logBWithId_(self, JavaLangFloat_valueOfWithFloat_(f));
}

- (void)printWithDouble:(jdouble)d {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logBWithId_(self, JavaLangDouble_valueOfWithDouble_(d));
}

- (void)printWithCharArray:(IOSCharArray *)chars {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logBWithId_(self, [NSString stringWithCharacters:chars]);
}

- (void)printWithNSString:(NSString *)s {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logBWithId_(self, s);
}

- (void)printWithId:(id)o {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logBWithId_(self, o);
}

- (void)printlnWithBoolean:(jboolean)b {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logWithId_(self, JavaLangBoolean_valueOfWithBoolean_(b));
}

- (void)printlnWithChar:(jchar)c {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logWithId_(self, JavaLangCharacter_valueOfWithChar_(c));
}

- (void)printlnWithInt:(jint)i {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logWithId_(self, JavaLangInteger_valueOfWithInt_(i));
}

- (void)printlnWithLong:(jlong)l {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logWithId_(self, JavaLangLong_valueOfWithLong_(l));
}

- (void)printlnWithFloat:(jfloat)f {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logWithId_(self, JavaLangFloat_valueOfWithFloat_(f));
}

- (void)printlnWithDouble:(jdouble)d {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logWithId_(self, JavaLangDouble_valueOfWithDouble_(d));
}

- (void)printlnWithCharArray:(IOSCharArray *)chars {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logWithId_(self, [NSString stringWithCharacters:chars]);
}

- (void)printlnWithNSString:(NSString *)s {
  if (checkForThrowable_) {
    jboolean fromThrowable = false;
    {
      IOSObjectArray *a__ = [((JavaLangThread *) nil_chk(JavaLangThread_currentThread())) getStackTrace];
      JavaLangStackTraceElement * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      JavaLangStackTraceElement * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        JavaLangStackTraceElement *e = *b__++;
        if ([((NSString *) nil_chk([((JavaLangStackTraceElement *) nil_chk(e)) getClassName])) isEqual:[NSException_class_() getName]]) {
          fromThrowable = true;
        }
      }
    }
    if (fromThrowable) {
      [((JavaIoPrintStream *) nil_chk(realStream_)) printlnWithNSString:s];
    }
    else {
      EduStanfordNlpUtilLoggingRedwoodPrintStream_logWithId_(self, s);
      checkForThrowable_ = false;
    }
  }
  else {
    EduStanfordNlpUtilLoggingRedwoodPrintStream_logWithId_(self, s);
  }
}

- (void)printlnWithId:(id)o {
  if ([o isKindOfClass:[NSException class]]) {
    [((JavaIoPrintStream *) nil_chk(realStream_)) printlnWithId:o];
    [self flush];
    checkForThrowable_ = true;
  }
  else {
    EduStanfordNlpUtilLoggingRedwoodPrintStream_logWithId_(self, o);
  }
}

- (void)println {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logWithId_(self, @"");
}

- (JavaIoPrintStream *)printfWithNSString:(NSString *)s
                        withNSObjectArray:(IOSObjectArray *)objects {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logfWithNSString_withNSObjectArray_(self, s, objects);
  return self;
}

- (JavaIoPrintStream *)printfWithJavaUtilLocale:(JavaUtilLocale *)locale
                                   withNSString:(NSString *)s
                              withNSObjectArray:(IOSObjectArray *)objects {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logfWithNSString_withNSObjectArray_(self, s, objects);
  return self;
}

- (JavaIoPrintStream *)formatWithNSString:(NSString *)s
                        withNSObjectArray:(IOSObjectArray *)objects {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logfWithNSString_withNSObjectArray_(self, s, objects);
  return self;
}

- (JavaIoPrintStream *)formatWithJavaUtilLocale:(JavaUtilLocale *)locale
                                   withNSString:(NSString *)s
                              withNSObjectArray:(IOSObjectArray *)objects {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logfWithNSString_withNSObjectArray_(self, s, objects);
  return self;
}

- (JavaIoPrintStream *)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)charSequence {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logBWithId_(self, charSequence);
  return self;
}

- (JavaIoPrintStream *)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)charSequence
                                              withInt:(jint)i
                                              withInt:(jint)i1 {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logBWithId_(self, [((id<JavaLangCharSequence>) nil_chk(charSequence)) subSequenceFrom:i to:i1]);
  return self;
}

- (JavaIoPrintStream *)appendWithChar:(jchar)c {
  EduStanfordNlpUtilLoggingRedwoodPrintStream_logBWithId_(self, JavaLangCharacter_valueOfWithChar_(c));
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x22, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x22, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x22, 5, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoPrintStream;", 0x81, 16, 4, -1, -1, -1, -1 },
    { NULL, "LJavaIoPrintStream;", 0x81, 16, 17, -1, -1, -1, -1 },
    { NULL, "LJavaIoPrintStream;", 0x81, 18, 4, -1, -1, -1, -1 },
    { NULL, "LJavaIoPrintStream;", 0x81, 18, 17, -1, -1, -1, -1 },
    { NULL, "LJavaIoPrintStream;", 0x1, 19, 20, -1, -1, -1, -1 },
    { NULL, "LJavaIoPrintStream;", 0x1, 19, 21, -1, -1, -1, -1 },
    { NULL, "LJavaIoPrintStream;", 0x1, 19, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpUtilLoggingRedwood_Flag:withJavaIoPrintStream:);
  methods[1].selector = @selector(logWithId:);
  methods[2].selector = @selector(logfWithNSString:withNSObjectArray:);
  methods[3].selector = @selector(logBWithId:);
  methods[4].selector = @selector(flush);
  methods[5].selector = @selector(close);
  methods[6].selector = @selector(checkError);
  methods[7].selector = @selector(setError);
  methods[8].selector = @selector(clearError);
  methods[9].selector = @selector(printWithBoolean:);
  methods[10].selector = @selector(printWithChar:);
  methods[11].selector = @selector(printWithInt:);
  methods[12].selector = @selector(printWithLong:);
  methods[13].selector = @selector(printWithFloat:);
  methods[14].selector = @selector(printWithDouble:);
  methods[15].selector = @selector(printWithCharArray:);
  methods[16].selector = @selector(printWithNSString:);
  methods[17].selector = @selector(printWithId:);
  methods[18].selector = @selector(printlnWithBoolean:);
  methods[19].selector = @selector(printlnWithChar:);
  methods[20].selector = @selector(printlnWithInt:);
  methods[21].selector = @selector(printlnWithLong:);
  methods[22].selector = @selector(printlnWithFloat:);
  methods[23].selector = @selector(printlnWithDouble:);
  methods[24].selector = @selector(printlnWithCharArray:);
  methods[25].selector = @selector(printlnWithNSString:);
  methods[26].selector = @selector(printlnWithId:);
  methods[27].selector = @selector(println);
  methods[28].selector = @selector(printfWithNSString:withNSObjectArray:);
  methods[29].selector = @selector(printfWithJavaUtilLocale:withNSString:withNSObjectArray:);
  methods[30].selector = @selector(formatWithNSString:withNSObjectArray:);
  methods[31].selector = @selector(formatWithJavaUtilLocale:withNSString:withNSObjectArray:);
  methods[32].selector = @selector(appendWithJavaLangCharSequence:);
  methods[33].selector = @selector(appendWithJavaLangCharSequence:withInt:withInt:);
  methods[34].selector = @selector(appendWithChar:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "tag_", "LEduStanfordNlpUtilLoggingRedwood_Flag;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "realStream_", "LJavaIoPrintStream;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "buffer_", "LJavaLangStringBuilder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "checkForThrowable_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpUtilLoggingRedwood_Flag;LJavaIoPrintStream;", "log", "LNSObject;", "logf", "LNSString;[LNSObject;", "logB", "print", "Z", "C", "I", "J", "F", "D", "[C", "LNSString;", "println", "printf", "LJavaUtilLocale;LNSString;[LNSObject;", "format", "append", "LJavaLangCharSequence;", "LJavaLangCharSequence;II" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilLoggingRedwoodPrintStream = { "RedwoodPrintStream", "edu.stanford.nlp.util.logging", ptrTable, methods, fields, 7, 0x1, 35, 4, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpUtilLoggingRedwoodPrintStream;
}

@end

void EduStanfordNlpUtilLoggingRedwoodPrintStream_initWithEduStanfordNlpUtilLoggingRedwood_Flag_withJavaIoPrintStream_(EduStanfordNlpUtilLoggingRedwoodPrintStream *self, EduStanfordNlpUtilLoggingRedwood_Flag *tag, JavaIoPrintStream *realStream) {
  JavaIoPrintStream_initWithJavaIoOutputStream_(self, realStream);
  self->buffer_ = new_JavaLangStringBuilder_init();
  self->checkForThrowable_ = false;
  self->tag_ = tag;
  self->realStream_ = realStream;
}

EduStanfordNlpUtilLoggingRedwoodPrintStream *new_EduStanfordNlpUtilLoggingRedwoodPrintStream_initWithEduStanfordNlpUtilLoggingRedwood_Flag_withJavaIoPrintStream_(EduStanfordNlpUtilLoggingRedwood_Flag *tag, JavaIoPrintStream *realStream) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilLoggingRedwoodPrintStream, initWithEduStanfordNlpUtilLoggingRedwood_Flag_withJavaIoPrintStream_, tag, realStream)
}

EduStanfordNlpUtilLoggingRedwoodPrintStream *create_EduStanfordNlpUtilLoggingRedwoodPrintStream_initWithEduStanfordNlpUtilLoggingRedwood_Flag_withJavaIoPrintStream_(EduStanfordNlpUtilLoggingRedwood_Flag *tag, JavaIoPrintStream *realStream) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilLoggingRedwoodPrintStream, initWithEduStanfordNlpUtilLoggingRedwood_Flag_withJavaIoPrintStream_, tag, realStream)
}

void EduStanfordNlpUtilLoggingRedwoodPrintStream_logWithId_(EduStanfordNlpUtilLoggingRedwoodPrintStream *self, id message) {
  @synchronized(self) {
    if ([((JavaLangStringBuilder *) nil_chk(self->buffer_)) length] > 0) {
      EduStanfordNlpUtilLoggingRedwoodPrintStream_logBWithId_(self, message);
      EduStanfordNlpUtilLoggingRedwoodPrintStream_logBWithId_(self, @"\n");
    }
    else {
      if (self->tag_ != nil) {
        EduStanfordNlpUtilLoggingRedwood_logWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ self->tag_, message } count:2 type:NSObject_class_()]);
      }
      else {
        EduStanfordNlpUtilLoggingRedwood_logWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ message } count:1 type:NSObject_class_()]);
      }
    }
  }
}

void EduStanfordNlpUtilLoggingRedwoodPrintStream_logfWithNSString_withNSObjectArray_(EduStanfordNlpUtilLoggingRedwoodPrintStream *self, NSString *format, IOSObjectArray *args) {
  @synchronized(self) {
    if (self->tag_ != nil) {
      [((EduStanfordNlpUtilLoggingRedwood_RedwoodChannels *) nil_chk(EduStanfordNlpUtilLoggingRedwood_channelsWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ self->tag_ } count:1 type:NSObject_class_()]))) logfWithNSString:format withNSObjectArray:args];
    }
    else {
      EduStanfordNlpUtilLoggingRedwood_logfWithNSString_withNSObjectArray_(format, args);
    }
  }
}

void EduStanfordNlpUtilLoggingRedwoodPrintStream_logBWithId_(EduStanfordNlpUtilLoggingRedwoodPrintStream *self, id message) {
  @synchronized(self) {
    IOSCharArray *str = [((NSString *) nil_chk([nil_chk(message) description])) toCharArray];
    {
      IOSCharArray *a__ = str;
      jchar const *b__ = ((IOSCharArray *) nil_chk(a__))->buffer_;
      jchar const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        jchar c = *b__++;
        if (c == 0x000a) {
          NSString *msg = [((JavaLangStringBuilder *) nil_chk(self->buffer_)) description];
          if (self->tag_ != nil) {
            EduStanfordNlpUtilLoggingRedwood_logWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ self->tag_, msg } count:2 type:NSObject_class_()]);
          }
          else {
            EduStanfordNlpUtilLoggingRedwood_logWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ msg } count:1 type:NSObject_class_()]);
          }
          self->buffer_ = new_JavaLangStringBuilder_init();
        }
        else {
          (void) [((JavaLangStringBuilder *) nil_chk(self->buffer_)) appendWithNSString:JreStrcat("C", c)];
        }
      }
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilLoggingRedwoodPrintStream)
