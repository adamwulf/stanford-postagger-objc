//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/Lazy.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpUtilLazy")
#ifdef RESTRICT_EduStanfordNlpUtilLazy
#define INCLUDE_ALL_EduStanfordNlpUtilLazy 0
#else
#define INCLUDE_ALL_EduStanfordNlpUtilLazy 1
#endif
#undef RESTRICT_EduStanfordNlpUtilLazy

#if !defined (EduStanfordNlpUtilLazy_) && (INCLUDE_ALL_EduStanfordNlpUtilLazy || defined(INCLUDE_EduStanfordNlpUtilLazy))
#define EduStanfordNlpUtilLazy_

@protocol JavaUtilFunctionSupplier;

@interface EduStanfordNlpUtilLazy : NSObject

#pragma mark Public

- (instancetype)init;

+ (EduStanfordNlpUtilLazy *)fromWithId:(id)definedElement;

- (id)get;

- (id)getIfDefined;

+ (EduStanfordNlpUtilLazy *)ofWithJavaUtilFunctionSupplier:(id<JavaUtilFunctionSupplier>)fn;

#pragma mark Protected

- (id)compute;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilLazy)

FOUNDATION_EXPORT EduStanfordNlpUtilLazy *EduStanfordNlpUtilLazy_fromWithId_(id definedElement);

FOUNDATION_EXPORT EduStanfordNlpUtilLazy *EduStanfordNlpUtilLazy_ofWithJavaUtilFunctionSupplier_(id<JavaUtilFunctionSupplier> fn);

FOUNDATION_EXPORT void EduStanfordNlpUtilLazy_init(EduStanfordNlpUtilLazy *self);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilLazy)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpUtilLazy")
