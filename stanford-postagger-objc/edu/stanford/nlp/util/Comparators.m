//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/Comparators.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/util/ArrayUtils.h"
#include "edu/stanford/nlp/util/Comparators.h"
#include "java/lang/Comparable.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/lang/SafeVarargs.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Arrays.h"
#include "java/util/Comparator.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"

@interface EduStanfordNlpUtilComparators ()

- (instancetype)init;

+ (jint)compareListsWithJavaUtilList:(id<JavaUtilList>)list1
                    withJavaUtilList:(id<JavaUtilList>)list2;

@end

__attribute__((unused)) static void EduStanfordNlpUtilComparators_init(EduStanfordNlpUtilComparators *self);

__attribute__((unused)) static EduStanfordNlpUtilComparators *new_EduStanfordNlpUtilComparators_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilComparators *create_EduStanfordNlpUtilComparators_init();

__attribute__((unused)) static jint EduStanfordNlpUtilComparators_compareListsWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> list1, id<JavaUtilList> list2);

__attribute__((unused)) static IOSObjectArray *EduStanfordNlpUtilComparators__Annotations$0();

@interface EduStanfordNlpUtilComparators_$Lambda$1 : NSObject < JavaUtilComparator > {
 @public
  id<JavaUtilComparator> val$c1_;
  id<JavaUtilComparator> val$c2_;
}

- (jint)compareWithId:(id)o1
               withId:(id)o2;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilComparators_$Lambda$1)

J2OBJC_FIELD_SETTER(EduStanfordNlpUtilComparators_$Lambda$1, val$c1_, id<JavaUtilComparator>)
J2OBJC_FIELD_SETTER(EduStanfordNlpUtilComparators_$Lambda$1, val$c2_, id<JavaUtilComparator>)

__attribute__((unused)) static void EduStanfordNlpUtilComparators_$Lambda$1_initWithJavaUtilComparator_withJavaUtilComparator_(EduStanfordNlpUtilComparators_$Lambda$1 *self, id<JavaUtilComparator> capture$0, id<JavaUtilComparator> capture$1);

__attribute__((unused)) static EduStanfordNlpUtilComparators_$Lambda$1 *new_EduStanfordNlpUtilComparators_$Lambda$1_initWithJavaUtilComparator_withJavaUtilComparator_(id<JavaUtilComparator> capture$0, id<JavaUtilComparator> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilComparators_$Lambda$1 *create_EduStanfordNlpUtilComparators_$Lambda$1_initWithJavaUtilComparator_withJavaUtilComparator_(id<JavaUtilComparator> capture$0, id<JavaUtilComparator> capture$1);

@interface EduStanfordNlpUtilComparators_$Lambda$2 : NSObject < JavaUtilComparator > {
 @public
  id<JavaUtilList> val$c_;
}

- (jint)compareWithId:(id)o1
               withId:(id)o2;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilComparators_$Lambda$2)

J2OBJC_FIELD_SETTER(EduStanfordNlpUtilComparators_$Lambda$2, val$c_, id<JavaUtilList>)

__attribute__((unused)) static void EduStanfordNlpUtilComparators_$Lambda$2_initWithJavaUtilList_(EduStanfordNlpUtilComparators_$Lambda$2 *self, id<JavaUtilList> capture$0);

__attribute__((unused)) static EduStanfordNlpUtilComparators_$Lambda$2 *new_EduStanfordNlpUtilComparators_$Lambda$2_initWithJavaUtilList_(id<JavaUtilList> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilComparators_$Lambda$2 *create_EduStanfordNlpUtilComparators_$Lambda$2_initWithJavaUtilList_(id<JavaUtilList> capture$0);

@interface EduStanfordNlpUtilComparators_$Lambda$3 : NSObject < JavaUtilComparator > {
 @public
  id<JavaUtilComparator> val$c_;
}

- (jint)compareWithId:(id)o1
               withId:(id)o2;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilComparators_$Lambda$3)

J2OBJC_FIELD_SETTER(EduStanfordNlpUtilComparators_$Lambda$3, val$c_, id<JavaUtilComparator>)

__attribute__((unused)) static void EduStanfordNlpUtilComparators_$Lambda$3_initWithJavaUtilComparator_(EduStanfordNlpUtilComparators_$Lambda$3 *self, id<JavaUtilComparator> capture$0);

__attribute__((unused)) static EduStanfordNlpUtilComparators_$Lambda$3 *new_EduStanfordNlpUtilComparators_$Lambda$3_initWithJavaUtilComparator_(id<JavaUtilComparator> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilComparators_$Lambda$3 *create_EduStanfordNlpUtilComparators_$Lambda$3_initWithJavaUtilComparator_(id<JavaUtilComparator> capture$0);

@interface EduStanfordNlpUtilComparators_$Lambda$4 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(id<JavaLangComparable>)a
               withId:(id<JavaLangComparable>)b;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpUtilComparators_$Lambda$4)

inline EduStanfordNlpUtilComparators_$Lambda$4 *EduStanfordNlpUtilComparators_$Lambda$4_get_instance();
static EduStanfordNlpUtilComparators_$Lambda$4 *EduStanfordNlpUtilComparators_$Lambda$4_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpUtilComparators_$Lambda$4, instance, EduStanfordNlpUtilComparators_$Lambda$4 *)

__attribute__((unused)) static void EduStanfordNlpUtilComparators_$Lambda$4_init(EduStanfordNlpUtilComparators_$Lambda$4 *self);

__attribute__((unused)) static EduStanfordNlpUtilComparators_$Lambda$4 *new_EduStanfordNlpUtilComparators_$Lambda$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilComparators_$Lambda$4 *create_EduStanfordNlpUtilComparators_$Lambda$4_init();

@interface EduStanfordNlpUtilComparators_$Lambda$5 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(id<JavaUtilList>)list1
               withId:(id<JavaUtilList>)list2;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpUtilComparators_$Lambda$5)

inline EduStanfordNlpUtilComparators_$Lambda$5 *EduStanfordNlpUtilComparators_$Lambda$5_get_instance();
static EduStanfordNlpUtilComparators_$Lambda$5 *EduStanfordNlpUtilComparators_$Lambda$5_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpUtilComparators_$Lambda$5, instance, EduStanfordNlpUtilComparators_$Lambda$5 *)

__attribute__((unused)) static void EduStanfordNlpUtilComparators_$Lambda$5_init(EduStanfordNlpUtilComparators_$Lambda$5 *self);

__attribute__((unused)) static EduStanfordNlpUtilComparators_$Lambda$5 *new_EduStanfordNlpUtilComparators_$Lambda$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilComparators_$Lambda$5 *create_EduStanfordNlpUtilComparators_$Lambda$5_init();

@interface EduStanfordNlpUtilComparators_$Lambda$6 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(IOSBooleanArray *)a1
               withId:(IOSBooleanArray *)a2;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpUtilComparators_$Lambda$6)

inline EduStanfordNlpUtilComparators_$Lambda$6 *EduStanfordNlpUtilComparators_$Lambda$6_get_instance();
static EduStanfordNlpUtilComparators_$Lambda$6 *EduStanfordNlpUtilComparators_$Lambda$6_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpUtilComparators_$Lambda$6, instance, EduStanfordNlpUtilComparators_$Lambda$6 *)

__attribute__((unused)) static void EduStanfordNlpUtilComparators_$Lambda$6_init(EduStanfordNlpUtilComparators_$Lambda$6 *self);

__attribute__((unused)) static EduStanfordNlpUtilComparators_$Lambda$6 *new_EduStanfordNlpUtilComparators_$Lambda$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilComparators_$Lambda$6 *create_EduStanfordNlpUtilComparators_$Lambda$6_init();

@interface EduStanfordNlpUtilComparators_$Lambda$7 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(IOSObjectArray *)a1
               withId:(IOSObjectArray *)a2;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpUtilComparators_$Lambda$7)

inline EduStanfordNlpUtilComparators_$Lambda$7 *EduStanfordNlpUtilComparators_$Lambda$7_get_instance();
static EduStanfordNlpUtilComparators_$Lambda$7 *EduStanfordNlpUtilComparators_$Lambda$7_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpUtilComparators_$Lambda$7, instance, EduStanfordNlpUtilComparators_$Lambda$7 *)

__attribute__((unused)) static void EduStanfordNlpUtilComparators_$Lambda$7_init(EduStanfordNlpUtilComparators_$Lambda$7 *self);

__attribute__((unused)) static EduStanfordNlpUtilComparators_$Lambda$7 *new_EduStanfordNlpUtilComparators_$Lambda$7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilComparators_$Lambda$7 *create_EduStanfordNlpUtilComparators_$Lambda$7_init();

@interface EduStanfordNlpUtilComparators_$1 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(id)o1
               withId:(id)o2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilComparators_$1)

__attribute__((unused)) static void EduStanfordNlpUtilComparators_$1_init(EduStanfordNlpUtilComparators_$1 *self);

__attribute__((unused)) static EduStanfordNlpUtilComparators_$1 *new_EduStanfordNlpUtilComparators_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilComparators_$1 *create_EduStanfordNlpUtilComparators_$1_init();

@implementation EduStanfordNlpUtilComparators

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpUtilComparators_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (id<JavaUtilComparator>)chainWithJavaUtilComparator:(id<JavaUtilComparator>)c1
                               withJavaUtilComparator:(id<JavaUtilComparator>)c2 {
  return EduStanfordNlpUtilComparators_chainWithJavaUtilComparator_withJavaUtilComparator_(c1, c2);
}

+ (id<JavaUtilComparator>)chainWithJavaUtilList:(id<JavaUtilList>)c {
  return EduStanfordNlpUtilComparators_chainWithJavaUtilList_(c);
}

+ (id<JavaUtilComparator>)chainWithJavaUtilComparatorArray:(IOSObjectArray *)c {
  return EduStanfordNlpUtilComparators_chainWithJavaUtilComparatorArray_(c);
}

+ (id<JavaUtilComparator>)reverseWithJavaUtilComparator:(id<JavaUtilComparator>)c {
  return EduStanfordNlpUtilComparators_reverseWithJavaUtilComparator_(c);
}

+ (id<JavaUtilComparator>)nullSafeNaturalComparator {
  return EduStanfordNlpUtilComparators_nullSafeNaturalComparator();
}

+ (jint)nullSafeCompareWithJavaLangComparable:(id<JavaLangComparable>)one
                       withJavaLangComparable:(id<JavaLangComparable>)two {
  return EduStanfordNlpUtilComparators_nullSafeCompareWithJavaLangComparable_withJavaLangComparable_(one, two);
}

+ (jint)compareListsWithJavaUtilList:(id<JavaUtilList>)list1
                    withJavaUtilList:(id<JavaUtilList>)list2 {
  return EduStanfordNlpUtilComparators_compareListsWithJavaUtilList_withJavaUtilList_(list1, list2);
}

+ (id<JavaUtilComparator>)getListComparator {
  return EduStanfordNlpUtilComparators_getListComparator();
}

+ (id<JavaUtilComparator>)getStringRepresentationComparator {
  return EduStanfordNlpUtilComparators_getStringRepresentationComparator();
}

+ (id<JavaUtilComparator>)getBooleanArrayComparator {
  return EduStanfordNlpUtilComparators_getBooleanArrayComparator();
}

+ (id<JavaUtilComparator>)getArrayComparator {
  return EduStanfordNlpUtilComparators_getArrayComparator();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilComparator;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "LJavaUtilComparator;", 0x9, 0, 3, -1, 4, -1, -1 },
    { NULL, "LJavaUtilComparator;", 0x89, 0, 5, -1, 6, 7, -1 },
    { NULL, "LJavaUtilComparator;", 0x9, 8, 9, -1, 10, -1, -1 },
    { NULL, "LJavaUtilComparator;", 0x9, -1, -1, -1, 11, -1, -1 },
    { NULL, "I", 0x9, 12, 13, -1, 14, -1, -1 },
    { NULL, "I", 0xa, 15, 16, -1, 17, -1, -1 },
    { NULL, "LJavaUtilComparator;", 0x9, -1, -1, -1, 18, -1, -1 },
    { NULL, "LJavaUtilComparator;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilComparator;", 0x9, -1, -1, -1, 19, -1, -1 },
    { NULL, "LJavaUtilComparator;", 0x9, -1, -1, -1, 20, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(chainWithJavaUtilComparator:withJavaUtilComparator:);
  methods[2].selector = @selector(chainWithJavaUtilList:);
  methods[3].selector = @selector(chainWithJavaUtilComparatorArray:);
  methods[4].selector = @selector(reverseWithJavaUtilComparator:);
  methods[5].selector = @selector(nullSafeNaturalComparator);
  methods[6].selector = @selector(nullSafeCompareWithJavaLangComparable:withJavaLangComparable:);
  methods[7].selector = @selector(compareListsWithJavaUtilList:withJavaUtilList:);
  methods[8].selector = @selector(getListComparator);
  methods[9].selector = @selector(getStringRepresentationComparator);
  methods[10].selector = @selector(getBooleanArrayComparator);
  methods[11].selector = @selector(getArrayComparator);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "chain", "LJavaUtilComparator;LJavaUtilComparator;", "<T:Ljava/lang/Object;>(Ljava/util/Comparator<-TT;>;Ljava/util/Comparator<-TT;>;)Ljava/util/Comparator<TT;>;", "LJavaUtilList;", "<T:Ljava/lang/Object;>(Ljava/util/List<Ljava/util/Comparator<-TT;>;>;)Ljava/util/Comparator<TT;>;", "[LJavaUtilComparator;", "<T:Ljava/lang/Object;>([Ljava/util/Comparator<TT;>;)Ljava/util/Comparator<TT;>;", (void *)&EduStanfordNlpUtilComparators__Annotations$0, "reverse", "LJavaUtilComparator;", "<T:Ljava/lang/Object;>(Ljava/util/Comparator<-TT;>;)Ljava/util/Comparator<TT;>;", "<T::Ljava/lang/Comparable<-TT;>;>()Ljava/util/Comparator<TT;>;", "nullSafeCompare", "LJavaLangComparable;LJavaLangComparable;", "<T::Ljava/lang/Comparable<-TT;>;>(TT;TT;)I", "compareLists", "LJavaUtilList;LJavaUtilList;", "<X::Ljava/lang/Comparable<TX;>;>(Ljava/util/List<+TX;>;Ljava/util/List<+TX;>;)I", "<C::Ljava/lang/Comparable;>()Ljava/util/Comparator<Ljava/util/List<TC;>;>;", "()Ljava/util/Comparator<[LZ;>;", "<C::Ljava/lang/Comparable;>()Ljava/util/Comparator<[Ledu/stanford/nlp/util/Comparators$()Ljava/util/Comparator;$C;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilComparators = { "Comparators", "edu.stanford.nlp.util", ptrTable, methods, NULL, 7, 0x1, 12, 0, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpUtilComparators;
}

@end

void EduStanfordNlpUtilComparators_init(EduStanfordNlpUtilComparators *self) {
  NSObject_init(self);
}

EduStanfordNlpUtilComparators *new_EduStanfordNlpUtilComparators_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilComparators, init)
}

EduStanfordNlpUtilComparators *create_EduStanfordNlpUtilComparators_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilComparators, init)
}

id<JavaUtilComparator> EduStanfordNlpUtilComparators_chainWithJavaUtilComparator_withJavaUtilComparator_(id<JavaUtilComparator> c1, id<JavaUtilComparator> c2) {
  EduStanfordNlpUtilComparators_initialize();
  return new_EduStanfordNlpUtilComparators_$Lambda$1_initWithJavaUtilComparator_withJavaUtilComparator_(c1, c2);
}

id<JavaUtilComparator> EduStanfordNlpUtilComparators_chainWithJavaUtilList_(id<JavaUtilList> c) {
  EduStanfordNlpUtilComparators_initialize();
  return new_EduStanfordNlpUtilComparators_$Lambda$2_initWithJavaUtilList_(c);
}

id<JavaUtilComparator> EduStanfordNlpUtilComparators_chainWithJavaUtilComparatorArray_(IOSObjectArray *c) {
  EduStanfordNlpUtilComparators_initialize();
  return EduStanfordNlpUtilComparators_chainWithJavaUtilList_(JavaUtilArrays_asListWithNSObjectArray_(c));
}

id<JavaUtilComparator> EduStanfordNlpUtilComparators_reverseWithJavaUtilComparator_(id<JavaUtilComparator> c) {
  EduStanfordNlpUtilComparators_initialize();
  return new_EduStanfordNlpUtilComparators_$Lambda$3_initWithJavaUtilComparator_(c);
}

id<JavaUtilComparator> EduStanfordNlpUtilComparators_nullSafeNaturalComparator() {
  EduStanfordNlpUtilComparators_initialize();
  return JreLoadStatic(EduStanfordNlpUtilComparators_$Lambda$4, instance);
}

jint EduStanfordNlpUtilComparators_nullSafeCompareWithJavaLangComparable_withJavaLangComparable_(id<JavaLangComparable> one, id<JavaLangComparable> two) {
  EduStanfordNlpUtilComparators_initialize();
  if (one == nil) {
    if (two == nil) {
      return 0;
    }
    return -1;
  }
  else {
    if (two == nil) {
      return 1;
    }
    return [one compareToWithId:two];
  }
}

jint EduStanfordNlpUtilComparators_compareListsWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> list1, id<JavaUtilList> list2) {
  EduStanfordNlpUtilComparators_initialize();
  if (list1 == nil || list2 == nil) {
    @throw new_JavaLangIllegalArgumentException_init();
  }
  jint size1 = [list1 size];
  jint size2 = [list2 size];
  jint size = JavaLangMath_minWithInt_withInt_(size1, size2);
  for (jint i = 0; i < size; i++) {
    jint c = [((id<JavaLangComparable>) nil_chk([list1 getWithInt:i])) compareToWithId:[list2 getWithInt:i]];
    if (c != 0) return c;
  }
  if (size1 < size2) return -1;
  if (size1 > size2) return 1;
  return 0;
}

id<JavaUtilComparator> EduStanfordNlpUtilComparators_getListComparator() {
  EduStanfordNlpUtilComparators_initialize();
  return JreLoadStatic(EduStanfordNlpUtilComparators_$Lambda$5, instance);
}

id<JavaUtilComparator> EduStanfordNlpUtilComparators_getStringRepresentationComparator() {
  EduStanfordNlpUtilComparators_initialize();
  return new_EduStanfordNlpUtilComparators_$1_init();
}

id<JavaUtilComparator> EduStanfordNlpUtilComparators_getBooleanArrayComparator() {
  EduStanfordNlpUtilComparators_initialize();
  return JreLoadStatic(EduStanfordNlpUtilComparators_$Lambda$6, instance);
}

id<JavaUtilComparator> EduStanfordNlpUtilComparators_getArrayComparator() {
  EduStanfordNlpUtilComparators_initialize();
  return JreLoadStatic(EduStanfordNlpUtilComparators_$Lambda$7, instance);
}

IOSObjectArray *EduStanfordNlpUtilComparators__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangSafeVarargs() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilComparators)

@implementation EduStanfordNlpUtilComparators_$Lambda$1

- (jint)compareWithId:(id)o1
               withId:(id)o2 {
  jint x = [((id<JavaUtilComparator>) nil_chk(val$c1_)) compareWithId:o1 withId:o2];
  return (x == 0 ? [((id<JavaUtilComparator>) nil_chk(val$c2_)) compareWithId:o1 withId:o2] : x);
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

@end

void EduStanfordNlpUtilComparators_$Lambda$1_initWithJavaUtilComparator_withJavaUtilComparator_(EduStanfordNlpUtilComparators_$Lambda$1 *self, id<JavaUtilComparator> capture$0, id<JavaUtilComparator> capture$1) {
  self->val$c1_ = capture$0;
  self->val$c2_ = capture$1;
  NSObject_init(self);
}

EduStanfordNlpUtilComparators_$Lambda$1 *new_EduStanfordNlpUtilComparators_$Lambda$1_initWithJavaUtilComparator_withJavaUtilComparator_(id<JavaUtilComparator> capture$0, id<JavaUtilComparator> capture$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilComparators_$Lambda$1, initWithJavaUtilComparator_withJavaUtilComparator_, capture$0, capture$1)
}

EduStanfordNlpUtilComparators_$Lambda$1 *create_EduStanfordNlpUtilComparators_$Lambda$1_initWithJavaUtilComparator_withJavaUtilComparator_(id<JavaUtilComparator> capture$0, id<JavaUtilComparator> capture$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilComparators_$Lambda$1, initWithJavaUtilComparator_withJavaUtilComparator_, capture$0, capture$1)
}

@implementation EduStanfordNlpUtilComparators_$Lambda$2

- (jint)compareWithId:(id)o1
               withId:(id)o2 {
  jint x = 0;
  id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(val$c_)) iterator];
  while (x == 0 && [((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    x = [((id<JavaUtilComparator>) nil_chk([((id<JavaUtilIterator>) nil_chk(it)) next])) compareWithId:o1 withId:o2];
  }
  return x;
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

@end

void EduStanfordNlpUtilComparators_$Lambda$2_initWithJavaUtilList_(EduStanfordNlpUtilComparators_$Lambda$2 *self, id<JavaUtilList> capture$0) {
  self->val$c_ = capture$0;
  NSObject_init(self);
}

EduStanfordNlpUtilComparators_$Lambda$2 *new_EduStanfordNlpUtilComparators_$Lambda$2_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilComparators_$Lambda$2, initWithJavaUtilList_, capture$0)
}

EduStanfordNlpUtilComparators_$Lambda$2 *create_EduStanfordNlpUtilComparators_$Lambda$2_initWithJavaUtilList_(id<JavaUtilList> capture$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilComparators_$Lambda$2, initWithJavaUtilList_, capture$0)
}

@implementation EduStanfordNlpUtilComparators_$Lambda$3

- (jint)compareWithId:(id)o1
               withId:(id)o2 {
  return -[((id<JavaUtilComparator>) nil_chk(val$c_)) compareWithId:o1 withId:o2];
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

@end

void EduStanfordNlpUtilComparators_$Lambda$3_initWithJavaUtilComparator_(EduStanfordNlpUtilComparators_$Lambda$3 *self, id<JavaUtilComparator> capture$0) {
  self->val$c_ = capture$0;
  NSObject_init(self);
}

EduStanfordNlpUtilComparators_$Lambda$3 *new_EduStanfordNlpUtilComparators_$Lambda$3_initWithJavaUtilComparator_(id<JavaUtilComparator> capture$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilComparators_$Lambda$3, initWithJavaUtilComparator_, capture$0)
}

EduStanfordNlpUtilComparators_$Lambda$3 *create_EduStanfordNlpUtilComparators_$Lambda$3_initWithJavaUtilComparator_(id<JavaUtilComparator> capture$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilComparators_$Lambda$3, initWithJavaUtilComparator_, capture$0)
}

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpUtilComparators_$Lambda$4)

@implementation EduStanfordNlpUtilComparators_$Lambda$4

- (jint)compareWithId:(id<JavaLangComparable>)a
               withId:(id<JavaLangComparable>)b {
  return EduStanfordNlpUtilComparators_nullSafeCompareWithJavaLangComparable_withJavaLangComparable_(a, b);
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [EduStanfordNlpUtilComparators_$Lambda$4 class]) {
    EduStanfordNlpUtilComparators_$Lambda$4_instance = new_EduStanfordNlpUtilComparators_$Lambda$4_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpUtilComparators_$Lambda$4)
  }
}

@end

void EduStanfordNlpUtilComparators_$Lambda$4_init(EduStanfordNlpUtilComparators_$Lambda$4 *self) {
  NSObject_init(self);
}

EduStanfordNlpUtilComparators_$Lambda$4 *new_EduStanfordNlpUtilComparators_$Lambda$4_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilComparators_$Lambda$4, init)
}

EduStanfordNlpUtilComparators_$Lambda$4 *create_EduStanfordNlpUtilComparators_$Lambda$4_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilComparators_$Lambda$4, init)
}

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpUtilComparators_$Lambda$5)

@implementation EduStanfordNlpUtilComparators_$Lambda$5

- (jint)compareWithId:(id<JavaUtilList>)list1
               withId:(id<JavaUtilList>)list2 {
  return EduStanfordNlpUtilComparators_compareListsWithJavaUtilList_withJavaUtilList_(list1, list2);
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [EduStanfordNlpUtilComparators_$Lambda$5 class]) {
    EduStanfordNlpUtilComparators_$Lambda$5_instance = new_EduStanfordNlpUtilComparators_$Lambda$5_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpUtilComparators_$Lambda$5)
  }
}

@end

void EduStanfordNlpUtilComparators_$Lambda$5_init(EduStanfordNlpUtilComparators_$Lambda$5 *self) {
  NSObject_init(self);
}

EduStanfordNlpUtilComparators_$Lambda$5 *new_EduStanfordNlpUtilComparators_$Lambda$5_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilComparators_$Lambda$5, init)
}

EduStanfordNlpUtilComparators_$Lambda$5 *create_EduStanfordNlpUtilComparators_$Lambda$5_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilComparators_$Lambda$5, init)
}

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpUtilComparators_$Lambda$6)

@implementation EduStanfordNlpUtilComparators_$Lambda$6

- (jint)compareWithId:(IOSBooleanArray *)a1
               withId:(IOSBooleanArray *)a2 {
  return EduStanfordNlpUtilArrayUtils_compareBooleanArraysWithBooleanArray_withBooleanArray_(a1, a2);
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [EduStanfordNlpUtilComparators_$Lambda$6 class]) {
    EduStanfordNlpUtilComparators_$Lambda$6_instance = new_EduStanfordNlpUtilComparators_$Lambda$6_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpUtilComparators_$Lambda$6)
  }
}

@end

void EduStanfordNlpUtilComparators_$Lambda$6_init(EduStanfordNlpUtilComparators_$Lambda$6 *self) {
  NSObject_init(self);
}

EduStanfordNlpUtilComparators_$Lambda$6 *new_EduStanfordNlpUtilComparators_$Lambda$6_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilComparators_$Lambda$6, init)
}

EduStanfordNlpUtilComparators_$Lambda$6 *create_EduStanfordNlpUtilComparators_$Lambda$6_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilComparators_$Lambda$6, init)
}

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpUtilComparators_$Lambda$7)

@implementation EduStanfordNlpUtilComparators_$Lambda$7

- (jint)compareWithId:(IOSObjectArray *)a1
               withId:(IOSObjectArray *)a2 {
  return EduStanfordNlpUtilArrayUtils_compareArraysWithJavaLangComparableArray_withJavaLangComparableArray_(a1, a2);
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [EduStanfordNlpUtilComparators_$Lambda$7 class]) {
    EduStanfordNlpUtilComparators_$Lambda$7_instance = new_EduStanfordNlpUtilComparators_$Lambda$7_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpUtilComparators_$Lambda$7)
  }
}

@end

void EduStanfordNlpUtilComparators_$Lambda$7_init(EduStanfordNlpUtilComparators_$Lambda$7 *self) {
  NSObject_init(self);
}

EduStanfordNlpUtilComparators_$Lambda$7 *new_EduStanfordNlpUtilComparators_$Lambda$7_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilComparators_$Lambda$7, init)
}

EduStanfordNlpUtilComparators_$Lambda$7 *create_EduStanfordNlpUtilComparators_$Lambda$7_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilComparators_$Lambda$7, init)
}

@implementation EduStanfordNlpUtilComparators_$1

- (jint)compareWithId:(id)o1
               withId:(id)o2 {
  return [((NSString *) nil_chk([nil_chk(o1) description])) compareToWithId:[nil_chk(o2) description]];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpUtilComparators_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(compareWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LNSObject;LNSObject;", "LEduStanfordNlpUtilComparators;", "getStringRepresentationComparator" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilComparators_$1 = { "", "edu.stanford.nlp.util", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, 3, -1, -1 };
  return &_EduStanfordNlpUtilComparators_$1;
}

@end

void EduStanfordNlpUtilComparators_$1_init(EduStanfordNlpUtilComparators_$1 *self) {
  NSObject_init(self);
}

EduStanfordNlpUtilComparators_$1 *new_EduStanfordNlpUtilComparators_$1_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilComparators_$1, init)
}

EduStanfordNlpUtilComparators_$1 *create_EduStanfordNlpUtilComparators_$1_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilComparators_$1, init)
}
