//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/Timing.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpUtilTiming")
#ifdef RESTRICT_EduStanfordNlpUtilTiming
#define INCLUDE_ALL_EduStanfordNlpUtilTiming 0
#else
#define INCLUDE_ALL_EduStanfordNlpUtilTiming 1
#endif
#undef RESTRICT_EduStanfordNlpUtilTiming

#if !defined (EduStanfordNlpUtilTiming_) && (INCLUDE_ALL_EduStanfordNlpUtilTiming || defined(INCLUDE_EduStanfordNlpUtilTiming))
#define EduStanfordNlpUtilTiming_

@class JavaIoPrintStream;
@class JavaIoPrintWriter;

@interface EduStanfordNlpUtilTiming : NSObject

#pragma mark Public

- (instancetype)init;

- (void)doingWithNSString:(NSString *)str;

- (void)done;

- (void)doneWithNSString:(NSString *)msg;

- (void)endWithNSString:(NSString *)msg;

+ (void)endDoing;

+ (void)endDoingWithNSString:(NSString *)msg;

+ (jlong)endTime;

+ (jlong)endTimeWithNSString:(NSString *)str;

+ (jlong)endTimeWithNSString:(NSString *)str
       withJavaIoPrintStream:(JavaIoPrintStream *)stream;

- (jlong)report;

- (jlong)reportWithNSString:(NSString *)str;

- (jlong)reportWithNSString:(NSString *)str
      withJavaIoPrintStream:(JavaIoPrintStream *)stream;

- (jlong)reportWithNSString:(NSString *)str
      withJavaIoPrintWriter:(JavaIoPrintWriter *)writer;

- (jlong)reportNano;

- (jlong)restart;

- (jlong)restartWithNSString:(NSString *)str;

- (jlong)restartWithNSString:(NSString *)str
       withJavaIoPrintStream:(JavaIoPrintStream *)stream;

- (jlong)restartWithNSString:(NSString *)str
       withJavaIoPrintWriter:(JavaIoPrintWriter *)writer;

- (void)start;

- (void)startWithNSString:(NSString *)msg;

- (void)startWithNSString:(NSString *)msg
    withJavaIoPrintStream:(JavaIoPrintStream *)stream;

+ (void)startDoingWithNSString:(NSString *)str;

+ (void)startTime;

- (jlong)stop;

- (jlong)stopWithNSString:(NSString *)str;

- (jlong)stopWithNSString:(NSString *)str
    withJavaIoPrintStream:(JavaIoPrintStream *)stream;

- (jlong)stopWithNSString:(NSString *)str
    withJavaIoPrintWriter:(JavaIoPrintWriter *)writer;

+ (jlong)tick;

+ (jlong)tickWithNSString:(NSString *)str;

+ (jlong)tickWithNSString:(NSString *)str
    withJavaIoPrintStream:(JavaIoPrintStream *)stream;

+ (NSString *)toMilliSecondsStringWithLong:(jlong)elapsed;

- (NSString *)toSecondsString;

+ (NSString *)toSecondsStringWithLong:(jlong)elapsed;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpUtilTiming)

FOUNDATION_EXPORT void EduStanfordNlpUtilTiming_init(EduStanfordNlpUtilTiming *self);

FOUNDATION_EXPORT EduStanfordNlpUtilTiming *new_EduStanfordNlpUtilTiming_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpUtilTiming *create_EduStanfordNlpUtilTiming_init();

FOUNDATION_EXPORT NSString *EduStanfordNlpUtilTiming_toSecondsStringWithLong_(jlong elapsed);

FOUNDATION_EXPORT NSString *EduStanfordNlpUtilTiming_toMilliSecondsStringWithLong_(jlong elapsed);

FOUNDATION_EXPORT void EduStanfordNlpUtilTiming_startTime();

FOUNDATION_EXPORT jlong EduStanfordNlpUtilTiming_endTime();

FOUNDATION_EXPORT jlong EduStanfordNlpUtilTiming_endTimeWithNSString_withJavaIoPrintStream_(NSString *str, JavaIoPrintStream *stream);

FOUNDATION_EXPORT jlong EduStanfordNlpUtilTiming_endTimeWithNSString_(NSString *str);

FOUNDATION_EXPORT void EduStanfordNlpUtilTiming_startDoingWithNSString_(NSString *str);

FOUNDATION_EXPORT void EduStanfordNlpUtilTiming_endDoing();

FOUNDATION_EXPORT void EduStanfordNlpUtilTiming_endDoingWithNSString_(NSString *msg);

FOUNDATION_EXPORT jlong EduStanfordNlpUtilTiming_tick();

FOUNDATION_EXPORT jlong EduStanfordNlpUtilTiming_tickWithNSString_withJavaIoPrintStream_(NSString *str, JavaIoPrintStream *stream);

FOUNDATION_EXPORT jlong EduStanfordNlpUtilTiming_tickWithNSString_(NSString *str);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilTiming)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpUtilTiming")
