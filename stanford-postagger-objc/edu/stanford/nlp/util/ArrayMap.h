//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/ArrayMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpUtilArrayMap")
#ifdef RESTRICT_EduStanfordNlpUtilArrayMap
#define INCLUDE_ALL_EduStanfordNlpUtilArrayMap 0
#else
#define INCLUDE_ALL_EduStanfordNlpUtilArrayMap 1
#endif
#undef RESTRICT_EduStanfordNlpUtilArrayMap

#if !defined (EduStanfordNlpUtilArrayMap_) && (INCLUDE_ALL_EduStanfordNlpUtilArrayMap || defined(INCLUDE_EduStanfordNlpUtilArrayMap))
#define EduStanfordNlpUtilArrayMap_

#define RESTRICT_JavaUtilAbstractMap 1
#define INCLUDE_JavaUtilAbstractMap 1
#include "java/util/AbstractMap.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSObjectArray;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface EduStanfordNlpUtilArrayMap : JavaUtilAbstractMap < JavaIoSerializable > {
 @public
  jint hashCodeCache_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)capacity;

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)keys
                    withNSObjectArray:(IOSObjectArray *)values;

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)m;

- (void)clear;

- (id<JavaUtilSet>)entrySet;

- (jboolean)isEqual:(id)o;

- (id)getWithId:(id)key;

- (NSUInteger)hash;

- (jboolean)isEmpty;

+ (EduStanfordNlpUtilArrayMap *)newArrayMap OBJC_METHOD_FAMILY_NONE;

+ (EduStanfordNlpUtilArrayMap *)newArrayMapWithInt:(jint)capacity OBJC_METHOD_FAMILY_NONE;

- (id)putWithId:(id)key
         withId:(id)val;

- (id)removeWithId:(id)key;

- (jint)size;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilArrayMap)

FOUNDATION_EXPORT void EduStanfordNlpUtilArrayMap_init(EduStanfordNlpUtilArrayMap *self);

FOUNDATION_EXPORT EduStanfordNlpUtilArrayMap *new_EduStanfordNlpUtilArrayMap_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpUtilArrayMap *create_EduStanfordNlpUtilArrayMap_init();

FOUNDATION_EXPORT void EduStanfordNlpUtilArrayMap_initWithInt_(EduStanfordNlpUtilArrayMap *self, jint capacity);

FOUNDATION_EXPORT EduStanfordNlpUtilArrayMap *new_EduStanfordNlpUtilArrayMap_initWithInt_(jint capacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpUtilArrayMap *create_EduStanfordNlpUtilArrayMap_initWithInt_(jint capacity);

FOUNDATION_EXPORT void EduStanfordNlpUtilArrayMap_initWithJavaUtilMap_(EduStanfordNlpUtilArrayMap *self, id<JavaUtilMap> m);

FOUNDATION_EXPORT EduStanfordNlpUtilArrayMap *new_EduStanfordNlpUtilArrayMap_initWithJavaUtilMap_(id<JavaUtilMap> m) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpUtilArrayMap *create_EduStanfordNlpUtilArrayMap_initWithJavaUtilMap_(id<JavaUtilMap> m);

FOUNDATION_EXPORT void EduStanfordNlpUtilArrayMap_initWithNSObjectArray_withNSObjectArray_(EduStanfordNlpUtilArrayMap *self, IOSObjectArray *keys, IOSObjectArray *values);

FOUNDATION_EXPORT EduStanfordNlpUtilArrayMap *new_EduStanfordNlpUtilArrayMap_initWithNSObjectArray_withNSObjectArray_(IOSObjectArray *keys, IOSObjectArray *values) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpUtilArrayMap *create_EduStanfordNlpUtilArrayMap_initWithNSObjectArray_withNSObjectArray_(IOSObjectArray *keys, IOSObjectArray *values);

FOUNDATION_EXPORT EduStanfordNlpUtilArrayMap *EduStanfordNlpUtilArrayMap_newArrayMap();

FOUNDATION_EXPORT EduStanfordNlpUtilArrayMap *EduStanfordNlpUtilArrayMap_newArrayMapWithInt_(jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilArrayMap)

#endif

#if !defined (EduStanfordNlpUtilArrayMap_Entry_) && (INCLUDE_ALL_EduStanfordNlpUtilArrayMap || defined(INCLUDE_EduStanfordNlpUtilArrayMap_Entry))
#define EduStanfordNlpUtilArrayMap_Entry_

#define RESTRICT_JavaUtilMap 1
#define INCLUDE_JavaUtilMap_Entry 1
#include "java/util/Map.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@interface EduStanfordNlpUtilArrayMap_Entry : NSObject < JavaUtilMap_Entry, JavaIoSerializable >

#pragma mark Public

- (jboolean)isEqual:(id)o;

- (id)getKey;

- (id)getValue;

- (NSUInteger)hash;

- (id)setValueWithId:(id)o;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithId:(id)key
                    withId:(id)value;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilArrayMap_Entry)

FOUNDATION_EXPORT void EduStanfordNlpUtilArrayMap_Entry_initWithId_withId_(EduStanfordNlpUtilArrayMap_Entry *self, id key, id value);

FOUNDATION_EXPORT EduStanfordNlpUtilArrayMap_Entry *new_EduStanfordNlpUtilArrayMap_Entry_initWithId_withId_(id key, id value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpUtilArrayMap_Entry *create_EduStanfordNlpUtilArrayMap_Entry_initWithId_withId_(id key, id value);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilArrayMap_Entry)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpUtilArrayMap")
