//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/IntTriple.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/util/IntTriple.h"
#include "edu/stanford/nlp/util/IntTuple.h"

inline jlong EduStanfordNlpUtilIntTriple_get_serialVersionUID();
#define EduStanfordNlpUtilIntTriple_serialVersionUID -3744404627253652799LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpUtilIntTriple, serialVersionUID, jlong)

@implementation EduStanfordNlpUtilIntTriple

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpUtilIntTriple_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)src
                    withInt:(jint)mid
                    withInt:(jint)trgt {
  EduStanfordNlpUtilIntTriple_initWithInt_withInt_withInt_(self, src, mid, trgt);
  return self;
}

- (EduStanfordNlpUtilIntTuple *)getCopy {
  EduStanfordNlpUtilIntTriple *nT = new_EduStanfordNlpUtilIntTriple_initWithInt_withInt_withInt_(IOSIntArray_Get(nil_chk(elements_), 0), IOSIntArray_Get(elements_, 1), IOSIntArray_Get(elements_, 2));
  return nT;
}

- (jint)getSource {
  return IOSIntArray_Get(nil_chk(elements_), 0);
}

- (jint)getTarget {
  return IOSIntArray_Get(nil_chk(elements_), 2);
}

- (jint)getMiddle {
  return IOSIntArray_Get(nil_chk(elements_), 1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpUtilIntTuple;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithInt:withInt:withInt:);
  methods[2].selector = @selector(getCopy);
  methods[3].selector = @selector(getSource);
  methods[4].selector = @selector(getTarget);
  methods[5].selector = @selector(getMiddle);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpUtilIntTriple_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "III" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilIntTriple = { "IntTriple", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0x1, 6, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpUtilIntTriple;
}

@end

void EduStanfordNlpUtilIntTriple_init(EduStanfordNlpUtilIntTriple *self) {
  EduStanfordNlpUtilIntTuple_initWithInt_(self, 3);
}

EduStanfordNlpUtilIntTriple *new_EduStanfordNlpUtilIntTriple_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilIntTriple, init)
}

EduStanfordNlpUtilIntTriple *create_EduStanfordNlpUtilIntTriple_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilIntTriple, init)
}

void EduStanfordNlpUtilIntTriple_initWithInt_withInt_withInt_(EduStanfordNlpUtilIntTriple *self, jint src, jint mid, jint trgt) {
  EduStanfordNlpUtilIntTuple_initWithInt_(self, 3);
  *IOSIntArray_GetRef(nil_chk(self->elements_), 0) = src;
  *IOSIntArray_GetRef(self->elements_, 1) = mid;
  *IOSIntArray_GetRef(self->elements_, 2) = trgt;
}

EduStanfordNlpUtilIntTriple *new_EduStanfordNlpUtilIntTriple_initWithInt_withInt_withInt_(jint src, jint mid, jint trgt) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilIntTriple, initWithInt_withInt_withInt_, src, mid, trgt)
}

EduStanfordNlpUtilIntTriple *create_EduStanfordNlpUtilIntTriple_initWithInt_withInt_withInt_(jint src, jint mid, jint trgt) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilIntTriple, initWithInt_withInt_withInt_, src, mid, trgt)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilIntTriple)
