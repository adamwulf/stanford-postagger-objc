//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/MapFactory.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/util/ArrayMap.h"
#include "edu/stanford/nlp/util/ArraySet.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "edu/stanford/nlp/util/MapFactory.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/IdentityHashMap.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/LinkedHashSet.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/TreeMap.h"
#include "java/util/TreeSet.h"
#include "java/util/WeakHashMap.h"
#include "java/util/concurrent/ConcurrentHashMap.h"

inline jlong EduStanfordNlpUtilMapFactory_get_serialVersionUID();
#define EduStanfordNlpUtilMapFactory_serialVersionUID 4529666940763477360LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpUtilMapFactory, serialVersionUID, jlong)

inline EduStanfordNlpUtilMapFactory *EduStanfordNlpUtilMapFactory_get_WEAK_HASH_MAP_FACTORY();
static EduStanfordNlpUtilMapFactory *EduStanfordNlpUtilMapFactory_WEAK_HASH_MAP_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpUtilMapFactory, WEAK_HASH_MAP_FACTORY, EduStanfordNlpUtilMapFactory *)

inline EduStanfordNlpUtilMapFactory *EduStanfordNlpUtilMapFactory_get_TREE_MAP_FACTORY();
static EduStanfordNlpUtilMapFactory *EduStanfordNlpUtilMapFactory_TREE_MAP_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpUtilMapFactory, TREE_MAP_FACTORY, EduStanfordNlpUtilMapFactory *)

inline EduStanfordNlpUtilMapFactory *EduStanfordNlpUtilMapFactory_get_LINKED_HASH_MAP_FACTORY();
static EduStanfordNlpUtilMapFactory *EduStanfordNlpUtilMapFactory_LINKED_HASH_MAP_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpUtilMapFactory, LINKED_HASH_MAP_FACTORY, EduStanfordNlpUtilMapFactory *)

inline EduStanfordNlpUtilMapFactory *EduStanfordNlpUtilMapFactory_get_ARRAY_MAP_FACTORY();
static EduStanfordNlpUtilMapFactory *EduStanfordNlpUtilMapFactory_ARRAY_MAP_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpUtilMapFactory, ARRAY_MAP_FACTORY, EduStanfordNlpUtilMapFactory *)

@interface EduStanfordNlpUtilMapFactory_HashMapFactory : EduStanfordNlpUtilMapFactory

- (id<JavaUtilMap>)newMap OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilMap>)newMapWithInt:(jint)initCapacity OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilSet>)newSet OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilSet>)newSetWithJavaUtilCollection:(id<JavaUtilCollection>)init_ OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map;

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map
                                 withInt:(jint)initCapacity;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilMapFactory_HashMapFactory)

inline jlong EduStanfordNlpUtilMapFactory_HashMapFactory_get_serialVersionUID();
#define EduStanfordNlpUtilMapFactory_HashMapFactory_serialVersionUID -9222344631596580863LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpUtilMapFactory_HashMapFactory, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpUtilMapFactory_HashMapFactory_init(EduStanfordNlpUtilMapFactory_HashMapFactory *self);

__attribute__((unused)) static EduStanfordNlpUtilMapFactory_HashMapFactory *new_EduStanfordNlpUtilMapFactory_HashMapFactory_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMapFactory_HashMapFactory *create_EduStanfordNlpUtilMapFactory_HashMapFactory_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilMapFactory_HashMapFactory)

@interface EduStanfordNlpUtilMapFactory_IdentityHashMapFactory : EduStanfordNlpUtilMapFactory

- (id<JavaUtilMap>)newMap OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilMap>)newMapWithInt:(jint)initCapacity OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilSet>)newSet OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilSet>)newSetWithJavaUtilCollection:(id<JavaUtilCollection>)init_ OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map;

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map
                                 withInt:(jint)initCapacity;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilMapFactory_IdentityHashMapFactory)

inline jlong EduStanfordNlpUtilMapFactory_IdentityHashMapFactory_get_serialVersionUID();
#define EduStanfordNlpUtilMapFactory_IdentityHashMapFactory_serialVersionUID -9222344631596580863LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpUtilMapFactory_IdentityHashMapFactory, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpUtilMapFactory_IdentityHashMapFactory_init(EduStanfordNlpUtilMapFactory_IdentityHashMapFactory *self);

__attribute__((unused)) static EduStanfordNlpUtilMapFactory_IdentityHashMapFactory *new_EduStanfordNlpUtilMapFactory_IdentityHashMapFactory_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMapFactory_IdentityHashMapFactory *create_EduStanfordNlpUtilMapFactory_IdentityHashMapFactory_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilMapFactory_IdentityHashMapFactory)

@interface EduStanfordNlpUtilMapFactory_WeakHashMapFactory : EduStanfordNlpUtilMapFactory

- (id<JavaUtilMap>)newMap OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilMap>)newMapWithInt:(jint)initCapacity OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilSet>)newSet OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilSet>)newSetWithJavaUtilCollection:(id<JavaUtilCollection>)init_ OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map;

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map
                                 withInt:(jint)initCapacity;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilMapFactory_WeakHashMapFactory)

inline jlong EduStanfordNlpUtilMapFactory_WeakHashMapFactory_get_serialVersionUID();
#define EduStanfordNlpUtilMapFactory_WeakHashMapFactory_serialVersionUID 4790014244304941000LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpUtilMapFactory_WeakHashMapFactory, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpUtilMapFactory_WeakHashMapFactory_init(EduStanfordNlpUtilMapFactory_WeakHashMapFactory *self);

__attribute__((unused)) static EduStanfordNlpUtilMapFactory_WeakHashMapFactory *new_EduStanfordNlpUtilMapFactory_WeakHashMapFactory_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMapFactory_WeakHashMapFactory *create_EduStanfordNlpUtilMapFactory_WeakHashMapFactory_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilMapFactory_WeakHashMapFactory)

@interface EduStanfordNlpUtilMapFactory_TreeMapFactory : EduStanfordNlpUtilMapFactory {
 @public
  id<JavaUtilComparator> comparator_;
}

- (instancetype)init;

- (instancetype)initWithJavaUtilComparator:(id<JavaUtilComparator>)comparator;

- (id<JavaUtilMap>)newMap OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilMap>)newMapWithInt:(jint)initCapacity OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilSet>)newSet OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilSet>)newSetWithJavaUtilCollection:(id<JavaUtilCollection>)init_ OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map;

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map
                                 withInt:(jint)initCapacity;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilMapFactory_TreeMapFactory)

J2OBJC_FIELD_SETTER(EduStanfordNlpUtilMapFactory_TreeMapFactory, comparator_, id<JavaUtilComparator>)

inline jlong EduStanfordNlpUtilMapFactory_TreeMapFactory_get_serialVersionUID();
#define EduStanfordNlpUtilMapFactory_TreeMapFactory_serialVersionUID -9138736068025818670LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpUtilMapFactory_TreeMapFactory, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpUtilMapFactory_TreeMapFactory_init(EduStanfordNlpUtilMapFactory_TreeMapFactory *self);

__attribute__((unused)) static EduStanfordNlpUtilMapFactory_TreeMapFactory *new_EduStanfordNlpUtilMapFactory_TreeMapFactory_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMapFactory_TreeMapFactory *create_EduStanfordNlpUtilMapFactory_TreeMapFactory_init();

__attribute__((unused)) static void EduStanfordNlpUtilMapFactory_TreeMapFactory_initWithJavaUtilComparator_(EduStanfordNlpUtilMapFactory_TreeMapFactory *self, id<JavaUtilComparator> comparator);

__attribute__((unused)) static EduStanfordNlpUtilMapFactory_TreeMapFactory *new_EduStanfordNlpUtilMapFactory_TreeMapFactory_initWithJavaUtilComparator_(id<JavaUtilComparator> comparator) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMapFactory_TreeMapFactory *create_EduStanfordNlpUtilMapFactory_TreeMapFactory_initWithJavaUtilComparator_(id<JavaUtilComparator> comparator);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilMapFactory_TreeMapFactory)

@interface EduStanfordNlpUtilMapFactory_LinkedHashMapFactory : EduStanfordNlpUtilMapFactory

- (id<JavaUtilMap>)newMap OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilMap>)newMapWithInt:(jint)initCapacity OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilSet>)newSet OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilSet>)newSetWithJavaUtilCollection:(id<JavaUtilCollection>)init_ OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map;

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map
                                 withInt:(jint)initCapacity;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilMapFactory_LinkedHashMapFactory)

inline jlong EduStanfordNlpUtilMapFactory_LinkedHashMapFactory_get_serialVersionUID();
#define EduStanfordNlpUtilMapFactory_LinkedHashMapFactory_serialVersionUID -9138736068025818671LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpUtilMapFactory_LinkedHashMapFactory, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpUtilMapFactory_LinkedHashMapFactory_init(EduStanfordNlpUtilMapFactory_LinkedHashMapFactory *self);

__attribute__((unused)) static EduStanfordNlpUtilMapFactory_LinkedHashMapFactory *new_EduStanfordNlpUtilMapFactory_LinkedHashMapFactory_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMapFactory_LinkedHashMapFactory *create_EduStanfordNlpUtilMapFactory_LinkedHashMapFactory_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilMapFactory_LinkedHashMapFactory)

@interface EduStanfordNlpUtilMapFactory_ArrayMapFactory : EduStanfordNlpUtilMapFactory

- (id<JavaUtilMap>)newMap OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilMap>)newMapWithInt:(jint)initCapacity OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilSet>)newSet OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilSet>)newSetWithJavaUtilCollection:(id<JavaUtilCollection>)init_ OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map;

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map
                                 withInt:(jint)initCapacity;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilMapFactory_ArrayMapFactory)

inline jlong EduStanfordNlpUtilMapFactory_ArrayMapFactory_get_serialVersionUID();
#define EduStanfordNlpUtilMapFactory_ArrayMapFactory_serialVersionUID -5855812734715185523LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpUtilMapFactory_ArrayMapFactory, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpUtilMapFactory_ArrayMapFactory_init(EduStanfordNlpUtilMapFactory_ArrayMapFactory *self);

__attribute__((unused)) static EduStanfordNlpUtilMapFactory_ArrayMapFactory *new_EduStanfordNlpUtilMapFactory_ArrayMapFactory_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMapFactory_ArrayMapFactory *create_EduStanfordNlpUtilMapFactory_ArrayMapFactory_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilMapFactory_ArrayMapFactory)

@interface EduStanfordNlpUtilMapFactory_ConcurrentMapFactory : EduStanfordNlpUtilMapFactory

- (id<JavaUtilMap>)newMap OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilMap>)newMapWithInt:(jint)initCapacity OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilSet>)newSet OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilSet>)newSetWithJavaUtilCollection:(id<JavaUtilCollection>)init_ OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map;

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map
                                 withInt:(jint)initCapacity;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilMapFactory_ConcurrentMapFactory)

inline jlong EduStanfordNlpUtilMapFactory_ConcurrentMapFactory_get_serialVersionUID();
#define EduStanfordNlpUtilMapFactory_ConcurrentMapFactory_serialVersionUID -5855812734715185523LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpUtilMapFactory_ConcurrentMapFactory, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpUtilMapFactory_ConcurrentMapFactory_init(EduStanfordNlpUtilMapFactory_ConcurrentMapFactory *self);

__attribute__((unused)) static EduStanfordNlpUtilMapFactory_ConcurrentMapFactory *new_EduStanfordNlpUtilMapFactory_ConcurrentMapFactory_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMapFactory_ConcurrentMapFactory *create_EduStanfordNlpUtilMapFactory_ConcurrentMapFactory_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilMapFactory_ConcurrentMapFactory)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpUtilMapFactory)

EduStanfordNlpUtilMapFactory *EduStanfordNlpUtilMapFactory_HASH_MAP_FACTORY;
EduStanfordNlpUtilMapFactory *EduStanfordNlpUtilMapFactory_IDENTITY_HASH_MAP_FACTORY;
EduStanfordNlpUtilMapFactory *EduStanfordNlpUtilMapFactory_CONCURRENT_MAP_FACTORY;

@implementation EduStanfordNlpUtilMapFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpUtilMapFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (EduStanfordNlpUtilMapFactory *)hashMapFactory {
  return EduStanfordNlpUtilMapFactory_hashMapFactory();
}

+ (EduStanfordNlpUtilMapFactory *)identityHashMapFactory {
  return EduStanfordNlpUtilMapFactory_identityHashMapFactory();
}

+ (EduStanfordNlpUtilMapFactory *)weakHashMapFactory {
  return EduStanfordNlpUtilMapFactory_weakHashMapFactory();
}

+ (EduStanfordNlpUtilMapFactory *)treeMapFactory {
  return EduStanfordNlpUtilMapFactory_treeMapFactory();
}

+ (EduStanfordNlpUtilMapFactory *)treeMapFactoryWithJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  return EduStanfordNlpUtilMapFactory_treeMapFactoryWithJavaUtilComparator_(comparator);
}

+ (EduStanfordNlpUtilMapFactory *)linkedHashMapFactory {
  return EduStanfordNlpUtilMapFactory_linkedHashMapFactory();
}

+ (EduStanfordNlpUtilMapFactory *)arrayMapFactory {
  return EduStanfordNlpUtilMapFactory_arrayMapFactory();
}

- (id<JavaUtilMap>)newMap {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<JavaUtilMap>)newMapWithInt:(jint)initCapacity {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<JavaUtilSet>)newSet {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<JavaUtilSet>)newSetWithJavaUtilCollection:(id<JavaUtilCollection>)init_ {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map
                                 withInt:(jint)initCapacity {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpUtilMapFactory;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, "LEduStanfordNlpUtilMapFactory;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, "LEduStanfordNlpUtilMapFactory;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, "LEduStanfordNlpUtilMapFactory;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, "LEduStanfordNlpUtilMapFactory;", 0x9, 1, 2, -1, 3, -1, -1 },
    { NULL, "LEduStanfordNlpUtilMapFactory;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, "LEduStanfordNlpUtilMapFactory;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x401, -1, -1, -1, 4, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x401, 5, 6, -1, 7, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x401, -1, -1, -1, 8, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x401, 9, 10, -1, 11, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x401, 12, 13, -1, 14, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x401, 12, 15, -1, 16, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(hashMapFactory);
  methods[2].selector = @selector(identityHashMapFactory);
  methods[3].selector = @selector(weakHashMapFactory);
  methods[4].selector = @selector(treeMapFactory);
  methods[5].selector = @selector(treeMapFactoryWithJavaUtilComparator:);
  methods[6].selector = @selector(linkedHashMapFactory);
  methods[7].selector = @selector(arrayMapFactory);
  methods[8].selector = @selector(newMap);
  methods[9].selector = @selector(newMapWithInt:);
  methods[10].selector = @selector(newSet);
  methods[11].selector = @selector(newSetWithJavaUtilCollection:);
  methods[12].selector = @selector(setMapWithJavaUtilMap:);
  methods[13].selector = @selector(setMapWithJavaUtilMap:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpUtilMapFactory_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "HASH_MAP_FACTORY", "LEduStanfordNlpUtilMapFactory;", .constantValue.asLong = 0, 0x19, -1, 17, -1, -1 },
    { "IDENTITY_HASH_MAP_FACTORY", "LEduStanfordNlpUtilMapFactory;", .constantValue.asLong = 0, 0x19, -1, 18, -1, -1 },
    { "WEAK_HASH_MAP_FACTORY", "LEduStanfordNlpUtilMapFactory;", .constantValue.asLong = 0, 0x1a, -1, 19, -1, -1 },
    { "TREE_MAP_FACTORY", "LEduStanfordNlpUtilMapFactory;", .constantValue.asLong = 0, 0x1a, -1, 20, -1, -1 },
    { "LINKED_HASH_MAP_FACTORY", "LEduStanfordNlpUtilMapFactory;", .constantValue.asLong = 0, 0x1a, -1, 21, -1, -1 },
    { "ARRAY_MAP_FACTORY", "LEduStanfordNlpUtilMapFactory;", .constantValue.asLong = 0, 0x1a, -1, 22, -1, -1 },
    { "CONCURRENT_MAP_FACTORY", "LEduStanfordNlpUtilMapFactory;", .constantValue.asLong = 0, 0x19, -1, 23, -1, -1 },
  };
  static const void *ptrTable[] = { "<K:Ljava/lang/Object;V:Ljava/lang/Object;>()Ledu/stanford/nlp/util/MapFactory<TK;TV;>;", "treeMapFactory", "LJavaUtilComparator;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/Comparator<-TK;>;)Ledu/stanford/nlp/util/MapFactory<TK;TV;>;", "()Ljava/util/Map<TK;TV;>;", "newMap", "I", "(I)Ljava/util/Map<TK;TV;>;", "()Ljava/util/Set<TK;>;", "newSet", "LJavaUtilCollection;", "(Ljava/util/Collection<TK;>;)Ljava/util/Set<TK;>;", "setMap", "LJavaUtilMap;", "<K1:Ljava/lang/Object;V1:Ljava/lang/Object;>(Ljava/util/Map<TK1;TV1;>;)Ljava/util/Map<TK1;TV1;>;", "LJavaUtilMap;I", "<K1:Ljava/lang/Object;V1:Ljava/lang/Object;>(Ljava/util/Map<TK1;TV1;>;I)Ljava/util/Map<TK1;TV1;>;", &EduStanfordNlpUtilMapFactory_HASH_MAP_FACTORY, &EduStanfordNlpUtilMapFactory_IDENTITY_HASH_MAP_FACTORY, &EduStanfordNlpUtilMapFactory_WEAK_HASH_MAP_FACTORY, &EduStanfordNlpUtilMapFactory_TREE_MAP_FACTORY, &EduStanfordNlpUtilMapFactory_LINKED_HASH_MAP_FACTORY, &EduStanfordNlpUtilMapFactory_ARRAY_MAP_FACTORY, &EduStanfordNlpUtilMapFactory_CONCURRENT_MAP_FACTORY, "LEduStanfordNlpUtilMapFactory_HashMapFactory;LEduStanfordNlpUtilMapFactory_IdentityHashMapFactory;LEduStanfordNlpUtilMapFactory_WeakHashMapFactory;LEduStanfordNlpUtilMapFactory_TreeMapFactory;LEduStanfordNlpUtilMapFactory_LinkedHashMapFactory;LEduStanfordNlpUtilMapFactory_ArrayMapFactory;LEduStanfordNlpUtilMapFactory_ConcurrentMapFactory;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/lang/Object;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilMapFactory = { "MapFactory", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0x401, 14, 8, -1, 24, -1, 25, -1 };
  return &_EduStanfordNlpUtilMapFactory;
}

+ (void)initialize {
  if (self == [EduStanfordNlpUtilMapFactory class]) {
    EduStanfordNlpUtilMapFactory_HASH_MAP_FACTORY = new_EduStanfordNlpUtilMapFactory_HashMapFactory_init();
    EduStanfordNlpUtilMapFactory_IDENTITY_HASH_MAP_FACTORY = new_EduStanfordNlpUtilMapFactory_IdentityHashMapFactory_init();
    EduStanfordNlpUtilMapFactory_WEAK_HASH_MAP_FACTORY = new_EduStanfordNlpUtilMapFactory_WeakHashMapFactory_init();
    EduStanfordNlpUtilMapFactory_TREE_MAP_FACTORY = new_EduStanfordNlpUtilMapFactory_TreeMapFactory_init();
    EduStanfordNlpUtilMapFactory_LINKED_HASH_MAP_FACTORY = new_EduStanfordNlpUtilMapFactory_LinkedHashMapFactory_init();
    EduStanfordNlpUtilMapFactory_ARRAY_MAP_FACTORY = new_EduStanfordNlpUtilMapFactory_ArrayMapFactory_init();
    EduStanfordNlpUtilMapFactory_CONCURRENT_MAP_FACTORY = new_EduStanfordNlpUtilMapFactory_ConcurrentMapFactory_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpUtilMapFactory)
  }
}

@end

void EduStanfordNlpUtilMapFactory_init(EduStanfordNlpUtilMapFactory *self) {
  NSObject_init(self);
}

EduStanfordNlpUtilMapFactory *EduStanfordNlpUtilMapFactory_hashMapFactory() {
  EduStanfordNlpUtilMapFactory_initialize();
  return EduStanfordNlpUtilMapFactory_HASH_MAP_FACTORY;
}

EduStanfordNlpUtilMapFactory *EduStanfordNlpUtilMapFactory_identityHashMapFactory() {
  EduStanfordNlpUtilMapFactory_initialize();
  return EduStanfordNlpUtilMapFactory_IDENTITY_HASH_MAP_FACTORY;
}

EduStanfordNlpUtilMapFactory *EduStanfordNlpUtilMapFactory_weakHashMapFactory() {
  EduStanfordNlpUtilMapFactory_initialize();
  return EduStanfordNlpUtilMapFactory_WEAK_HASH_MAP_FACTORY;
}

EduStanfordNlpUtilMapFactory *EduStanfordNlpUtilMapFactory_treeMapFactory() {
  EduStanfordNlpUtilMapFactory_initialize();
  return EduStanfordNlpUtilMapFactory_TREE_MAP_FACTORY;
}

EduStanfordNlpUtilMapFactory *EduStanfordNlpUtilMapFactory_treeMapFactoryWithJavaUtilComparator_(id<JavaUtilComparator> comparator) {
  EduStanfordNlpUtilMapFactory_initialize();
  return new_EduStanfordNlpUtilMapFactory_TreeMapFactory_initWithJavaUtilComparator_(comparator);
}

EduStanfordNlpUtilMapFactory *EduStanfordNlpUtilMapFactory_linkedHashMapFactory() {
  EduStanfordNlpUtilMapFactory_initialize();
  return EduStanfordNlpUtilMapFactory_LINKED_HASH_MAP_FACTORY;
}

EduStanfordNlpUtilMapFactory *EduStanfordNlpUtilMapFactory_arrayMapFactory() {
  EduStanfordNlpUtilMapFactory_initialize();
  return EduStanfordNlpUtilMapFactory_ARRAY_MAP_FACTORY;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilMapFactory)

@implementation EduStanfordNlpUtilMapFactory_HashMapFactory

- (id<JavaUtilMap>)newMap {
  return EduStanfordNlpUtilGenerics_newHashMap();
}

- (id<JavaUtilMap>)newMapWithInt:(jint)initCapacity {
  return EduStanfordNlpUtilGenerics_newHashMapWithInt_(initCapacity);
}

- (id<JavaUtilSet>)newSet {
  return EduStanfordNlpUtilGenerics_newHashSet();
}

- (id<JavaUtilSet>)newSetWithJavaUtilCollection:(id<JavaUtilCollection>)init_ {
  return EduStanfordNlpUtilGenerics_newHashSetWithJavaUtilCollection_(init_);
}

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map {
  map = EduStanfordNlpUtilGenerics_newHashMap();
  return map;
}

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map
                                 withInt:(jint)initCapacity {
  map = EduStanfordNlpUtilGenerics_newHashMapWithInt_(initCapacity);
  return map;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpUtilMapFactory_HashMapFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 4, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 8, 9, -1, 10, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 8, 11, -1, 12, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(newMap);
  methods[1].selector = @selector(newMapWithInt:);
  methods[2].selector = @selector(newSet);
  methods[3].selector = @selector(newSetWithJavaUtilCollection:);
  methods[4].selector = @selector(setMapWithJavaUtilMap:);
  methods[5].selector = @selector(setMapWithJavaUtilMap:withInt:);
  methods[6].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpUtilMapFactory_HashMapFactory_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Map<TK;TV;>;", "newMap", "I", "(I)Ljava/util/Map<TK;TV;>;", "()Ljava/util/Set<TK;>;", "newSet", "LJavaUtilCollection;", "(Ljava/util/Collection<TK;>;)Ljava/util/Set<TK;>;", "setMap", "LJavaUtilMap;", "<K1:Ljava/lang/Object;V1:Ljava/lang/Object;>(Ljava/util/Map<TK1;TV1;>;)Ljava/util/Map<TK1;TV1;>;", "LJavaUtilMap;I", "<K1:Ljava/lang/Object;V1:Ljava/lang/Object;>(Ljava/util/Map<TK1;TV1;>;I)Ljava/util/Map<TK1;TV1;>;", "LEduStanfordNlpUtilMapFactory;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ledu/stanford/nlp/util/MapFactory<TK;TV;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilMapFactory_HashMapFactory = { "HashMapFactory", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0xa, 7, 1, 13, -1, -1, 14, -1 };
  return &_EduStanfordNlpUtilMapFactory_HashMapFactory;
}

@end

void EduStanfordNlpUtilMapFactory_HashMapFactory_init(EduStanfordNlpUtilMapFactory_HashMapFactory *self) {
  EduStanfordNlpUtilMapFactory_init(self);
}

EduStanfordNlpUtilMapFactory_HashMapFactory *new_EduStanfordNlpUtilMapFactory_HashMapFactory_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMapFactory_HashMapFactory, init)
}

EduStanfordNlpUtilMapFactory_HashMapFactory *create_EduStanfordNlpUtilMapFactory_HashMapFactory_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMapFactory_HashMapFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilMapFactory_HashMapFactory)

@implementation EduStanfordNlpUtilMapFactory_IdentityHashMapFactory

- (id<JavaUtilMap>)newMap {
  return new_JavaUtilIdentityHashMap_init();
}

- (id<JavaUtilMap>)newMapWithInt:(jint)initCapacity {
  return new_JavaUtilIdentityHashMap_initWithInt_(initCapacity);
}

- (id<JavaUtilSet>)newSet {
  return JavaUtilCollections_newSetFromMapWithJavaUtilMap_(new_JavaUtilIdentityHashMap_init());
}

- (id<JavaUtilSet>)newSetWithJavaUtilCollection:(id<JavaUtilCollection>)init_ {
  id<JavaUtilSet> set = JavaUtilCollections_newSetFromMapWithJavaUtilMap_(new_JavaUtilIdentityHashMap_init());
  [((id<JavaUtilSet>) nil_chk(set)) addAllWithJavaUtilCollection:init_];
  return set;
}

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map {
  map = new_JavaUtilIdentityHashMap_init();
  return map;
}

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map
                                 withInt:(jint)initCapacity {
  map = new_JavaUtilIdentityHashMap_initWithInt_(initCapacity);
  return map;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpUtilMapFactory_IdentityHashMapFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 4, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 8, 9, -1, 10, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 8, 11, -1, 12, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(newMap);
  methods[1].selector = @selector(newMapWithInt:);
  methods[2].selector = @selector(newSet);
  methods[3].selector = @selector(newSetWithJavaUtilCollection:);
  methods[4].selector = @selector(setMapWithJavaUtilMap:);
  methods[5].selector = @selector(setMapWithJavaUtilMap:withInt:);
  methods[6].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpUtilMapFactory_IdentityHashMapFactory_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Map<TK;TV;>;", "newMap", "I", "(I)Ljava/util/Map<TK;TV;>;", "()Ljava/util/Set<TK;>;", "newSet", "LJavaUtilCollection;", "(Ljava/util/Collection<TK;>;)Ljava/util/Set<TK;>;", "setMap", "LJavaUtilMap;", "<K1:Ljava/lang/Object;V1:Ljava/lang/Object;>(Ljava/util/Map<TK1;TV1;>;)Ljava/util/Map<TK1;TV1;>;", "LJavaUtilMap;I", "<K1:Ljava/lang/Object;V1:Ljava/lang/Object;>(Ljava/util/Map<TK1;TV1;>;I)Ljava/util/Map<TK1;TV1;>;", "LEduStanfordNlpUtilMapFactory;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ledu/stanford/nlp/util/MapFactory<TK;TV;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilMapFactory_IdentityHashMapFactory = { "IdentityHashMapFactory", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0xa, 7, 1, 13, -1, -1, 14, -1 };
  return &_EduStanfordNlpUtilMapFactory_IdentityHashMapFactory;
}

@end

void EduStanfordNlpUtilMapFactory_IdentityHashMapFactory_init(EduStanfordNlpUtilMapFactory_IdentityHashMapFactory *self) {
  EduStanfordNlpUtilMapFactory_init(self);
}

EduStanfordNlpUtilMapFactory_IdentityHashMapFactory *new_EduStanfordNlpUtilMapFactory_IdentityHashMapFactory_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMapFactory_IdentityHashMapFactory, init)
}

EduStanfordNlpUtilMapFactory_IdentityHashMapFactory *create_EduStanfordNlpUtilMapFactory_IdentityHashMapFactory_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMapFactory_IdentityHashMapFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilMapFactory_IdentityHashMapFactory)

@implementation EduStanfordNlpUtilMapFactory_WeakHashMapFactory

- (id<JavaUtilMap>)newMap {
  return new_JavaUtilWeakHashMap_init();
}

- (id<JavaUtilMap>)newMapWithInt:(jint)initCapacity {
  return new_JavaUtilWeakHashMap_initWithInt_(initCapacity);
}

- (id<JavaUtilSet>)newSet {
  return JavaUtilCollections_newSetFromMapWithJavaUtilMap_(new_JavaUtilWeakHashMap_init());
}

- (id<JavaUtilSet>)newSetWithJavaUtilCollection:(id<JavaUtilCollection>)init_ {
  id<JavaUtilSet> set = JavaUtilCollections_newSetFromMapWithJavaUtilMap_(new_JavaUtilWeakHashMap_init());
  [((id<JavaUtilSet>) nil_chk(set)) addAllWithJavaUtilCollection:init_];
  return set;
}

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map {
  map = new_JavaUtilWeakHashMap_init();
  return map;
}

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map
                                 withInt:(jint)initCapacity {
  map = new_JavaUtilWeakHashMap_initWithInt_(initCapacity);
  return map;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpUtilMapFactory_WeakHashMapFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 4, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 8, 9, -1, 10, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 8, 11, -1, 12, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(newMap);
  methods[1].selector = @selector(newMapWithInt:);
  methods[2].selector = @selector(newSet);
  methods[3].selector = @selector(newSetWithJavaUtilCollection:);
  methods[4].selector = @selector(setMapWithJavaUtilMap:);
  methods[5].selector = @selector(setMapWithJavaUtilMap:withInt:);
  methods[6].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpUtilMapFactory_WeakHashMapFactory_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Map<TK;TV;>;", "newMap", "I", "(I)Ljava/util/Map<TK;TV;>;", "()Ljava/util/Set<TK;>;", "newSet", "LJavaUtilCollection;", "(Ljava/util/Collection<TK;>;)Ljava/util/Set<TK;>;", "setMap", "LJavaUtilMap;", "<K1:Ljava/lang/Object;V1:Ljava/lang/Object;>(Ljava/util/Map<TK1;TV1;>;)Ljava/util/Map<TK1;TV1;>;", "LJavaUtilMap;I", "<K1:Ljava/lang/Object;V1:Ljava/lang/Object;>(Ljava/util/Map<TK1;TV1;>;I)Ljava/util/Map<TK1;TV1;>;", "LEduStanfordNlpUtilMapFactory;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ledu/stanford/nlp/util/MapFactory<TK;TV;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilMapFactory_WeakHashMapFactory = { "WeakHashMapFactory", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0xa, 7, 1, 13, -1, -1, 14, -1 };
  return &_EduStanfordNlpUtilMapFactory_WeakHashMapFactory;
}

@end

void EduStanfordNlpUtilMapFactory_WeakHashMapFactory_init(EduStanfordNlpUtilMapFactory_WeakHashMapFactory *self) {
  EduStanfordNlpUtilMapFactory_init(self);
}

EduStanfordNlpUtilMapFactory_WeakHashMapFactory *new_EduStanfordNlpUtilMapFactory_WeakHashMapFactory_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMapFactory_WeakHashMapFactory, init)
}

EduStanfordNlpUtilMapFactory_WeakHashMapFactory *create_EduStanfordNlpUtilMapFactory_WeakHashMapFactory_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMapFactory_WeakHashMapFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilMapFactory_WeakHashMapFactory)

@implementation EduStanfordNlpUtilMapFactory_TreeMapFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpUtilMapFactory_TreeMapFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  EduStanfordNlpUtilMapFactory_TreeMapFactory_initWithJavaUtilComparator_(self, comparator);
  return self;
}

- (id<JavaUtilMap>)newMap {
  return comparator_ == nil ? new_JavaUtilTreeMap_init() : new_JavaUtilTreeMap_initWithJavaUtilComparator_(comparator_);
}

- (id<JavaUtilMap>)newMapWithInt:(jint)initCapacity {
  return [self newMap];
}

- (id<JavaUtilSet>)newSet {
  return comparator_ == nil ? new_JavaUtilTreeSet_init() : new_JavaUtilTreeSet_initWithJavaUtilComparator_(comparator_);
}

- (id<JavaUtilSet>)newSetWithJavaUtilCollection:(id<JavaUtilCollection>)init_ {
  return new_JavaUtilTreeSet_initWithJavaUtilCollection_(init_);
}

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map {
  if (comparator_ == nil) {
    @throw new_JavaLangUnsupportedOperationException_init();
  }
  map = new_JavaUtilTreeMap_init();
  return map;
}

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map
                                 withInt:(jint)initCapacity {
  if (comparator_ == nil) {
    @throw new_JavaLangUnsupportedOperationException_init();
  }
  map = new_JavaUtilTreeMap_init();
  return map;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 6, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, 7, 8, -1, 9, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 10, 11, -1, 12, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 10, 13, -1, 14, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithJavaUtilComparator:);
  methods[2].selector = @selector(newMap);
  methods[3].selector = @selector(newMapWithInt:);
  methods[4].selector = @selector(newSet);
  methods[5].selector = @selector(newSetWithJavaUtilCollection:);
  methods[6].selector = @selector(setMapWithJavaUtilMap:);
  methods[7].selector = @selector(setMapWithJavaUtilMap:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpUtilMapFactory_TreeMapFactory_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "comparator_", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x12, -1, -1, 15, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilComparator;", "(Ljava/util/Comparator<-TK;>;)V", "()Ljava/util/Map<TK;TV;>;", "newMap", "I", "(I)Ljava/util/Map<TK;TV;>;", "()Ljava/util/Set<TK;>;", "newSet", "LJavaUtilCollection;", "(Ljava/util/Collection<TK;>;)Ljava/util/Set<TK;>;", "setMap", "LJavaUtilMap;", "<K1:Ljava/lang/Object;V1:Ljava/lang/Object;>(Ljava/util/Map<TK1;TV1;>;)Ljava/util/Map<TK1;TV1;>;", "LJavaUtilMap;I", "<K1:Ljava/lang/Object;V1:Ljava/lang/Object;>(Ljava/util/Map<TK1;TV1;>;I)Ljava/util/Map<TK1;TV1;>;", "Ljava/util/Comparator<-TK;>;", "LEduStanfordNlpUtilMapFactory;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ledu/stanford/nlp/util/MapFactory<TK;TV;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilMapFactory_TreeMapFactory = { "TreeMapFactory", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0xa, 8, 2, 16, -1, -1, 17, -1 };
  return &_EduStanfordNlpUtilMapFactory_TreeMapFactory;
}

@end

void EduStanfordNlpUtilMapFactory_TreeMapFactory_init(EduStanfordNlpUtilMapFactory_TreeMapFactory *self) {
  EduStanfordNlpUtilMapFactory_init(self);
  self->comparator_ = nil;
}

EduStanfordNlpUtilMapFactory_TreeMapFactory *new_EduStanfordNlpUtilMapFactory_TreeMapFactory_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMapFactory_TreeMapFactory, init)
}

EduStanfordNlpUtilMapFactory_TreeMapFactory *create_EduStanfordNlpUtilMapFactory_TreeMapFactory_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMapFactory_TreeMapFactory, init)
}

void EduStanfordNlpUtilMapFactory_TreeMapFactory_initWithJavaUtilComparator_(EduStanfordNlpUtilMapFactory_TreeMapFactory *self, id<JavaUtilComparator> comparator) {
  EduStanfordNlpUtilMapFactory_init(self);
  self->comparator_ = comparator;
}

EduStanfordNlpUtilMapFactory_TreeMapFactory *new_EduStanfordNlpUtilMapFactory_TreeMapFactory_initWithJavaUtilComparator_(id<JavaUtilComparator> comparator) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMapFactory_TreeMapFactory, initWithJavaUtilComparator_, comparator)
}

EduStanfordNlpUtilMapFactory_TreeMapFactory *create_EduStanfordNlpUtilMapFactory_TreeMapFactory_initWithJavaUtilComparator_(id<JavaUtilComparator> comparator) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMapFactory_TreeMapFactory, initWithJavaUtilComparator_, comparator)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilMapFactory_TreeMapFactory)

@implementation EduStanfordNlpUtilMapFactory_LinkedHashMapFactory

- (id<JavaUtilMap>)newMap {
  return new_JavaUtilLinkedHashMap_init();
}

- (id<JavaUtilMap>)newMapWithInt:(jint)initCapacity {
  return [self newMap];
}

- (id<JavaUtilSet>)newSet {
  return new_JavaUtilLinkedHashSet_init();
}

- (id<JavaUtilSet>)newSetWithJavaUtilCollection:(id<JavaUtilCollection>)init_ {
  return new_JavaUtilLinkedHashSet_initWithJavaUtilCollection_(init_);
}

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map {
  map = new_JavaUtilLinkedHashMap_init();
  return map;
}

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map
                                 withInt:(jint)initCapacity {
  map = new_JavaUtilLinkedHashMap_init();
  return map;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpUtilMapFactory_LinkedHashMapFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 4, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 8, 9, -1, 10, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 8, 11, -1, 12, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(newMap);
  methods[1].selector = @selector(newMapWithInt:);
  methods[2].selector = @selector(newSet);
  methods[3].selector = @selector(newSetWithJavaUtilCollection:);
  methods[4].selector = @selector(setMapWithJavaUtilMap:);
  methods[5].selector = @selector(setMapWithJavaUtilMap:withInt:);
  methods[6].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpUtilMapFactory_LinkedHashMapFactory_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Map<TK;TV;>;", "newMap", "I", "(I)Ljava/util/Map<TK;TV;>;", "()Ljava/util/Set<TK;>;", "newSet", "LJavaUtilCollection;", "(Ljava/util/Collection<TK;>;)Ljava/util/Set<TK;>;", "setMap", "LJavaUtilMap;", "<K1:Ljava/lang/Object;V1:Ljava/lang/Object;>(Ljava/util/Map<TK1;TV1;>;)Ljava/util/Map<TK1;TV1;>;", "LJavaUtilMap;I", "<K1:Ljava/lang/Object;V1:Ljava/lang/Object;>(Ljava/util/Map<TK1;TV1;>;I)Ljava/util/Map<TK1;TV1;>;", "LEduStanfordNlpUtilMapFactory;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ledu/stanford/nlp/util/MapFactory<TK;TV;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilMapFactory_LinkedHashMapFactory = { "LinkedHashMapFactory", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0xa, 7, 1, 13, -1, -1, 14, -1 };
  return &_EduStanfordNlpUtilMapFactory_LinkedHashMapFactory;
}

@end

void EduStanfordNlpUtilMapFactory_LinkedHashMapFactory_init(EduStanfordNlpUtilMapFactory_LinkedHashMapFactory *self) {
  EduStanfordNlpUtilMapFactory_init(self);
}

EduStanfordNlpUtilMapFactory_LinkedHashMapFactory *new_EduStanfordNlpUtilMapFactory_LinkedHashMapFactory_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMapFactory_LinkedHashMapFactory, init)
}

EduStanfordNlpUtilMapFactory_LinkedHashMapFactory *create_EduStanfordNlpUtilMapFactory_LinkedHashMapFactory_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMapFactory_LinkedHashMapFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilMapFactory_LinkedHashMapFactory)

@implementation EduStanfordNlpUtilMapFactory_ArrayMapFactory

- (id<JavaUtilMap>)newMap {
  return new_EduStanfordNlpUtilArrayMap_init();
}

- (id<JavaUtilMap>)newMapWithInt:(jint)initCapacity {
  return new_EduStanfordNlpUtilArrayMap_initWithInt_(initCapacity);
}

- (id<JavaUtilSet>)newSet {
  return new_EduStanfordNlpUtilArraySet_init();
}

- (id<JavaUtilSet>)newSetWithJavaUtilCollection:(id<JavaUtilCollection>)init_ {
  return new_EduStanfordNlpUtilArraySet_init();
}

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map {
  return new_EduStanfordNlpUtilArrayMap_init();
}

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map
                                 withInt:(jint)initCapacity {
  map = new_EduStanfordNlpUtilArrayMap_initWithInt_(initCapacity);
  return map;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpUtilMapFactory_ArrayMapFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 4, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 8, 9, -1, 10, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 8, 11, -1, 12, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(newMap);
  methods[1].selector = @selector(newMapWithInt:);
  methods[2].selector = @selector(newSet);
  methods[3].selector = @selector(newSetWithJavaUtilCollection:);
  methods[4].selector = @selector(setMapWithJavaUtilMap:);
  methods[5].selector = @selector(setMapWithJavaUtilMap:withInt:);
  methods[6].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpUtilMapFactory_ArrayMapFactory_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Map<TK;TV;>;", "newMap", "I", "(I)Ljava/util/Map<TK;TV;>;", "()Ljava/util/Set<TK;>;", "newSet", "LJavaUtilCollection;", "(Ljava/util/Collection<TK;>;)Ljava/util/Set<TK;>;", "setMap", "LJavaUtilMap;", "<K1:Ljava/lang/Object;V1:Ljava/lang/Object;>(Ljava/util/Map<TK1;TV1;>;)Ljava/util/Map<TK1;TV1;>;", "LJavaUtilMap;I", "<K1:Ljava/lang/Object;V1:Ljava/lang/Object;>(Ljava/util/Map<TK1;TV1;>;I)Ljava/util/Map<TK1;TV1;>;", "LEduStanfordNlpUtilMapFactory;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ledu/stanford/nlp/util/MapFactory<TK;TV;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilMapFactory_ArrayMapFactory = { "ArrayMapFactory", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0xa, 7, 1, 13, -1, -1, 14, -1 };
  return &_EduStanfordNlpUtilMapFactory_ArrayMapFactory;
}

@end

void EduStanfordNlpUtilMapFactory_ArrayMapFactory_init(EduStanfordNlpUtilMapFactory_ArrayMapFactory *self) {
  EduStanfordNlpUtilMapFactory_init(self);
}

EduStanfordNlpUtilMapFactory_ArrayMapFactory *new_EduStanfordNlpUtilMapFactory_ArrayMapFactory_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMapFactory_ArrayMapFactory, init)
}

EduStanfordNlpUtilMapFactory_ArrayMapFactory *create_EduStanfordNlpUtilMapFactory_ArrayMapFactory_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMapFactory_ArrayMapFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilMapFactory_ArrayMapFactory)

@implementation EduStanfordNlpUtilMapFactory_ConcurrentMapFactory

- (id<JavaUtilMap>)newMap {
  return new_JavaUtilConcurrentConcurrentHashMap_init();
}

- (id<JavaUtilMap>)newMapWithInt:(jint)initCapacity {
  return new_JavaUtilConcurrentConcurrentHashMap_initWithInt_(initCapacity);
}

- (id<JavaUtilSet>)newSet {
  return JavaUtilCollections_newSetFromMapWithJavaUtilMap_(new_JavaUtilConcurrentConcurrentHashMap_init());
}

- (id<JavaUtilSet>)newSetWithJavaUtilCollection:(id<JavaUtilCollection>)init_ {
  id<JavaUtilSet> set = JavaUtilCollections_newSetFromMapWithJavaUtilMap_(new_JavaUtilConcurrentConcurrentHashMap_init());
  [((id<JavaUtilSet>) nil_chk(set)) addAllWithJavaUtilCollection:init_];
  return set;
}

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map {
  return new_JavaUtilConcurrentConcurrentHashMap_init();
}

- (id<JavaUtilMap>)setMapWithJavaUtilMap:(id<JavaUtilMap>)map
                                 withInt:(jint)initCapacity {
  map = new_JavaUtilConcurrentConcurrentHashMap_initWithInt_(initCapacity);
  return map;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpUtilMapFactory_ConcurrentMapFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 4, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 8, 9, -1, 10, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, 8, 11, -1, 12, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(newMap);
  methods[1].selector = @selector(newMapWithInt:);
  methods[2].selector = @selector(newSet);
  methods[3].selector = @selector(newSetWithJavaUtilCollection:);
  methods[4].selector = @selector(setMapWithJavaUtilMap:);
  methods[5].selector = @selector(setMapWithJavaUtilMap:withInt:);
  methods[6].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpUtilMapFactory_ConcurrentMapFactory_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Map<TK;TV;>;", "newMap", "I", "(I)Ljava/util/Map<TK;TV;>;", "()Ljava/util/Set<TK;>;", "newSet", "LJavaUtilCollection;", "(Ljava/util/Collection<TK;>;)Ljava/util/Set<TK;>;", "setMap", "LJavaUtilMap;", "<K1:Ljava/lang/Object;V1:Ljava/lang/Object;>(Ljava/util/Map<TK1;TV1;>;)Ljava/util/Map<TK1;TV1;>;", "LJavaUtilMap;I", "<K1:Ljava/lang/Object;V1:Ljava/lang/Object;>(Ljava/util/Map<TK1;TV1;>;I)Ljava/util/Map<TK1;TV1;>;", "LEduStanfordNlpUtilMapFactory;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ledu/stanford/nlp/util/MapFactory<TK;TV;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilMapFactory_ConcurrentMapFactory = { "ConcurrentMapFactory", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0xa, 7, 1, 13, -1, -1, 14, -1 };
  return &_EduStanfordNlpUtilMapFactory_ConcurrentMapFactory;
}

@end

void EduStanfordNlpUtilMapFactory_ConcurrentMapFactory_init(EduStanfordNlpUtilMapFactory_ConcurrentMapFactory *self) {
  EduStanfordNlpUtilMapFactory_init(self);
}

EduStanfordNlpUtilMapFactory_ConcurrentMapFactory *new_EduStanfordNlpUtilMapFactory_ConcurrentMapFactory_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMapFactory_ConcurrentMapFactory, init)
}

EduStanfordNlpUtilMapFactory_ConcurrentMapFactory *create_EduStanfordNlpUtilMapFactory_ConcurrentMapFactory_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMapFactory_ConcurrentMapFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilMapFactory_ConcurrentMapFactory)
