//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/ConcatenationIterator.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/util/ConcatenationIterator.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Iterator.h"
#include "java/util/Set.h"
#include "java/util/function/Consumer.h"

@implementation EduStanfordNlpUtilConcatenationIterator

- (id<JavaUtilIterator>)current {
  if ([((id<JavaUtilIterator>) nil_chk(first_)) hasNext]) {
    return first_;
  }
  return second_;
}

- (jboolean)hasNext {
  return [((id<JavaUtilIterator>) nil_chk([self current])) hasNext];
}

- (id)next {
  return [((id<JavaUtilIterator>) nil_chk([self current])) next];
}

- (void)remove {
  [((id<JavaUtilIterator>) nil_chk([self current])) remove];
}

- (instancetype)initWithJavaUtilIterator:(id<JavaUtilIterator>)first
                    withJavaUtilIterator:(id<JavaUtilIterator>)second {
  EduStanfordNlpUtilConcatenationIterator_initWithJavaUtilIterator_withJavaUtilIterator_(self, first, second);
  return self;
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduStanfordNlpUtilConcatenationIterator_mainWithNSStringArray_(args);
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilIterator;", 0x0, -1, -1, -1, 0, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, 3, -1, -1 },
    { NULL, "V", 0x9, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(current);
  methods[1].selector = @selector(hasNext);
  methods[2].selector = @selector(next);
  methods[3].selector = @selector(remove);
  methods[4].selector = @selector(initWithJavaUtilIterator:withJavaUtilIterator:);
  methods[5].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "first_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x0, -1, -1, 6, -1 },
    { "second_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x0, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Iterator<TT;>;", "()TT;", "LJavaUtilIterator;LJavaUtilIterator;", "(Ljava/util/Iterator<TT;>;Ljava/util/Iterator<TT;>;)V", "main", "[LNSString;", "Ljava/util/Iterator<TT;>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Iterator<TT;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilConcatenationIterator = { "ConcatenationIterator", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, 7, -1 };
  return &_EduStanfordNlpUtilConcatenationIterator;
}

@end

void EduStanfordNlpUtilConcatenationIterator_initWithJavaUtilIterator_withJavaUtilIterator_(EduStanfordNlpUtilConcatenationIterator *self, id<JavaUtilIterator> first, id<JavaUtilIterator> second) {
  NSObject_init(self);
  self->first_ = nil;
  self->second_ = nil;
  self->first_ = first;
  self->second_ = second;
}

EduStanfordNlpUtilConcatenationIterator *new_EduStanfordNlpUtilConcatenationIterator_initWithJavaUtilIterator_withJavaUtilIterator_(id<JavaUtilIterator> first, id<JavaUtilIterator> second) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilConcatenationIterator, initWithJavaUtilIterator_withJavaUtilIterator_, first, second)
}

EduStanfordNlpUtilConcatenationIterator *create_EduStanfordNlpUtilConcatenationIterator_initWithJavaUtilIterator_withJavaUtilIterator_(id<JavaUtilIterator> first, id<JavaUtilIterator> second) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilConcatenationIterator, initWithJavaUtilIterator_withJavaUtilIterator_, first, second)
}

void EduStanfordNlpUtilConcatenationIterator_mainWithNSStringArray_(IOSObjectArray *args) {
  EduStanfordNlpUtilConcatenationIterator_initialize();
  id<JavaUtilCollection> c1 = JavaUtilCollections_singletonWithId_(@"a");
  id<JavaUtilCollection> c2 = JavaUtilCollections_singletonWithId_(@"b");
  id<JavaUtilIterator> i = new_EduStanfordNlpUtilConcatenationIterator_initWithJavaUtilIterator_withJavaUtilIterator_([((id<JavaUtilCollection>) nil_chk(c1)) iterator], [((id<JavaUtilCollection>) nil_chk(c2)) iterator]);
  while ([i hasNext]) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$C", [i next], ' ')];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilConcatenationIterator)
