//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/Maps.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/util/CollectionFactory.h"
#include "edu/stanford/nlp/util/ErasureUtils.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "edu/stanford/nlp/util/Maps.h"
#include "java/io/PrintStream.h"
#include "java/lang/Comparable.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"

@interface EduStanfordNlpUtilMaps ()

- (instancetype)init;

@end

__attribute__((unused)) static void EduStanfordNlpUtilMaps_init(EduStanfordNlpUtilMaps *self);

__attribute__((unused)) static EduStanfordNlpUtilMaps *new_EduStanfordNlpUtilMaps_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMaps *create_EduStanfordNlpUtilMaps_init();

@interface EduStanfordNlpUtilMaps_$Lambda$1 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(id<JavaUtilMap_Entry>)e1
               withId:(id<JavaUtilMap_Entry>)e2;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpUtilMaps_$Lambda$1)

inline EduStanfordNlpUtilMaps_$Lambda$1 *EduStanfordNlpUtilMaps_$Lambda$1_get_instance();
static EduStanfordNlpUtilMaps_$Lambda$1 *EduStanfordNlpUtilMaps_$Lambda$1_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpUtilMaps_$Lambda$1, instance, EduStanfordNlpUtilMaps_$Lambda$1 *)

__attribute__((unused)) static void EduStanfordNlpUtilMaps_$Lambda$1_init(EduStanfordNlpUtilMaps_$Lambda$1 *self);

__attribute__((unused)) static EduStanfordNlpUtilMaps_$Lambda$1 *new_EduStanfordNlpUtilMaps_$Lambda$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMaps_$Lambda$1 *create_EduStanfordNlpUtilMaps_$Lambda$1_init();

@implementation EduStanfordNlpUtilMaps

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpUtilMaps_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)putIntoValueHashSetWithJavaUtilMap:(id<JavaUtilMap>)map
                                    withId:(id)key
                                    withId:(id)value {
  EduStanfordNlpUtilMaps_putIntoValueHashSetWithJavaUtilMap_withId_withId_(map, key, value);
}

+ (void)putIntoValueArrayListWithJavaUtilMap:(id<JavaUtilMap>)map
                                      withId:(id)key
                                      withId:(id)value {
  EduStanfordNlpUtilMaps_putIntoValueArrayListWithJavaUtilMap_withId_withId_(map, key, value);
}

+ (void)putIntoValueCollectionWithJavaUtilMap:(id<JavaUtilMap>)map
                                       withId:(id)key
                                       withId:(id)value
      withEduStanfordNlpUtilCollectionFactory:(EduStanfordNlpUtilCollectionFactory *)cf {
  EduStanfordNlpUtilMaps_putIntoValueCollectionWithJavaUtilMap_withId_withId_withEduStanfordNlpUtilCollectionFactory_(map, key, value, cf);
}

+ (id<JavaUtilMap>)composeWithJavaUtilMap:(id<JavaUtilMap>)map1
                          withJavaUtilMap:(id<JavaUtilMap>)map2 {
  return EduStanfordNlpUtilMaps_composeWithJavaUtilMap_withJavaUtilMap_(map1, map2);
}

+ (id<JavaUtilMap>)invertWithJavaUtilMap:(id<JavaUtilMap>)map {
  return EduStanfordNlpUtilMaps_invertWithJavaUtilMap_(map);
}

+ (id<JavaUtilMap>)invertSetWithJavaUtilMap:(id<JavaUtilMap>)map {
  return EduStanfordNlpUtilMaps_invertSetWithJavaUtilMap_(map);
}

+ (id<JavaUtilList>)sortedEntriesWithJavaUtilCollection:(id<JavaUtilCollection>)entries {
  return EduStanfordNlpUtilMaps_sortedEntriesWithJavaUtilCollection_(entries);
}

+ (id<JavaUtilList>)sortedEntriesWithJavaUtilMap:(id<JavaUtilMap>)map {
  return EduStanfordNlpUtilMaps_sortedEntriesWithJavaUtilMap_(map);
}

+ (void)toStringSortedWithJavaUtilMap:(id<JavaUtilMap>)map
            withJavaLangStringBuilder:(JavaLangStringBuilder *)builder {
  EduStanfordNlpUtilMaps_toStringSortedWithJavaUtilMap_withJavaLangStringBuilder_(map, builder);
}

+ (NSString *)toStringSortedWithJavaUtilMap:(id<JavaUtilMap>)map {
  return EduStanfordNlpUtilMaps_toStringSortedWithJavaUtilMap_(map);
}

+ (void)removeKeysWithJavaUtilMap:(id<JavaUtilMap>)map
           withJavaUtilCollection:(id<JavaUtilCollection>)removekeys {
  EduStanfordNlpUtilMaps_removeKeysWithJavaUtilMap_withJavaUtilCollection_(map, removekeys);
}

+ (void)addAllWithJavaUtilMap:(id<JavaUtilMap>)to
              withJavaUtilMap:(id<JavaUtilMap>)from
 withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)function {
  EduStanfordNlpUtilMaps_addAllWithJavaUtilMap_withJavaUtilMap_withJavaUtilFunctionFunction_(to, from, function);
}

+ (id<JavaUtilMap>)getAllWithJavaUtilMap:(id<JavaUtilMap>)map
                  withJavaUtilCollection:(id<JavaUtilCollection>)indices {
  return EduStanfordNlpUtilMaps_getAllWithJavaUtilMap_withJavaUtilCollection_(map, indices);
}

+ (NSString *)toStringWithJavaUtilMap:(id<JavaUtilMap>)map
                         withNSString:(NSString *)preAppend
                         withNSString:(NSString *)postAppend
                         withNSString:(NSString *)keyValSeparator
                         withNSString:(NSString *)itemSeparator {
  return EduStanfordNlpUtilMaps_toStringWithJavaUtilMap_withNSString_withNSString_withNSString_withNSString_(map, preAppend, postAppend, keyValSeparator, itemSeparator);
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduStanfordNlpUtilMaps_mainWithNSStringArray_(args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x9, 3, 1, -1, 4, -1, -1 },
    { NULL, "V", 0x9, 5, 6, -1, 7, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x9, 8, 9, -1, 10, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x9, 11, 12, -1, 13, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x9, 14, 12, -1, 15, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 16, 17, -1, 18, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 16, 12, -1, 19, -1, -1 },
    { NULL, "V", 0x9, 20, 21, -1, 22, -1, -1 },
    { NULL, "LNSString;", 0x9, 20, 12, -1, 23, -1, -1 },
    { NULL, "V", 0x9, 24, 25, -1, 26, -1, -1 },
    { NULL, "V", 0x9, 27, 28, -1, 29, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x9, 30, 25, -1, 31, -1, -1 },
    { NULL, "LNSString;", 0x9, 32, 33, -1, 34, -1, -1 },
    { NULL, "V", 0x9, 35, 36, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(putIntoValueHashSetWithJavaUtilMap:withId:withId:);
  methods[2].selector = @selector(putIntoValueArrayListWithJavaUtilMap:withId:withId:);
  methods[3].selector = @selector(putIntoValueCollectionWithJavaUtilMap:withId:withId:withEduStanfordNlpUtilCollectionFactory:);
  methods[4].selector = @selector(composeWithJavaUtilMap:withJavaUtilMap:);
  methods[5].selector = @selector(invertWithJavaUtilMap:);
  methods[6].selector = @selector(invertSetWithJavaUtilMap:);
  methods[7].selector = @selector(sortedEntriesWithJavaUtilCollection:);
  methods[8].selector = @selector(sortedEntriesWithJavaUtilMap:);
  methods[9].selector = @selector(toStringSortedWithJavaUtilMap:withJavaLangStringBuilder:);
  methods[10].selector = @selector(toStringSortedWithJavaUtilMap:);
  methods[11].selector = @selector(removeKeysWithJavaUtilMap:withJavaUtilCollection:);
  methods[12].selector = @selector(addAllWithJavaUtilMap:withJavaUtilMap:withJavaUtilFunctionFunction:);
  methods[13].selector = @selector(getAllWithJavaUtilMap:withJavaUtilCollection:);
  methods[14].selector = @selector(toStringWithJavaUtilMap:withNSString:withNSString:withNSString:withNSString:);
  methods[15].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "putIntoValueHashSet", "LJavaUtilMap;LNSObject;LNSObject;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/Map<TK;Ljava/util/Set<TV;>;>;TK;TV;)V", "putIntoValueArrayList", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/Map<TK;Ljava/util/List<TV;>;>;TK;TV;)V", "putIntoValueCollection", "LJavaUtilMap;LNSObject;LNSObject;LEduStanfordNlpUtilCollectionFactory;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;C::Ljava/util/Collection<TV;>;>(Ljava/util/Map<TK;TC;>;TK;TV;Ledu/stanford/nlp/util/CollectionFactory<TV;>;)V", "compose", "LJavaUtilMap;LJavaUtilMap;", "<X:Ljava/lang/Object;Y:Ljava/lang/Object;Z:Ljava/lang/Object;>(Ljava/util/Map<TX;TY;>;Ljava/util/Map<TY;TZ;>;)Ljava/util/Map<TX;TZ;>;", "invert", "LJavaUtilMap;", "<X:Ljava/lang/Object;Y:Ljava/lang/Object;>(Ljava/util/Map<TX;TY;>;)Ljava/util/Map<TY;TX;>;", "invertSet", "<X:Ljava/lang/Object;Y:Ljava/lang/Object;>(Ljava/util/Map<TX;TY;>;)Ljava/util/Map<TY;Ljava/util/Set<TX;>;>;", "sortedEntries", "LJavaUtilCollection;", "<K::Ljava/lang/Comparable<-TK;>;V:Ljava/lang/Object;>(Ljava/util/Collection<Ljava/util/Map$Entry<TK;TV;>;>;)Ljava/util/List<Ljava/util/Map$Entry<TK;TV;>;>;", "<K::Ljava/lang/Comparable<-TK;>;V:Ljava/lang/Object;>(Ljava/util/Map<TK;TV;>;)Ljava/util/List<Ljava/util/Map$Entry<TK;TV;>;>;", "toStringSorted", "LJavaUtilMap;LJavaLangStringBuilder;", "<K::Ljava/lang/Comparable<TK;>;V:Ljava/lang/Object;>(Ljava/util/Map<TK;TV;>;Ljava/lang/StringBuilder;)V", "<K::Ljava/lang/Comparable<TK;>;V:Ljava/lang/Object;>(Ljava/util/Map<TK;TV;>;)Ljava/lang/String;", "removeKeys", "LJavaUtilMap;LJavaUtilCollection;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/Map<TK;TV;>;Ljava/util/Collection<TK;>;)V", "addAll", "LJavaUtilMap;LJavaUtilMap;LJavaUtilFunctionFunction;", "<K:Ljava/lang/Object;V1:Ljava/lang/Object;V2:Ljava/lang/Object;>(Ljava/util/Map<TK;TV1;>;Ljava/util/Map<TK;TV2;>;Ljava/util/function/Function<TV2;TV1;>;)V", "getAll", "<T:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/Map<TT;TV;>;Ljava/util/Collection<TT;>;)Ljava/util/Map<TT;TV;>;", "toString", "LJavaUtilMap;LNSString;LNSString;LNSString;LNSString;", "<T:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/Map<TT;TV;>;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "main", "[LNSString;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilMaps = { "Maps", "edu.stanford.nlp.util", ptrTable, methods, NULL, 7, 0x1, 16, 0, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpUtilMaps;
}

@end

void EduStanfordNlpUtilMaps_init(EduStanfordNlpUtilMaps *self) {
  NSObject_init(self);
}

EduStanfordNlpUtilMaps *new_EduStanfordNlpUtilMaps_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMaps, init)
}

EduStanfordNlpUtilMaps *create_EduStanfordNlpUtilMaps_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMaps, init)
}

void EduStanfordNlpUtilMaps_putIntoValueHashSetWithJavaUtilMap_withId_withId_(id<JavaUtilMap> map, id key, id value) {
  EduStanfordNlpUtilMaps_initialize();
  EduStanfordNlpUtilCollectionFactory *factory = EduStanfordNlpUtilCollectionFactory_hashSetFactory();
  EduStanfordNlpUtilMaps_putIntoValueCollectionWithJavaUtilMap_withId_withId_withEduStanfordNlpUtilCollectionFactory_(map, key, value, factory);
}

void EduStanfordNlpUtilMaps_putIntoValueArrayListWithJavaUtilMap_withId_withId_(id<JavaUtilMap> map, id key, id value) {
  EduStanfordNlpUtilMaps_initialize();
  EduStanfordNlpUtilCollectionFactory *factory = EduStanfordNlpUtilCollectionFactory_arrayListFactory();
  EduStanfordNlpUtilMaps_putIntoValueCollectionWithJavaUtilMap_withId_withId_withEduStanfordNlpUtilCollectionFactory_(map, key, value, factory);
}

void EduStanfordNlpUtilMaps_putIntoValueCollectionWithJavaUtilMap_withId_withId_withEduStanfordNlpUtilCollectionFactory_(id<JavaUtilMap> map, id key, id value, EduStanfordNlpUtilCollectionFactory *cf) {
  EduStanfordNlpUtilMaps_initialize();
  id<JavaUtilCollection> c = [((id<JavaUtilMap>) nil_chk(map)) getWithId:key];
  if (c == nil) {
    c = EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_([((EduStanfordNlpUtilCollectionFactory *) nil_chk(cf)) newCollection]);
    (void) [map putWithId:key withId:c];
  }
  [((id<JavaUtilCollection>) nil_chk(c)) addWithId:value];
}

id<JavaUtilMap> EduStanfordNlpUtilMaps_composeWithJavaUtilMap_withJavaUtilMap_(id<JavaUtilMap> map1, id<JavaUtilMap> map2) {
  EduStanfordNlpUtilMaps_initialize();
  id<JavaUtilMap> composedMap = EduStanfordNlpUtilGenerics_newHashMap();
  for (id __strong key in nil_chk([((id<JavaUtilMap>) nil_chk(map1)) keySet])) {
    (void) [((id<JavaUtilMap>) nil_chk(composedMap)) putWithId:key withId:[((id<JavaUtilMap>) nil_chk(map2)) getWithId:[map1 getWithId:key]]];
  }
  return composedMap;
}

id<JavaUtilMap> EduStanfordNlpUtilMaps_invertWithJavaUtilMap_(id<JavaUtilMap> map) {
  EduStanfordNlpUtilMaps_initialize();
  id<JavaUtilMap> invertedMap = EduStanfordNlpUtilGenerics_newHashMap();
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(map)) entrySet])) {
    id key = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    id value = [entry_ getValue];
    (void) [((id<JavaUtilMap>) nil_chk(invertedMap)) putWithId:value withId:key];
  }
  return invertedMap;
}

id<JavaUtilMap> EduStanfordNlpUtilMaps_invertSetWithJavaUtilMap_(id<JavaUtilMap> map) {
  EduStanfordNlpUtilMaps_initialize();
  id<JavaUtilMap> invertedMap = EduStanfordNlpUtilGenerics_newHashMap();
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(map)) entrySet])) {
    id key = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    id value = [entry_ getValue];
    EduStanfordNlpUtilMaps_putIntoValueHashSetWithJavaUtilMap_withId_withId_(invertedMap, value, key);
  }
  return invertedMap;
}

id<JavaUtilList> EduStanfordNlpUtilMaps_sortedEntriesWithJavaUtilCollection_(id<JavaUtilCollection> entries) {
  EduStanfordNlpUtilMaps_initialize();
  id<JavaUtilList> entriesList = new_JavaUtilArrayList_initWithJavaUtilCollection_(entries);
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(entriesList, JreLoadStatic(EduStanfordNlpUtilMaps_$Lambda$1, instance));
  return entriesList;
}

id<JavaUtilList> EduStanfordNlpUtilMaps_sortedEntriesWithJavaUtilMap_(id<JavaUtilMap> map) {
  EduStanfordNlpUtilMaps_initialize();
  return EduStanfordNlpUtilMaps_sortedEntriesWithJavaUtilCollection_([((id<JavaUtilMap>) nil_chk(map)) entrySet]);
}

void EduStanfordNlpUtilMaps_toStringSortedWithJavaUtilMap_withJavaLangStringBuilder_(id<JavaUtilMap> map, JavaLangStringBuilder *builder) {
  EduStanfordNlpUtilMaps_initialize();
  (void) [((JavaLangStringBuilder *) nil_chk(builder)) appendWithNSString:@"{"];
  id<JavaUtilList> sortedProperties = EduStanfordNlpUtilMaps_sortedEntriesWithJavaUtilMap_(map);
  jint index = 0;
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk(sortedProperties)) {
    if (index > 0) {
      (void) [builder appendWithNSString:@", "];
    }
    (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([builder appendWithId:[((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey]])) appendWithNSString:@"="])) appendWithId:[entry_ getValue]];
    index++;
  }
  (void) [builder appendWithNSString:@"}"];
}

NSString *EduStanfordNlpUtilMaps_toStringSortedWithJavaUtilMap_(id<JavaUtilMap> map) {
  EduStanfordNlpUtilMaps_initialize();
  JavaLangStringBuilder *builder = new_JavaLangStringBuilder_init();
  EduStanfordNlpUtilMaps_toStringSortedWithJavaUtilMap_withJavaLangStringBuilder_(map, builder);
  return [builder description];
}

void EduStanfordNlpUtilMaps_removeKeysWithJavaUtilMap_withJavaUtilCollection_(id<JavaUtilMap> map, id<JavaUtilCollection> removekeys) {
  EduStanfordNlpUtilMaps_initialize();
  for (id __strong k in nil_chk(removekeys)) {
    (void) [((id<JavaUtilMap>) nil_chk(map)) removeWithId:k];
  }
}

void EduStanfordNlpUtilMaps_addAllWithJavaUtilMap_withJavaUtilMap_withJavaUtilFunctionFunction_(id<JavaUtilMap> to, id<JavaUtilMap> from, id<JavaUtilFunctionFunction> function) {
  EduStanfordNlpUtilMaps_initialize();
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(from)) entrySet])) {
    (void) [((id<JavaUtilMap>) nil_chk(to)) putWithId:[((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey] withId:[((id<JavaUtilFunctionFunction>) nil_chk(function)) applyWithId:[entry_ getValue]]];
  }
}

id<JavaUtilMap> EduStanfordNlpUtilMaps_getAllWithJavaUtilMap_withJavaUtilCollection_(id<JavaUtilMap> map, id<JavaUtilCollection> indices) {
  EduStanfordNlpUtilMaps_initialize();
  id<JavaUtilMap> result = new_JavaUtilHashMap_init();
  for (id __strong i in nil_chk(indices)) if ([((id<JavaUtilMap>) nil_chk(map)) containsKeyWithId:i]) {
    (void) [result putWithId:i withId:[map getWithId:i]];
  }
  return result;
}

NSString *EduStanfordNlpUtilMaps_toStringWithJavaUtilMap_withNSString_withNSString_withNSString_withNSString_(id<JavaUtilMap> map, NSString *preAppend, NSString *postAppend, NSString *keyValSeparator, NSString *itemSeparator) {
  EduStanfordNlpUtilMaps_initialize();
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  (void) [sb appendWithNSString:preAppend];
  jint i = 0;
  for (id<JavaUtilMap_Entry> __strong en in nil_chk([((id<JavaUtilMap>) nil_chk(map)) entrySet])) {
    if (i != 0) (void) [sb appendWithNSString:itemSeparator];
    (void) [sb appendWithId:[((id<JavaUtilMap_Entry>) nil_chk(en)) getKey]];
    (void) [sb appendWithNSString:keyValSeparator];
    (void) [sb appendWithId:[en getValue]];
    i++;
  }
  (void) [sb appendWithNSString:postAppend];
  return [sb description];
}

void EduStanfordNlpUtilMaps_mainWithNSStringArray_(IOSObjectArray *args) {
  EduStanfordNlpUtilMaps_initialize();
  id<JavaUtilMap> map1 = EduStanfordNlpUtilGenerics_newHashMap();
  (void) [((id<JavaUtilMap>) nil_chk(map1)) putWithId:@"a" withId:@"1"];
  (void) [map1 putWithId:@"b" withId:@"2"];
  (void) [map1 putWithId:@"c" withId:@"2"];
  (void) [map1 putWithId:@"d" withId:@"4"];
  id<JavaUtilMap> map2 = EduStanfordNlpUtilGenerics_newHashMap();
  (void) [((id<JavaUtilMap>) nil_chk(map2)) putWithId:@"1" withId:@"x"];
  (void) [map2 putWithId:@"2" withId:@"y"];
  (void) [map2 putWithId:@"3" withId:@"z"];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$@", @"map1: ", map1)];
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$@", @"invert(map1): ", EduStanfordNlpUtilMaps_invertWithJavaUtilMap_(map1))];
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$@", @"invertSet(map1): ", EduStanfordNlpUtilMaps_invertSetWithJavaUtilMap_(map1))];
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$@", @"map2: ", map2)];
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$@", @"compose(map1,map2): ", EduStanfordNlpUtilMaps_composeWithJavaUtilMap_withJavaUtilMap_(map1, map2))];
  id<JavaUtilMap> setValues = EduStanfordNlpUtilGenerics_newHashMap();
  id<JavaUtilMap> listValues = EduStanfordNlpUtilGenerics_newHashMap();
  EduStanfordNlpUtilMaps_putIntoValueArrayListWithJavaUtilMap_withId_withId_(listValues, @"a", @"1");
  EduStanfordNlpUtilMaps_putIntoValueArrayListWithJavaUtilMap_withId_withId_(listValues, @"a", @"1");
  EduStanfordNlpUtilMaps_putIntoValueArrayListWithJavaUtilMap_withId_withId_(listValues, @"a", @"2");
  EduStanfordNlpUtilMaps_putIntoValueHashSetWithJavaUtilMap_withId_withId_(setValues, @"a", @"1");
  EduStanfordNlpUtilMaps_putIntoValueHashSetWithJavaUtilMap_withId_withId_(setValues, @"a", @"1");
  EduStanfordNlpUtilMaps_putIntoValueHashSetWithJavaUtilMap_withId_withId_(setValues, @"a", @"2");
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$@", @"listValues: ", listValues)];
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$@", @"setValues: ", setValues)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilMaps)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpUtilMaps_$Lambda$1)

@implementation EduStanfordNlpUtilMaps_$Lambda$1

- (jint)compareWithId:(id<JavaUtilMap_Entry>)e1
               withId:(id<JavaUtilMap_Entry>)e2 {
  return [((id<JavaLangComparable>) nil_chk([((id<JavaUtilMap_Entry>) nil_chk(e1)) getKey])) compareToWithId:[((id<JavaUtilMap_Entry>) nil_chk(e2)) getKey]];
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [EduStanfordNlpUtilMaps_$Lambda$1 class]) {
    EduStanfordNlpUtilMaps_$Lambda$1_instance = new_EduStanfordNlpUtilMaps_$Lambda$1_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpUtilMaps_$Lambda$1)
  }
}

@end

void EduStanfordNlpUtilMaps_$Lambda$1_init(EduStanfordNlpUtilMaps_$Lambda$1 *self) {
  NSObject_init(self);
}

EduStanfordNlpUtilMaps_$Lambda$1 *new_EduStanfordNlpUtilMaps_$Lambda$1_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMaps_$Lambda$1, init)
}

EduStanfordNlpUtilMaps_$Lambda$1 *create_EduStanfordNlpUtilMaps_$Lambda$1_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMaps_$Lambda$1, init)
}
