//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/Interner.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "edu/stanford/nlp/util/Interner.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/lang/ref/WeakReference.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/WeakHashMap.h"

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpUtilInterner)

EduStanfordNlpUtilInterner *EduStanfordNlpUtilInterner_interner;

@implementation EduStanfordNlpUtilInterner

+ (EduStanfordNlpUtilInterner *)getGlobal {
  return EduStanfordNlpUtilInterner_getGlobal();
}

+ (EduStanfordNlpUtilInterner *)setGlobalWithEduStanfordNlpUtilInterner:(EduStanfordNlpUtilInterner *)interner {
  return EduStanfordNlpUtilInterner_setGlobalWithEduStanfordNlpUtilInterner_(interner);
}

+ (id)globalInternWithId:(id)o {
  return EduStanfordNlpUtilInterner_globalInternWithId_(o);
}

- (void)clear {
  map_ = EduStanfordNlpUtilGenerics_newWeakHashMap();
}

- (id)internWithId:(id)o {
  @synchronized(self) {
    JavaLangRefWeakReference *ref = [((id<JavaUtilMap>) nil_chk(map_)) getWithId:o];
    if (ref == nil) {
      ref = EduStanfordNlpUtilGenerics_newWeakReferenceWithId_(o);
      (void) [((id<JavaUtilMap>) nil_chk(map_)) putWithId:o withId:ref];
    }
    return [((JavaLangRefWeakReference *) nil_chk(ref)) get];
  }
}

- (id<JavaUtilSet>)internAllWithJavaUtilSet:(id<JavaUtilSet>)s {
  id<JavaUtilSet> result = EduStanfordNlpUtilGenerics_newHashSet();
  for (id __strong o in nil_chk(s)) {
    [((id<JavaUtilSet>) nil_chk(result)) addWithId:[self internWithId:o]];
  }
  return result;
}

- (jint)size {
  return [((id<JavaUtilMap>) nil_chk(map_)) size];
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduStanfordNlpUtilInterner_mainWithNSStringArray_(args);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpUtilInterner_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEduStanfordNlpUtilInterner;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, "LEduStanfordNlpUtilInterner;", 0x9, 1, 2, -1, 3, -1, -1 },
    { NULL, "LNSObject;", 0x9, 4, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x21, 7, 5, -1, 8, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, 9, 10, -1, 11, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 12, 13, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getGlobal);
  methods[1].selector = @selector(setGlobalWithEduStanfordNlpUtilInterner:);
  methods[2].selector = @selector(globalInternWithId:);
  methods[3].selector = @selector(clear);
  methods[4].selector = @selector(internWithId:);
  methods[5].selector = @selector(internAllWithJavaUtilSet:);
  methods[6].selector = @selector(size);
  methods[7].selector = @selector(mainWithNSStringArray:);
  methods[8].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "interner", "LEduStanfordNlpUtilInterner;", .constantValue.asLong = 0, 0xc, -1, 14, 15, -1 },
    { "map_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x4, -1, -1, 16, -1 },
  };
  static const void *ptrTable[] = { "()Ledu/stanford/nlp/util/Interner<Ljava/lang/Object;>;", "setGlobal", "LEduStanfordNlpUtilInterner;", "(Ledu/stanford/nlp/util/Interner<Ljava/lang/Object;>;)Ledu/stanford/nlp/util/Interner<Ljava/lang/Object;>;", "globalIntern", "LNSObject;", "<T:Ljava/lang/Object;>(TT;)TT;", "intern", "(TT;)TT;", "internAll", "LJavaUtilSet;", "(Ljava/util/Set<TT;>;)Ljava/util/Set<TT;>;", "main", "[LNSString;", &EduStanfordNlpUtilInterner_interner, "Ledu/stanford/nlp/util/Interner<Ljava/lang/Object;>;", "Ljava/util/Map<TT;Ljava/lang/ref/WeakReference<TT;>;>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilInterner = { "Interner", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0x1, 9, 2, -1, -1, -1, 17, -1 };
  return &_EduStanfordNlpUtilInterner;
}

+ (void)initialize {
  if (self == [EduStanfordNlpUtilInterner class]) {
    EduStanfordNlpUtilInterner_interner = EduStanfordNlpUtilGenerics_newInterner();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpUtilInterner)
  }
}

@end

EduStanfordNlpUtilInterner *EduStanfordNlpUtilInterner_getGlobal() {
  EduStanfordNlpUtilInterner_initialize();
  return EduStanfordNlpUtilInterner_interner;
}

EduStanfordNlpUtilInterner *EduStanfordNlpUtilInterner_setGlobalWithEduStanfordNlpUtilInterner_(EduStanfordNlpUtilInterner *interner) {
  EduStanfordNlpUtilInterner_initialize();
  EduStanfordNlpUtilInterner *oldInterner = EduStanfordNlpUtilInterner_interner;
  EduStanfordNlpUtilInterner_interner = interner;
  return oldInterner;
}

id EduStanfordNlpUtilInterner_globalInternWithId_(id o) {
  EduStanfordNlpUtilInterner_initialize();
  return [((EduStanfordNlpUtilInterner *) nil_chk(EduStanfordNlpUtilInterner_getGlobal())) internWithId:o];
}

void EduStanfordNlpUtilInterner_mainWithNSStringArray_(IOSObjectArray *args) {
  EduStanfordNlpUtilInterner_initialize();
  {
    IOSObjectArray *a__ = args;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *str = *b__++;
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithBoolean:EduStanfordNlpUtilInterner_globalInternWithId_(str) == str];
    }
  }
}

void EduStanfordNlpUtilInterner_init(EduStanfordNlpUtilInterner *self) {
  NSObject_init(self);
  self->map_ = EduStanfordNlpUtilGenerics_newWeakHashMap();
}

EduStanfordNlpUtilInterner *new_EduStanfordNlpUtilInterner_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilInterner, init)
}

EduStanfordNlpUtilInterner *create_EduStanfordNlpUtilInterner_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilInterner, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilInterner)
