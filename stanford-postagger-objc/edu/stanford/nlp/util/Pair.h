//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/Pair.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpUtilPair")
#ifdef RESTRICT_EduStanfordNlpUtilPair
#define INCLUDE_ALL_EduStanfordNlpUtilPair 0
#else
#define INCLUDE_ALL_EduStanfordNlpUtilPair 1
#endif
#undef RESTRICT_EduStanfordNlpUtilPair
#ifdef INCLUDE_EduStanfordNlpUtilPair_MutableInternedPair
#define INCLUDE_EduStanfordNlpUtilPair 1
#endif

#if !defined (EduStanfordNlpUtilPair_) && (INCLUDE_ALL_EduStanfordNlpUtilPair || defined(INCLUDE_EduStanfordNlpUtilPair))
#define EduStanfordNlpUtilPair_

#define RESTRICT_JavaLangComparable 1
#define INCLUDE_JavaLangComparable 1
#include "java/lang/Comparable.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

#define RESTRICT_EduStanfordNlpUtilLoggingPrettyLoggable 1
#define INCLUDE_EduStanfordNlpUtilLoggingPrettyLoggable 1
#include "edu/stanford/nlp/util/logging/PrettyLoggable.h"

@class EduStanfordNlpUtilLoggingRedwood_RedwoodChannels;
@class JavaIoDataInputStream;
@class JavaIoDataOutputStream;
@protocol JavaUtilList;

@interface EduStanfordNlpUtilPair : NSObject < JavaLangComparable, JavaIoSerializable, EduStanfordNlpUtilLoggingPrettyLoggable > {
 @public
  id first_;
  id second_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithId:(id)first
                    withId:(id)second;

- (id<JavaUtilList>)asList;

- (jint)compareToWithId:(EduStanfordNlpUtilPair *)another;

- (jboolean)isEqual:(id)o;

- (id)first;

- (NSUInteger)hash;

+ (EduStanfordNlpUtilPair *)internedStringPairWithNSString:(NSString *)first
                                              withNSString:(NSString *)second;

+ (EduStanfordNlpUtilPair *)makePairWithId:(id)x
                                    withId:(id)y;

- (void)prettyLogWithEduStanfordNlpUtilLoggingRedwood_RedwoodChannels:(EduStanfordNlpUtilLoggingRedwood_RedwoodChannels *)channels
                                                         withNSString:(NSString *)description_;

+ (EduStanfordNlpUtilPair *)readStringPairWithJavaIoDataInputStream:(JavaIoDataInputStream *)inArg;

- (void)saveWithJavaIoDataOutputStream:(JavaIoDataOutputStream *)outArg;

- (id)second;

- (void)setFirstWithId:(id)o;

- (void)setSecondWithId:(id)o;

+ (EduStanfordNlpUtilPair *)stringInternWithEduStanfordNlpUtilPair:(EduStanfordNlpUtilPair *)p;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilPair)

J2OBJC_FIELD_SETTER(EduStanfordNlpUtilPair, first_, id)
J2OBJC_FIELD_SETTER(EduStanfordNlpUtilPair, second_, id)

FOUNDATION_EXPORT void EduStanfordNlpUtilPair_init(EduStanfordNlpUtilPair *self);

FOUNDATION_EXPORT EduStanfordNlpUtilPair *new_EduStanfordNlpUtilPair_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpUtilPair *create_EduStanfordNlpUtilPair_init();

FOUNDATION_EXPORT void EduStanfordNlpUtilPair_initWithId_withId_(EduStanfordNlpUtilPair *self, id first, id second);

FOUNDATION_EXPORT EduStanfordNlpUtilPair *new_EduStanfordNlpUtilPair_initWithId_withId_(id first, id second) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpUtilPair *create_EduStanfordNlpUtilPair_initWithId_withId_(id first, id second);

FOUNDATION_EXPORT EduStanfordNlpUtilPair *EduStanfordNlpUtilPair_readStringPairWithJavaIoDataInputStream_(JavaIoDataInputStream *inArg);

FOUNDATION_EXPORT EduStanfordNlpUtilPair *EduStanfordNlpUtilPair_makePairWithId_withId_(id x, id y);

FOUNDATION_EXPORT EduStanfordNlpUtilPair *EduStanfordNlpUtilPair_stringInternWithEduStanfordNlpUtilPair_(EduStanfordNlpUtilPair *p);

FOUNDATION_EXPORT EduStanfordNlpUtilPair *EduStanfordNlpUtilPair_internedStringPairWithNSString_withNSString_(NSString *first, NSString *second);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilPair)

#endif

#if !defined (EduStanfordNlpUtilPair_MutableInternedPair_) && (INCLUDE_ALL_EduStanfordNlpUtilPair || defined(INCLUDE_EduStanfordNlpUtilPair_MutableInternedPair))
#define EduStanfordNlpUtilPair_MutableInternedPair_

@interface EduStanfordNlpUtilPair_MutableInternedPair : EduStanfordNlpUtilPair

#pragma mark Public

- (NSString *)first;

- (NSString *)second;

#pragma mark Protected

- (id)readResolve;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilPair_MutableInternedPair)

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilPair_MutableInternedPair)

#endif

#if !defined (EduStanfordNlpUtilPair_ByFirstPairComparator_) && (INCLUDE_ALL_EduStanfordNlpUtilPair || defined(INCLUDE_EduStanfordNlpUtilPair_ByFirstPairComparator))
#define EduStanfordNlpUtilPair_ByFirstPairComparator_

#define RESTRICT_JavaUtilComparator 1
#define INCLUDE_JavaUtilComparator 1
#include "java/util/Comparator.h"

@class EduStanfordNlpUtilPair;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilFunctionToDoubleFunction;
@protocol JavaUtilFunctionToIntFunction;
@protocol JavaUtilFunctionToLongFunction;

@interface EduStanfordNlpUtilPair_ByFirstPairComparator : NSObject < JavaUtilComparator >

#pragma mark Public

- (instancetype)init;

- (jint)compareWithId:(EduStanfordNlpUtilPair *)pair1
               withId:(EduStanfordNlpUtilPair *)pair2;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilPair_ByFirstPairComparator)

FOUNDATION_EXPORT void EduStanfordNlpUtilPair_ByFirstPairComparator_init(EduStanfordNlpUtilPair_ByFirstPairComparator *self);

FOUNDATION_EXPORT EduStanfordNlpUtilPair_ByFirstPairComparator *new_EduStanfordNlpUtilPair_ByFirstPairComparator_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpUtilPair_ByFirstPairComparator *create_EduStanfordNlpUtilPair_ByFirstPairComparator_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilPair_ByFirstPairComparator)

#endif

#if !defined (EduStanfordNlpUtilPair_ByFirstReversePairComparator_) && (INCLUDE_ALL_EduStanfordNlpUtilPair || defined(INCLUDE_EduStanfordNlpUtilPair_ByFirstReversePairComparator))
#define EduStanfordNlpUtilPair_ByFirstReversePairComparator_

#define RESTRICT_JavaUtilComparator 1
#define INCLUDE_JavaUtilComparator 1
#include "java/util/Comparator.h"

@class EduStanfordNlpUtilPair;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilFunctionToDoubleFunction;
@protocol JavaUtilFunctionToIntFunction;
@protocol JavaUtilFunctionToLongFunction;

@interface EduStanfordNlpUtilPair_ByFirstReversePairComparator : NSObject < JavaUtilComparator >

#pragma mark Public

- (instancetype)init;

- (jint)compareWithId:(EduStanfordNlpUtilPair *)pair1
               withId:(EduStanfordNlpUtilPair *)pair2;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilPair_ByFirstReversePairComparator)

FOUNDATION_EXPORT void EduStanfordNlpUtilPair_ByFirstReversePairComparator_init(EduStanfordNlpUtilPair_ByFirstReversePairComparator *self);

FOUNDATION_EXPORT EduStanfordNlpUtilPair_ByFirstReversePairComparator *new_EduStanfordNlpUtilPair_ByFirstReversePairComparator_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpUtilPair_ByFirstReversePairComparator *create_EduStanfordNlpUtilPair_ByFirstReversePairComparator_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilPair_ByFirstReversePairComparator)

#endif

#if !defined (EduStanfordNlpUtilPair_BySecondPairComparator_) && (INCLUDE_ALL_EduStanfordNlpUtilPair || defined(INCLUDE_EduStanfordNlpUtilPair_BySecondPairComparator))
#define EduStanfordNlpUtilPair_BySecondPairComparator_

#define RESTRICT_JavaUtilComparator 1
#define INCLUDE_JavaUtilComparator 1
#include "java/util/Comparator.h"

@class EduStanfordNlpUtilPair;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilFunctionToDoubleFunction;
@protocol JavaUtilFunctionToIntFunction;
@protocol JavaUtilFunctionToLongFunction;

@interface EduStanfordNlpUtilPair_BySecondPairComparator : NSObject < JavaUtilComparator >

#pragma mark Public

- (instancetype)init;

- (jint)compareWithId:(EduStanfordNlpUtilPair *)pair1
               withId:(EduStanfordNlpUtilPair *)pair2;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilPair_BySecondPairComparator)

FOUNDATION_EXPORT void EduStanfordNlpUtilPair_BySecondPairComparator_init(EduStanfordNlpUtilPair_BySecondPairComparator *self);

FOUNDATION_EXPORT EduStanfordNlpUtilPair_BySecondPairComparator *new_EduStanfordNlpUtilPair_BySecondPairComparator_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpUtilPair_BySecondPairComparator *create_EduStanfordNlpUtilPair_BySecondPairComparator_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilPair_BySecondPairComparator)

#endif

#if !defined (EduStanfordNlpUtilPair_BySecondReversePairComparator_) && (INCLUDE_ALL_EduStanfordNlpUtilPair || defined(INCLUDE_EduStanfordNlpUtilPair_BySecondReversePairComparator))
#define EduStanfordNlpUtilPair_BySecondReversePairComparator_

#define RESTRICT_JavaUtilComparator 1
#define INCLUDE_JavaUtilComparator 1
#include "java/util/Comparator.h"

@class EduStanfordNlpUtilPair;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilFunctionToDoubleFunction;
@protocol JavaUtilFunctionToIntFunction;
@protocol JavaUtilFunctionToLongFunction;

@interface EduStanfordNlpUtilPair_BySecondReversePairComparator : NSObject < JavaUtilComparator >

#pragma mark Public

- (instancetype)init;

- (jint)compareWithId:(EduStanfordNlpUtilPair *)pair1
               withId:(EduStanfordNlpUtilPair *)pair2;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilPair_BySecondReversePairComparator)

FOUNDATION_EXPORT void EduStanfordNlpUtilPair_BySecondReversePairComparator_init(EduStanfordNlpUtilPair_BySecondReversePairComparator *self);

FOUNDATION_EXPORT EduStanfordNlpUtilPair_BySecondReversePairComparator *new_EduStanfordNlpUtilPair_BySecondReversePairComparator_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpUtilPair_BySecondReversePairComparator *create_EduStanfordNlpUtilPair_BySecondReversePairComparator_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilPair_BySecondReversePairComparator)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpUtilPair")
