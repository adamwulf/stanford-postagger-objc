//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/Generics.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/util/BinaryHeapPriorityQueue.h"
#include "edu/stanford/nlp/util/ErasureUtils.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "edu/stanford/nlp/util/HashIndex.h"
#include "edu/stanford/nlp/util/Index.h"
#include "edu/stanford/nlp/util/Interner.h"
#include "edu/stanford/nlp/util/Pair.h"
#include "edu/stanford/nlp/util/Triple.h"
#include "edu/stanford/nlp/util/concurrent/SynchronizedInterner.h"
#include "java/io/PrintStream.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/lang/ref/WeakReference.h"
#include "java/lang/reflect/Constructor.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/IdentityHashMap.h"
#include "java/util/LinkedList.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/SortedSet.h"
#include "java/util/Stack.h"
#include "java/util/TreeMap.h"
#include "java/util/TreeSet.h"
#include "java/util/WeakHashMap.h"
#include "java/util/concurrent/ConcurrentHashMap.h"

@interface EduStanfordNlpUtilGenerics ()

- (instancetype)init;

+ (IOSClass *)getHashSetClass;

+ (JavaLangReflectConstructor *)getHashSetSizeConstructor;

+ (JavaLangReflectConstructor *)getHashSetCollectionConstructor;

+ (IOSClass *)getHashMapClass;

+ (JavaLangReflectConstructor *)getHashMapSizeConstructor;

+ (JavaLangReflectConstructor *)getHashMapFromMapConstructor;

@end

inline IOSClass *EduStanfordNlpUtilGenerics_get_HASH_SET_CLASS();
static IOSClass *EduStanfordNlpUtilGenerics_HASH_SET_CLASS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpUtilGenerics, HASH_SET_CLASS, IOSClass *)

inline JavaLangReflectConstructor *EduStanfordNlpUtilGenerics_get_HASH_SET_SIZE_CONSTRUCTOR();
static JavaLangReflectConstructor *EduStanfordNlpUtilGenerics_HASH_SET_SIZE_CONSTRUCTOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpUtilGenerics, HASH_SET_SIZE_CONSTRUCTOR, JavaLangReflectConstructor *)

inline JavaLangReflectConstructor *EduStanfordNlpUtilGenerics_get_HASH_SET_COLLECTION_CONSTRUCTOR();
static JavaLangReflectConstructor *EduStanfordNlpUtilGenerics_HASH_SET_COLLECTION_CONSTRUCTOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpUtilGenerics, HASH_SET_COLLECTION_CONSTRUCTOR, JavaLangReflectConstructor *)

inline IOSClass *EduStanfordNlpUtilGenerics_get_HASH_MAP_CLASS();
static IOSClass *EduStanfordNlpUtilGenerics_HASH_MAP_CLASS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpUtilGenerics, HASH_MAP_CLASS, IOSClass *)

inline JavaLangReflectConstructor *EduStanfordNlpUtilGenerics_get_HASH_MAP_SIZE_CONSTRUCTOR();
static JavaLangReflectConstructor *EduStanfordNlpUtilGenerics_HASH_MAP_SIZE_CONSTRUCTOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpUtilGenerics, HASH_MAP_SIZE_CONSTRUCTOR, JavaLangReflectConstructor *)

inline JavaLangReflectConstructor *EduStanfordNlpUtilGenerics_get_HASH_MAP_FROM_MAP_CONSTRUCTOR();
static JavaLangReflectConstructor *EduStanfordNlpUtilGenerics_HASH_MAP_FROM_MAP_CONSTRUCTOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpUtilGenerics, HASH_MAP_FROM_MAP_CONSTRUCTOR, JavaLangReflectConstructor *)

__attribute__((unused)) static void EduStanfordNlpUtilGenerics_init(EduStanfordNlpUtilGenerics *self);

__attribute__((unused)) static EduStanfordNlpUtilGenerics *new_EduStanfordNlpUtilGenerics_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilGenerics *create_EduStanfordNlpUtilGenerics_init();

__attribute__((unused)) static IOSClass *EduStanfordNlpUtilGenerics_getHashSetClass();

__attribute__((unused)) static JavaLangReflectConstructor *EduStanfordNlpUtilGenerics_getHashSetSizeConstructor();

__attribute__((unused)) static JavaLangReflectConstructor *EduStanfordNlpUtilGenerics_getHashSetCollectionConstructor();

__attribute__((unused)) static IOSClass *EduStanfordNlpUtilGenerics_getHashMapClass();

__attribute__((unused)) static JavaLangReflectConstructor *EduStanfordNlpUtilGenerics_getHashMapSizeConstructor();

__attribute__((unused)) static JavaLangReflectConstructor *EduStanfordNlpUtilGenerics_getHashMapFromMapConstructor();

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpUtilGenerics)

NSString *EduStanfordNlpUtilGenerics_HASH_SET_PROPERTY = @"edu.stanford.nlp.hashset.impl";
NSString *EduStanfordNlpUtilGenerics_HASH_SET_CLASSNAME;
NSString *EduStanfordNlpUtilGenerics_HASH_MAP_PROPERTY = @"edu.stanford.nlp.hashmap.impl";
NSString *EduStanfordNlpUtilGenerics_HASH_MAP_CLASSNAME;

@implementation EduStanfordNlpUtilGenerics

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpUtilGenerics_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (JavaUtilArrayList *)newArrayList {
  return EduStanfordNlpUtilGenerics_newArrayList();
}

+ (JavaUtilArrayList *)newArrayListWithInt:(jint)size {
  return EduStanfordNlpUtilGenerics_newArrayListWithInt_(size);
}

+ (JavaUtilArrayList *)newArrayListWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return EduStanfordNlpUtilGenerics_newArrayListWithJavaUtilCollection_(c);
}

+ (JavaUtilLinkedList *)newLinkedList {
  return EduStanfordNlpUtilGenerics_newLinkedList();
}

+ (JavaUtilLinkedList *)newLinkedListWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return EduStanfordNlpUtilGenerics_newLinkedListWithJavaUtilCollection_(c);
}

+ (JavaUtilStack *)newStack {
  return EduStanfordNlpUtilGenerics_newStack();
}

+ (EduStanfordNlpUtilBinaryHeapPriorityQueue *)newBinaryHeapPriorityQueue {
  return EduStanfordNlpUtilGenerics_newBinaryHeapPriorityQueue();
}

+ (JavaUtilTreeSet *)newTreeSet {
  return EduStanfordNlpUtilGenerics_newTreeSet();
}

+ (JavaUtilTreeSet *)newTreeSetWithJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  return EduStanfordNlpUtilGenerics_newTreeSetWithJavaUtilComparator_(comparator);
}

+ (JavaUtilTreeSet *)newTreeSetWithJavaUtilSortedSet:(id<JavaUtilSortedSet>)s {
  return EduStanfordNlpUtilGenerics_newTreeSetWithJavaUtilSortedSet_(s);
}

+ (IOSClass *)getHashSetClass {
  return EduStanfordNlpUtilGenerics_getHashSetClass();
}

+ (JavaLangReflectConstructor *)getHashSetSizeConstructor {
  return EduStanfordNlpUtilGenerics_getHashSetSizeConstructor();
}

+ (JavaLangReflectConstructor *)getHashSetCollectionConstructor {
  return EduStanfordNlpUtilGenerics_getHashSetCollectionConstructor();
}

+ (id<JavaUtilSet>)newHashSet {
  return EduStanfordNlpUtilGenerics_newHashSet();
}

+ (id<JavaUtilSet>)newHashSetWithInt:(jint)initialCapacity {
  return EduStanfordNlpUtilGenerics_newHashSetWithInt_(initialCapacity);
}

+ (id<JavaUtilSet>)newHashSetWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return EduStanfordNlpUtilGenerics_newHashSetWithJavaUtilCollection_(c);
}

+ (IOSClass *)getHashMapClass {
  return EduStanfordNlpUtilGenerics_getHashMapClass();
}

+ (JavaLangReflectConstructor *)getHashMapSizeConstructor {
  return EduStanfordNlpUtilGenerics_getHashMapSizeConstructor();
}

+ (JavaLangReflectConstructor *)getHashMapFromMapConstructor {
  return EduStanfordNlpUtilGenerics_getHashMapFromMapConstructor();
}

+ (id<JavaUtilMap>)newHashMap {
  return EduStanfordNlpUtilGenerics_newHashMap();
}

+ (id<JavaUtilMap>)newHashMapWithInt:(jint)initialCapacity {
  return EduStanfordNlpUtilGenerics_newHashMapWithInt_(initialCapacity);
}

+ (id<JavaUtilMap>)newHashMapWithJavaUtilMap:(id<JavaUtilMap>)m {
  return EduStanfordNlpUtilGenerics_newHashMapWithJavaUtilMap_(m);
}

+ (JavaUtilIdentityHashMap *)newIdentityHashMap {
  return EduStanfordNlpUtilGenerics_newIdentityHashMap();
}

+ (id<JavaUtilSet>)newIdentityHashSet {
  return EduStanfordNlpUtilGenerics_newIdentityHashSet();
}

+ (JavaUtilWeakHashMap *)newWeakHashMap {
  return EduStanfordNlpUtilGenerics_newWeakHashMap();
}

+ (JavaUtilConcurrentConcurrentHashMap *)newConcurrentHashMap {
  return EduStanfordNlpUtilGenerics_newConcurrentHashMap();
}

+ (JavaUtilConcurrentConcurrentHashMap *)newConcurrentHashMapWithInt:(jint)initialCapacity {
  return EduStanfordNlpUtilGenerics_newConcurrentHashMapWithInt_(initialCapacity);
}

+ (JavaUtilConcurrentConcurrentHashMap *)newConcurrentHashMapWithInt:(jint)initialCapacity
                                                           withFloat:(jfloat)loadFactor
                                                             withInt:(jint)concurrencyLevel {
  return EduStanfordNlpUtilGenerics_newConcurrentHashMapWithInt_withFloat_withInt_(initialCapacity, loadFactor, concurrencyLevel);
}

+ (JavaUtilTreeMap *)newTreeMap {
  return EduStanfordNlpUtilGenerics_newTreeMap();
}

+ (id<EduStanfordNlpUtilIndex>)newIndex {
  return EduStanfordNlpUtilGenerics_newIndex();
}

+ (id<JavaUtilSet>)newConcurrentHashSet {
  return EduStanfordNlpUtilGenerics_newConcurrentHashSet();
}

+ (id<JavaUtilSet>)newConcurrentHashSetWithJavaUtilSet:(id<JavaUtilSet>)set {
  return EduStanfordNlpUtilGenerics_newConcurrentHashSetWithJavaUtilSet_(set);
}

+ (EduStanfordNlpUtilPair *)newPairWithId:(id)first
                                   withId:(id)second {
  return EduStanfordNlpUtilGenerics_newPairWithId_withId_(first, second);
}

+ (EduStanfordNlpUtilTriple *)newTripleWithId:(id)first
                                       withId:(id)second
                                       withId:(id)third {
  return EduStanfordNlpUtilGenerics_newTripleWithId_withId_withId_(first, second, third);
}

+ (EduStanfordNlpUtilInterner *)newInterner {
  return EduStanfordNlpUtilGenerics_newInterner();
}

+ (EduStanfordNlpUtilConcurrentSynchronizedInterner *)newSynchronizedInternerWithEduStanfordNlpUtilInterner:(EduStanfordNlpUtilInterner *)interner {
  return EduStanfordNlpUtilGenerics_newSynchronizedInternerWithEduStanfordNlpUtilInterner_(interner);
}

+ (EduStanfordNlpUtilConcurrentSynchronizedInterner *)newSynchronizedInternerWithEduStanfordNlpUtilInterner:(EduStanfordNlpUtilInterner *)interner
                                                                                                     withId:(id)mutex {
  return EduStanfordNlpUtilGenerics_newSynchronizedInternerWithEduStanfordNlpUtilInterner_withId_(interner, mutex);
}

+ (JavaLangRefWeakReference *)newWeakReferenceWithId:(id)referent {
  return EduStanfordNlpUtilGenerics_newWeakReferenceWithId_(referent);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x9, 1, 2, -1, 3, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x9, 1, 4, -1, 5, -1, -1 },
    { NULL, "LJavaUtilLinkedList;", 0x9, -1, -1, -1, 6, -1, -1 },
    { NULL, "LJavaUtilLinkedList;", 0x9, 7, 4, -1, 8, -1, -1 },
    { NULL, "LJavaUtilStack;", 0x9, -1, -1, -1, 9, -1, -1 },
    { NULL, "LEduStanfordNlpUtilBinaryHeapPriorityQueue;", 0x9, -1, -1, -1, 10, -1, -1 },
    { NULL, "LJavaUtilTreeSet;", 0x9, -1, -1, -1, 11, -1, -1 },
    { NULL, "LJavaUtilTreeSet;", 0x9, 12, 13, -1, 14, -1, -1 },
    { NULL, "LJavaUtilTreeSet;", 0x9, 12, 15, -1, 16, -1, -1 },
    { NULL, "LIOSClass;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectConstructor;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectConstructor;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x9, -1, -1, -1, 17, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x9, 18, 2, -1, 19, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x9, 18, 4, -1, 20, -1, -1 },
    { NULL, "LIOSClass;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectConstructor;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectConstructor;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x9, -1, -1, -1, 21, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x9, 22, 2, -1, 23, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x9, 22, 24, -1, 25, -1, -1 },
    { NULL, "LJavaUtilIdentityHashMap;", 0x9, -1, -1, -1, 26, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x9, -1, -1, -1, 27, -1, -1 },
    { NULL, "LJavaUtilWeakHashMap;", 0x9, -1, -1, -1, 28, -1, -1 },
    { NULL, "LJavaUtilConcurrentConcurrentHashMap;", 0x9, -1, -1, -1, 29, -1, -1 },
    { NULL, "LJavaUtilConcurrentConcurrentHashMap;", 0x9, 30, 2, -1, 31, -1, -1 },
    { NULL, "LJavaUtilConcurrentConcurrentHashMap;", 0x9, 30, 32, -1, 33, -1, -1 },
    { NULL, "LJavaUtilTreeMap;", 0x9, -1, -1, -1, 34, -1, -1 },
    { NULL, "LEduStanfordNlpUtilIndex;", 0x9, -1, -1, -1, 35, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x9, -1, -1, -1, 17, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x9, 36, 37, -1, 38, -1, -1 },
    { NULL, "LEduStanfordNlpUtilPair;", 0x9, 39, 40, -1, 41, -1, -1 },
    { NULL, "LEduStanfordNlpUtilTriple;", 0x9, 42, 43, -1, 44, -1, -1 },
    { NULL, "LEduStanfordNlpUtilInterner;", 0x9, -1, -1, -1, 45, -1, -1 },
    { NULL, "LEduStanfordNlpUtilConcurrentSynchronizedInterner;", 0x9, 46, 47, -1, 48, -1, -1 },
    { NULL, "LEduStanfordNlpUtilConcurrentSynchronizedInterner;", 0x9, 46, 49, -1, 50, -1, -1 },
    { NULL, "LJavaLangRefWeakReference;", 0x9, 51, 52, -1, 53, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(newArrayList);
  methods[2].selector = @selector(newArrayListWithInt:);
  methods[3].selector = @selector(newArrayListWithJavaUtilCollection:);
  methods[4].selector = @selector(newLinkedList);
  methods[5].selector = @selector(newLinkedListWithJavaUtilCollection:);
  methods[6].selector = @selector(newStack);
  methods[7].selector = @selector(newBinaryHeapPriorityQueue);
  methods[8].selector = @selector(newTreeSet);
  methods[9].selector = @selector(newTreeSetWithJavaUtilComparator:);
  methods[10].selector = @selector(newTreeSetWithJavaUtilSortedSet:);
  methods[11].selector = @selector(getHashSetClass);
  methods[12].selector = @selector(getHashSetSizeConstructor);
  methods[13].selector = @selector(getHashSetCollectionConstructor);
  methods[14].selector = @selector(newHashSet);
  methods[15].selector = @selector(newHashSetWithInt:);
  methods[16].selector = @selector(newHashSetWithJavaUtilCollection:);
  methods[17].selector = @selector(getHashMapClass);
  methods[18].selector = @selector(getHashMapSizeConstructor);
  methods[19].selector = @selector(getHashMapFromMapConstructor);
  methods[20].selector = @selector(newHashMap);
  methods[21].selector = @selector(newHashMapWithInt:);
  methods[22].selector = @selector(newHashMapWithJavaUtilMap:);
  methods[23].selector = @selector(newIdentityHashMap);
  methods[24].selector = @selector(newIdentityHashSet);
  methods[25].selector = @selector(newWeakHashMap);
  methods[26].selector = @selector(newConcurrentHashMap);
  methods[27].selector = @selector(newConcurrentHashMapWithInt:);
  methods[28].selector = @selector(newConcurrentHashMapWithInt:withFloat:withInt:);
  methods[29].selector = @selector(newTreeMap);
  methods[30].selector = @selector(newIndex);
  methods[31].selector = @selector(newConcurrentHashSet);
  methods[32].selector = @selector(newConcurrentHashSetWithJavaUtilSet:);
  methods[33].selector = @selector(newPairWithId:withId:);
  methods[34].selector = @selector(newTripleWithId:withId:withId:);
  methods[35].selector = @selector(newInterner);
  methods[36].selector = @selector(newSynchronizedInternerWithEduStanfordNlpUtilInterner:);
  methods[37].selector = @selector(newSynchronizedInternerWithEduStanfordNlpUtilInterner:withId:);
  methods[38].selector = @selector(newWeakReferenceWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "HASH_SET_PROPERTY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 54, -1, -1 },
    { "HASH_SET_CLASSNAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 55, -1, -1 },
    { "HASH_SET_CLASS", "LIOSClass;", .constantValue.asLong = 0, 0x1a, -1, 56, 57, -1 },
    { "HASH_SET_SIZE_CONSTRUCTOR", "LJavaLangReflectConstructor;", .constantValue.asLong = 0, 0x1a, -1, 58, -1, -1 },
    { "HASH_SET_COLLECTION_CONSTRUCTOR", "LJavaLangReflectConstructor;", .constantValue.asLong = 0, 0x1a, -1, 59, -1, -1 },
    { "HASH_MAP_PROPERTY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 60, -1, -1 },
    { "HASH_MAP_CLASSNAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 61, -1, -1 },
    { "HASH_MAP_CLASS", "LIOSClass;", .constantValue.asLong = 0, 0x1a, -1, 62, 57, -1 },
    { "HASH_MAP_SIZE_CONSTRUCTOR", "LJavaLangReflectConstructor;", .constantValue.asLong = 0, 0x1a, -1, 63, -1, -1 },
    { "HASH_MAP_FROM_MAP_CONSTRUCTOR", "LJavaLangReflectConstructor;", .constantValue.asLong = 0, 0x1a, -1, 64, -1, -1 },
  };
  static const void *ptrTable[] = { "<E:Ljava/lang/Object;>()Ljava/util/ArrayList<TE;>;", "newArrayList", "I", "<E:Ljava/lang/Object;>(I)Ljava/util/ArrayList<TE;>;", "LJavaUtilCollection;", "<E:Ljava/lang/Object;>(Ljava/util/Collection<+TE;>;)Ljava/util/ArrayList<TE;>;", "<E:Ljava/lang/Object;>()Ljava/util/LinkedList<TE;>;", "newLinkedList", "<E:Ljava/lang/Object;>(Ljava/util/Collection<+TE;>;)Ljava/util/LinkedList<TE;>;", "<E:Ljava/lang/Object;>()Ljava/util/Stack<TE;>;", "<E:Ljava/lang/Object;>()Ledu/stanford/nlp/util/BinaryHeapPriorityQueue<TE;>;", "<E:Ljava/lang/Object;>()Ljava/util/TreeSet<TE;>;", "newTreeSet", "LJavaUtilComparator;", "<E:Ljava/lang/Object;>(Ljava/util/Comparator<-TE;>;)Ljava/util/TreeSet<TE;>;", "LJavaUtilSortedSet;", "<E:Ljava/lang/Object;>(Ljava/util/SortedSet<TE;>;)Ljava/util/TreeSet<TE;>;", "<E:Ljava/lang/Object;>()Ljava/util/Set<TE;>;", "newHashSet", "<E:Ljava/lang/Object;>(I)Ljava/util/Set<TE;>;", "<E:Ljava/lang/Object;>(Ljava/util/Collection<+TE;>;)Ljava/util/Set<TE;>;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>()Ljava/util/Map<TK;TV;>;", "newHashMap", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(I)Ljava/util/Map<TK;TV;>;", "LJavaUtilMap;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/Map<+TK;+TV;>;)Ljava/util/Map<TK;TV;>;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>()Ljava/util/IdentityHashMap<TK;TV;>;", "<K:Ljava/lang/Object;>()Ljava/util/Set<TK;>;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>()Ljava/util/WeakHashMap<TK;TV;>;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>()Ljava/util/concurrent/ConcurrentHashMap<TK;TV;>;", "newConcurrentHashMap", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(I)Ljava/util/concurrent/ConcurrentHashMap<TK;TV;>;", "IFI", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(IFI)Ljava/util/concurrent/ConcurrentHashMap<TK;TV;>;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>()Ljava/util/TreeMap<TK;TV;>;", "<E:Ljava/lang/Object;>()Ledu/stanford/nlp/util/Index<TE;>;", "newConcurrentHashSet", "LJavaUtilSet;", "<E:Ljava/lang/Object;>(Ljava/util/Set<TE;>;)Ljava/util/Set<TE;>;", "newPair", "LNSObject;LNSObject;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;>(TT1;TT2;)Ledu/stanford/nlp/util/Pair<TT1;TT2;>;", "newTriple", "LNSObject;LNSObject;LNSObject;", "<T1:Ljava/lang/Object;T2:Ljava/lang/Object;T3:Ljava/lang/Object;>(TT1;TT2;TT3;)Ledu/stanford/nlp/util/Triple<TT1;TT2;TT3;>;", "<T:Ljava/lang/Object;>()Ledu/stanford/nlp/util/Interner<TT;>;", "newSynchronizedInterner", "LEduStanfordNlpUtilInterner;", "<T:Ljava/lang/Object;>(Ledu/stanford/nlp/util/Interner<TT;>;)Ledu/stanford/nlp/util/concurrent/SynchronizedInterner<TT;>;", "LEduStanfordNlpUtilInterner;LNSObject;", "<T:Ljava/lang/Object;>(Ledu/stanford/nlp/util/Interner<TT;>;Ljava/lang/Object;)Ledu/stanford/nlp/util/concurrent/SynchronizedInterner<TT;>;", "newWeakReference", "LNSObject;", "<T:Ljava/lang/Object;>(TT;)Ljava/lang/ref/WeakReference<TT;>;", &EduStanfordNlpUtilGenerics_HASH_SET_PROPERTY, &EduStanfordNlpUtilGenerics_HASH_SET_CLASSNAME, &EduStanfordNlpUtilGenerics_HASH_SET_CLASS, "Ljava/lang/Class<*>;", &EduStanfordNlpUtilGenerics_HASH_SET_SIZE_CONSTRUCTOR, &EduStanfordNlpUtilGenerics_HASH_SET_COLLECTION_CONSTRUCTOR, &EduStanfordNlpUtilGenerics_HASH_MAP_PROPERTY, &EduStanfordNlpUtilGenerics_HASH_MAP_CLASSNAME, &EduStanfordNlpUtilGenerics_HASH_MAP_CLASS, &EduStanfordNlpUtilGenerics_HASH_MAP_SIZE_CONSTRUCTOR, &EduStanfordNlpUtilGenerics_HASH_MAP_FROM_MAP_CONSTRUCTOR };
  static const J2ObjcClassInfo _EduStanfordNlpUtilGenerics = { "Generics", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0x1, 39, 10, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpUtilGenerics;
}

+ (void)initialize {
  if (self == [EduStanfordNlpUtilGenerics class]) {
    EduStanfordNlpUtilGenerics_HASH_SET_CLASSNAME = JavaLangSystem_getPropertyWithNSString_(EduStanfordNlpUtilGenerics_HASH_SET_PROPERTY);
    EduStanfordNlpUtilGenerics_HASH_SET_CLASS = EduStanfordNlpUtilGenerics_getHashSetClass();
    EduStanfordNlpUtilGenerics_HASH_SET_SIZE_CONSTRUCTOR = EduStanfordNlpUtilGenerics_getHashSetSizeConstructor();
    EduStanfordNlpUtilGenerics_HASH_SET_COLLECTION_CONSTRUCTOR = EduStanfordNlpUtilGenerics_getHashSetCollectionConstructor();
    EduStanfordNlpUtilGenerics_HASH_MAP_CLASSNAME = JavaLangSystem_getPropertyWithNSString_(EduStanfordNlpUtilGenerics_HASH_MAP_PROPERTY);
    EduStanfordNlpUtilGenerics_HASH_MAP_CLASS = EduStanfordNlpUtilGenerics_getHashMapClass();
    EduStanfordNlpUtilGenerics_HASH_MAP_SIZE_CONSTRUCTOR = EduStanfordNlpUtilGenerics_getHashMapSizeConstructor();
    EduStanfordNlpUtilGenerics_HASH_MAP_FROM_MAP_CONSTRUCTOR = EduStanfordNlpUtilGenerics_getHashMapFromMapConstructor();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpUtilGenerics)
  }
}

@end

void EduStanfordNlpUtilGenerics_init(EduStanfordNlpUtilGenerics *self) {
  NSObject_init(self);
}

EduStanfordNlpUtilGenerics *new_EduStanfordNlpUtilGenerics_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilGenerics, init)
}

EduStanfordNlpUtilGenerics *create_EduStanfordNlpUtilGenerics_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilGenerics, init)
}

JavaUtilArrayList *EduStanfordNlpUtilGenerics_newArrayList() {
  EduStanfordNlpUtilGenerics_initialize();
  return new_JavaUtilArrayList_init();
}

JavaUtilArrayList *EduStanfordNlpUtilGenerics_newArrayListWithInt_(jint size) {
  EduStanfordNlpUtilGenerics_initialize();
  return new_JavaUtilArrayList_initWithInt_(size);
}

JavaUtilArrayList *EduStanfordNlpUtilGenerics_newArrayListWithJavaUtilCollection_(id<JavaUtilCollection> c) {
  EduStanfordNlpUtilGenerics_initialize();
  return new_JavaUtilArrayList_initWithJavaUtilCollection_(c);
}

JavaUtilLinkedList *EduStanfordNlpUtilGenerics_newLinkedList() {
  EduStanfordNlpUtilGenerics_initialize();
  return new_JavaUtilLinkedList_init();
}

JavaUtilLinkedList *EduStanfordNlpUtilGenerics_newLinkedListWithJavaUtilCollection_(id<JavaUtilCollection> c) {
  EduStanfordNlpUtilGenerics_initialize();
  return new_JavaUtilLinkedList_initWithJavaUtilCollection_(c);
}

JavaUtilStack *EduStanfordNlpUtilGenerics_newStack() {
  EduStanfordNlpUtilGenerics_initialize();
  return new_JavaUtilStack_init();
}

EduStanfordNlpUtilBinaryHeapPriorityQueue *EduStanfordNlpUtilGenerics_newBinaryHeapPriorityQueue() {
  EduStanfordNlpUtilGenerics_initialize();
  return new_EduStanfordNlpUtilBinaryHeapPriorityQueue_init();
}

JavaUtilTreeSet *EduStanfordNlpUtilGenerics_newTreeSet() {
  EduStanfordNlpUtilGenerics_initialize();
  return new_JavaUtilTreeSet_init();
}

JavaUtilTreeSet *EduStanfordNlpUtilGenerics_newTreeSetWithJavaUtilComparator_(id<JavaUtilComparator> comparator) {
  EduStanfordNlpUtilGenerics_initialize();
  return new_JavaUtilTreeSet_initWithJavaUtilComparator_(comparator);
}

JavaUtilTreeSet *EduStanfordNlpUtilGenerics_newTreeSetWithJavaUtilSortedSet_(id<JavaUtilSortedSet> s) {
  EduStanfordNlpUtilGenerics_initialize();
  return new_JavaUtilTreeSet_initWithJavaUtilSortedSet_(s);
}

IOSClass *EduStanfordNlpUtilGenerics_getHashSetClass() {
  EduStanfordNlpUtilGenerics_initialize();
  @try {
    if (EduStanfordNlpUtilGenerics_HASH_SET_CLASSNAME == nil) {
      return JavaUtilHashSet_class_();
    }
    else {
      return IOSClass_forName_(EduStanfordNlpUtilGenerics_HASH_SET_CLASSNAME);
    }
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
}

JavaLangReflectConstructor *EduStanfordNlpUtilGenerics_getHashSetSizeConstructor() {
  EduStanfordNlpUtilGenerics_initialize();
  @try {
    return [((IOSClass *) nil_chk(EduStanfordNlpUtilGenerics_HASH_SET_CLASS)) getConstructor:[IOSObjectArray newArrayWithObjects:(id[]){ JreLoadStatic(JavaLangInteger, TYPE) } count:1 type:IOSClass_class_()]];
  }
  @catch (JavaLangException *e) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@$", @"Warning: could not find a constructor for objects of ", EduStanfordNlpUtilGenerics_HASH_SET_CLASS, @" which takes an integer argument.  Will use the no argument constructor instead.")];
  }
  return nil;
}

JavaLangReflectConstructor *EduStanfordNlpUtilGenerics_getHashSetCollectionConstructor() {
  EduStanfordNlpUtilGenerics_initialize();
  @try {
    return [((IOSClass *) nil_chk(EduStanfordNlpUtilGenerics_HASH_SET_CLASS)) getConstructor:[IOSObjectArray newArrayWithObjects:(id[]){ JavaUtilCollection_class_() } count:1 type:IOSClass_class_()]];
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_withNSException_(JreStrcat("$@$", @"Error: could not find a constructor for objects of ", EduStanfordNlpUtilGenerics_HASH_SET_CLASS, @" which takes an existing collection argument."), e);
  }
}

id<JavaUtilSet> EduStanfordNlpUtilGenerics_newHashSet() {
  EduStanfordNlpUtilGenerics_initialize();
  @try {
    return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_([((IOSClass *) nil_chk(EduStanfordNlpUtilGenerics_HASH_SET_CLASS)) newInstance]);
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
}

id<JavaUtilSet> EduStanfordNlpUtilGenerics_newHashSetWithInt_(jint initialCapacity) {
  EduStanfordNlpUtilGenerics_initialize();
  if (EduStanfordNlpUtilGenerics_HASH_SET_SIZE_CONSTRUCTOR == nil) {
    return EduStanfordNlpUtilGenerics_newHashSet();
  }
  @try {
    return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_([EduStanfordNlpUtilGenerics_HASH_SET_SIZE_CONSTRUCTOR newInstanceWithNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(initialCapacity) } count:1 type:NSObject_class_()]]);
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
}

id<JavaUtilSet> EduStanfordNlpUtilGenerics_newHashSetWithJavaUtilCollection_(id<JavaUtilCollection> c) {
  EduStanfordNlpUtilGenerics_initialize();
  @try {
    return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_([((JavaLangReflectConstructor *) nil_chk(EduStanfordNlpUtilGenerics_HASH_SET_COLLECTION_CONSTRUCTOR)) newInstanceWithNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ c } count:1 type:NSObject_class_()]]);
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
}

IOSClass *EduStanfordNlpUtilGenerics_getHashMapClass() {
  EduStanfordNlpUtilGenerics_initialize();
  @try {
    if (EduStanfordNlpUtilGenerics_HASH_MAP_CLASSNAME == nil) {
      return JavaUtilHashMap_class_();
    }
    else {
      return IOSClass_forName_(EduStanfordNlpUtilGenerics_HASH_MAP_CLASSNAME);
    }
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
}

JavaLangReflectConstructor *EduStanfordNlpUtilGenerics_getHashMapSizeConstructor() {
  EduStanfordNlpUtilGenerics_initialize();
  @try {
    return [((IOSClass *) nil_chk(EduStanfordNlpUtilGenerics_HASH_MAP_CLASS)) getConstructor:[IOSObjectArray newArrayWithObjects:(id[]){ JreLoadStatic(JavaLangInteger, TYPE) } count:1 type:IOSClass_class_()]];
  }
  @catch (JavaLangException *e) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@$", @"Warning: could not find a constructor for objects of ", EduStanfordNlpUtilGenerics_HASH_MAP_CLASS, @" which takes an integer argument.  Will use the no argument constructor instead.")];
  }
  return nil;
}

JavaLangReflectConstructor *EduStanfordNlpUtilGenerics_getHashMapFromMapConstructor() {
  EduStanfordNlpUtilGenerics_initialize();
  @try {
    return [((IOSClass *) nil_chk(EduStanfordNlpUtilGenerics_HASH_MAP_CLASS)) getConstructor:[IOSObjectArray newArrayWithObjects:(id[]){ JavaUtilMap_class_() } count:1 type:IOSClass_class_()]];
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_withNSException_(JreStrcat("$@$", @"Error: could not find a constructor for objects of ", EduStanfordNlpUtilGenerics_HASH_MAP_CLASS, @" which takes an existing Map argument."), e);
  }
}

id<JavaUtilMap> EduStanfordNlpUtilGenerics_newHashMap() {
  EduStanfordNlpUtilGenerics_initialize();
  @try {
    return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_([((IOSClass *) nil_chk(EduStanfordNlpUtilGenerics_HASH_MAP_CLASS)) newInstance]);
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
}

id<JavaUtilMap> EduStanfordNlpUtilGenerics_newHashMapWithInt_(jint initialCapacity) {
  EduStanfordNlpUtilGenerics_initialize();
  if (EduStanfordNlpUtilGenerics_HASH_MAP_SIZE_CONSTRUCTOR == nil) {
    return EduStanfordNlpUtilGenerics_newHashMap();
  }
  @try {
    return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_([EduStanfordNlpUtilGenerics_HASH_MAP_SIZE_CONSTRUCTOR newInstanceWithNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(initialCapacity) } count:1 type:NSObject_class_()]]);
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
}

id<JavaUtilMap> EduStanfordNlpUtilGenerics_newHashMapWithJavaUtilMap_(id<JavaUtilMap> m) {
  EduStanfordNlpUtilGenerics_initialize();
  @try {
    return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_([((JavaLangReflectConstructor *) nil_chk(EduStanfordNlpUtilGenerics_HASH_MAP_FROM_MAP_CONSTRUCTOR)) newInstanceWithNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ m } count:1 type:NSObject_class_()]]);
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
}

JavaUtilIdentityHashMap *EduStanfordNlpUtilGenerics_newIdentityHashMap() {
  EduStanfordNlpUtilGenerics_initialize();
  return new_JavaUtilIdentityHashMap_init();
}

id<JavaUtilSet> EduStanfordNlpUtilGenerics_newIdentityHashSet() {
  EduStanfordNlpUtilGenerics_initialize();
  return JavaUtilCollections_newSetFromMapWithJavaUtilMap_(EduStanfordNlpUtilGenerics_newIdentityHashMap());
}

JavaUtilWeakHashMap *EduStanfordNlpUtilGenerics_newWeakHashMap() {
  EduStanfordNlpUtilGenerics_initialize();
  return new_JavaUtilWeakHashMap_init();
}

JavaUtilConcurrentConcurrentHashMap *EduStanfordNlpUtilGenerics_newConcurrentHashMap() {
  EduStanfordNlpUtilGenerics_initialize();
  return new_JavaUtilConcurrentConcurrentHashMap_init();
}

JavaUtilConcurrentConcurrentHashMap *EduStanfordNlpUtilGenerics_newConcurrentHashMapWithInt_(jint initialCapacity) {
  EduStanfordNlpUtilGenerics_initialize();
  return new_JavaUtilConcurrentConcurrentHashMap_initWithInt_(initialCapacity);
}

JavaUtilConcurrentConcurrentHashMap *EduStanfordNlpUtilGenerics_newConcurrentHashMapWithInt_withFloat_withInt_(jint initialCapacity, jfloat loadFactor, jint concurrencyLevel) {
  EduStanfordNlpUtilGenerics_initialize();
  return new_JavaUtilConcurrentConcurrentHashMap_initWithInt_withFloat_withInt_(initialCapacity, loadFactor, concurrencyLevel);
}

JavaUtilTreeMap *EduStanfordNlpUtilGenerics_newTreeMap() {
  EduStanfordNlpUtilGenerics_initialize();
  return new_JavaUtilTreeMap_init();
}

id<EduStanfordNlpUtilIndex> EduStanfordNlpUtilGenerics_newIndex() {
  EduStanfordNlpUtilGenerics_initialize();
  return new_EduStanfordNlpUtilHashIndex_init();
}

id<JavaUtilSet> EduStanfordNlpUtilGenerics_newConcurrentHashSet() {
  EduStanfordNlpUtilGenerics_initialize();
  return JavaUtilCollections_newSetFromMapWithJavaUtilMap_(new_JavaUtilConcurrentConcurrentHashMap_init());
}

id<JavaUtilSet> EduStanfordNlpUtilGenerics_newConcurrentHashSetWithJavaUtilSet_(id<JavaUtilSet> set) {
  EduStanfordNlpUtilGenerics_initialize();
  id<JavaUtilSet> ret = JavaUtilCollections_newSetFromMapWithJavaUtilMap_(new_JavaUtilConcurrentConcurrentHashMap_init());
  [((id<JavaUtilSet>) nil_chk(ret)) addAllWithJavaUtilCollection:set];
  return ret;
}

EduStanfordNlpUtilPair *EduStanfordNlpUtilGenerics_newPairWithId_withId_(id first, id second) {
  EduStanfordNlpUtilGenerics_initialize();
  return new_EduStanfordNlpUtilPair_initWithId_withId_(first, second);
}

EduStanfordNlpUtilTriple *EduStanfordNlpUtilGenerics_newTripleWithId_withId_withId_(id first, id second, id third) {
  EduStanfordNlpUtilGenerics_initialize();
  return new_EduStanfordNlpUtilTriple_initWithId_withId_withId_(first, second, third);
}

EduStanfordNlpUtilInterner *EduStanfordNlpUtilGenerics_newInterner() {
  EduStanfordNlpUtilGenerics_initialize();
  return new_EduStanfordNlpUtilInterner_init();
}

EduStanfordNlpUtilConcurrentSynchronizedInterner *EduStanfordNlpUtilGenerics_newSynchronizedInternerWithEduStanfordNlpUtilInterner_(EduStanfordNlpUtilInterner *interner) {
  EduStanfordNlpUtilGenerics_initialize();
  return new_EduStanfordNlpUtilConcurrentSynchronizedInterner_initWithEduStanfordNlpUtilInterner_(interner);
}

EduStanfordNlpUtilConcurrentSynchronizedInterner *EduStanfordNlpUtilGenerics_newSynchronizedInternerWithEduStanfordNlpUtilInterner_withId_(EduStanfordNlpUtilInterner *interner, id mutex) {
  EduStanfordNlpUtilGenerics_initialize();
  return new_EduStanfordNlpUtilConcurrentSynchronizedInterner_initWithEduStanfordNlpUtilInterner_withId_(interner, mutex);
}

JavaLangRefWeakReference *EduStanfordNlpUtilGenerics_newWeakReferenceWithId_(id referent) {
  EduStanfordNlpUtilGenerics_initialize();
  return new_JavaLangRefWeakReference_initWithId_(referent);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilGenerics)
