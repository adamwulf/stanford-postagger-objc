//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/MetaClass.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/io/IOUtils.h"
#include "edu/stanford/nlp/io/RuntimeIOException.h"
#include "edu/stanford/nlp/ling/CoreLabel.h"
#include "edu/stanford/nlp/ling/LabelFactory.h"
#include "edu/stanford/nlp/trees/LabeledScoredTreeFactory.h"
#include "edu/stanford/nlp/trees/PennTreeReader.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/util/ErasureUtils.h"
#include "edu/stanford/nlp/util/Lazy.h"
#include "edu/stanford/nlp/util/MetaClass.h"
#include "edu/stanford/nlp/util/StringUtils.h"
#include "java/io/BufferedReader.h"
#include "java/io/File.h"
#include "java/io/FileOutputStream.h"
#include "java/io/FileReader.h"
#include "java/io/FileWriter.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/io/OutputStream.h"
#include "java/io/PrintStream.h"
#include "java/io/PrintWriter.h"
#include "java/io/StringReader.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Character.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/Exception.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Short.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/lang/reflect/Array.h"
#include "java/lang/reflect/Constructor.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/lang/reflect/Method.h"
#include "java/lang/reflect/Modifier.h"
#include "java/lang/reflect/ParameterizedType.h"
#include "java/lang/reflect/Type.h"
#include "java/lang/reflect/TypeVariable.h"
#include "java/lang/reflect/WildcardType.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Calendar.h"
#include "java/util/Collection.h"
#include "java/util/Date.h"
#include "java/util/Deque.h"
#include "java/util/GregorianCalendar.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Optional.h"
#include "java/util/Queue.h"
#include "java/util/Set.h"
#include "java/util/function/Supplier.h"

@interface EduStanfordNlpUtilMetaClass () {
 @public
  NSString *classname_;
}

+ (IOSClass *)type2classWithJavaLangReflectType:(id<JavaLangReflectType>)type;

+ (id)argminWithNSObjectArray:(IOSObjectArray *)elems
                 withIntArray:(IOSIntArray *)scores
                      withInt:(jint)atLeast;

+ (jint)argminWithIntArray:(IOSIntArray *)scores
                   withInt:(jint)atLeast;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpUtilMetaClass, classname_, NSString *)

inline JavaUtilHashMap *EduStanfordNlpUtilMetaClass_get_abstractToConcreteCollectionMap();
static JavaUtilHashMap *EduStanfordNlpUtilMetaClass_abstractToConcreteCollectionMap;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpUtilMetaClass, abstractToConcreteCollectionMap, JavaUtilHashMap *)

__attribute__((unused)) static IOSClass *EduStanfordNlpUtilMetaClass_type2classWithJavaLangReflectType_(id<JavaLangReflectType> type);

__attribute__((unused)) static id EduStanfordNlpUtilMetaClass_argminWithNSObjectArray_withIntArray_withInt_(IOSObjectArray *elems, IOSIntArray *scores, jint atLeast);

__attribute__((unused)) static jint EduStanfordNlpUtilMetaClass_argminWithIntArray_withInt_(IOSIntArray *scores, jint atLeast);

@interface EduStanfordNlpUtilMetaClass_ClassCreationException ()

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)msg;

- (instancetype)initWithNSException:(NSException *)cause;

- (instancetype)initWithNSString:(NSString *)msg
                 withNSException:(NSException *)cause;

@end

inline jlong EduStanfordNlpUtilMetaClass_ClassCreationException_get_serialVersionUID();
#define EduStanfordNlpUtilMetaClass_ClassCreationException_serialVersionUID -5980065992461870357LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpUtilMetaClass_ClassCreationException, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpUtilMetaClass_ClassCreationException_init(EduStanfordNlpUtilMetaClass_ClassCreationException *self);

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ClassCreationException *new_EduStanfordNlpUtilMetaClass_ClassCreationException_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ClassCreationException *create_EduStanfordNlpUtilMetaClass_ClassCreationException_init();

__attribute__((unused)) static void EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSString_(EduStanfordNlpUtilMetaClass_ClassCreationException *self, NSString *msg);

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ClassCreationException *new_EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ClassCreationException *create_EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSString_(NSString *msg);

__attribute__((unused)) static void EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSException_(EduStanfordNlpUtilMetaClass_ClassCreationException *self, NSException *cause);

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ClassCreationException *new_EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSException_(NSException *cause) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ClassCreationException *create_EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSException_(NSException *cause);

__attribute__((unused)) static void EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSString_withNSException_(EduStanfordNlpUtilMetaClass_ClassCreationException *self, NSString *msg, NSException *cause);

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ClassCreationException *new_EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSString_withNSException_(NSString *msg, NSException *cause) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ClassCreationException *create_EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSString_withNSException_(NSString *msg, NSException *cause);

@interface EduStanfordNlpUtilMetaClass_ConstructorNotFoundException ()

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)msg;

- (instancetype)initWithNSException:(NSException *)cause;

- (instancetype)initWithNSString:(NSString *)msg
                 withNSException:(NSException *)cause;

@end

inline jlong EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_get_serialVersionUID();
#define EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_serialVersionUID -5980065992461870357LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpUtilMetaClass_ConstructorNotFoundException, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_init(EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *self);

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *new_EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *create_EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_init();

__attribute__((unused)) static void EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSString_(EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *self, NSString *msg);

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *new_EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *create_EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSString_(NSString *msg);

__attribute__((unused)) static void EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSException_(EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *self, NSException *cause);

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *new_EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSException_(NSException *cause) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *create_EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSException_(NSException *cause);

__attribute__((unused)) static void EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSString_withNSException_(EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *self, NSString *msg, NSException *cause);

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *new_EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSString_withNSException_(NSString *msg, NSException *cause) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *create_EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSString_withNSException_(NSString *msg, NSException *cause);

@interface EduStanfordNlpUtilMetaClass_ClassFactory () {
 @public
  IOSObjectArray *classParams_;
  IOSClass *cl_;
  JavaLangReflectConstructor *constructor_;
}

+ (jboolean)samePrimitiveWithIOSClass:(IOSClass *)a
                         withIOSClass:(IOSClass *)b;

+ (jint)superDistanceWithIOSClass:(IOSClass *)candidate
                     withIOSClass:(IOSClass *)target;

- (void)constructWithNSString:(NSString *)classname
            withIOSClassArray:(IOSObjectArray *)params;

- (instancetype)initWithNSString:(NSString *)classname
               withIOSClassArray:(IOSObjectArray *)params;

- (instancetype)initWithNSString:(NSString *)classname
               withNSObjectArray:(IOSObjectArray *)params;

- (instancetype)initWithNSString:(NSString *)classname
               withNSStringArray:(IOSObjectArray *)params;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpUtilMetaClass_ClassFactory, classParams_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(EduStanfordNlpUtilMetaClass_ClassFactory, cl_, IOSClass *)
J2OBJC_FIELD_SETTER(EduStanfordNlpUtilMetaClass_ClassFactory, constructor_, JavaLangReflectConstructor *)

__attribute__((unused)) static jboolean EduStanfordNlpUtilMetaClass_ClassFactory_samePrimitiveWithIOSClass_withIOSClass_(IOSClass *a, IOSClass *b);

__attribute__((unused)) static jint EduStanfordNlpUtilMetaClass_ClassFactory_superDistanceWithIOSClass_withIOSClass_(IOSClass *candidate, IOSClass *target);

__attribute__((unused)) static void EduStanfordNlpUtilMetaClass_ClassFactory_constructWithNSString_withIOSClassArray_(EduStanfordNlpUtilMetaClass_ClassFactory *self, NSString *classname, IOSObjectArray *params);

__attribute__((unused)) static void EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withIOSClassArray_(EduStanfordNlpUtilMetaClass_ClassFactory *self, NSString *classname, IOSObjectArray *params);

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ClassFactory *new_EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withIOSClassArray_(NSString *classname, IOSObjectArray *params) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ClassFactory *create_EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withIOSClassArray_(NSString *classname, IOSObjectArray *params);

__attribute__((unused)) static void EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withNSObjectArray_(EduStanfordNlpUtilMetaClass_ClassFactory *self, NSString *classname, IOSObjectArray *params);

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ClassFactory *new_EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withNSObjectArray_(NSString *classname, IOSObjectArray *params) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ClassFactory *create_EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withNSObjectArray_(NSString *classname, IOSObjectArray *params);

__attribute__((unused)) static void EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withNSStringArray_(EduStanfordNlpUtilMetaClass_ClassFactory *self, NSString *classname, IOSObjectArray *params);

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ClassFactory *new_EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withNSStringArray_(NSString *classname, IOSObjectArray *params) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_ClassFactory *create_EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withNSStringArray_(NSString *classname, IOSObjectArray *params);

@interface EduStanfordNlpUtilMetaClass_$Lambda$1 : NSObject < JavaUtilFunctionSupplier > {
 @public
  NSString *val$v_;
}

- (id)get;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilMetaClass_$Lambda$1)

J2OBJC_FIELD_SETTER(EduStanfordNlpUtilMetaClass_$Lambda$1, val$v_, NSString *)

__attribute__((unused)) static void EduStanfordNlpUtilMetaClass_$Lambda$1_initWithNSString_(EduStanfordNlpUtilMetaClass_$Lambda$1 *self, NSString *capture$0);

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_$Lambda$1 *new_EduStanfordNlpUtilMetaClass_$Lambda$1_initWithNSString_(NSString *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilMetaClass_$Lambda$1 *create_EduStanfordNlpUtilMetaClass_$Lambda$1_initWithNSString_(NSString *capture$0);

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpUtilMetaClass)

@implementation EduStanfordNlpUtilMetaClass

- (instancetype)initWithNSString:(NSString *)classname {
  EduStanfordNlpUtilMetaClass_initWithNSString_(self, classname);
  return self;
}

- (instancetype)initWithIOSClass:(IOSClass *)classname {
  EduStanfordNlpUtilMetaClass_initWithIOSClass_(self, classname);
  return self;
}

- (EduStanfordNlpUtilMetaClass_ClassFactory *)createFactoryWithIOSClassArray:(IOSObjectArray *)classes {
  @try {
    return new_EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withIOSClassArray_(classname_, classes);
  }
  @catch (EduStanfordNlpUtilMetaClass_ClassCreationException *e) {
    @throw e;
  }
  @catch (JavaLangException *e) {
    @throw new_EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSException_(e);
  }
}

- (EduStanfordNlpUtilMetaClass_ClassFactory *)createFactoryWithNSStringArray:(IOSObjectArray *)classes {
  @try {
    return new_EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withNSStringArray_(classname_, classes);
  }
  @catch (EduStanfordNlpUtilMetaClass_ClassCreationException *e) {
    @throw e;
  }
  @catch (JavaLangException *e) {
    @throw new_EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSException_(e);
  }
}

- (EduStanfordNlpUtilMetaClass_ClassFactory *)createFactoryWithNSObjectArray:(IOSObjectArray *)objects {
  @try {
    return new_EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withNSObjectArray_(classname_, objects);
  }
  @catch (EduStanfordNlpUtilMetaClass_ClassCreationException *e) {
    @throw e;
  }
  @catch (JavaLangException *e) {
    @throw new_EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSException_(e);
  }
}

- (id)createInstanceWithNSObjectArray:(IOSObjectArray *)objects {
  EduStanfordNlpUtilMetaClass_ClassFactory *fact = [self createFactoryWithNSObjectArray:objects];
  return [((EduStanfordNlpUtilMetaClass_ClassFactory *) nil_chk(fact)) createInstanceWithNSObjectArray:objects];
}

- (id)createInstanceWithIOSClass:(IOSClass *)type
               withNSObjectArray:(IOSObjectArray *)params {
  id obj = [self createInstanceWithNSObjectArray:params];
  if ([((IOSClass *) nil_chk(type)) isInstance:obj]) {
    return obj;
  }
  else {
    @throw new_EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSString_(JreStrcat("$$$$", @"Cannot cast ", classname_, @" into ", [type getName]));
  }
}

- (jboolean)checkConstructorWithNSObjectArray:(IOSObjectArray *)params {
  @try {
    (void) [self createInstanceWithNSObjectArray:params];
    return true;
  }
  @catch (EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *e) {
    return false;
  }
}

- (NSString *)description {
  return classname_;
}

- (jboolean)isEqual:(id)o {
  if ([o isKindOfClass:[EduStanfordNlpUtilMetaClass class]]) {
    return [((NSString *) nil_chk(((EduStanfordNlpUtilMetaClass *) nil_chk(((EduStanfordNlpUtilMetaClass *) cast_chk(o, [EduStanfordNlpUtilMetaClass class]))))->classname_)) isEqual:self->classname_];
  }
  return false;
}

- (NSUInteger)hash {
  return ((jint) [((NSString *) nil_chk(classname_)) hash]);
}

+ (EduStanfordNlpUtilMetaClass *)createWithNSString:(NSString *)classname {
  return EduStanfordNlpUtilMetaClass_createWithNSString_(classname);
}

+ (EduStanfordNlpUtilMetaClass *)createWithIOSClass:(IOSClass *)clazz {
  return EduStanfordNlpUtilMetaClass_createWithIOSClass_(clazz);
}

+ (IOSClass *)type2classWithJavaLangReflectType:(id<JavaLangReflectType>)type {
  return EduStanfordNlpUtilMetaClass_type2classWithJavaLangReflectType_(type);
}

+ (id)castWithNSString:(NSString *)value
withJavaLangReflectType:(id<JavaLangReflectType>)type {
  return EduStanfordNlpUtilMetaClass_castWithNSString_withJavaLangReflectType_(value, type);
}

+ (id)castWithoutKnowingTypeWithNSString:(NSString *)value {
  return EduStanfordNlpUtilMetaClass_castWithoutKnowingTypeWithNSString_(value);
}

+ (id)argminWithNSObjectArray:(IOSObjectArray *)elems
                 withIntArray:(IOSIntArray *)scores
                      withInt:(jint)atLeast {
  return EduStanfordNlpUtilMetaClass_argminWithNSObjectArray_withIntArray_withInt_(elems, scores, atLeast);
}

+ (jint)argminWithIntArray:(IOSIntArray *)scores
                   withInt:(jint)atLeast {
  return EduStanfordNlpUtilMetaClass_argminWithIntArray_withInt_(scores, atLeast);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpUtilMetaClass_ClassFactory;", 0x81, 3, 4, -1, 5, -1, -1 },
    { NULL, "LEduStanfordNlpUtilMetaClass_ClassFactory;", 0x81, 3, 6, -1, 7, -1, -1 },
    { NULL, "LEduStanfordNlpUtilMetaClass_ClassFactory;", 0x81, 3, 8, -1, 9, -1, -1 },
    { NULL, "LNSObject;", 0x81, 10, 8, -1, 11, -1, -1 },
    { NULL, "LNSObject;", 0x81, 10, 12, -1, 13, -1, -1 },
    { NULL, "Z", 0x81, 14, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 15, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 18, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpUtilMetaClass;", 0x9, 19, 0, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpUtilMetaClass;", 0x9, 19, 1, -1, 20, -1, -1 },
    { NULL, "LIOSClass;", 0xa, 21, 22, -1, 23, -1, -1 },
    { NULL, "LNSObject;", 0x9, 24, 25, -1, 26, -1, -1 },
    { NULL, "LNSObject;", 0x9, 27, 0, -1, 28, -1, -1 },
    { NULL, "LNSObject;", 0xa, 29, 30, -1, 31, -1, -1 },
    { NULL, "I", 0xa, 29, 32, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithIOSClass:);
  methods[2].selector = @selector(createFactoryWithIOSClassArray:);
  methods[3].selector = @selector(createFactoryWithNSStringArray:);
  methods[4].selector = @selector(createFactoryWithNSObjectArray:);
  methods[5].selector = @selector(createInstanceWithNSObjectArray:);
  methods[6].selector = @selector(createInstanceWithIOSClass:withNSObjectArray:);
  methods[7].selector = @selector(checkConstructorWithNSObjectArray:);
  methods[8].selector = @selector(description);
  methods[9].selector = @selector(isEqual:);
  methods[10].selector = @selector(hash);
  methods[11].selector = @selector(createWithNSString:);
  methods[12].selector = @selector(createWithIOSClass:);
  methods[13].selector = @selector(type2classWithJavaLangReflectType:);
  methods[14].selector = @selector(castWithNSString:withJavaLangReflectType:);
  methods[15].selector = @selector(castWithoutKnowingTypeWithNSString:);
  methods[16].selector = @selector(argminWithNSObjectArray:withIntArray:withInt:);
  methods[17].selector = @selector(argminWithIntArray:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "classname_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "abstractToConcreteCollectionMap", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x1a, -1, 33, 34, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LIOSClass;", "(Ljava/lang/Class<*>;)V", "createFactory", "[LIOSClass;", "<E:Ljava/lang/Object;>([Ljava/lang/Class<*>;)Ledu/stanford/nlp/util/MetaClass$ClassFactory<TE;>;", "[LNSString;", "<E:Ljava/lang/Object;>([Ljava/lang/String;)Ledu/stanford/nlp/util/MetaClass$ClassFactory<TE;>;", "[LNSObject;", "<E:Ljava/lang/Object;>([Ljava/lang/Object;)Ledu/stanford/nlp/util/MetaClass$ClassFactory<TE;>;", "createInstance", "<E:Ljava/lang/Object;>([Ljava/lang/Object;)TE;", "LIOSClass;[LNSObject;", "<E:Ljava/lang/Object;F:TE;>(Ljava/lang/Class<TE;>;[Ljava/lang/Object;)TF;", "checkConstructor", "toString", "equals", "LNSObject;", "hashCode", "create", "(Ljava/lang/Class<*>;)Ledu/stanford/nlp/util/MetaClass;", "type2class", "LJavaLangReflectType;", "(Ljava/lang/reflect/Type;)Ljava/lang/Class<*>;", "cast", "LNSString;LJavaLangReflectType;", "<E:Ljava/lang/Object;>(Ljava/lang/String;Ljava/lang/reflect/Type;)TE;", "castWithoutKnowingType", "<E:Ljava/lang/Object;>(Ljava/lang/String;)TE;", "argmin", "[LNSObject;[II", "<E:Ljava/lang/Object;>([TE;[II)TE;", "[II", &EduStanfordNlpUtilMetaClass_abstractToConcreteCollectionMap, "Ljava/util/HashMap<Ljava/lang/Class;Ledu/stanford/nlp/util/MetaClass;>;", "LEduStanfordNlpUtilMetaClass_ClassCreationException;LEduStanfordNlpUtilMetaClass_ConstructorNotFoundException;LEduStanfordNlpUtilMetaClass_ClassFactory;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilMetaClass = { "MetaClass", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0x1, 18, 2, -1, 35, -1, -1, -1 };
  return &_EduStanfordNlpUtilMetaClass;
}

+ (void)initialize {
  if (self == [EduStanfordNlpUtilMetaClass class]) {
    EduStanfordNlpUtilMetaClass_abstractToConcreteCollectionMap = new_JavaUtilHashMap_init();
    {
      (void) [EduStanfordNlpUtilMetaClass_abstractToConcreteCollectionMap putWithId:JavaUtilCollection_class_() withId:EduStanfordNlpUtilMetaClass_createWithIOSClass_(JavaUtilArrayList_class_())];
      (void) [EduStanfordNlpUtilMetaClass_abstractToConcreteCollectionMap putWithId:JavaUtilList_class_() withId:EduStanfordNlpUtilMetaClass_createWithIOSClass_(JavaUtilArrayList_class_())];
      (void) [EduStanfordNlpUtilMetaClass_abstractToConcreteCollectionMap putWithId:JavaUtilSet_class_() withId:EduStanfordNlpUtilMetaClass_createWithIOSClass_(JavaUtilHashSet_class_())];
      (void) [EduStanfordNlpUtilMetaClass_abstractToConcreteCollectionMap putWithId:JavaUtilQueue_class_() withId:EduStanfordNlpUtilMetaClass_createWithIOSClass_(JavaUtilLinkedList_class_())];
      (void) [EduStanfordNlpUtilMetaClass_abstractToConcreteCollectionMap putWithId:JavaUtilDeque_class_() withId:EduStanfordNlpUtilMetaClass_createWithIOSClass_(JavaUtilLinkedList_class_())];
    }
    J2OBJC_SET_INITIALIZED(EduStanfordNlpUtilMetaClass)
  }
}

@end

void EduStanfordNlpUtilMetaClass_initWithNSString_(EduStanfordNlpUtilMetaClass *self, NSString *classname) {
  NSObject_init(self);
  self->classname_ = classname;
}

EduStanfordNlpUtilMetaClass *new_EduStanfordNlpUtilMetaClass_initWithNSString_(NSString *classname) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMetaClass, initWithNSString_, classname)
}

EduStanfordNlpUtilMetaClass *create_EduStanfordNlpUtilMetaClass_initWithNSString_(NSString *classname) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMetaClass, initWithNSString_, classname)
}

void EduStanfordNlpUtilMetaClass_initWithIOSClass_(EduStanfordNlpUtilMetaClass *self, IOSClass *classname) {
  NSObject_init(self);
  self->classname_ = [((IOSClass *) nil_chk(classname)) getName];
}

EduStanfordNlpUtilMetaClass *new_EduStanfordNlpUtilMetaClass_initWithIOSClass_(IOSClass *classname) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMetaClass, initWithIOSClass_, classname)
}

EduStanfordNlpUtilMetaClass *create_EduStanfordNlpUtilMetaClass_initWithIOSClass_(IOSClass *classname) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMetaClass, initWithIOSClass_, classname)
}

EduStanfordNlpUtilMetaClass *EduStanfordNlpUtilMetaClass_createWithNSString_(NSString *classname) {
  EduStanfordNlpUtilMetaClass_initialize();
  return new_EduStanfordNlpUtilMetaClass_initWithNSString_(classname);
}

EduStanfordNlpUtilMetaClass *EduStanfordNlpUtilMetaClass_createWithIOSClass_(IOSClass *clazz) {
  EduStanfordNlpUtilMetaClass_initialize();
  return new_EduStanfordNlpUtilMetaClass_initWithIOSClass_(clazz);
}

IOSClass *EduStanfordNlpUtilMetaClass_type2classWithJavaLangReflectType_(id<JavaLangReflectType> type) {
  EduStanfordNlpUtilMetaClass_initialize();
  if ([type isKindOfClass:[IOSClass class]]) {
    return (IOSClass *) cast_chk(type, [IOSClass class]);
  }
  else if ([JavaLangReflectParameterizedType_class_() isInstance:type]) {
    return EduStanfordNlpUtilMetaClass_type2classWithJavaLangReflectType_([((id<JavaLangReflectParameterizedType>) nil_chk(((id<JavaLangReflectParameterizedType>) cast_check(type, JavaLangReflectParameterizedType_class_())))) getRawType]);
  }
  else if ([JavaLangReflectTypeVariable_class_() isInstance:type]) {
    return EduStanfordNlpUtilMetaClass_type2classWithJavaLangReflectType_(IOSObjectArray_Get(nil_chk([((id<JavaLangReflectTypeVariable>) nil_chk(((id<JavaLangReflectTypeVariable>) cast_check(type, JavaLangReflectTypeVariable_class_())))) getBounds]), 0));
  }
  else if ([JavaLangReflectWildcardType_class_() isInstance:type]) {
    return EduStanfordNlpUtilMetaClass_type2classWithJavaLangReflectType_(IOSObjectArray_Get(nil_chk([((id<JavaLangReflectWildcardType>) nil_chk(((id<JavaLangReflectWildcardType>) cast_check(type, JavaLangReflectWildcardType_class_())))) getUpperBounds]), 0));
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"Cannot convert type to class: ", type));
  }
}

id EduStanfordNlpUtilMetaClass_castWithNSString_withJavaLangReflectType_(NSString *value, id<JavaLangReflectType> type) {
  EduStanfordNlpUtilMetaClass_initialize();
  IOSClass *clazz;
  if ([type isKindOfClass:[IOSClass class]]) {
    clazz = (IOSClass *) cast_chk(type, [IOSClass class]);
  }
  else if ([JavaLangReflectParameterizedType_class_() isInstance:type]) {
    id<JavaLangReflectParameterizedType> pt = (id<JavaLangReflectParameterizedType>) cast_check(type, JavaLangReflectParameterizedType_class_());
    clazz = (IOSClass *) cast_chk([((id<JavaLangReflectParameterizedType>) nil_chk(pt)) getRawType], [IOSClass class]);
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"Cannot cast to type (unhandled type): ", type));
  }
  if ([NSString_class_() isAssignableFrom:clazz]) {
    return value;
  }
  else if ([JavaLangBoolean_class_() isAssignableFrom:clazz] || [[IOSClass booleanClass] isAssignableFrom:clazz]) {
    if ([@"1" isEqual:value]) {
      return JreLoadStatic(JavaLangBoolean, TRUE);
    }
    return JavaLangBoolean_valueOfWithBoolean_(JavaLangBoolean_parseBooleanWithNSString_(value));
  }
  else if ([JavaLangInteger_class_() isAssignableFrom:clazz] || [[IOSClass intClass] isAssignableFrom:clazz]) {
    @try {
      return new_JavaLangInteger_initWithInt_(JavaLangInteger_parseIntWithNSString_(value));
    }
    @catch (JavaLangNumberFormatException *e) {
      return new_JavaLangInteger_initWithInt_(JreFpToInt(JavaLangDouble_parseDoubleWithNSString_(value)));
    }
  }
  else if ([JavaLangLong_class_() isAssignableFrom:clazz] || [[IOSClass longClass] isAssignableFrom:clazz]) {
    @try {
      return new_JavaLangLong_initWithLong_(JavaLangLong_parseLongWithNSString_(value));
    }
    @catch (JavaLangNumberFormatException *e) {
      return new_JavaLangLong_initWithLong_(JreFpToLong(JavaLangDouble_parseDoubleWithNSString_(value)));
    }
  }
  else if ([JavaLangFloat_class_() isAssignableFrom:clazz] || [[IOSClass floatClass] isAssignableFrom:clazz]) {
    if (value == nil) {
      return new_JavaLangFloat_initWithFloat_(JavaLangFloat_NaN);
    }
    return new_JavaLangFloat_initWithFloat_(JavaLangFloat_parseFloatWithNSString_(value));
  }
  else if ([JavaLangDouble_class_() isAssignableFrom:clazz] || [[IOSClass doubleClass] isAssignableFrom:clazz]) {
    if (value == nil) {
      return new_JavaLangDouble_initWithDouble_(JavaLangDouble_NaN);
    }
    return new_JavaLangDouble_initWithDouble_(JavaLangDouble_parseDoubleWithNSString_(value));
  }
  else if ([JavaLangShort_class_() isAssignableFrom:clazz] || [[IOSClass shortClass] isAssignableFrom:clazz]) {
    @try {
      return new_JavaLangShort_initWithShort_(JavaLangShort_parseShortWithNSString_(value));
    }
    @catch (JavaLangNumberFormatException *e) {
      return new_JavaLangShort_initWithShort_((jshort) JreFpToInt(JavaLangDouble_parseDoubleWithNSString_(value)));
    }
  }
  else if ([JavaLangByte_class_() isAssignableFrom:clazz] || [[IOSClass byteClass] isAssignableFrom:clazz]) {
    @try {
      return new_JavaLangByte_initWithByte_(JavaLangByte_parseByteWithNSString_(value));
    }
    @catch (JavaLangNumberFormatException *e) {
      return new_JavaLangByte_initWithByte_((jbyte) JreFpToInt(JavaLangDouble_parseDoubleWithNSString_(value)));
    }
  }
  else if ([JavaLangCharacter_class_() isAssignableFrom:clazz] || [[IOSClass charClass] isAssignableFrom:clazz]) {
    return new_JavaLangCharacter_initWithChar_((jchar) JavaLangInteger_parseIntWithNSString_(value));
  }
  else if ([EduStanfordNlpUtilLazy_class_() isAssignableFrom:clazz]) {
    NSString *v = value;
    return EduStanfordNlpUtilLazy_ofWithJavaUtilFunctionSupplier_(new_EduStanfordNlpUtilMetaClass_$Lambda$1_initWithNSString_(v));
  }
  else if ([JavaUtilOptional_class_() isAssignableFrom:clazz]) {
    return ((value == nil || [@"null" isEqual:[value lowercaseString]] || [@"empty" isEqual:[value lowercaseString]] || [@"none" isEqual:[value lowercaseString]]) ? JavaUtilOptional_empty() : JavaUtilOptional_ofWithId_(EduStanfordNlpUtilMetaClass_castWithoutKnowingTypeWithNSString_(value)));
  }
  else if ([JavaUtilDate_class_() isAssignableFrom:clazz]) {
    @try {
      return new_JavaUtilDate_initWithLong_(JavaLangLong_parseLongWithNSString_(value));
    }
    @catch (JavaLangNumberFormatException *e) {
      return nil;
    }
  }
  else if ([JavaUtilCalendar_class_() isAssignableFrom:clazz]) {
    @try {
      JavaUtilDate *d = new_JavaUtilDate_initWithLong_(JavaLangLong_parseLongWithNSString_(value));
      JavaUtilGregorianCalendar *cal = new_JavaUtilGregorianCalendar_init();
      [cal setTimeWithJavaUtilDate:d];
      return cal;
    }
    @catch (JavaLangNumberFormatException *e) {
      return nil;
    }
  }
  else if ([JavaIoFileWriter_class_() isAssignableFrom:clazz]) {
    @try {
      return new_JavaIoFileWriter_initWithJavaIoFile_(new_JavaIoFile_initWithNSString_(value));
    }
    @catch (JavaIoIOException *e) {
      @throw new_EduStanfordNlpIoRuntimeIOException_initWithNSException_(e);
    }
  }
  else if ([JavaIoBufferedReader_class_() isAssignableFrom:clazz]) {
    @try {
      return EduStanfordNlpIoIOUtils_getBufferedReaderFromClasspathOrFileSystemWithNSString_(value);
    }
    @catch (JavaIoIOException *e) {
      @throw new_EduStanfordNlpIoRuntimeIOException_initWithNSException_(e);
    }
  }
  else if ([JavaIoFileReader_class_() isAssignableFrom:clazz]) {
    @try {
      return new_JavaIoFileReader_initWithJavaIoFile_(new_JavaIoFile_initWithNSString_(value));
    }
    @catch (JavaIoIOException *e) {
      @throw new_EduStanfordNlpIoRuntimeIOException_initWithNSException_(e);
    }
  }
  else if ([JavaIoFile_class_() isAssignableFrom:clazz]) {
    return new_JavaIoFile_initWithNSString_(value);
  }
  else if ([IOSClass_class_() isAssignableFrom:clazz]) {
    @try {
      return IOSClass_forName_(value);
    }
    @catch (JavaLangClassNotFoundException *e) {
      return nil;
    }
  }
  else if ([((IOSClass *) nil_chk(clazz)) isArray]) {
    if (value == nil) {
      return nil;
    }
    IOSClass *subType = [clazz getComponentType];
    IOSObjectArray *strings = EduStanfordNlpUtilStringUtils_decodeArrayWithNSString_(value);
    IOSObjectArray *array = (IOSObjectArray *) cast_check(JavaLangReflectArray_newInstanceWithIOSClass_withInt_([clazz getComponentType], ((IOSObjectArray *) nil_chk(strings))->size_), IOSClass_arrayType(NSObject_class_(), 1));
    for (jint i = 0; i < strings->size_; i++) {
      (void) IOSObjectArray_Set(nil_chk(array), i, EduStanfordNlpUtilMetaClass_castWithNSString_withJavaLangReflectType_(IOSObjectArray_Get(strings, i), subType));
    }
    return array;
  }
  else if ([JavaUtilMap_class_() isAssignableFrom:clazz]) {
    return EduStanfordNlpUtilStringUtils_decodeMapWithNSString_(value);
  }
  else if ([clazz isEnum]) {
    IOSClass *c = clazz;
    if (value == nil) {
      return nil;
    }
    if ([value charAtWithInt:0] == '"') value = [value substring:1];
    if ([((NSString *) nil_chk(value)) charAtWithInt:((jint) [value length]) - 1] == '"') value = [value substring:0 endIndex:((jint) [value length]) - 1];
    @try {
      return JavaLangEnum_valueOfWithIOSClass_withNSString_(c, value);
    }
    @catch (JavaLangException *e) {
      @try {
        return JavaLangEnum_valueOfWithIOSClass_withNSString_(c, [((NSString *) nil_chk(value)) lowercaseString]);
      }
      @catch (JavaLangException *e2) {
        @try {
          return JavaLangEnum_valueOfWithIOSClass_withNSString_(c, [value uppercaseString]);
        }
        @catch (JavaLangException *e3) {
          return JavaLangEnum_valueOfWithIOSClass_withNSString_(c, JreStrcat("C$", (JavaLangCharacter_isUpperCaseWithChar_([value charAtWithInt:0]) ? JavaLangCharacter_toLowerCaseWithChar_([value charAtWithInt:0]) : JavaLangCharacter_toUpperCaseWithChar_([value charAtWithInt:0])), [value substring:1]));
        }
      }
    }
  }
  else if ([JavaIoObjectOutputStream_class_() isAssignableFrom:clazz]) {
    @try {
      return new_JavaIoObjectOutputStream_initWithJavaIoOutputStream_((JavaIoOutputStream *) cast_chk(EduStanfordNlpUtilMetaClass_castWithNSString_withJavaLangReflectType_(value, JavaIoOutputStream_class_()), [JavaIoOutputStream class]));
    }
    @catch (JavaIoIOException *e) {
      @throw new_JavaLangRuntimeException_initWithNSException_(e);
    }
  }
  else if ([JavaIoObjectInputStream_class_() isAssignableFrom:clazz]) {
    @try {
      return new_JavaIoObjectInputStream_initWithJavaIoInputStream_((JavaIoInputStream *) cast_chk(EduStanfordNlpUtilMetaClass_castWithNSString_withJavaLangReflectType_(value, JavaIoInputStream_class_()), [JavaIoInputStream class]));
    }
    @catch (JavaIoIOException *e) {
      @throw new_JavaLangRuntimeException_initWithNSException_(e);
    }
  }
  else if ([JavaIoPrintStream_class_() isAssignableFrom:clazz]) {
    if ([((NSString *) nil_chk(value)) equalsIgnoreCase:@"stdout"] || [value equalsIgnoreCase:@"out"]) {
      return JreLoadStatic(JavaLangSystem, out);
    }
    if ([value equalsIgnoreCase:@"stderr"] || [value equalsIgnoreCase:@"err"]) {
      return JreLoadStatic(JavaLangSystem, err);
    }
    @try {
      return new_JavaIoPrintStream_initWithJavaIoOutputStream_(new_JavaIoFileOutputStream_initWithNSString_(value));
    }
    @catch (JavaIoIOException *e) {
      @throw new_JavaLangRuntimeException_initWithNSException_(e);
    }
  }
  else if ([JavaIoPrintWriter_class_() isAssignableFrom:clazz]) {
    if ([((NSString *) nil_chk(value)) equalsIgnoreCase:@"stdout"] || [value equalsIgnoreCase:@"out"]) {
      return new_JavaIoPrintWriter_initWithJavaIoOutputStream_(JreLoadStatic(JavaLangSystem, out));
    }
    if ([value equalsIgnoreCase:@"stderr"] || [value equalsIgnoreCase:@"err"]) {
      return new_JavaIoPrintWriter_initWithJavaIoOutputStream_(JreLoadStatic(JavaLangSystem, err));
    }
    @try {
      return EduStanfordNlpIoIOUtils_getPrintWriterWithNSString_(value);
    }
    @catch (JavaIoIOException *e) {
      @throw new_JavaLangRuntimeException_initWithNSException_(e);
    }
  }
  else if ([JavaIoOutputStream_class_() isAssignableFrom:clazz]) {
    if ([((NSString *) nil_chk(value)) equalsIgnoreCase:@"stdout"] || [value equalsIgnoreCase:@"out"]) {
      return JreLoadStatic(JavaLangSystem, out);
    }
    if ([value equalsIgnoreCase:@"stderr"] || [value equalsIgnoreCase:@"err"]) {
      return JreLoadStatic(JavaLangSystem, err);
    }
    JavaIoFile *toWriteTo = EduStanfordNlpUtilMetaClass_castWithNSString_withJavaLangReflectType_(value, JavaIoFile_class_());
    @try {
      if (![((JavaIoFile *) nil_chk(toWriteTo)) exists] && ![toWriteTo createNewFile]) {
        @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$", @"Could not create output stream (cannot write file): ", value));
      }
      return EduStanfordNlpIoIOUtils_getFileOutputStreamWithNSString_(value);
    }
    @catch (JavaIoIOException *e) {
      @throw new_JavaLangRuntimeException_initWithNSException_(e);
    }
  }
  else if ([JavaIoInputStream_class_() isAssignableFrom:clazz]) {
    if ([((NSString *) nil_chk(value)) equalsIgnoreCase:@"stdin"] || [value equalsIgnoreCase:@"in"]) {
      return JreLoadStatic(JavaLangSystem, in);
    }
    @try {
      return EduStanfordNlpIoIOUtils_getInputStreamFromURLOrClasspathOrFileSystemWithNSString_(value);
    }
    @catch (JavaIoIOException *e) {
      @throw new_JavaLangRuntimeException_initWithNSException_(e);
    }
  }
  else {
    @try {
      JavaLangReflectMethod *decode = [clazz getMethod:@"fromString" parameterTypes:[IOSObjectArray newArrayWithObjects:(id[]){ NSString_class_() } count:1 type:IOSClass_class_()]];
      return [((JavaLangReflectMethod *) nil_chk(decode)) invokeWithId:EduStanfordNlpUtilMetaClass_createWithIOSClass_(clazz) withNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ value } count:1 type:NSObject_class_()]];
    }
    @catch (JavaLangNoSuchMethodException *e) {
    }
    @catch (JavaLangReflectInvocationTargetException *e) {
    }
    @catch (JavaLangIllegalAccessException *e) {
    }
    @catch (JavaLangClassCastException *e) {
    }
    if ([EduStanfordNlpTreesTree_class_() isAssignableFrom:clazz]) {
      @try {
        return [new_EduStanfordNlpTreesPennTreeReader_initWithJavaIoReader_withEduStanfordNlpTreesTreeFactory_(new_JavaIoStringReader_initWithNSString_(value), new_EduStanfordNlpTreesLabeledScoredTreeFactory_initWithEduStanfordNlpLingLabelFactory_(EduStanfordNlpLingCoreLabel_factory())) readTree];
      }
      @catch (JavaIoIOException *e) {
        @throw new_JavaLangRuntimeException_initWithNSException_(e);
      }
    }
    else if ([JavaUtilCollection_class_() isAssignableFrom:clazz]) {
      id<JavaUtilCollection> rtn;
      if (JavaLangReflectModifier_isAbstractWithInt_([clazz getModifiers])) {
        rtn = [((EduStanfordNlpUtilMetaClass *) nil_chk([((JavaUtilHashMap *) nil_chk(EduStanfordNlpUtilMetaClass_abstractToConcreteCollectionMap)) getWithId:clazz])) createInstanceWithNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]];
      }
      else {
        rtn = [((EduStanfordNlpUtilMetaClass *) nil_chk(EduStanfordNlpUtilMetaClass_createWithIOSClass_(clazz))) createInstanceWithNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]];
      }
      IOSClass *subType = [clazz getComponentType];
      IOSObjectArray *strings = EduStanfordNlpUtilStringUtils_decodeArrayWithNSString_(value);
      {
        IOSObjectArray *a__ = strings;
        NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
        NSString * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          NSString *string = *b__++;
          if (subType == nil) {
            [((id<JavaUtilCollection>) nil_chk(rtn)) addWithId:EduStanfordNlpUtilMetaClass_castWithoutKnowingTypeWithNSString_(string)];
          }
          else {
            [((id<JavaUtilCollection>) nil_chk(rtn)) addWithId:EduStanfordNlpUtilMetaClass_castWithNSString_withJavaLangReflectType_(string, subType)];
          }
        }
      }
      return rtn;
    }
    else {
      return nil;
    }
  }
}

id EduStanfordNlpUtilMetaClass_castWithoutKnowingTypeWithNSString_(NSString *value) {
  EduStanfordNlpUtilMetaClass_initialize();
  id rtn;
  IOSObjectArray *typesToTry = [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_class_(), JavaLangDouble_class_(), JavaIoFile_class_(), JavaUtilDate_class_(), JavaUtilList_class_(), JavaUtilSet_class_(), JavaUtilQueue_class_(), IOSClass_arrayType(JavaLangInteger_class_(), 1), IOSClass_arrayType(JavaLangDouble_class_(), 1), IOSClass_arrayType(JavaLangCharacter_class_(), 1), NSString_class_() } count:11 type:IOSClass_class_()];
  {
    IOSObjectArray *a__ = typesToTry;
    IOSClass * const *b__ = a__->buffer_;
    IOSClass * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IOSClass *toTry = *b__++;
      if (([JavaUtilCollection_class_() isAssignableFrom:toTry] && ![((NSString *) nil_chk(value)) contains:@","]) || [((NSString *) nil_chk(value)) contains:@" "]) {
        continue;
      }
      @try {
        if ((rtn = EduStanfordNlpUtilMetaClass_castWithNSString_withJavaLangReflectType_(value, toTry)) != nil && (![JavaIoFile_class_() isAssignableFrom:[nil_chk(rtn) getClass]] || [((JavaIoFile *) cast_chk(rtn, [JavaIoFile class])) exists])) {
          return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(rtn);
        }
      }
      @catch (JavaLangNumberFormatException *e) {
      }
    }
  }
  return nil;
}

id EduStanfordNlpUtilMetaClass_argminWithNSObjectArray_withIntArray_withInt_(IOSObjectArray *elems, IOSIntArray *scores, jint atLeast) {
  EduStanfordNlpUtilMetaClass_initialize();
  jint argmin = EduStanfordNlpUtilMetaClass_argminWithIntArray_withInt_(scores, atLeast);
  return argmin >= 0 ? IOSObjectArray_Get(nil_chk(elems), argmin) : nil;
}

jint EduStanfordNlpUtilMetaClass_argminWithIntArray_withInt_(IOSIntArray *scores, jint atLeast) {
  EduStanfordNlpUtilMetaClass_initialize();
  jint min = JavaLangInteger_MAX_VALUE;
  jint argmin = -1;
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(scores))->size_; i++) {
    if (IOSIntArray_Get(scores, i) < min && IOSIntArray_Get(scores, i) >= atLeast) {
      min = IOSIntArray_Get(scores, i);
      argmin = i;
    }
  }
  return argmin;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilMetaClass)

@implementation EduStanfordNlpUtilMetaClass_ClassCreationException

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpUtilMetaClass_ClassCreationException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)msg {
  EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSString_(self, msg);
  return self;
}

- (instancetype)initWithNSException:(NSException *)cause {
  EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSException_(self, cause);
  return self;
}

- (instancetype)initWithNSString:(NSString *)msg
                 withNSException:(NSException *)cause {
  EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSString_withNSException_(self, msg, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(initWithNSException:);
  methods[3].selector = @selector(initWithNSString:withNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpUtilMetaClass_ClassCreationException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LNSException;", "LNSString;LNSException;", "LEduStanfordNlpUtilMetaClass;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilMetaClass_ClassCreationException = { "ClassCreationException", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0x9, 4, 1, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpUtilMetaClass_ClassCreationException;
}

@end

void EduStanfordNlpUtilMetaClass_ClassCreationException_init(EduStanfordNlpUtilMetaClass_ClassCreationException *self) {
  JavaLangRuntimeException_init(self);
}

EduStanfordNlpUtilMetaClass_ClassCreationException *new_EduStanfordNlpUtilMetaClass_ClassCreationException_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMetaClass_ClassCreationException, init)
}

EduStanfordNlpUtilMetaClass_ClassCreationException *create_EduStanfordNlpUtilMetaClass_ClassCreationException_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMetaClass_ClassCreationException, init)
}

void EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSString_(EduStanfordNlpUtilMetaClass_ClassCreationException *self, NSString *msg) {
  JavaLangRuntimeException_initWithNSString_(self, msg);
}

EduStanfordNlpUtilMetaClass_ClassCreationException *new_EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSString_(NSString *msg) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMetaClass_ClassCreationException, initWithNSString_, msg)
}

EduStanfordNlpUtilMetaClass_ClassCreationException *create_EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSString_(NSString *msg) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMetaClass_ClassCreationException, initWithNSString_, msg)
}

void EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSException_(EduStanfordNlpUtilMetaClass_ClassCreationException *self, NSException *cause) {
  JavaLangRuntimeException_initWithNSException_(self, cause);
}

EduStanfordNlpUtilMetaClass_ClassCreationException *new_EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSException_(NSException *cause) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMetaClass_ClassCreationException, initWithNSException_, cause)
}

EduStanfordNlpUtilMetaClass_ClassCreationException *create_EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSException_(NSException *cause) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMetaClass_ClassCreationException, initWithNSException_, cause)
}

void EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSString_withNSException_(EduStanfordNlpUtilMetaClass_ClassCreationException *self, NSString *msg, NSException *cause) {
  JavaLangRuntimeException_initWithNSString_withNSException_(self, msg, cause);
}

EduStanfordNlpUtilMetaClass_ClassCreationException *new_EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSString_withNSException_(NSString *msg, NSException *cause) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMetaClass_ClassCreationException, initWithNSString_withNSException_, msg, cause)
}

EduStanfordNlpUtilMetaClass_ClassCreationException *create_EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSString_withNSException_(NSString *msg, NSException *cause) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMetaClass_ClassCreationException, initWithNSString_withNSException_, msg, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilMetaClass_ClassCreationException)

@implementation EduStanfordNlpUtilMetaClass_ConstructorNotFoundException

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)msg {
  EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSString_(self, msg);
  return self;
}

- (instancetype)initWithNSException:(NSException *)cause {
  EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSException_(self, cause);
  return self;
}

- (instancetype)initWithNSString:(NSString *)msg
                 withNSException:(NSException *)cause {
  EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSString_withNSException_(self, msg, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(initWithNSException:);
  methods[3].selector = @selector(initWithNSString:withNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LNSException;", "LNSString;LNSException;", "LEduStanfordNlpUtilMetaClass;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilMetaClass_ConstructorNotFoundException = { "ConstructorNotFoundException", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0x19, 4, 1, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpUtilMetaClass_ConstructorNotFoundException;
}

@end

void EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_init(EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *self) {
  EduStanfordNlpUtilMetaClass_ClassCreationException_init(self);
}

EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *new_EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMetaClass_ConstructorNotFoundException, init)
}

EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *create_EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMetaClass_ConstructorNotFoundException, init)
}

void EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSString_(EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *self, NSString *msg) {
  EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSString_(self, msg);
}

EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *new_EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSString_(NSString *msg) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMetaClass_ConstructorNotFoundException, initWithNSString_, msg)
}

EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *create_EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSString_(NSString *msg) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMetaClass_ConstructorNotFoundException, initWithNSString_, msg)
}

void EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSException_(EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *self, NSException *cause) {
  EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSException_(self, cause);
}

EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *new_EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSException_(NSException *cause) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMetaClass_ConstructorNotFoundException, initWithNSException_, cause)
}

EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *create_EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSException_(NSException *cause) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMetaClass_ConstructorNotFoundException, initWithNSException_, cause)
}

void EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSString_withNSException_(EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *self, NSString *msg, NSException *cause) {
  EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSString_withNSException_(self, msg, cause);
}

EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *new_EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSString_withNSException_(NSString *msg, NSException *cause) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMetaClass_ConstructorNotFoundException, initWithNSString_withNSException_, msg, cause)
}

EduStanfordNlpUtilMetaClass_ConstructorNotFoundException *create_EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSString_withNSException_(NSString *msg, NSException *cause) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMetaClass_ConstructorNotFoundException, initWithNSString_withNSException_, msg, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilMetaClass_ConstructorNotFoundException)

@implementation EduStanfordNlpUtilMetaClass_ClassFactory

+ (jboolean)samePrimitiveWithIOSClass:(IOSClass *)a
                         withIOSClass:(IOSClass *)b {
  return EduStanfordNlpUtilMetaClass_ClassFactory_samePrimitiveWithIOSClass_withIOSClass_(a, b);
}

+ (jint)superDistanceWithIOSClass:(IOSClass *)candidate
                     withIOSClass:(IOSClass *)target {
  return EduStanfordNlpUtilMetaClass_ClassFactory_superDistanceWithIOSClass_withIOSClass_(candidate, target);
}

- (void)constructWithNSString:(NSString *)classname
            withIOSClassArray:(IOSObjectArray *)params {
  EduStanfordNlpUtilMetaClass_ClassFactory_constructWithNSString_withIOSClassArray_(self, classname, params);
}

- (instancetype)initWithNSString:(NSString *)classname
               withIOSClassArray:(IOSObjectArray *)params {
  EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withIOSClassArray_(self, classname, params);
  return self;
}

- (instancetype)initWithNSString:(NSString *)classname
               withNSObjectArray:(IOSObjectArray *)params {
  EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withNSObjectArray_(self, classname, params);
  return self;
}

- (instancetype)initWithNSString:(NSString *)classname
               withNSStringArray:(IOSObjectArray *)params {
  EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withNSStringArray_(self, classname, params);
  return self;
}

- (id)createInstanceWithNSObjectArray:(IOSObjectArray *)params {
  @try {
    jboolean accessible = true;
    if (![((JavaLangReflectConstructor *) nil_chk(constructor_)) isAccessible]) {
      accessible = false;
      [((JavaLangReflectConstructor *) nil_chk(constructor_)) setAccessibleWithBoolean:true];
    }
    id rtn = [((JavaLangReflectConstructor *) nil_chk(constructor_)) newInstanceWithNSObjectArray:params];
    if (!accessible) {
      [((JavaLangReflectConstructor *) nil_chk(constructor_)) setAccessibleWithBoolean:false];
    }
    return rtn;
  }
  @catch (JavaLangException *e) {
    @throw new_EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSString_withNSException_(JreStrcat("$@$$", @"MetaClass couldn't create ", constructor_, @" with args ", JavaUtilArrays_toStringWithNSObjectArray_(params)), e);
  }
}

- (NSString *)getName {
  return [((IOSClass *) nil_chk(cl_)) getName];
}

- (NSString *)description {
  JavaLangStringBuilder *b = new_JavaLangStringBuilder_init();
  (void) [((JavaLangStringBuilder *) nil_chk([b appendWithNSString:[((IOSClass *) nil_chk(cl_)) getName]])) appendWithNSString:@"("];
  {
    IOSObjectArray *a__ = classParams_;
    IOSClass * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    IOSClass * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IOSClass *cl = *b__++;
      (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([b appendWithNSString:@" "])) appendWithNSString:[((IOSClass *) nil_chk(cl)) getName]])) appendWithNSString:@","];
    }
  }
  (void) [b replaceWithInt:[b length] - 1 withInt:[b length] withNSString:@" "];
  (void) [b appendWithNSString:@")"];
  return [b description];
}

- (jboolean)isEqual:(id)o {
  if ([o isKindOfClass:[EduStanfordNlpUtilMetaClass_ClassFactory class]]) {
    EduStanfordNlpUtilMetaClass_ClassFactory *other = (EduStanfordNlpUtilMetaClass_ClassFactory *) cast_chk(o, [EduStanfordNlpUtilMetaClass_ClassFactory class]);
    if (![((IOSClass *) nil_chk(self->cl_)) isEqual:((EduStanfordNlpUtilMetaClass_ClassFactory *) nil_chk(other))->cl_]) return false;
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(classParams_))->size_; i++) {
      if (![((IOSClass *) nil_chk(IOSObjectArray_Get(self->classParams_, i))) isEqual:IOSObjectArray_Get(nil_chk(other->classParams_), i)]) return false;
    }
    return true;
  }
  else {
    return false;
  }
}

- (NSUInteger)hash {
  return ((jint) [((IOSClass *) nil_chk(cl_)) hash]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0xa, 0, 1, -1, 2, -1, -1 },
    { NULL, "I", 0xa, 3, 1, -1, 4, -1, -1 },
    { NULL, "V", 0x82, 5, 6, 7, -1, -1, -1 },
    { NULL, NULL, 0x82, -1, 6, 7, -1, -1, -1 },
    { NULL, NULL, 0x82, -1, 8, 7, -1, -1, -1 },
    { NULL, NULL, 0x82, -1, 9, 7, -1, -1, -1 },
    { NULL, "LNSObject;", 0x81, 10, 11, -1, 12, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 13, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 16, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(samePrimitiveWithIOSClass:withIOSClass:);
  methods[1].selector = @selector(superDistanceWithIOSClass:withIOSClass:);
  methods[2].selector = @selector(constructWithNSString:withIOSClassArray:);
  methods[3].selector = @selector(initWithNSString:withIOSClassArray:);
  methods[4].selector = @selector(initWithNSString:withNSObjectArray:);
  methods[5].selector = @selector(initWithNSString:withNSStringArray:);
  methods[6].selector = @selector(createInstanceWithNSObjectArray:);
  methods[7].selector = @selector(getName);
  methods[8].selector = @selector(description);
  methods[9].selector = @selector(isEqual:);
  methods[10].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "classParams_", "[LIOSClass;", .constantValue.asLong = 0, 0x2, -1, -1, 17, -1 },
    { "cl_", "LIOSClass;", .constantValue.asLong = 0, 0x2, -1, -1, 18, -1 },
    { "constructor_", "LJavaLangReflectConstructor;", .constantValue.asLong = 0, 0x2, -1, -1, 19, -1 },
  };
  static const void *ptrTable[] = { "samePrimitive", "LIOSClass;LIOSClass;", "(Ljava/lang/Class<*>;Ljava/lang/Class<*>;)Z", "superDistance", "(Ljava/lang/Class<*>;Ljava/lang/Class<*>;)I", "construct", "LNSString;[LIOSClass;", "LJavaLangClassNotFoundException;LJavaLangNoSuchMethodException;", "LNSString;[LNSObject;", "LNSString;[LNSString;", "createInstance", "[LNSObject;", "([Ljava/lang/Object;)TT;", "toString", "equals", "LNSObject;", "hashCode", "[Ljava/lang/Class<*>;", "Ljava/lang/Class<TT;>;", "Ljava/lang/reflect/Constructor<TT;>;", "LEduStanfordNlpUtilMetaClass;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilMetaClass_ClassFactory = { "ClassFactory", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0x19, 11, 3, 20, -1, -1, 21, -1 };
  return &_EduStanfordNlpUtilMetaClass_ClassFactory;
}

@end

jboolean EduStanfordNlpUtilMetaClass_ClassFactory_samePrimitiveWithIOSClass_withIOSClass_(IOSClass *a, IOSClass *b) {
  EduStanfordNlpUtilMetaClass_ClassFactory_initialize();
  if (![((IOSClass *) nil_chk(a)) isPrimitive] && ![((IOSClass *) nil_chk(b)) isPrimitive]) return false;
  if ([a isPrimitive]) {
    @try {
      IOSClass *type = (IOSClass *) cast_chk([((JavaLangReflectField *) nil_chk([((IOSClass *) nil_chk(b)) getField:@"TYPE"])) getWithId:nil], [IOSClass class]);
      return [((IOSClass *) nil_chk(type)) isEqual:a];
    }
    @catch (JavaLangException *e) {
      return false;
    }
  }
  if ([((IOSClass *) nil_chk(b)) isPrimitive]) {
    @try {
      IOSClass *type = (IOSClass *) cast_chk([((JavaLangReflectField *) nil_chk([a getField:@"TYPE"])) getWithId:nil], [IOSClass class]);
      return [((IOSClass *) nil_chk(type)) isEqual:b];
    }
    @catch (JavaLangException *e) {
      return false;
    }
  }
  @throw new_JavaLangIllegalStateException_initWithNSString_(@"Impossible case");
}

jint EduStanfordNlpUtilMetaClass_ClassFactory_superDistanceWithIOSClass_withIOSClass_(IOSClass *candidate, IOSClass *target) {
  EduStanfordNlpUtilMetaClass_ClassFactory_initialize();
  if (candidate == nil) {
    return JavaLangInteger_MIN_VALUE;
  }
  else if ([candidate isEqual:target]) {
    return 0;
  }
  else if (EduStanfordNlpUtilMetaClass_ClassFactory_samePrimitiveWithIOSClass_withIOSClass_(candidate, target)) {
    return 0;
  }
  else {
    IOSClass *directSuper = [candidate getSuperclass];
    jint superDist = EduStanfordNlpUtilMetaClass_ClassFactory_superDistanceWithIOSClass_withIOSClass_(directSuper, target);
    if (superDist >= 0) return superDist + 1;
    IOSObjectArray *interfaces = [candidate getInterfaces];
    jint minDist = JavaLangInteger_MAX_VALUE;
    {
      IOSObjectArray *a__ = interfaces;
      IOSClass * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      IOSClass * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        IOSClass *i = *b__++;
        superDist = EduStanfordNlpUtilMetaClass_ClassFactory_superDistanceWithIOSClass_withIOSClass_(i, target);
        if (superDist >= 0) {
          minDist = JavaLangMath_minWithInt_withInt_(minDist, superDist);
        }
      }
    }
    if (minDist != JavaLangInteger_MAX_VALUE) return minDist + 1;
    else return -1;
  }
}

void EduStanfordNlpUtilMetaClass_ClassFactory_constructWithNSString_withIOSClassArray_(EduStanfordNlpUtilMetaClass_ClassFactory *self, NSString *classname, IOSObjectArray *params) {
  self->classParams_ = params;
  @try {
    self->cl_ = IOSClass_forName_(classname);
  }
  @catch (JavaLangClassCastException *e) {
    @throw new_EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSString_(JreStrcat("$$$", @"Class ", classname, @" could not be cast to the correct type"));
  }
  IOSObjectArray *constructors = [((IOSClass *) nil_chk(self->cl_)) getDeclaredConstructors];
  IOSObjectArray *potentials = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(constructors))->size_ type:JavaLangReflectConstructor_class_()];
  IOSObjectArray *constructorParams = [IOSObjectArray newArrayWithLength:constructors->size_ type:IOSClass_arrayType(IOSClass_class_(), 1)];
  IOSIntArray *distances = [IOSIntArray newArrayWithLength:constructors->size_];
  for (jint i = 0; i < constructors->size_; i++) {
    (void) IOSObjectArray_Set(constructorParams, i, [((JavaLangReflectConstructor *) nil_chk(IOSObjectArray_Get(constructors, i))) getParameterTypes]);
    if (((IOSObjectArray *) nil_chk(params))->size_ == ((IOSObjectArray *) nil_chk(IOSObjectArray_Get(constructorParams, i)))->size_) {
      (void) IOSObjectArray_Set(potentials, i, IOSObjectArray_Get(constructors, i));
      *IOSIntArray_GetRef(distances, i) = 0;
    }
    else {
      (void) IOSObjectArray_Set(potentials, i, nil);
      *IOSIntArray_GetRef(distances, i) = -1;
    }
  }
  for (jint paramIndex = 0; paramIndex < ((IOSObjectArray *) nil_chk(params))->size_; paramIndex++) {
    IOSClass *target = IOSObjectArray_Get(params, paramIndex);
    for (jint conIndex = 0; conIndex < potentials->size_; conIndex++) {
      if (IOSObjectArray_Get(potentials, conIndex) != nil) {
        IOSClass *cand = IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(constructorParams, conIndex)), paramIndex);
        jint dist = EduStanfordNlpUtilMetaClass_ClassFactory_superDistanceWithIOSClass_withIOSClass_(target, cand);
        if (dist >= 0) {
          *IOSIntArray_GetRef(distances, conIndex) += dist;
        }
        else {
          (void) IOSObjectArray_Set(potentials, conIndex, nil);
          *IOSIntArray_GetRef(distances, conIndex) = -1;
        }
      }
    }
  }
  self->constructor_ = EduStanfordNlpUtilMetaClass_argminWithNSObjectArray_withIntArray_withInt_(potentials, distances, 0);
  if (self->constructor_ == nil) {
    JavaLangStringBuilder *b = new_JavaLangStringBuilder_init();
    (void) [((JavaLangStringBuilder *) nil_chk([b appendWithNSString:classname])) appendWithNSString:@"("];
    {
      IOSObjectArray *a__ = params;
      IOSClass * const *b__ = a__->buffer_;
      IOSClass * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        IOSClass *c = *b__++;
        (void) [((JavaLangStringBuilder *) nil_chk([b appendWithNSString:[((IOSClass *) nil_chk(c)) getName]])) appendWithNSString:@", "];
      }
    }
    NSString *target = JreStrcat("$C", [b substringWithInt:0 withInt:params->size_ == 0 ? [b length] : [b length] - 2], ')');
    @throw new_EduStanfordNlpUtilMetaClass_ConstructorNotFoundException_initWithNSString_(JreStrcat("$$", @"No constructor found to match: ", target));
  }
}

void EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withIOSClassArray_(EduStanfordNlpUtilMetaClass_ClassFactory *self, NSString *classname, IOSObjectArray *params) {
  NSObject_init(self);
  EduStanfordNlpUtilMetaClass_ClassFactory_constructWithNSString_withIOSClassArray_(self, classname, params);
}

EduStanfordNlpUtilMetaClass_ClassFactory *new_EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withIOSClassArray_(NSString *classname, IOSObjectArray *params) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMetaClass_ClassFactory, initWithNSString_withIOSClassArray_, classname, params)
}

EduStanfordNlpUtilMetaClass_ClassFactory *create_EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withIOSClassArray_(NSString *classname, IOSObjectArray *params) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMetaClass_ClassFactory, initWithNSString_withIOSClassArray_, classname, params)
}

void EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withNSObjectArray_(EduStanfordNlpUtilMetaClass_ClassFactory *self, NSString *classname, IOSObjectArray *params) {
  NSObject_init(self);
  IOSObjectArray *classParams = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(params))->size_ type:IOSClass_class_()];
  for (jint i = 0; i < params->size_; i++) {
    if (IOSObjectArray_Get(params, i) == nil) @throw new_EduStanfordNlpUtilMetaClass_ClassCreationException_initWithNSString_(JreStrcat("$I$", @"Argument ", i, @" to class constructor is null"));
    (void) IOSObjectArray_Set(classParams, i, [nil_chk(IOSObjectArray_Get(params, i)) getClass]);
  }
  EduStanfordNlpUtilMetaClass_ClassFactory_constructWithNSString_withIOSClassArray_(self, classname, classParams);
}

EduStanfordNlpUtilMetaClass_ClassFactory *new_EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withNSObjectArray_(NSString *classname, IOSObjectArray *params) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMetaClass_ClassFactory, initWithNSString_withNSObjectArray_, classname, params)
}

EduStanfordNlpUtilMetaClass_ClassFactory *create_EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withNSObjectArray_(NSString *classname, IOSObjectArray *params) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMetaClass_ClassFactory, initWithNSString_withNSObjectArray_, classname, params)
}

void EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withNSStringArray_(EduStanfordNlpUtilMetaClass_ClassFactory *self, NSString *classname, IOSObjectArray *params) {
  NSObject_init(self);
  IOSObjectArray *classParams = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(params))->size_ type:IOSClass_class_()];
  for (jint i = 0; i < params->size_; i++) {
    (void) IOSObjectArray_Set(classParams, i, IOSClass_forName_(IOSObjectArray_Get(params, i)));
  }
  EduStanfordNlpUtilMetaClass_ClassFactory_constructWithNSString_withIOSClassArray_(self, classname, classParams);
}

EduStanfordNlpUtilMetaClass_ClassFactory *new_EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withNSStringArray_(NSString *classname, IOSObjectArray *params) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMetaClass_ClassFactory, initWithNSString_withNSStringArray_, classname, params)
}

EduStanfordNlpUtilMetaClass_ClassFactory *create_EduStanfordNlpUtilMetaClass_ClassFactory_initWithNSString_withNSStringArray_(NSString *classname, IOSObjectArray *params) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMetaClass_ClassFactory, initWithNSString_withNSStringArray_, classname, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilMetaClass_ClassFactory)

@implementation EduStanfordNlpUtilMetaClass_$Lambda$1

- (id)get {
  return EduStanfordNlpUtilMetaClass_castWithoutKnowingTypeWithNSString_(val$v_);
}

@end

void EduStanfordNlpUtilMetaClass_$Lambda$1_initWithNSString_(EduStanfordNlpUtilMetaClass_$Lambda$1 *self, NSString *capture$0) {
  self->val$v_ = capture$0;
  NSObject_init(self);
}

EduStanfordNlpUtilMetaClass_$Lambda$1 *new_EduStanfordNlpUtilMetaClass_$Lambda$1_initWithNSString_(NSString *capture$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilMetaClass_$Lambda$1, initWithNSString_, capture$0)
}

EduStanfordNlpUtilMetaClass_$Lambda$1 *create_EduStanfordNlpUtilMetaClass_$Lambda$1_initWithNSString_(NSString *capture$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilMetaClass_$Lambda$1, initWithNSString_, capture$0)
}
