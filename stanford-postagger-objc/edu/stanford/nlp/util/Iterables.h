//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/Iterables.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpUtilIterables")
#ifdef RESTRICT_EduStanfordNlpUtilIterables
#define INCLUDE_ALL_EduStanfordNlpUtilIterables 0
#else
#define INCLUDE_ALL_EduStanfordNlpUtilIterables 1
#endif
#undef RESTRICT_EduStanfordNlpUtilIterables

#if !defined (EduStanfordNlpUtilIterables_) && (INCLUDE_ALL_EduStanfordNlpUtilIterables || defined(INCLUDE_EduStanfordNlpUtilIterables))
#define EduStanfordNlpUtilIterables_

@class EduStanfordNlpUtilCollectionFactory;
@class IOSClass;
@class IOSObjectArray;
@class JavaUtilArrayList;
@class JavaUtilHashSet;
@class JavaUtilRandom;
@protocol EduStanfordNlpUtilIterables_IncrementComparator;
@protocol JavaLangIterable;
@protocol JavaUtilCollection;
@protocol JavaUtilComparator;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilIterator;

@interface EduStanfordNlpUtilIterables : NSObject

#pragma mark Public

- (instancetype)init;

+ (id<JavaUtilCollection>)addAllWithJavaUtilIterator:(id<JavaUtilIterator>)iter
                              withJavaUtilCollection:(id<JavaUtilCollection>)c;

+ (JavaUtilArrayList *)asArrayListWithJavaUtilIterator:(id<JavaUtilIterator>)iter;

+ (id<JavaUtilCollection>)asCollectionWithJavaUtilIterator:(id<JavaUtilIterator>)iter
                   withEduStanfordNlpUtilCollectionFactory:(EduStanfordNlpUtilCollectionFactory *)cf;

+ (JavaUtilHashSet *)asHashSetWithJavaUtilIterator:(id<JavaUtilIterator>)iter;

+ (id<JavaLangIterable>)castWithJavaLangIterable:(id<JavaLangIterable>)iterable
                                    withIOSClass:(IOSClass *)type;

+ (id<JavaLangIterable>)chainWithJavaLangIterable:(id<JavaLangIterable>)iterables;

+ (id<JavaLangIterable>)chainWithJavaLangIterableArray:(IOSObjectArray *)iterables;

+ (id<JavaLangIterable>)chainWithNSObjectArray2:(IOSObjectArray *)arrays;

+ (id<JavaLangIterable>)dropWithJavaLangIterable:(id<JavaLangIterable>)iterable
                                         withInt:(jint)toDrop;

+ (id<JavaLangIterable>)dropWithNSObjectArray:(IOSObjectArray *)array
                                      withInt:(jint)toDrop;

+ (id<JavaLangIterable>)filterWithJavaLangIterable:(id<JavaLangIterable>)iterable
                      withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)accept;

+ (id<JavaLangIterable>)flatMapWithJavaLangIterable:(id<JavaLangIterable>)iterables
                       withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)trans;

+ (id<JavaLangIterable>)groupWithJavaLangIterable:(id<JavaLangIterable>)iterable
                           withJavaUtilComparator:(id<JavaUtilComparator>)comparator;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

+ (id<JavaLangIterable>)mergeWithJavaLangIterable:(id<JavaLangIterable>)iter1
                             withJavaLangIterable:(id<JavaLangIterable>)iter2
withEduStanfordNlpUtilIterables_IncrementComparator:(id<EduStanfordNlpUtilIterables_IncrementComparator>)comparator;

+ (id<JavaLangIterable>)mergeWithJavaLangIterable:(id<JavaLangIterable>)iter1
                             withJavaLangIterable:(id<JavaLangIterable>)iter2
                             withJavaLangIterable:(id<JavaLangIterable>)iter3
withEduStanfordNlpUtilIterables_IncrementComparator:(id<EduStanfordNlpUtilIterables_IncrementComparator>)comparatorA
withEduStanfordNlpUtilIterables_IncrementComparator:(id<EduStanfordNlpUtilIterables_IncrementComparator>)comparatorB;

+ (id<JavaLangIterable>)mergeWithJavaLangIterable:(id<JavaLangIterable>)iter1
                             withJavaLangIterable:(id<JavaLangIterable>)iter2
                           withJavaUtilComparator:(id<JavaUtilComparator>)comparator;

+ (id<JavaLangIterable>)mergeWithJavaLangIterable:(id<JavaLangIterable>)iter1
                             withJavaLangIterable:(id<JavaLangIterable>)iter2
                             withJavaLangIterable:(id<JavaLangIterable>)iter3
                           withJavaUtilComparator:(id<JavaUtilComparator>)comparator;

+ (id<JavaLangIterable>)sampleWithJavaLangIterable:(id<JavaLangIterable>)items
                                           withInt:(jint)n
                                           withInt:(jint)k
                                withJavaUtilRandom:(JavaUtilRandom *)random;

+ (id<JavaLangIterable>)takeWithJavaLangIterable:(id<JavaLangIterable>)iterable
                                         withInt:(jint)max;

+ (id<JavaLangIterable>)takeWithNSObjectArray:(IOSObjectArray *)array
                                      withInt:(jint)max;

+ (NSString *)toStringWithJavaLangIterable:(id<JavaLangIterable>)iter
                              withNSString:(NSString *)glue;

+ (id<JavaLangIterable>)transformWithJavaLangIterable:(id<JavaLangIterable>)iterable
                         withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)function;

+ (id<JavaLangIterable>)zipWithJavaLangIterable:(id<JavaLangIterable>)iter1
                           withJavaLangIterable:(id<JavaLangIterable>)iter2;

+ (id<JavaLangIterable>)zipWithJavaLangIterable:(id<JavaLangIterable>)iter
                              withNSObjectArray:(IOSObjectArray *)array;

+ (id<JavaUtilIterator>)zipWithJavaUtilIterator:(id<JavaUtilIterator>)iter1
                           withJavaUtilIterator:(id<JavaUtilIterator>)iter2;

+ (id<JavaLangIterable>)zipWithNSObjectArray:(IOSObjectArray *)array
                        withJavaLangIterable:(id<JavaLangIterable>)iter;

+ (id<JavaLangIterable>)zipWithNSObjectArray:(IOSObjectArray *)array1
                           withNSObjectArray:(IOSObjectArray *)array2;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilIterables)

FOUNDATION_EXPORT id<JavaLangIterable> EduStanfordNlpUtilIterables_transformWithJavaLangIterable_withJavaUtilFunctionFunction_(id<JavaLangIterable> iterable, id<JavaUtilFunctionFunction> function);

FOUNDATION_EXPORT id<JavaLangIterable> EduStanfordNlpUtilIterables_filterWithJavaLangIterable_withJavaUtilFunctionFunction_(id<JavaLangIterable> iterable, id<JavaUtilFunctionFunction> accept);

FOUNDATION_EXPORT id<JavaLangIterable> EduStanfordNlpUtilIterables_castWithJavaLangIterable_withIOSClass_(id<JavaLangIterable> iterable, IOSClass *type);

FOUNDATION_EXPORT id<JavaLangIterable> EduStanfordNlpUtilIterables_takeWithNSObjectArray_withInt_(IOSObjectArray *array, jint max);

FOUNDATION_EXPORT id<JavaLangIterable> EduStanfordNlpUtilIterables_takeWithJavaLangIterable_withInt_(id<JavaLangIterable> iterable, jint max);

FOUNDATION_EXPORT id<JavaLangIterable> EduStanfordNlpUtilIterables_dropWithNSObjectArray_withInt_(IOSObjectArray *array, jint toDrop);

FOUNDATION_EXPORT id<JavaLangIterable> EduStanfordNlpUtilIterables_dropWithJavaLangIterable_withInt_(id<JavaLangIterable> iterable, jint toDrop);

FOUNDATION_EXPORT id<JavaLangIterable> EduStanfordNlpUtilIterables_flatMapWithJavaLangIterable_withJavaUtilFunctionFunction_(id<JavaLangIterable> iterables, id<JavaUtilFunctionFunction> trans);

FOUNDATION_EXPORT id<JavaLangIterable> EduStanfordNlpUtilIterables_chainWithJavaLangIterable_(id<JavaLangIterable> iterables);

FOUNDATION_EXPORT id<JavaLangIterable> EduStanfordNlpUtilIterables_chainWithJavaLangIterableArray_(IOSObjectArray *iterables);

FOUNDATION_EXPORT id<JavaLangIterable> EduStanfordNlpUtilIterables_chainWithNSObjectArray2_(IOSObjectArray *arrays);

FOUNDATION_EXPORT id<JavaLangIterable> EduStanfordNlpUtilIterables_zipWithJavaLangIterable_withJavaLangIterable_(id<JavaLangIterable> iter1, id<JavaLangIterable> iter2);

FOUNDATION_EXPORT id<JavaLangIterable> EduStanfordNlpUtilIterables_zipWithJavaLangIterable_withNSObjectArray_(id<JavaLangIterable> iter, IOSObjectArray *array);

FOUNDATION_EXPORT id<JavaLangIterable> EduStanfordNlpUtilIterables_zipWithNSObjectArray_withJavaLangIterable_(IOSObjectArray *array, id<JavaLangIterable> iter);

FOUNDATION_EXPORT id<JavaLangIterable> EduStanfordNlpUtilIterables_zipWithNSObjectArray_withNSObjectArray_(IOSObjectArray *array1, IOSObjectArray *array2);

FOUNDATION_EXPORT id<JavaUtilIterator> EduStanfordNlpUtilIterables_zipWithJavaUtilIterator_withJavaUtilIterator_(id<JavaUtilIterator> iter1, id<JavaUtilIterator> iter2);

FOUNDATION_EXPORT id<JavaLangIterable> EduStanfordNlpUtilIterables_mergeWithJavaLangIterable_withJavaLangIterable_withEduStanfordNlpUtilIterables_IncrementComparator_(id<JavaLangIterable> iter1, id<JavaLangIterable> iter2, id<EduStanfordNlpUtilIterables_IncrementComparator> comparator);

FOUNDATION_EXPORT id<JavaLangIterable> EduStanfordNlpUtilIterables_mergeWithJavaLangIterable_withJavaLangIterable_withJavaUtilComparator_(id<JavaLangIterable> iter1, id<JavaLangIterable> iter2, id<JavaUtilComparator> comparator);

FOUNDATION_EXPORT id<JavaLangIterable> EduStanfordNlpUtilIterables_mergeWithJavaLangIterable_withJavaLangIterable_withJavaLangIterable_withEduStanfordNlpUtilIterables_IncrementComparator_withEduStanfordNlpUtilIterables_IncrementComparator_(id<JavaLangIterable> iter1, id<JavaLangIterable> iter2, id<JavaLangIterable> iter3, id<EduStanfordNlpUtilIterables_IncrementComparator> comparatorA, id<EduStanfordNlpUtilIterables_IncrementComparator> comparatorB);

FOUNDATION_EXPORT id<JavaLangIterable> EduStanfordNlpUtilIterables_mergeWithJavaLangIterable_withJavaLangIterable_withJavaLangIterable_withJavaUtilComparator_(id<JavaLangIterable> iter1, id<JavaLangIterable> iter2, id<JavaLangIterable> iter3, id<JavaUtilComparator> comparator);

FOUNDATION_EXPORT id<JavaLangIterable> EduStanfordNlpUtilIterables_groupWithJavaLangIterable_withJavaUtilComparator_(id<JavaLangIterable> iterable, id<JavaUtilComparator> comparator);

FOUNDATION_EXPORT NSString *EduStanfordNlpUtilIterables_toStringWithJavaLangIterable_withNSString_(id<JavaLangIterable> iter, NSString *glue);

FOUNDATION_EXPORT id<JavaLangIterable> EduStanfordNlpUtilIterables_sampleWithJavaLangIterable_withInt_withInt_withJavaUtilRandom_(id<JavaLangIterable> items, jint n, jint k, JavaUtilRandom *random);

FOUNDATION_EXPORT JavaUtilArrayList *EduStanfordNlpUtilIterables_asArrayListWithJavaUtilIterator_(id<JavaUtilIterator> iter);

FOUNDATION_EXPORT JavaUtilHashSet *EduStanfordNlpUtilIterables_asHashSetWithJavaUtilIterator_(id<JavaUtilIterator> iter);

FOUNDATION_EXPORT id<JavaUtilCollection> EduStanfordNlpUtilIterables_asCollectionWithJavaUtilIterator_withEduStanfordNlpUtilCollectionFactory_(id<JavaUtilIterator> iter, EduStanfordNlpUtilCollectionFactory *cf);

FOUNDATION_EXPORT id<JavaUtilCollection> EduStanfordNlpUtilIterables_addAllWithJavaUtilIterator_withJavaUtilCollection_(id<JavaUtilIterator> iter, id<JavaUtilCollection> c);

FOUNDATION_EXPORT void EduStanfordNlpUtilIterables_mainWithNSStringArray_(IOSObjectArray *args);

FOUNDATION_EXPORT void EduStanfordNlpUtilIterables_init(EduStanfordNlpUtilIterables *self);

FOUNDATION_EXPORT EduStanfordNlpUtilIterables *new_EduStanfordNlpUtilIterables_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpUtilIterables *create_EduStanfordNlpUtilIterables_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilIterables)

#endif

#if !defined (EduStanfordNlpUtilIterables_IncrementComparator_) && (INCLUDE_ALL_EduStanfordNlpUtilIterables || defined(INCLUDE_EduStanfordNlpUtilIterables_IncrementComparator))
#define EduStanfordNlpUtilIterables_IncrementComparator_

@protocol EduStanfordNlpUtilIterables_IncrementComparator < JavaObject >

- (jint)compareWithId:(id)a
               withId:(id)b;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilIterables_IncrementComparator)

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilIterables_IncrementComparator)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpUtilIterables")
