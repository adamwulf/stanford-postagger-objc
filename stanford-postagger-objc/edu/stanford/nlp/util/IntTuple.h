//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/IntTuple.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpUtilIntTuple")
#ifdef RESTRICT_EduStanfordNlpUtilIntTuple
#define INCLUDE_ALL_EduStanfordNlpUtilIntTuple 0
#else
#define INCLUDE_ALL_EduStanfordNlpUtilIntTuple 1
#endif
#undef RESTRICT_EduStanfordNlpUtilIntTuple

#if !defined (EduStanfordNlpUtilIntTuple_) && (INCLUDE_ALL_EduStanfordNlpUtilIntTuple || defined(INCLUDE_EduStanfordNlpUtilIntTuple))
#define EduStanfordNlpUtilIntTuple_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

#define RESTRICT_JavaLangComparable 1
#define INCLUDE_JavaLangComparable 1
#include "java/lang/Comparable.h"

@class IOSIntArray;
@protocol JavaUtilList;

@interface EduStanfordNlpUtilIntTuple : NSObject < JavaIoSerializable, JavaLangComparable > {
 @public
  IOSIntArray *elements_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)num;

- (instancetype)initWithIntArray:(IOSIntArray *)arr;

- (jint)compareToWithId:(EduStanfordNlpUtilIntTuple *)o;

+ (EduStanfordNlpUtilIntTuple *)concatWithEduStanfordNlpUtilIntTuple:(EduStanfordNlpUtilIntTuple *)t1
                                      withEduStanfordNlpUtilIntTuple:(EduStanfordNlpUtilIntTuple *)t2;

- (IOSIntArray *)elems;

- (jboolean)isEqual:(id)iO;

- (jint)getWithInt:(jint)num;

- (EduStanfordNlpUtilIntTuple *)getCopy;

+ (EduStanfordNlpUtilIntTuple *)getIntTupleWithInt:(jint)num;

+ (EduStanfordNlpUtilIntTuple *)getIntTupleWithJavaUtilList:(id<JavaUtilList>)integers;

- (NSUInteger)hash;

- (jint)length;

- (void)print;

- (void)setWithInt:(jint)num
           withInt:(jint)val;

- (void)shiftLeft;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpUtilIntTuple)

J2OBJC_FIELD_SETTER(EduStanfordNlpUtilIntTuple, elements_, IOSIntArray *)

FOUNDATION_EXPORT void EduStanfordNlpUtilIntTuple_initWithIntArray_(EduStanfordNlpUtilIntTuple *self, IOSIntArray *arr);

FOUNDATION_EXPORT EduStanfordNlpUtilIntTuple *new_EduStanfordNlpUtilIntTuple_initWithIntArray_(IOSIntArray *arr) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpUtilIntTuple *create_EduStanfordNlpUtilIntTuple_initWithIntArray_(IOSIntArray *arr);

FOUNDATION_EXPORT void EduStanfordNlpUtilIntTuple_initWithInt_(EduStanfordNlpUtilIntTuple *self, jint num);

FOUNDATION_EXPORT EduStanfordNlpUtilIntTuple *new_EduStanfordNlpUtilIntTuple_initWithInt_(jint num) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpUtilIntTuple *create_EduStanfordNlpUtilIntTuple_initWithInt_(jint num);

FOUNDATION_EXPORT EduStanfordNlpUtilIntTuple *EduStanfordNlpUtilIntTuple_getIntTupleWithInt_(jint num);

FOUNDATION_EXPORT EduStanfordNlpUtilIntTuple *EduStanfordNlpUtilIntTuple_getIntTupleWithJavaUtilList_(id<JavaUtilList> integers);

FOUNDATION_EXPORT EduStanfordNlpUtilIntTuple *EduStanfordNlpUtilIntTuple_concatWithEduStanfordNlpUtilIntTuple_withEduStanfordNlpUtilIntTuple_(EduStanfordNlpUtilIntTuple *t1, EduStanfordNlpUtilIntTuple *t2);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpUtilIntTuple)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpUtilIntTuple")
