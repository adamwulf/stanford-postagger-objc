//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/UTF8EquivalenceFunction.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/util/StringUtils.h"
#include "edu/stanford/nlp/util/UTF8EquivalenceFunction.h"
#include "java/util/function/Function.h"

inline jlong EduStanfordNlpUtilUTF8EquivalenceFunction_get_serialVersionUID();
#define EduStanfordNlpUtilUTF8EquivalenceFunction_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpUtilUTF8EquivalenceFunction, serialVersionUID, jlong)

@implementation EduStanfordNlpUtilUTF8EquivalenceFunction

+ (NSString *)replaceAsciiWithNSString:(NSString *)w {
  return EduStanfordNlpUtilUTF8EquivalenceFunction_replaceAsciiWithNSString_(w);
}

- (NSString *)applyWithId:(NSString *)input {
  if (input == nil) {
    return nil;
  }
  if ([input isEqual:@".$."] || [input isEqual:@".$$."]) {
    return input;
  }
  else {
    return EduStanfordNlpUtilUTF8EquivalenceFunction_replaceAsciiWithNSString_(input);
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpUtilUTF8EquivalenceFunction_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(replaceAsciiWithNSString:);
  methods[1].selector = @selector(applyWithId:);
  methods[2].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpUtilUTF8EquivalenceFunction_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "replaceAscii", "LNSString;", "apply", "Ljava/lang/Object;Ljava/util/function/Function<Ljava/lang/String;Ljava/lang/String;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilUTF8EquivalenceFunction = { "UTF8EquivalenceFunction", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, 3, -1 };
  return &_EduStanfordNlpUtilUTF8EquivalenceFunction;
}

@end

NSString *EduStanfordNlpUtilUTF8EquivalenceFunction_replaceAsciiWithNSString_(NSString *w) {
  EduStanfordNlpUtilUTF8EquivalenceFunction_initialize();
  return EduStanfordNlpUtilStringUtils_trWithNSString_withNSString_withNSString_(w, @"!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", @"\uff01\uff02\uff03\uff04\uff05\uff06\uff07\uff08\uff09\uff0a\uff0b\uff0c\uff0d\uff0e\uff0f\uff10\uff11\uff12\uff13\uff14\uff15\uff16\uff17\uff18\uff19\uff1a\uff1b\uff1c\uff1d\uff1e\uff1f\uff20\uff21\uff22\uff23\uff24\uff25\uff26\uff27\uff28\uff29\uff2a\uff2b\uff2c\uff2d\uff2e\uff2f\uff30\uff31\uff32\uff33\uff34\uff35\uff36\uff37\uff38\uff39\uff3a\uff3b\uff3c\uff3d\uff3e\uff3f\uff40\uff41\uff42\uff43\uff44\uff45\uff46\uff47\uff48\uff49\uff4a\uff4b\uff4c\uff4d\uff4e\uff4f\uff50\uff51\uff52\uff53\uff54\uff55\uff56\uff57\uff58\uff59\uff5a\uff5b\uff5c\uff5d\uff5e");
}

void EduStanfordNlpUtilUTF8EquivalenceFunction_init(EduStanfordNlpUtilUTF8EquivalenceFunction *self) {
  NSObject_init(self);
}

EduStanfordNlpUtilUTF8EquivalenceFunction *new_EduStanfordNlpUtilUTF8EquivalenceFunction_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilUTF8EquivalenceFunction, init)
}

EduStanfordNlpUtilUTF8EquivalenceFunction *create_EduStanfordNlpUtilUTF8EquivalenceFunction_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilUTF8EquivalenceFunction, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilUTF8EquivalenceFunction)
