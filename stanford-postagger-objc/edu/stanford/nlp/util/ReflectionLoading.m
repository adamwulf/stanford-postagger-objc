//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/util/ReflectionLoading.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/util/MetaClass.h"
#include "edu/stanford/nlp/util/ReflectionLoading.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"

@interface EduStanfordNlpUtilReflectionLoading ()

- (instancetype)init;

@end

__attribute__((unused)) static void EduStanfordNlpUtilReflectionLoading_init(EduStanfordNlpUtilReflectionLoading *self);

__attribute__((unused)) static EduStanfordNlpUtilReflectionLoading *new_EduStanfordNlpUtilReflectionLoading_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpUtilReflectionLoading *create_EduStanfordNlpUtilReflectionLoading_init();

inline jlong EduStanfordNlpUtilReflectionLoading_ReflectionLoadingException_get_serialVersionUID();
#define EduStanfordNlpUtilReflectionLoading_ReflectionLoadingException_serialVersionUID -3324911744277952585LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpUtilReflectionLoading_ReflectionLoadingException, serialVersionUID, jlong)

@implementation EduStanfordNlpUtilReflectionLoading

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpUtilReflectionLoading_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (id)loadByReflectionWithNSString:(NSString *)className_
                 withNSObjectArray:(IOSObjectArray *)arguments {
  return EduStanfordNlpUtilReflectionLoading_loadByReflectionWithNSString_withNSObjectArray_(className_, arguments);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x89, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(loadByReflectionWithNSString:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "loadByReflection", "LNSString;[LNSObject;", "<T:Ljava/lang/Object;>(Ljava/lang/String;[Ljava/lang/Object;)TT;", "LEduStanfordNlpUtilReflectionLoading_ReflectionLoadingException;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilReflectionLoading = { "ReflectionLoading", "edu.stanford.nlp.util", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, 3, -1, -1, -1 };
  return &_EduStanfordNlpUtilReflectionLoading;
}

@end

void EduStanfordNlpUtilReflectionLoading_init(EduStanfordNlpUtilReflectionLoading *self) {
  NSObject_init(self);
}

EduStanfordNlpUtilReflectionLoading *new_EduStanfordNlpUtilReflectionLoading_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilReflectionLoading, init)
}

EduStanfordNlpUtilReflectionLoading *create_EduStanfordNlpUtilReflectionLoading_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilReflectionLoading, init)
}

id EduStanfordNlpUtilReflectionLoading_loadByReflectionWithNSString_withNSObjectArray_(NSString *className_, IOSObjectArray *arguments) {
  EduStanfordNlpUtilReflectionLoading_initialize();
  @try {
    return [new_EduStanfordNlpUtilMetaClass_initWithNSString_(className_) createInstanceWithNSObjectArray:arguments];
  }
  @catch (JavaLangException *e) {
    @throw new_EduStanfordNlpUtilReflectionLoading_ReflectionLoadingException_initWithNSString_withNSException_(JreStrcat("$$", @"Error creating ", className_), e);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilReflectionLoading)

@implementation EduStanfordNlpUtilReflectionLoading_ReflectionLoadingException

- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)reason {
  EduStanfordNlpUtilReflectionLoading_ReflectionLoadingException_initWithNSString_withNSException_(self, message, reason);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSException:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpUtilReflectionLoading_ReflectionLoadingException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSException;", "LEduStanfordNlpUtilReflectionLoading;" };
  static const J2ObjcClassInfo _EduStanfordNlpUtilReflectionLoading_ReflectionLoadingException = { "ReflectionLoadingException", "edu.stanford.nlp.util", ptrTable, methods, fields, 7, 0x9, 1, 1, 1, -1, -1, -1, -1 };
  return &_EduStanfordNlpUtilReflectionLoading_ReflectionLoadingException;
}

@end

void EduStanfordNlpUtilReflectionLoading_ReflectionLoadingException_initWithNSString_withNSException_(EduStanfordNlpUtilReflectionLoading_ReflectionLoadingException *self, NSString *message, NSException *reason) {
  JavaLangRuntimeException_initWithNSString_withNSException_(self, message, reason);
}

EduStanfordNlpUtilReflectionLoading_ReflectionLoadingException *new_EduStanfordNlpUtilReflectionLoading_ReflectionLoadingException_initWithNSString_withNSException_(NSString *message, NSException *reason) {
  J2OBJC_NEW_IMPL(EduStanfordNlpUtilReflectionLoading_ReflectionLoadingException, initWithNSString_withNSException_, message, reason)
}

EduStanfordNlpUtilReflectionLoading_ReflectionLoadingException *create_EduStanfordNlpUtilReflectionLoading_ReflectionLoadingException_initWithNSString_withNSException_(NSString *message, NSException *reason) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpUtilReflectionLoading_ReflectionLoadingException, initWithNSString_withNSException_, message, reason)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpUtilReflectionLoading_ReflectionLoadingException)
