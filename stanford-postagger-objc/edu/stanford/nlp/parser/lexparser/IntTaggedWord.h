//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/parser/lexparser/IntTaggedWord.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpParserLexparserIntTaggedWord")
#ifdef RESTRICT_EduStanfordNlpParserLexparserIntTaggedWord
#define INCLUDE_ALL_EduStanfordNlpParserLexparserIntTaggedWord 0
#else
#define INCLUDE_ALL_EduStanfordNlpParserLexparserIntTaggedWord 1
#endif
#undef RESTRICT_EduStanfordNlpParserLexparserIntTaggedWord

#if !defined (EduStanfordNlpParserLexparserIntTaggedWord_) && (INCLUDE_ALL_EduStanfordNlpParserLexparserIntTaggedWord || defined(INCLUDE_EduStanfordNlpParserLexparserIntTaggedWord))
#define EduStanfordNlpParserLexparserIntTaggedWord_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

#define RESTRICT_JavaLangComparable 1
#define INCLUDE_JavaLangComparable 1
#include "java/lang/Comparable.h"

@class EduStanfordNlpLingTaggedWord;
@protocol EduStanfordNlpUtilIndex;

@interface EduStanfordNlpParserLexparserIntTaggedWord : NSObject < JavaIoSerializable, JavaLangComparable > {
 @public
  jint word_;
  jshort tag_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)word
                    withInt:(jint)tag;

- (instancetype)initWithNSString:(NSString *)s
                        withChar:(jchar)splitChar
     withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)wordIndex
     withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)tagIndex;

- (instancetype)initWithNSString:(NSString *)wordString
                    withNSString:(NSString *)tagString
     withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)wordIndex
     withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)tagIndex;

- (jint)compareToWithId:(EduStanfordNlpParserLexparserIntTaggedWord *)that;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

- (jint)tag;

- (NSString *)tagStringWithEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)tagIndex;

- (NSString *)toLexicalEntryWithEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)wordIndex
                            withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)tagIndex;

- (NSString *)description;

- (NSString *)toStringWithEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)wordIndex
                      withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)tagIndex;

- (NSString *)toStringWithNSString:(NSString *)arg
       withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)wordIndex
       withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)tagIndex;

- (EduStanfordNlpLingTaggedWord *)toTaggedWordWithEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)wordIndex
                                              withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)tagIndex;

- (jint)word;

- (NSString *)wordStringWithEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)wordIndex;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpParserLexparserIntTaggedWord)

inline jint EduStanfordNlpParserLexparserIntTaggedWord_get_ANY_WORD_INT();
#define EduStanfordNlpParserLexparserIntTaggedWord_ANY_WORD_INT -1
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpParserLexparserIntTaggedWord, ANY_WORD_INT, jint)

inline jint EduStanfordNlpParserLexparserIntTaggedWord_get_ANY_TAG_INT();
#define EduStanfordNlpParserLexparserIntTaggedWord_ANY_TAG_INT -1
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpParserLexparserIntTaggedWord, ANY_TAG_INT, jint)

inline jint EduStanfordNlpParserLexparserIntTaggedWord_get_STOP_WORD_INT();
#define EduStanfordNlpParserLexparserIntTaggedWord_STOP_WORD_INT -2
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpParserLexparserIntTaggedWord, STOP_WORD_INT, jint)

inline jint EduStanfordNlpParserLexparserIntTaggedWord_get_STOP_TAG_INT();
#define EduStanfordNlpParserLexparserIntTaggedWord_STOP_TAG_INT -2
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpParserLexparserIntTaggedWord, STOP_TAG_INT, jint)

inline NSString *EduStanfordNlpParserLexparserIntTaggedWord_get_ANY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpParserLexparserIntTaggedWord_ANY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserIntTaggedWord, ANY, NSString *)

inline NSString *EduStanfordNlpParserLexparserIntTaggedWord_get_STOP();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpParserLexparserIntTaggedWord_STOP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserIntTaggedWord, STOP, NSString *)

FOUNDATION_EXPORT void EduStanfordNlpParserLexparserIntTaggedWord_initWithInt_withInt_(EduStanfordNlpParserLexparserIntTaggedWord *self, jint word, jint tag);

FOUNDATION_EXPORT EduStanfordNlpParserLexparserIntTaggedWord *new_EduStanfordNlpParserLexparserIntTaggedWord_initWithInt_withInt_(jint word, jint tag) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpParserLexparserIntTaggedWord *create_EduStanfordNlpParserLexparserIntTaggedWord_initWithInt_withInt_(jint word, jint tag);

FOUNDATION_EXPORT void EduStanfordNlpParserLexparserIntTaggedWord_initWithNSString_withChar_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(EduStanfordNlpParserLexparserIntTaggedWord *self, NSString *s, jchar splitChar, id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex);

FOUNDATION_EXPORT EduStanfordNlpParserLexparserIntTaggedWord *new_EduStanfordNlpParserLexparserIntTaggedWord_initWithNSString_withChar_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(NSString *s, jchar splitChar, id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpParserLexparserIntTaggedWord *create_EduStanfordNlpParserLexparserIntTaggedWord_initWithNSString_withChar_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(NSString *s, jchar splitChar, id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex);

FOUNDATION_EXPORT void EduStanfordNlpParserLexparserIntTaggedWord_initWithNSString_withNSString_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(EduStanfordNlpParserLexparserIntTaggedWord *self, NSString *wordString, NSString *tagString, id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex);

FOUNDATION_EXPORT EduStanfordNlpParserLexparserIntTaggedWord *new_EduStanfordNlpParserLexparserIntTaggedWord_initWithNSString_withNSString_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(NSString *wordString, NSString *tagString, id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpParserLexparserIntTaggedWord *create_EduStanfordNlpParserLexparserIntTaggedWord_initWithNSString_withNSString_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(NSString *wordString, NSString *tagString, id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpParserLexparserIntTaggedWord)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpParserLexparserIntTaggedWord")
