//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/parser/lexparser/BaseLexicon.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpParserLexparserBaseLexicon")
#ifdef RESTRICT_EduStanfordNlpParserLexparserBaseLexicon
#define INCLUDE_ALL_EduStanfordNlpParserLexparserBaseLexicon 0
#else
#define INCLUDE_ALL_EduStanfordNlpParserLexparserBaseLexicon 1
#endif
#undef RESTRICT_EduStanfordNlpParserLexparserBaseLexicon

#if !defined (EduStanfordNlpParserLexparserBaseLexicon_) && (INCLUDE_ALL_EduStanfordNlpParserLexparserBaseLexicon || defined(INCLUDE_EduStanfordNlpParserLexparserBaseLexicon))
#define EduStanfordNlpParserLexparserBaseLexicon_

#define RESTRICT_EduStanfordNlpParserLexparserLexicon 1
#define INCLUDE_EduStanfordNlpParserLexparserLexicon 1
#include "edu/stanford/nlp/parser/lexparser/Lexicon.h"

@class EduStanfordNlpLingTaggedWord;
@class EduStanfordNlpParserLexparserIntTaggedWord;
@class EduStanfordNlpParserLexparserOptions;
@class EduStanfordNlpParserLexparserTestOptions;
@class EduStanfordNlpParserLexparserTrainOptions;
@class EduStanfordNlpStatsClassicCounter;
@class EduStanfordNlpTreesTree;
@class IOSDoubleArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaIoBufferedReader;
@class JavaIoWriter;
@protocol EduStanfordNlpParserLexparserUnknownWordModel;
@protocol EduStanfordNlpParserLexparserUnknownWordModelTrainer;
@protocol EduStanfordNlpTreesTreebankLanguagePack;
@protocol EduStanfordNlpUtilIndex;
@protocol JavaUtilCollection;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilIterator;
@protocol JavaUtilList;
@protocol JavaUtilSet;

@interface EduStanfordNlpParserLexparserBaseLexicon : NSObject < EduStanfordNlpParserLexparserLexicon > {
 @public
  id<EduStanfordNlpParserLexparserUnknownWordModel> uwModel_;
  NSString *uwModelTrainerClass_;
  id<EduStanfordNlpParserLexparserUnknownWordModelTrainer> uwModelTrainer_;
  EduStanfordNlpParserLexparserTrainOptions *trainOptions_;
  EduStanfordNlpParserLexparserTestOptions *testOptions_;
  EduStanfordNlpParserLexparserOptions *op_;
  jint smoothInUnknownsThreshold_;
  jboolean smartMutation_;
  id<EduStanfordNlpUtilIndex> wordIndex_;
  id<EduStanfordNlpUtilIndex> tagIndex_;
  IOSObjectArray *rulesWithWord_;
  id<JavaUtilSet> tags_;
  id<JavaUtilSet> words_;
  EduStanfordNlpStatsClassicCounter *seenCounter_;
  IOSDoubleArray *smooth_;
  IOSObjectArray *m_TT_;
  IOSDoubleArray *m_T_;
  jboolean flexiTag_;
  jboolean useSignatureForKnownSmoothing_;
  IOSIntArray *tagsToBaseTags_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)wordIndex
                    withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)tagIndex;

- (instancetype)initWithEduStanfordNlpParserLexparserOptions:(EduStanfordNlpParserLexparserOptions *)op
                                 withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)wordIndex
                                 withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)tagIndex;

- (void)addAllWithJavaUtilList:(id<JavaUtilList>)tagWords;

- (void)addAllWithJavaUtilList:(id<JavaUtilList>)taggedWords
                    withDouble:(jdouble)weight;

- (jdouble)evaluateCoverageWithJavaUtilCollection:(id<JavaUtilCollection>)trees
                                  withJavaUtilSet:(id<JavaUtilSet>)missingWords
                                  withJavaUtilSet:(id<JavaUtilSet>)missingTags
                                  withJavaUtilSet:(id<JavaUtilSet>)missingTW;

- (void)finishTraining;

- (jint)getBaseTagWithInt:(jint)tag
withEduStanfordNlpTreesTreebankLanguagePack:(id<EduStanfordNlpTreesTreebankLanguagePack>)tlp;

- (id<EduStanfordNlpParserLexparserUnknownWordModel>)getUnknownWordModel;

- (void)incrementTreesReadWithDouble:(jdouble)weight;

- (void)initializeTrainingWithDouble:(jdouble)numTrees OBJC_METHOD_FAMILY_NONE;

- (jboolean)isKnownWithInt:(jint)word;

- (jboolean)isKnownWithNSString:(NSString *)word;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (jint)numRules;

- (void)printLexStats;

- (void)readDataWithJavaIoBufferedReader:(JavaIoBufferedReader *)inArg;

- (id<JavaUtilIterator>)ruleIteratorByWordWithInt:(jint)word
                                          withInt:(jint)loc
                                     withNSString:(NSString *)featureSpec;

- (id<JavaUtilIterator>)ruleIteratorByWordWithNSString:(NSString *)word
                                               withInt:(jint)loc;

- (id<JavaUtilIterator>)ruleIteratorByWordWithNSString:(NSString *)word
                                               withInt:(jint)loc
                                          withNSString:(NSString *)featureSpec;

- (jfloat)scoreWithEduStanfordNlpParserLexparserIntTaggedWord:(EduStanfordNlpParserLexparserIntTaggedWord *)iTW
                                                      withInt:(jint)loc
                                                 withNSString:(NSString *)word
                                                 withNSString:(NSString *)featureSpec;

- (void)setUnknownWordModelWithEduStanfordNlpParserLexparserUnknownWordModel:(id<EduStanfordNlpParserLexparserUnknownWordModel>)uwm;

- (id<JavaUtilSet>)tagSetWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)basicCategoryFunction;

- (void)trainWithJavaUtilCollection:(id<JavaUtilCollection>)trees;

- (void)trainWithJavaUtilCollection:(id<JavaUtilCollection>)trees
             withJavaUtilCollection:(id<JavaUtilCollection>)rawTrees;

- (void)trainWithJavaUtilCollection:(id<JavaUtilCollection>)trees
                         withDouble:(jdouble)weight;

- (void)trainWithJavaUtilList:(id<JavaUtilList>)sentence
                   withDouble:(jdouble)weight;

- (void)trainWithEduStanfordNlpLingTaggedWord:(EduStanfordNlpLingTaggedWord *)tw
                                      withInt:(jint)loc
                                   withDouble:(jdouble)weight;

- (void)trainWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                              withDouble:(jdouble)weight;

- (void)trainUnannotatedWithJavaUtilList:(id<JavaUtilList>)sentence
                              withDouble:(jdouble)weight;

- (void)trainWithExpansionWithJavaUtilCollection:(id<JavaUtilCollection>)taggedWords;

- (void)tune;

- (void)writeDataWithJavaIoWriter:(JavaIoWriter *)w;

#pragma mark Protected

- (void)addTaggingWithBoolean:(jboolean)seen
withEduStanfordNlpParserLexparserIntTaggedWord:(EduStanfordNlpParserLexparserIntTaggedWord *)itw
                   withDouble:(jdouble)count;

+ (void)examineIntersectionWithJavaUtilSet:(id<JavaUtilSet>)s1
                           withJavaUtilSet:(id<JavaUtilSet>)s2;

- (void)initRulesWithWord OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilList>)listToEventsWithJavaUtilList:(id<JavaUtilList>)taggedWords;

- (id<JavaUtilList>)treeToEventsWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree;

#pragma mark Package-Private

- (void)buildPT_T;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpParserLexparserBaseLexicon)

J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserBaseLexicon, uwModel_, id<EduStanfordNlpParserLexparserUnknownWordModel>)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserBaseLexicon, uwModelTrainerClass_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserBaseLexicon, uwModelTrainer_, id<EduStanfordNlpParserLexparserUnknownWordModelTrainer>)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserBaseLexicon, trainOptions_, EduStanfordNlpParserLexparserTrainOptions *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserBaseLexicon, testOptions_, EduStanfordNlpParserLexparserTestOptions *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserBaseLexicon, op_, EduStanfordNlpParserLexparserOptions *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserBaseLexicon, wordIndex_, id<EduStanfordNlpUtilIndex>)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserBaseLexicon, tagIndex_, id<EduStanfordNlpUtilIndex>)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserBaseLexicon, rulesWithWord_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserBaseLexicon, tags_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserBaseLexicon, words_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserBaseLexicon, seenCounter_, EduStanfordNlpStatsClassicCounter *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserBaseLexicon, smooth_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserBaseLexicon, m_TT_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserBaseLexicon, m_T_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserBaseLexicon, tagsToBaseTags_, IOSIntArray *)

inline jboolean EduStanfordNlpParserLexparserBaseLexicon_get_DEBUG_LEXICON();
#define EduStanfordNlpParserLexparserBaseLexicon_DEBUG_LEXICON false
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpParserLexparserBaseLexicon, DEBUG_LEXICON, jboolean)

inline jboolean EduStanfordNlpParserLexparserBaseLexicon_get_DEBUG_LEXICON_SCORE();
#define EduStanfordNlpParserLexparserBaseLexicon_DEBUG_LEXICON_SCORE false
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpParserLexparserBaseLexicon, DEBUG_LEXICON_SCORE, jboolean)

inline jint EduStanfordNlpParserLexparserBaseLexicon_get_nullWord();
#define EduStanfordNlpParserLexparserBaseLexicon_nullWord -1
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpParserLexparserBaseLexicon, nullWord, jint)

inline jshort EduStanfordNlpParserLexparserBaseLexicon_get_nullTag();
#define EduStanfordNlpParserLexparserBaseLexicon_nullTag -1
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpParserLexparserBaseLexicon, nullTag, jshort)

inline EduStanfordNlpParserLexparserIntTaggedWord *EduStanfordNlpParserLexparserBaseLexicon_get_NULL_ITW();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpParserLexparserIntTaggedWord *EduStanfordNlpParserLexparserBaseLexicon_NULL_ITW;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserBaseLexicon, NULL_ITW, EduStanfordNlpParserLexparserIntTaggedWord *)

FOUNDATION_EXPORT void EduStanfordNlpParserLexparserBaseLexicon_initWithEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(EduStanfordNlpParserLexparserBaseLexicon *self, id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex);

FOUNDATION_EXPORT EduStanfordNlpParserLexparserBaseLexicon *new_EduStanfordNlpParserLexparserBaseLexicon_initWithEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpParserLexparserBaseLexicon *create_EduStanfordNlpParserLexparserBaseLexicon_initWithEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex);

FOUNDATION_EXPORT void EduStanfordNlpParserLexparserBaseLexicon_initWithEduStanfordNlpParserLexparserOptions_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(EduStanfordNlpParserLexparserBaseLexicon *self, EduStanfordNlpParserLexparserOptions *op, id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex);

FOUNDATION_EXPORT EduStanfordNlpParserLexparserBaseLexicon *new_EduStanfordNlpParserLexparserBaseLexicon_initWithEduStanfordNlpParserLexparserOptions_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(EduStanfordNlpParserLexparserOptions *op, id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpParserLexparserBaseLexicon *create_EduStanfordNlpParserLexparserBaseLexicon_initWithEduStanfordNlpParserLexparserOptions_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(EduStanfordNlpParserLexparserOptions *op, id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex);

FOUNDATION_EXPORT void EduStanfordNlpParserLexparserBaseLexicon_examineIntersectionWithJavaUtilSet_withJavaUtilSet_(id<JavaUtilSet> s1, id<JavaUtilSet> s2);

FOUNDATION_EXPORT void EduStanfordNlpParserLexparserBaseLexicon_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpParserLexparserBaseLexicon)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpParserLexparserBaseLexicon")
