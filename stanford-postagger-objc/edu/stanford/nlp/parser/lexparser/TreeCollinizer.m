//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/parser/lexparser/TreeCollinizer.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/parser/lexparser/TreeCollinizer.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeFactory.h"
#include "edu/stanford/nlp/trees/TreebankLanguagePack.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface EduStanfordNlpParserLexparserTreeCollinizer () {
 @public
  id<EduStanfordNlpTreesTreebankLanguagePack> tlp_;
  jboolean deletePunct_;
  jboolean fixCollinsBaseNP_;
  jint whOption_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserTreeCollinizer, tlp_, id<EduStanfordNlpTreesTreebankLanguagePack>)

@implementation EduStanfordNlpParserLexparserTreeCollinizer

- (instancetype)initWithEduStanfordNlpTreesTreebankLanguagePack:(id<EduStanfordNlpTreesTreebankLanguagePack>)tlp {
  EduStanfordNlpParserLexparserTreeCollinizer_initWithEduStanfordNlpTreesTreebankLanguagePack_(self, tlp);
  return self;
}

- (instancetype)initWithEduStanfordNlpTreesTreebankLanguagePack:(id<EduStanfordNlpTreesTreebankLanguagePack>)tlp
                                                    withBoolean:(jboolean)deletePunct
                                                    withBoolean:(jboolean)fixCollinsBaseNP {
  EduStanfordNlpParserLexparserTreeCollinizer_initWithEduStanfordNlpTreesTreebankLanguagePack_withBoolean_withBoolean_(self, tlp, deletePunct, fixCollinsBaseNP);
  return self;
}

- (instancetype)initWithEduStanfordNlpTreesTreebankLanguagePack:(id<EduStanfordNlpTreesTreebankLanguagePack>)tlp
                                                    withBoolean:(jboolean)deletePunct
                                                    withBoolean:(jboolean)fixCollinsBaseNP
                                                        withInt:(jint)whOption {
  EduStanfordNlpParserLexparserTreeCollinizer_initWithEduStanfordNlpTreesTreebankLanguagePack_withBoolean_withBoolean_withInt_(self, tlp, deletePunct, fixCollinsBaseNP, whOption);
  return self;
}

- (EduStanfordNlpTreesTree *)transformTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree {
  if (tree == nil) return nil;
  id<EduStanfordNlpTreesTreeFactory> tf = [tree treeFactory];
  NSString *s = [tree value];
  if ([((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(tlp_)) isStartSymbolWithNSString:s]) return [self transformTreeWithEduStanfordNlpTreesTree:[tree firstChild]];
  if ([tree isLeaf]) {
    return [((id<EduStanfordNlpTreesTreeFactory>) nil_chk(tf)) newLeafWithEduStanfordNlpLingLabel:[tree label]];
  }
  s = [tlp_ basicCategoryWithNSString:s];
  if (((whOption_ & 1) != 0) && [((NSString *) nil_chk(s)) hasPrefix:@"WH"]) {
    s = [((NSString *) nil_chk(s)) substring:2];
  }
  if ((whOption_ & 2) != 0) {
    s = [((NSString *) nil_chk(s)) replaceAll:@"^WP" withReplacement:@"PRP"];
    s = [((NSString *) nil_chk(s)) replaceAll:@"^WDT" withReplacement:@"DT"];
    s = [((NSString *) nil_chk(s)) replaceAll:@"^WRB" withReplacement:@"RB"];
  }
  if (((whOption_ & 4) != 0) && [((NSString *) nil_chk(s)) hasPrefix:@"WH"]) {
    s = [((NSString *) nil_chk(s)) substring:2];
  }
  if (deletePunct_ && [tree isPreTerminal] && ([tlp_ isEvalBIgnoredPunctuationTagWithNSString:s] || [tlp_ isPunctuationWordWithNSString:[((EduStanfordNlpTreesTree *) nil_chk([tree firstChild])) value]])) {
    return nil;
  }
  if (fixCollinsBaseNP_ && [((NSString *) nil_chk(s)) isEqual:@"NP"]) {
    IOSObjectArray *kids = [tree children];
    if (((IOSObjectArray *) nil_chk(kids))->size_ == 1 && [((NSString *) nil_chk([tlp_ basicCategoryWithNSString:[((EduStanfordNlpTreesTree *) nil_chk(IOSObjectArray_Get(kids, 0))) value]])) isEqual:@"NP"]) {
      return [self transformTreeWithEduStanfordNlpTreesTree:IOSObjectArray_Get(kids, 0)];
    }
  }
  if ([((NSString *) nil_chk(s)) isEqual:@"PRT"]) {
    s = @"ADVP";
  }
  id<JavaUtilList> children = new_JavaUtilArrayList_init();
  for (jint cNum = 0, numKids = [tree numChildren]; cNum < numKids; cNum++) {
    EduStanfordNlpTreesTree *child = IOSObjectArray_Get(nil_chk([tree children]), cNum);
    EduStanfordNlpTreesTree *newChild = [self transformTreeWithEduStanfordNlpTreesTree:child];
    if (newChild != nil) {
      [children addWithId:newChild];
    }
  }
  if ([children isEmpty]) {
    return nil;
  }
  EduStanfordNlpTreesTree *node = [((id<EduStanfordNlpTreesTreeFactory>) nil_chk(tf)) newTreeNodeWithEduStanfordNlpLingLabel:[tree label] withJavaUtilList:children];
  [((EduStanfordNlpTreesTree *) nil_chk(node)) setValueWithNSString:s];
  return node;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesTreebankLanguagePack:);
  methods[1].selector = @selector(initWithEduStanfordNlpTreesTreebankLanguagePack:withBoolean:withBoolean:);
  methods[2].selector = @selector(initWithEduStanfordNlpTreesTreebankLanguagePack:withBoolean:withBoolean:withInt:);
  methods[3].selector = @selector(transformTreeWithEduStanfordNlpTreesTree:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "tlp_", "LEduStanfordNlpTreesTreebankLanguagePack;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "deletePunct_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "fixCollinsBaseNP_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "whOption_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTreesTreebankLanguagePack;", "LEduStanfordNlpTreesTreebankLanguagePack;ZZ", "LEduStanfordNlpTreesTreebankLanguagePack;ZZI", "transformTree", "LEduStanfordNlpTreesTree;" };
  static const J2ObjcClassInfo _EduStanfordNlpParserLexparserTreeCollinizer = { "TreeCollinizer", "edu.stanford.nlp.parser.lexparser", ptrTable, methods, fields, 7, 0x1, 4, 4, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpParserLexparserTreeCollinizer;
}

@end

void EduStanfordNlpParserLexparserTreeCollinizer_initWithEduStanfordNlpTreesTreebankLanguagePack_(EduStanfordNlpParserLexparserTreeCollinizer *self, id<EduStanfordNlpTreesTreebankLanguagePack> tlp) {
  EduStanfordNlpParserLexparserTreeCollinizer_initWithEduStanfordNlpTreesTreebankLanguagePack_withBoolean_withBoolean_(self, tlp, true, false);
}

EduStanfordNlpParserLexparserTreeCollinizer *new_EduStanfordNlpParserLexparserTreeCollinizer_initWithEduStanfordNlpTreesTreebankLanguagePack_(id<EduStanfordNlpTreesTreebankLanguagePack> tlp) {
  J2OBJC_NEW_IMPL(EduStanfordNlpParserLexparserTreeCollinizer, initWithEduStanfordNlpTreesTreebankLanguagePack_, tlp)
}

EduStanfordNlpParserLexparserTreeCollinizer *create_EduStanfordNlpParserLexparserTreeCollinizer_initWithEduStanfordNlpTreesTreebankLanguagePack_(id<EduStanfordNlpTreesTreebankLanguagePack> tlp) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpParserLexparserTreeCollinizer, initWithEduStanfordNlpTreesTreebankLanguagePack_, tlp)
}

void EduStanfordNlpParserLexparserTreeCollinizer_initWithEduStanfordNlpTreesTreebankLanguagePack_withBoolean_withBoolean_(EduStanfordNlpParserLexparserTreeCollinizer *self, id<EduStanfordNlpTreesTreebankLanguagePack> tlp, jboolean deletePunct, jboolean fixCollinsBaseNP) {
  EduStanfordNlpParserLexparserTreeCollinizer_initWithEduStanfordNlpTreesTreebankLanguagePack_withBoolean_withBoolean_withInt_(self, tlp, deletePunct, fixCollinsBaseNP, 0);
}

EduStanfordNlpParserLexparserTreeCollinizer *new_EduStanfordNlpParserLexparserTreeCollinizer_initWithEduStanfordNlpTreesTreebankLanguagePack_withBoolean_withBoolean_(id<EduStanfordNlpTreesTreebankLanguagePack> tlp, jboolean deletePunct, jboolean fixCollinsBaseNP) {
  J2OBJC_NEW_IMPL(EduStanfordNlpParserLexparserTreeCollinizer, initWithEduStanfordNlpTreesTreebankLanguagePack_withBoolean_withBoolean_, tlp, deletePunct, fixCollinsBaseNP)
}

EduStanfordNlpParserLexparserTreeCollinizer *create_EduStanfordNlpParserLexparserTreeCollinizer_initWithEduStanfordNlpTreesTreebankLanguagePack_withBoolean_withBoolean_(id<EduStanfordNlpTreesTreebankLanguagePack> tlp, jboolean deletePunct, jboolean fixCollinsBaseNP) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpParserLexparserTreeCollinizer, initWithEduStanfordNlpTreesTreebankLanguagePack_withBoolean_withBoolean_, tlp, deletePunct, fixCollinsBaseNP)
}

void EduStanfordNlpParserLexparserTreeCollinizer_initWithEduStanfordNlpTreesTreebankLanguagePack_withBoolean_withBoolean_withInt_(EduStanfordNlpParserLexparserTreeCollinizer *self, id<EduStanfordNlpTreesTreebankLanguagePack> tlp, jboolean deletePunct, jboolean fixCollinsBaseNP, jint whOption) {
  NSObject_init(self);
  self->tlp_ = tlp;
  self->deletePunct_ = deletePunct;
  self->fixCollinsBaseNP_ = fixCollinsBaseNP;
  self->whOption_ = whOption;
}

EduStanfordNlpParserLexparserTreeCollinizer *new_EduStanfordNlpParserLexparserTreeCollinizer_initWithEduStanfordNlpTreesTreebankLanguagePack_withBoolean_withBoolean_withInt_(id<EduStanfordNlpTreesTreebankLanguagePack> tlp, jboolean deletePunct, jboolean fixCollinsBaseNP, jint whOption) {
  J2OBJC_NEW_IMPL(EduStanfordNlpParserLexparserTreeCollinizer, initWithEduStanfordNlpTreesTreebankLanguagePack_withBoolean_withBoolean_withInt_, tlp, deletePunct, fixCollinsBaseNP, whOption)
}

EduStanfordNlpParserLexparserTreeCollinizer *create_EduStanfordNlpParserLexparserTreeCollinizer_initWithEduStanfordNlpTreesTreebankLanguagePack_withBoolean_withBoolean_withInt_(id<EduStanfordNlpTreesTreebankLanguagePack> tlp, jboolean deletePunct, jboolean fixCollinsBaseNP, jint whOption) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpParserLexparserTreeCollinizer, initWithEduStanfordNlpTreesTreebankLanguagePack_withBoolean_withBoolean_withInt_, tlp, deletePunct, fixCollinsBaseNP, whOption)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpParserLexparserTreeCollinizer)
