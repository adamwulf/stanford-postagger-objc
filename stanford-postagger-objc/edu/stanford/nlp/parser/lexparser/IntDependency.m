//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/parser/lexparser/IntDependency.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/parser/lexparser/IntDependency.h"
#include "edu/stanford/nlp/parser/lexparser/IntTaggedWord.h"
#include "edu/stanford/nlp/util/Index.h"
#include "edu/stanford/nlp/util/StringUtils.h"

inline IOSCharArray *EduStanfordNlpParserLexparserIntDependency_get_charsToEscape();
static IOSCharArray *EduStanfordNlpParserLexparserIntDependency_charsToEscape;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserIntDependency, charsToEscape, IOSCharArray *)

inline jlong EduStanfordNlpParserLexparserIntDependency_get_serialVersionUID();
#define EduStanfordNlpParserLexparserIntDependency_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpParserLexparserIntDependency, serialVersionUID, jlong)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpParserLexparserIntDependency)

NSString *EduStanfordNlpParserLexparserIntDependency_LEFT = @"left";
NSString *EduStanfordNlpParserLexparserIntDependency_RIGHT = @"right";

@implementation EduStanfordNlpParserLexparserIntDependency

- (NSUInteger)hash {
  return ((jint) [((EduStanfordNlpParserLexparserIntTaggedWord *) nil_chk(head_)) hash]) ^ (JreLShift32(((jint) [((EduStanfordNlpParserLexparserIntTaggedWord *) nil_chk(arg_)) hash]), 8)) ^ (JreLShift32((leftHeaded_ ? 1 : 0), 15)) ^ (JreLShift32(distance_, 16));
}

- (jboolean)isEqual:(id)o {
  if (self == o) {
    return true;
  }
  if ([o isKindOfClass:[EduStanfordNlpParserLexparserIntDependency class]]) {
    EduStanfordNlpParserLexparserIntDependency *d = (EduStanfordNlpParserLexparserIntDependency *) cast_chk(o, [EduStanfordNlpParserLexparserIntDependency class]);
    return ([((EduStanfordNlpParserLexparserIntTaggedWord *) nil_chk(head_)) isEqual:((EduStanfordNlpParserLexparserIntDependency *) nil_chk(d))->head_] && [((EduStanfordNlpParserLexparserIntTaggedWord *) nil_chk(arg_)) isEqual:d->arg_] && distance_ == d->distance_ && leftHeaded_ == d->leftHeaded_);
  }
  else {
    return false;
  }
}

- (NSString *)description {
  return JreStrcat("C$$$$$CS", '"', EduStanfordNlpUtilStringUtils_escapeStringWithNSString_withCharArray_withChar_([((EduStanfordNlpParserLexparserIntTaggedWord *) nil_chk(head_)) description], EduStanfordNlpParserLexparserIntDependency_charsToEscape, '\\'), @"\" -> \"", EduStanfordNlpUtilStringUtils_escapeStringWithNSString_withCharArray_withChar_([((EduStanfordNlpParserLexparserIntTaggedWord *) nil_chk(arg_)) description], EduStanfordNlpParserLexparserIntDependency_charsToEscape, '\\'), @"\" ", (leftHeaded_ ? EduStanfordNlpParserLexparserIntDependency_LEFT : EduStanfordNlpParserLexparserIntDependency_RIGHT), ' ', distance_);
}

- (NSString *)toStringWithEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)wordIndex
                      withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)tagIndex {
  return JreStrcat("C$$$$$CS", '"', EduStanfordNlpUtilStringUtils_escapeStringWithNSString_withCharArray_withChar_([((EduStanfordNlpParserLexparserIntTaggedWord *) nil_chk(head_)) toStringWithEduStanfordNlpUtilIndex:wordIndex withEduStanfordNlpUtilIndex:tagIndex], EduStanfordNlpParserLexparserIntDependency_charsToEscape, '\\'), @"\" -> \"", EduStanfordNlpUtilStringUtils_escapeStringWithNSString_withCharArray_withChar_([((EduStanfordNlpParserLexparserIntTaggedWord *) nil_chk(arg_)) toStringWithEduStanfordNlpUtilIndex:wordIndex withEduStanfordNlpUtilIndex:tagIndex], EduStanfordNlpParserLexparserIntDependency_charsToEscape, '\\'), @"\" ", (leftHeaded_ ? EduStanfordNlpParserLexparserIntDependency_LEFT : EduStanfordNlpParserLexparserIntDependency_RIGHT), ' ', distance_);
}

- (instancetype)initWithEduStanfordNlpParserLexparserIntTaggedWord:(EduStanfordNlpParserLexparserIntTaggedWord *)head
                    withEduStanfordNlpParserLexparserIntTaggedWord:(EduStanfordNlpParserLexparserIntTaggedWord *)arg
                                                       withBoolean:(jboolean)leftHeaded
                                                           withInt:(jint)distance {
  EduStanfordNlpParserLexparserIntDependency_initWithEduStanfordNlpParserLexparserIntTaggedWord_withEduStanfordNlpParserLexparserIntTaggedWord_withBoolean_withInt_(self, head, arg, leftHeaded, distance);
  return self;
}

- (instancetype)initWithInt:(jint)headWord
                    withInt:(jint)headTag
                    withInt:(jint)argWord
                    withInt:(jint)argTag
                withBoolean:(jboolean)leftHeaded
                    withInt:(jint)distance {
  EduStanfordNlpParserLexparserIntDependency_initWithInt_withInt_withInt_withInt_withBoolean_withInt_(self, headWord, headTag, argWord, argTag, leftHeaded, distance);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(hash);
  methods[1].selector = @selector(isEqual:);
  methods[2].selector = @selector(description);
  methods[3].selector = @selector(toStringWithEduStanfordNlpUtilIndex:withEduStanfordNlpUtilIndex:);
  methods[4].selector = @selector(initWithEduStanfordNlpParserLexparserIntTaggedWord:withEduStanfordNlpParserLexparserIntTaggedWord:withBoolean:withInt:);
  methods[5].selector = @selector(initWithInt:withInt:withInt:withInt:withBoolean:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LEFT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "RIGHT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "ANY_DISTANCE_INT", "I", .constantValue.asInt = EduStanfordNlpParserLexparserIntDependency_ANY_DISTANCE_INT, 0x19, -1, -1, -1, -1 },
    { "head_", "LEduStanfordNlpParserLexparserIntTaggedWord;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "arg_", "LEduStanfordNlpParserLexparserIntTaggedWord;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "leftHeaded_", "Z", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "distance_", "S", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "charsToEscape", "[C", .constantValue.asLong = 0, 0x1a, -1, 10, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpParserLexparserIntDependency_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "hashCode", "equals", "LNSObject;", "toString", "LEduStanfordNlpUtilIndex;LEduStanfordNlpUtilIndex;", "(Ledu/stanford/nlp/util/Index<Ljava/lang/String;>;Ledu/stanford/nlp/util/Index<Ljava/lang/String;>;)Ljava/lang/String;", "LEduStanfordNlpParserLexparserIntTaggedWord;LEduStanfordNlpParserLexparserIntTaggedWord;ZI", "IIIIZI", &EduStanfordNlpParserLexparserIntDependency_LEFT, &EduStanfordNlpParserLexparserIntDependency_RIGHT, &EduStanfordNlpParserLexparserIntDependency_charsToEscape };
  static const J2ObjcClassInfo _EduStanfordNlpParserLexparserIntDependency = { "IntDependency", "edu.stanford.nlp.parser.lexparser", ptrTable, methods, fields, 7, 0x1, 6, 9, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpParserLexparserIntDependency;
}

+ (void)initialize {
  if (self == [EduStanfordNlpParserLexparserIntDependency class]) {
    EduStanfordNlpParserLexparserIntDependency_charsToEscape = [IOSCharArray newArrayWithChars:(jchar[]){ '"' } count:1];
    J2OBJC_SET_INITIALIZED(EduStanfordNlpParserLexparserIntDependency)
  }
}

@end

void EduStanfordNlpParserLexparserIntDependency_initWithEduStanfordNlpParserLexparserIntTaggedWord_withEduStanfordNlpParserLexparserIntTaggedWord_withBoolean_withInt_(EduStanfordNlpParserLexparserIntDependency *self, EduStanfordNlpParserLexparserIntTaggedWord *head, EduStanfordNlpParserLexparserIntTaggedWord *arg, jboolean leftHeaded, jint distance) {
  NSObject_init(self);
  self->head_ = head;
  self->arg_ = arg;
  self->distance_ = (jshort) distance;
  self->leftHeaded_ = leftHeaded;
}

EduStanfordNlpParserLexparserIntDependency *new_EduStanfordNlpParserLexparserIntDependency_initWithEduStanfordNlpParserLexparserIntTaggedWord_withEduStanfordNlpParserLexparserIntTaggedWord_withBoolean_withInt_(EduStanfordNlpParserLexparserIntTaggedWord *head, EduStanfordNlpParserLexparserIntTaggedWord *arg, jboolean leftHeaded, jint distance) {
  J2OBJC_NEW_IMPL(EduStanfordNlpParserLexparserIntDependency, initWithEduStanfordNlpParserLexparserIntTaggedWord_withEduStanfordNlpParserLexparserIntTaggedWord_withBoolean_withInt_, head, arg, leftHeaded, distance)
}

EduStanfordNlpParserLexparserIntDependency *create_EduStanfordNlpParserLexparserIntDependency_initWithEduStanfordNlpParserLexparserIntTaggedWord_withEduStanfordNlpParserLexparserIntTaggedWord_withBoolean_withInt_(EduStanfordNlpParserLexparserIntTaggedWord *head, EduStanfordNlpParserLexparserIntTaggedWord *arg, jboolean leftHeaded, jint distance) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpParserLexparserIntDependency, initWithEduStanfordNlpParserLexparserIntTaggedWord_withEduStanfordNlpParserLexparserIntTaggedWord_withBoolean_withInt_, head, arg, leftHeaded, distance)
}

void EduStanfordNlpParserLexparserIntDependency_initWithInt_withInt_withInt_withInt_withBoolean_withInt_(EduStanfordNlpParserLexparserIntDependency *self, jint headWord, jint headTag, jint argWord, jint argTag, jboolean leftHeaded, jint distance) {
  NSObject_init(self);
  self->head_ = new_EduStanfordNlpParserLexparserIntTaggedWord_initWithInt_withInt_(headWord, headTag);
  self->arg_ = new_EduStanfordNlpParserLexparserIntTaggedWord_initWithInt_withInt_(argWord, argTag);
  self->distance_ = (jshort) distance;
  self->leftHeaded_ = leftHeaded;
}

EduStanfordNlpParserLexparserIntDependency *new_EduStanfordNlpParserLexparserIntDependency_initWithInt_withInt_withInt_withInt_withBoolean_withInt_(jint headWord, jint headTag, jint argWord, jint argTag, jboolean leftHeaded, jint distance) {
  J2OBJC_NEW_IMPL(EduStanfordNlpParserLexparserIntDependency, initWithInt_withInt_withInt_withInt_withBoolean_withInt_, headWord, headTag, argWord, argTag, leftHeaded, distance)
}

EduStanfordNlpParserLexparserIntDependency *create_EduStanfordNlpParserLexparserIntDependency_initWithInt_withInt_withInt_withInt_withBoolean_withInt_(jint headWord, jint headTag, jint argWord, jint argTag, jboolean leftHeaded, jint distance) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpParserLexparserIntDependency, initWithInt_withInt_withInt_withInt_withBoolean_withInt_, headWord, headTag, argWord, argTag, leftHeaded, distance)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpParserLexparserIntDependency)
