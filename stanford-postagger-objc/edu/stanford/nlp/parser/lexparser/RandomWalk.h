//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/parser/lexparser/RandomWalk.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpParserLexparserRandomWalk")
#ifdef RESTRICT_EduStanfordNlpParserLexparserRandomWalk
#define INCLUDE_ALL_EduStanfordNlpParserLexparserRandomWalk 0
#else
#define INCLUDE_ALL_EduStanfordNlpParserLexparserRandomWalk 1
#endif
#undef RESTRICT_EduStanfordNlpParserLexparserRandomWalk

#if !defined (EduStanfordNlpParserLexparserRandomWalk_) && (INCLUDE_ALL_EduStanfordNlpParserLexparserRandomWalk || defined(INCLUDE_EduStanfordNlpParserLexparserRandomWalk))
#define EduStanfordNlpParserLexparserRandomWalk_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@protocol JavaUtilCollection;

@interface EduStanfordNlpParserLexparserRandomWalk : NSObject < JavaIoSerializable >

#pragma mark Public

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)data
                                   withInt:(jint)steps;

- (jdouble)scoreWithId:(id)hidden
                withId:(id)seen;

- (jdouble)scoreWithId:(id)hidden
                withId:(id)seen
               withInt:(jint)steps;

- (jdouble)stepWithId:(id)hidden
               withId:(id)seen
              withInt:(jint)steps;

- (void)trainWithJavaUtilCollection:(id<JavaUtilCollection>)data;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpParserLexparserRandomWalk)

FOUNDATION_EXPORT void EduStanfordNlpParserLexparserRandomWalk_initWithJavaUtilCollection_withInt_(EduStanfordNlpParserLexparserRandomWalk *self, id<JavaUtilCollection> data, jint steps);

FOUNDATION_EXPORT EduStanfordNlpParserLexparserRandomWalk *new_EduStanfordNlpParserLexparserRandomWalk_initWithJavaUtilCollection_withInt_(id<JavaUtilCollection> data, jint steps) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpParserLexparserRandomWalk *create_EduStanfordNlpParserLexparserRandomWalk_initWithJavaUtilCollection_withInt_(id<JavaUtilCollection> data, jint steps);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpParserLexparserRandomWalk)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpParserLexparserRandomWalk")
