//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/parser/lexparser/ChineseCharacterBasedLexicon.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpParserLexparserChineseCharacterBasedLexicon")
#ifdef RESTRICT_EduStanfordNlpParserLexparserChineseCharacterBasedLexicon
#define INCLUDE_ALL_EduStanfordNlpParserLexparserChineseCharacterBasedLexicon 0
#else
#define INCLUDE_ALL_EduStanfordNlpParserLexparserChineseCharacterBasedLexicon 1
#endif
#undef RESTRICT_EduStanfordNlpParserLexparserChineseCharacterBasedLexicon

#if !defined (EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_) && (INCLUDE_ALL_EduStanfordNlpParserLexparserChineseCharacterBasedLexicon || defined(INCLUDE_EduStanfordNlpParserLexparserChineseCharacterBasedLexicon))
#define EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_

#define RESTRICT_EduStanfordNlpParserLexparserLexicon 1
#define INCLUDE_EduStanfordNlpParserLexparserLexicon 1
#include "edu/stanford/nlp/parser/lexparser/Lexicon.h"

@class EduStanfordNlpLingTaggedWord;
@class EduStanfordNlpParserLexparserChineseTreebankParserParams;
@class EduStanfordNlpParserLexparserIntTaggedWord;
@class EduStanfordNlpStatsDistribution;
@class EduStanfordNlpTreesTree;
@class JavaIoBufferedReader;
@class JavaIoWriter;
@protocol EduStanfordNlpParserLexparserUnknownWordModel;
@protocol EduStanfordNlpUtilIndex;
@protocol JavaUtilCollection;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilIterator;
@protocol JavaUtilList;
@protocol JavaUtilSet;

@interface EduStanfordNlpParserLexparserChineseCharacterBasedLexicon : NSObject < EduStanfordNlpParserLexparserLexicon >

#pragma mark Public

- (instancetype)initWithEduStanfordNlpParserLexparserChineseTreebankParserParams:(EduStanfordNlpParserLexparserChineseTreebankParserParams *)params
                                                     withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)wordIndex
                                                     withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)tagIndex;

- (void)finishTraining;

- (EduStanfordNlpStatsDistribution *)getPOSDistribution;

- (id<EduStanfordNlpParserLexparserUnknownWordModel>)getUnknownWordModel;

- (void)incrementTreesReadWithDouble:(jdouble)weight;

- (void)initializeTrainingWithDouble:(jdouble)numTrees OBJC_METHOD_FAMILY_NONE;

+ (jboolean)isForeignWithNSString:(NSString *)s;

- (jboolean)isKnownWithInt:(jint)word;

- (jboolean)isKnownWithNSString:(NSString *)word;

- (jint)numRules;

- (void)readDataWithJavaIoBufferedReader:(JavaIoBufferedReader *)inArg;

- (id<JavaUtilIterator>)ruleIteratorByWordWithInt:(jint)word
                                          withInt:(jint)loc
                                     withNSString:(NSString *)featureSpec;

- (id<JavaUtilIterator>)ruleIteratorByWordWithNSString:(NSString *)word
                                               withInt:(jint)loc
                                          withNSString:(NSString *)featureSpec;

- (NSString *)sampleFrom;

- (NSString *)sampleFromWithNSString:(NSString *)tag;

- (jfloat)scoreWithEduStanfordNlpParserLexparserIntTaggedWord:(EduStanfordNlpParserLexparserIntTaggedWord *)iTW
                                                      withInt:(jint)loc
                                                 withNSString:(NSString *)word
                                                 withNSString:(NSString *)featureSpec;

- (void)setUnknownWordModelWithEduStanfordNlpParserLexparserUnknownWordModel:(id<EduStanfordNlpParserLexparserUnknownWordModel>)uwm;

- (id<JavaUtilSet>)tagSetWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)basicCategoryFunction;

- (void)trainWithJavaUtilCollection:(id<JavaUtilCollection>)trees;

- (void)trainWithJavaUtilCollection:(id<JavaUtilCollection>)trees
             withJavaUtilCollection:(id<JavaUtilCollection>)rawTrees;

- (void)trainWithJavaUtilCollection:(id<JavaUtilCollection>)trees
                         withDouble:(jdouble)weight;

- (void)trainWithJavaUtilList:(id<JavaUtilList>)sentence
                   withDouble:(jdouble)weight;

- (void)trainWithEduStanfordNlpLingTaggedWord:(EduStanfordNlpLingTaggedWord *)tw
                                      withInt:(jint)loc
                                   withDouble:(jdouble)weight;

- (void)trainWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                              withDouble:(jdouble)weight;

- (void)trainUnannotatedWithJavaUtilList:(id<JavaUtilList>)sentence
                              withDouble:(jdouble)weight;

- (void)writeDataWithJavaIoWriter:(JavaIoWriter *)w;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpParserLexparserChineseCharacterBasedLexicon)

FOUNDATION_EXPORT void EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_initWithEduStanfordNlpParserLexparserChineseTreebankParserParams_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(EduStanfordNlpParserLexparserChineseCharacterBasedLexicon *self, EduStanfordNlpParserLexparserChineseTreebankParserParams *params, id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex);

FOUNDATION_EXPORT EduStanfordNlpParserLexparserChineseCharacterBasedLexicon *new_EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_initWithEduStanfordNlpParserLexparserChineseTreebankParserParams_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(EduStanfordNlpParserLexparserChineseTreebankParserParams *params, id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpParserLexparserChineseCharacterBasedLexicon *create_EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_initWithEduStanfordNlpParserLexparserChineseTreebankParserParams_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(EduStanfordNlpParserLexparserChineseTreebankParserParams *params, id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex);

FOUNDATION_EXPORT jboolean EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_isForeignWithNSString_(NSString *s);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpParserLexparserChineseCharacterBasedLexicon)

#endif

#if !defined (EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_) && (INCLUDE_ALL_EduStanfordNlpParserLexparserChineseCharacterBasedLexicon || defined(INCLUDE_EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol))
#define EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class EduStanfordNlpParserLexparserInterner;

@interface EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol : NSObject < JavaIoSerializable > {
 @public
  jint type_;
}

#pragma mark Public

- (instancetype)initWithChar:(jchar)ch;

- (instancetype)initWithInt:(jint)type;

- (instancetype)initWithNSString:(NSString *)unkClass;

+ (EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *)cannonicalSymbolWithChar:(jchar)ch;

- (jboolean)isEqual:(id)o;

- (jchar)getCh;

- (NSUInteger)hash;

- (EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *)intern;

- (NSString *)description;

#pragma mark Protected

- (id)readResolve;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol)

inline EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_get_UNKNOWN();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_UNKNOWN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol, UNKNOWN, EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *)

inline EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_get_DIGIT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_DIGIT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol, DIGIT, EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *)

inline EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_get_LETTER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_LETTER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol, LETTER, EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *)

inline EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_get_BEGIN_WORD();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_BEGIN_WORD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol, BEGIN_WORD, EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *)

inline EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_get_END_WORD();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_END_WORD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol, END_WORD, EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *)

inline EduStanfordNlpParserLexparserInterner *EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_get_interner();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpParserLexparserInterner *EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_interner;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol, interner, EduStanfordNlpParserLexparserInterner *)

FOUNDATION_EXPORT void EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_initWithChar_(EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *self, jchar ch);

FOUNDATION_EXPORT EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *new_EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_initWithChar_(jchar ch) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *create_EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_initWithChar_(jchar ch);

FOUNDATION_EXPORT void EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_initWithNSString_(EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *self, NSString *unkClass);

FOUNDATION_EXPORT EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *new_EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_initWithNSString_(NSString *unkClass) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *create_EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_initWithNSString_(NSString *unkClass);

FOUNDATION_EXPORT void EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_initWithInt_(EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *self, jint type);

FOUNDATION_EXPORT EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *new_EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_initWithInt_(jint type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *create_EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_initWithInt_(jint type);

FOUNDATION_EXPORT EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol *EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol_cannonicalSymbolWithChar_(jchar ch);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpParserLexparserChineseCharacterBasedLexicon_Symbol)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpParserLexparserChineseCharacterBasedLexicon")
