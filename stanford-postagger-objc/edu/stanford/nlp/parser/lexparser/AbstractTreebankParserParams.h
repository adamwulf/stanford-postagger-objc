//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/parser/lexparser/AbstractTreebankParserParams.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpParserLexparserAbstractTreebankParserParams")
#ifdef RESTRICT_EduStanfordNlpParserLexparserAbstractTreebankParserParams
#define INCLUDE_ALL_EduStanfordNlpParserLexparserAbstractTreebankParserParams 0
#else
#define INCLUDE_ALL_EduStanfordNlpParserLexparserAbstractTreebankParserParams 1
#endif
#undef RESTRICT_EduStanfordNlpParserLexparserAbstractTreebankParserParams

#if !defined (EduStanfordNlpParserLexparserAbstractTreebankParserParams_) && (INCLUDE_ALL_EduStanfordNlpParserLexparserAbstractTreebankParserParams || defined(INCLUDE_EduStanfordNlpParserLexparserAbstractTreebankParserParams))
#define EduStanfordNlpParserLexparserAbstractTreebankParserParams_

#define RESTRICT_EduStanfordNlpParserLexparserTreebankLangParserParams 1
#define INCLUDE_EduStanfordNlpParserLexparserTreebankLangParserParams 1
#include "edu/stanford/nlp/parser/lexparser/TreebankLangParserParams.h"

@class EduStanfordNlpParserLexparserOptions;
@class EduStanfordNlpParserMetricsAbstractEval;
@class EduStanfordNlpTreesDiskTreebank;
@class EduStanfordNlpTreesGrammaticalStructure;
@class EduStanfordNlpTreesMemoryTreebank;
@class EduStanfordNlpTreesTree;
@class EduStanfordNlpTreesTreebank;
@class IOSDoubleArray;
@class IOSObjectArray;
@class JavaIoOutputStream;
@class JavaIoPrintWriter;
@protocol EduStanfordNlpLingLabel;
@protocol EduStanfordNlpParserLexparserExtractor;
@protocol EduStanfordNlpParserLexparserLexicon;
@protocol EduStanfordNlpProcessTokenizerFactory;
@protocol EduStanfordNlpStatsEquivalenceClasser;
@protocol EduStanfordNlpTreesDependencyTyper;
@protocol EduStanfordNlpTreesHeadFinder;
@protocol EduStanfordNlpTreesTreeTransformer;
@protocol EduStanfordNlpTreesTreebankLanguagePack;
@protocol EduStanfordNlpUtilIndex;
@protocol JavaUtilCollection;
@protocol JavaUtilFunctionPredicate;
@protocol JavaUtilList;

@interface EduStanfordNlpParserLexparserAbstractTreebankParserParams : NSObject < EduStanfordNlpParserLexparserTreebankLangParserParams > {
 @public
  jboolean evalGF_;
  NSString *inputEncoding_;
  NSString *outputEncoding_;
  id<EduStanfordNlpTreesTreebankLanguagePack> tlp_;
  jboolean generateOriginalDependencies_;
}

#pragma mark Public

- (id<EduStanfordNlpTreesTreeTransformer>)collinizer;

- (id<EduStanfordNlpTreesTreeTransformer>)collinizerEvalb;

- (IOSObjectArray *)defaultCoreNLPFlags;

- (id<EduStanfordNlpParserLexparserExtractor>)dependencyGrammarExtractorWithEduStanfordNlpParserLexparserOptions:(EduStanfordNlpParserLexparserOptions *)op
                                                                                     withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)wordIndex
                                                                                     withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)tagIndex;

+ (id<JavaUtilCollection>)dependencyObjectifyWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                       withEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)hf
                                  withEduStanfordNlpTreesTreeTransformer:(id<EduStanfordNlpTreesTreeTransformer>)collinizer
                                  withEduStanfordNlpTreesDependencyTyper:(id<EduStanfordNlpTreesDependencyTyper>)typer;

- (EduStanfordNlpTreesDiskTreebank *)diskTreebank;

- (void)display;

- (jboolean)generateOriginalDependencies;

- (EduStanfordNlpTreesGrammaticalStructure *)getGrammaticalStructureWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                                                  withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)filter
                                                              withEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)hf;

- (NSString *)getInputEncoding;

- (NSString *)getOutputEncoding;

- (id<EduStanfordNlpTreesHeadFinder>)headFinder;

- (jboolean)isEvalGF;

- (id<EduStanfordNlpParserLexparserLexicon>)lexWithEduStanfordNlpParserLexparserOptions:(EduStanfordNlpParserLexparserOptions *)op
                                                            withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)wordIndex
                                                            withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)tagIndex;

- (EduStanfordNlpTreesMemoryTreebank *)memoryTreebank;

- (IOSDoubleArray *)MLEDependencyGrammarSmoothingParams;

+ (id<JavaUtilCollection>)parsevalObjectifyWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                withEduStanfordNlpTreesTreeTransformer:(id<EduStanfordNlpTreesTreeTransformer>)collinizer;

+ (id<JavaUtilCollection>)parsevalObjectifyWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                withEduStanfordNlpTreesTreeTransformer:(id<EduStanfordNlpTreesTreeTransformer>)collinizer
                                                           withBoolean:(jboolean)labelConstituents;

- (EduStanfordNlpParserMetricsAbstractEval *)ppAttachmentEval;

- (id<EduStanfordNlpLingLabel>)processHeadWordWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)headWord;

- (JavaIoPrintWriter *)pw;

- (JavaIoPrintWriter *)pwWithJavaIoOutputStream:(JavaIoOutputStream *)o;

- (id<JavaUtilList>)readGrammaticalStructureFromFileWithNSString:(NSString *)filename;

- (void)setEvalGFWithBoolean:(jboolean)evalGF;

- (void)setEvaluateGrammaticalFunctionsWithBoolean:(jboolean)evalGFs;

- (void)setGenerateOriginalDependenciesWithBoolean:(jboolean)originalDependencies;

- (void)setInputEncodingWithNSString:(NSString *)encoding;

- (jint)setOptionFlagWithNSStringArray:(IOSObjectArray *)args
                               withInt:(jint)i;

- (void)setOutputEncodingWithNSString:(NSString *)encoding;

- (IOSObjectArray *)sisterSplitters;

- (id<EduStanfordNlpTreesTreeTransformer>)subcategoryStripper;

- (jboolean)supportsBasicDependencies;

- (EduStanfordNlpTreesMemoryTreebank *)testMemoryTreebank;

- (EduStanfordNlpTreesTree *)transformTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                          withEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)root;

- (EduStanfordNlpTreesTreebank *)treebank;

- (id<EduStanfordNlpTreesTreebankLanguagePack>)treebankLanguagePack;

- (id<EduStanfordNlpProcessTokenizerFactory>)treeTokenizerFactory;

+ (id<EduStanfordNlpStatsEquivalenceClasser>)typedDependencyClasser;

- (id<EduStanfordNlpTreesHeadFinder>)typedDependencyHeadFinder;

+ (id<JavaUtilCollection>)typedDependencyObjectifyWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                            withEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)hf
                                       withEduStanfordNlpTreesTreeTransformer:(id<EduStanfordNlpTreesTreeTransformer>)collinizer;

+ (id<JavaUtilCollection>)unorderedTypedDependencyObjectifyWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                                     withEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)hf
                                                withEduStanfordNlpTreesTreeTransformer:(id<EduStanfordNlpTreesTreeTransformer>)collinizer;

+ (id<JavaUtilCollection>)unorderedUntypedDependencyObjectifyWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                                       withEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)hf
                                                  withEduStanfordNlpTreesTreeTransformer:(id<EduStanfordNlpTreesTreeTransformer>)collinizer;

+ (id<JavaUtilCollection>)untypedDependencyObjectifyWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                              withEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)hf
                                         withEduStanfordNlpTreesTreeTransformer:(id<EduStanfordNlpTreesTreeTransformer>)collinizer;

#pragma mark Protected

- (instancetype)initWithEduStanfordNlpTreesTreebankLanguagePack:(id<EduStanfordNlpTreesTreebankLanguagePack>)tlp;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpParserLexparserAbstractTreebankParserParams)

J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserAbstractTreebankParserParams, inputEncoding_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserAbstractTreebankParserParams, outputEncoding_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserAbstractTreebankParserParams, tlp_, id<EduStanfordNlpTreesTreebankLanguagePack>)

FOUNDATION_EXPORT void EduStanfordNlpParserLexparserAbstractTreebankParserParams_initWithEduStanfordNlpTreesTreebankLanguagePack_(EduStanfordNlpParserLexparserAbstractTreebankParserParams *self, id<EduStanfordNlpTreesTreebankLanguagePack> tlp);

FOUNDATION_EXPORT id<JavaUtilCollection> EduStanfordNlpParserLexparserAbstractTreebankParserParams_parsevalObjectifyWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTreeTransformer_(EduStanfordNlpTreesTree *t, id<EduStanfordNlpTreesTreeTransformer> collinizer);

FOUNDATION_EXPORT id<JavaUtilCollection> EduStanfordNlpParserLexparserAbstractTreebankParserParams_parsevalObjectifyWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTreeTransformer_withBoolean_(EduStanfordNlpTreesTree *t, id<EduStanfordNlpTreesTreeTransformer> collinizer, jboolean labelConstituents);

FOUNDATION_EXPORT id<JavaUtilCollection> EduStanfordNlpParserLexparserAbstractTreebankParserParams_untypedDependencyObjectifyWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesHeadFinder_withEduStanfordNlpTreesTreeTransformer_(EduStanfordNlpTreesTree *t, id<EduStanfordNlpTreesHeadFinder> hf, id<EduStanfordNlpTreesTreeTransformer> collinizer);

FOUNDATION_EXPORT id<JavaUtilCollection> EduStanfordNlpParserLexparserAbstractTreebankParserParams_unorderedUntypedDependencyObjectifyWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesHeadFinder_withEduStanfordNlpTreesTreeTransformer_(EduStanfordNlpTreesTree *t, id<EduStanfordNlpTreesHeadFinder> hf, id<EduStanfordNlpTreesTreeTransformer> collinizer);

FOUNDATION_EXPORT id<JavaUtilCollection> EduStanfordNlpParserLexparserAbstractTreebankParserParams_typedDependencyObjectifyWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesHeadFinder_withEduStanfordNlpTreesTreeTransformer_(EduStanfordNlpTreesTree *t, id<EduStanfordNlpTreesHeadFinder> hf, id<EduStanfordNlpTreesTreeTransformer> collinizer);

FOUNDATION_EXPORT id<JavaUtilCollection> EduStanfordNlpParserLexparserAbstractTreebankParserParams_unorderedTypedDependencyObjectifyWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesHeadFinder_withEduStanfordNlpTreesTreeTransformer_(EduStanfordNlpTreesTree *t, id<EduStanfordNlpTreesHeadFinder> hf, id<EduStanfordNlpTreesTreeTransformer> collinizer);

FOUNDATION_EXPORT id<JavaUtilCollection> EduStanfordNlpParserLexparserAbstractTreebankParserParams_dependencyObjectifyWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesHeadFinder_withEduStanfordNlpTreesTreeTransformer_withEduStanfordNlpTreesDependencyTyper_(EduStanfordNlpTreesTree *t, id<EduStanfordNlpTreesHeadFinder> hf, id<EduStanfordNlpTreesTreeTransformer> collinizer, id<EduStanfordNlpTreesDependencyTyper> typer);

FOUNDATION_EXPORT id<EduStanfordNlpStatsEquivalenceClasser> EduStanfordNlpParserLexparserAbstractTreebankParserParams_typedDependencyClasser();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpParserLexparserAbstractTreebankParserParams)

#endif

#if !defined (EduStanfordNlpParserLexparserAbstractTreebankParserParams_SubcategoryStripper_) && (INCLUDE_ALL_EduStanfordNlpParserLexparserAbstractTreebankParserParams || defined(INCLUDE_EduStanfordNlpParserLexparserAbstractTreebankParserParams_SubcategoryStripper))
#define EduStanfordNlpParserLexparserAbstractTreebankParserParams_SubcategoryStripper_

#define RESTRICT_EduStanfordNlpTreesTreeTransformer 1
#define INCLUDE_EduStanfordNlpTreesTreeTransformer 1
#include "edu/stanford/nlp/trees/TreeTransformer.h"

@class EduStanfordNlpParserLexparserAbstractTreebankParserParams;
@class EduStanfordNlpTreesTree;
@protocol EduStanfordNlpTreesTreeFactory;

@interface EduStanfordNlpParserLexparserAbstractTreebankParserParams_SubcategoryStripper : NSObject < EduStanfordNlpTreesTreeTransformer > {
 @public
  id<EduStanfordNlpTreesTreeFactory> tf_;
}

#pragma mark Public

- (EduStanfordNlpTreesTree *)transformTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree;

#pragma mark Protected

- (instancetype)initWithEduStanfordNlpParserLexparserAbstractTreebankParserParams:(EduStanfordNlpParserLexparserAbstractTreebankParserParams *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpParserLexparserAbstractTreebankParserParams_SubcategoryStripper)

J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserAbstractTreebankParserParams_SubcategoryStripper, tf_, id<EduStanfordNlpTreesTreeFactory>)

FOUNDATION_EXPORT void EduStanfordNlpParserLexparserAbstractTreebankParserParams_SubcategoryStripper_initWithEduStanfordNlpParserLexparserAbstractTreebankParserParams_(EduStanfordNlpParserLexparserAbstractTreebankParserParams_SubcategoryStripper *self, EduStanfordNlpParserLexparserAbstractTreebankParserParams *outer$);

FOUNDATION_EXPORT EduStanfordNlpParserLexparserAbstractTreebankParserParams_SubcategoryStripper *new_EduStanfordNlpParserLexparserAbstractTreebankParserParams_SubcategoryStripper_initWithEduStanfordNlpParserLexparserAbstractTreebankParserParams_(EduStanfordNlpParserLexparserAbstractTreebankParserParams *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpParserLexparserAbstractTreebankParserParams_SubcategoryStripper *create_EduStanfordNlpParserLexparserAbstractTreebankParserParams_SubcategoryStripper_initWithEduStanfordNlpParserLexparserAbstractTreebankParserParams_(EduStanfordNlpParserLexparserAbstractTreebankParserParams *outer$);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpParserLexparserAbstractTreebankParserParams_SubcategoryStripper)

#endif

#if !defined (EduStanfordNlpParserLexparserAbstractTreebankParserParams_RemoveGFSubcategoryStripper_) && (INCLUDE_ALL_EduStanfordNlpParserLexparserAbstractTreebankParserParams || defined(INCLUDE_EduStanfordNlpParserLexparserAbstractTreebankParserParams_RemoveGFSubcategoryStripper))
#define EduStanfordNlpParserLexparserAbstractTreebankParserParams_RemoveGFSubcategoryStripper_

#define RESTRICT_EduStanfordNlpTreesTreeTransformer 1
#define INCLUDE_EduStanfordNlpTreesTreeTransformer 1
#include "edu/stanford/nlp/trees/TreeTransformer.h"

@class EduStanfordNlpParserLexparserAbstractTreebankParserParams;
@class EduStanfordNlpTreesTree;
@protocol EduStanfordNlpTreesTreeFactory;

@interface EduStanfordNlpParserLexparserAbstractTreebankParserParams_RemoveGFSubcategoryStripper : NSObject < EduStanfordNlpTreesTreeTransformer > {
 @public
  id<EduStanfordNlpTreesTreeFactory> tf_;
}

#pragma mark Public

- (EduStanfordNlpTreesTree *)transformTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree;

#pragma mark Protected

- (instancetype)initWithEduStanfordNlpParserLexparserAbstractTreebankParserParams:(EduStanfordNlpParserLexparserAbstractTreebankParserParams *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpParserLexparserAbstractTreebankParserParams_RemoveGFSubcategoryStripper)

J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserAbstractTreebankParserParams_RemoveGFSubcategoryStripper, tf_, id<EduStanfordNlpTreesTreeFactory>)

FOUNDATION_EXPORT void EduStanfordNlpParserLexparserAbstractTreebankParserParams_RemoveGFSubcategoryStripper_initWithEduStanfordNlpParserLexparserAbstractTreebankParserParams_(EduStanfordNlpParserLexparserAbstractTreebankParserParams_RemoveGFSubcategoryStripper *self, EduStanfordNlpParserLexparserAbstractTreebankParserParams *outer$);

FOUNDATION_EXPORT EduStanfordNlpParserLexparserAbstractTreebankParserParams_RemoveGFSubcategoryStripper *new_EduStanfordNlpParserLexparserAbstractTreebankParserParams_RemoveGFSubcategoryStripper_initWithEduStanfordNlpParserLexparserAbstractTreebankParserParams_(EduStanfordNlpParserLexparserAbstractTreebankParserParams *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpParserLexparserAbstractTreebankParserParams_RemoveGFSubcategoryStripper *create_EduStanfordNlpParserLexparserAbstractTreebankParserParams_RemoveGFSubcategoryStripper_initWithEduStanfordNlpParserLexparserAbstractTreebankParserParams_(EduStanfordNlpParserLexparserAbstractTreebankParserParams *outer$);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpParserLexparserAbstractTreebankParserParams_RemoveGFSubcategoryStripper)

#endif

#if !defined (EduStanfordNlpParserLexparserAbstractTreebankParserParams_AnnotatePunctuationFunction_) && (INCLUDE_ALL_EduStanfordNlpParserLexparserAbstractTreebankParserParams || defined(INCLUDE_EduStanfordNlpParserLexparserAbstractTreebankParserParams_AnnotatePunctuationFunction))
#define EduStanfordNlpParserLexparserAbstractTreebankParserParams_AnnotatePunctuationFunction_

#define RESTRICT_EduStanfordNlpProcessSerializableFunction 1
#define INCLUDE_EduStanfordNlpProcessSerializableFunction 1
#include "edu/stanford/nlp/process/SerializableFunction.h"

@class EduStanfordNlpTreesTregexTregexMatcher;
@protocol JavaUtilFunctionFunction;

@interface EduStanfordNlpParserLexparserAbstractTreebankParserParams_AnnotatePunctuationFunction : NSObject < EduStanfordNlpProcessSerializableFunction >

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)annotationMark
                    withNSString:(NSString *)key;

- (NSString *)applyWithId:(EduStanfordNlpTreesTregexTregexMatcher *)m;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpParserLexparserAbstractTreebankParserParams_AnnotatePunctuationFunction)

FOUNDATION_EXPORT void EduStanfordNlpParserLexparserAbstractTreebankParserParams_AnnotatePunctuationFunction_initWithNSString_withNSString_(EduStanfordNlpParserLexparserAbstractTreebankParserParams_AnnotatePunctuationFunction *self, NSString *annotationMark, NSString *key);

FOUNDATION_EXPORT EduStanfordNlpParserLexparserAbstractTreebankParserParams_AnnotatePunctuationFunction *new_EduStanfordNlpParserLexparserAbstractTreebankParserParams_AnnotatePunctuationFunction_initWithNSString_withNSString_(NSString *annotationMark, NSString *key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpParserLexparserAbstractTreebankParserParams_AnnotatePunctuationFunction *create_EduStanfordNlpParserLexparserAbstractTreebankParserParams_AnnotatePunctuationFunction_initWithNSString_withNSString_(NSString *annotationMark, NSString *key);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpParserLexparserAbstractTreebankParserParams_AnnotatePunctuationFunction)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpParserLexparserAbstractTreebankParserParams")
