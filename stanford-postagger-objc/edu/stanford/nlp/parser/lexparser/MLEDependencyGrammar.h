//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/parser/lexparser/MLEDependencyGrammar.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpParserLexparserMLEDependencyGrammar")
#ifdef RESTRICT_EduStanfordNlpParserLexparserMLEDependencyGrammar
#define INCLUDE_ALL_EduStanfordNlpParserLexparserMLEDependencyGrammar 0
#else
#define INCLUDE_ALL_EduStanfordNlpParserLexparserMLEDependencyGrammar 1
#endif
#undef RESTRICT_EduStanfordNlpParserLexparserMLEDependencyGrammar

#if !defined (EduStanfordNlpParserLexparserMLEDependencyGrammar_) && (INCLUDE_ALL_EduStanfordNlpParserLexparserMLEDependencyGrammar || defined(INCLUDE_EduStanfordNlpParserLexparserMLEDependencyGrammar))
#define EduStanfordNlpParserLexparserMLEDependencyGrammar_

#define RESTRICT_EduStanfordNlpParserLexparserAbstractDependencyGrammar 1
#define INCLUDE_EduStanfordNlpParserLexparserAbstractDependencyGrammar 1
#include "edu/stanford/nlp/parser/lexparser/AbstractDependencyGrammar.h"

@class EduStanfordNlpParserLexparserIntDependency;
@class EduStanfordNlpParserLexparserIntTaggedWord;
@class EduStanfordNlpParserLexparserMLEDependencyGrammar_EndHead;
@class EduStanfordNlpParserLexparserOptions;
@class EduStanfordNlpStatsClassicCounter;
@class EduStanfordNlpTreesTree;
@class JavaIoBufferedReader;
@class JavaIoPrintWriter;
@protocol EduStanfordNlpParserLexparserTagProjection;
@protocol EduStanfordNlpParserLexparserTreebankLangParserParams;
@protocol EduStanfordNlpUtilIndex;
@protocol JavaUtilCollection;
@protocol JavaUtilList;

@interface EduStanfordNlpParserLexparserMLEDependencyGrammar : EduStanfordNlpParserLexparserAbstractDependencyGrammar {
 @public
  jboolean useSmoothTagProjection_;
  jboolean useUnigramWordSmoothing_;
  jint numWordTokens_;
  EduStanfordNlpStatsClassicCounter *argCounter_;
  EduStanfordNlpStatsClassicCounter *stopCounter_;
  jdouble smooth_aT_hTWd_;
  jdouble smooth_aTW_hTWd_;
  jdouble smooth_stop_;
  jdouble interp_;
  jdouble smooth_aTW_aT_;
  jdouble smooth_aTW_hTd_;
  jdouble smooth_aT_hTd_;
  jdouble smooth_aPTW_aPT_;
  id<JavaUtilList> tagITWList_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpParserLexparserTagProjection:(id<EduStanfordNlpParserLexparserTagProjection>)tagProjection
         withEduStanfordNlpParserLexparserTreebankLangParserParams:(id<EduStanfordNlpParserLexparserTreebankLangParserParams>)tlpParams
                                                       withBoolean:(jboolean)directional
                                                       withBoolean:(jboolean)useDistance
                                                       withBoolean:(jboolean)useCoarseDistance
                          withEduStanfordNlpParserLexparserOptions:(EduStanfordNlpParserLexparserOptions *)op
                                       withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)wordIndex
                                       withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)tagIndex;

- (instancetype)initWithEduStanfordNlpParserLexparserTreebankLangParserParams:(id<EduStanfordNlpParserLexparserTreebankLangParserParams>)tlpParams
                                                                  withBoolean:(jboolean)directional
                                                                  withBoolean:(jboolean)distance
                                                                  withBoolean:(jboolean)coarseDistance
                                                                  withBoolean:(jboolean)basicCategoryTagsInDependencyGrammar
                                     withEduStanfordNlpParserLexparserOptions:(EduStanfordNlpParserLexparserOptions *)op
                                                  withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)wordIndex
                                                  withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)tagIndex;

- (void)addRuleWithEduStanfordNlpParserLexparserIntDependency:(EduStanfordNlpParserLexparserIntDependency *)dependency
                                                   withDouble:(jdouble)count;

- (jdouble)countHistoryWithEduStanfordNlpParserLexparserIntDependency:(EduStanfordNlpParserLexparserIntDependency *)dependency;

- (void)dumpSizes;

- (jboolean)pruneTWWithEduStanfordNlpParserLexparserIntTaggedWord:(EduStanfordNlpParserLexparserIntTaggedWord *)argTW;

- (void)readDataWithJavaIoBufferedReader:(JavaIoBufferedReader *)inArg;

- (jdouble)scoreAllWithJavaUtilCollection:(id<JavaUtilCollection>)deps;

- (jdouble)scoreTBWithEduStanfordNlpParserLexparserIntDependency:(EduStanfordNlpParserLexparserIntDependency *)dependency;

- (NSString *)description;

+ (id<JavaUtilList>)treeToDependencyListWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                                        withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)wordIndex
                                        withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)tagIndex;

- (void)tuneWithJavaUtilCollection:(id<JavaUtilCollection>)trees;

- (void)writeDataWithJavaIoPrintWriter:(JavaIoPrintWriter *)outArg;

#pragma mark Protected

- (void)expandDependencyWithEduStanfordNlpParserLexparserIntDependency:(EduStanfordNlpParserLexparserIntDependency *)dependency
                                                            withDouble:(jdouble)count;

- (jdouble)getStopProbWithEduStanfordNlpParserLexparserIntDependency:(EduStanfordNlpParserLexparserIntDependency *)dependency;

- (jdouble)probTBWithEduStanfordNlpParserLexparserIntDependency:(EduStanfordNlpParserLexparserIntDependency *)dependency;

+ (EduStanfordNlpParserLexparserMLEDependencyGrammar_EndHead *)treeToDependencyHelperWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                                                                                                withJavaUtilList:(id<JavaUtilList>)depList
                                                                                                         withInt:(jint)loc
                                                                                     withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)wordIndex
                                                                                     withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)tagIndex;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpParserLexparserMLEDependencyGrammar)

J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserMLEDependencyGrammar, argCounter_, EduStanfordNlpStatsClassicCounter *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserMLEDependencyGrammar, stopCounter_, EduStanfordNlpStatsClassicCounter *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserMLEDependencyGrammar, tagITWList_, id<JavaUtilList>)

inline jboolean EduStanfordNlpParserLexparserMLEDependencyGrammar_get_DEBUG();
#define EduStanfordNlpParserLexparserMLEDependencyGrammar_DEBUG false
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpParserLexparserMLEDependencyGrammar, DEBUG, jboolean)

inline jdouble EduStanfordNlpParserLexparserMLEDependencyGrammar_get_MIN_PROBABILITY();
#define EduStanfordNlpParserLexparserMLEDependencyGrammar_MIN_PROBABILITY 1.0E-40
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpParserLexparserMLEDependencyGrammar, MIN_PROBABILITY, jdouble)

FOUNDATION_EXPORT void EduStanfordNlpParserLexparserMLEDependencyGrammar_initWithEduStanfordNlpParserLexparserTreebankLangParserParams_withBoolean_withBoolean_withBoolean_withBoolean_withEduStanfordNlpParserLexparserOptions_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(EduStanfordNlpParserLexparserMLEDependencyGrammar *self, id<EduStanfordNlpParserLexparserTreebankLangParserParams> tlpParams, jboolean directional, jboolean distance, jboolean coarseDistance, jboolean basicCategoryTagsInDependencyGrammar, EduStanfordNlpParserLexparserOptions *op, id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex);

FOUNDATION_EXPORT EduStanfordNlpParserLexparserMLEDependencyGrammar *new_EduStanfordNlpParserLexparserMLEDependencyGrammar_initWithEduStanfordNlpParserLexparserTreebankLangParserParams_withBoolean_withBoolean_withBoolean_withBoolean_withEduStanfordNlpParserLexparserOptions_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(id<EduStanfordNlpParserLexparserTreebankLangParserParams> tlpParams, jboolean directional, jboolean distance, jboolean coarseDistance, jboolean basicCategoryTagsInDependencyGrammar, EduStanfordNlpParserLexparserOptions *op, id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpParserLexparserMLEDependencyGrammar *create_EduStanfordNlpParserLexparserMLEDependencyGrammar_initWithEduStanfordNlpParserLexparserTreebankLangParserParams_withBoolean_withBoolean_withBoolean_withBoolean_withEduStanfordNlpParserLexparserOptions_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(id<EduStanfordNlpParserLexparserTreebankLangParserParams> tlpParams, jboolean directional, jboolean distance, jboolean coarseDistance, jboolean basicCategoryTagsInDependencyGrammar, EduStanfordNlpParserLexparserOptions *op, id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex);

FOUNDATION_EXPORT void EduStanfordNlpParserLexparserMLEDependencyGrammar_initWithEduStanfordNlpParserLexparserTagProjection_withEduStanfordNlpParserLexparserTreebankLangParserParams_withBoolean_withBoolean_withBoolean_withEduStanfordNlpParserLexparserOptions_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(EduStanfordNlpParserLexparserMLEDependencyGrammar *self, id<EduStanfordNlpParserLexparserTagProjection> tagProjection, id<EduStanfordNlpParserLexparserTreebankLangParserParams> tlpParams, jboolean directional, jboolean useDistance, jboolean useCoarseDistance, EduStanfordNlpParserLexparserOptions *op, id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex);

FOUNDATION_EXPORT EduStanfordNlpParserLexparserMLEDependencyGrammar *new_EduStanfordNlpParserLexparserMLEDependencyGrammar_initWithEduStanfordNlpParserLexparserTagProjection_withEduStanfordNlpParserLexparserTreebankLangParserParams_withBoolean_withBoolean_withBoolean_withEduStanfordNlpParserLexparserOptions_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(id<EduStanfordNlpParserLexparserTagProjection> tagProjection, id<EduStanfordNlpParserLexparserTreebankLangParserParams> tlpParams, jboolean directional, jboolean useDistance, jboolean useCoarseDistance, EduStanfordNlpParserLexparserOptions *op, id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpParserLexparserMLEDependencyGrammar *create_EduStanfordNlpParserLexparserMLEDependencyGrammar_initWithEduStanfordNlpParserLexparserTagProjection_withEduStanfordNlpParserLexparserTreebankLangParserParams_withBoolean_withBoolean_withBoolean_withEduStanfordNlpParserLexparserOptions_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(id<EduStanfordNlpParserLexparserTagProjection> tagProjection, id<EduStanfordNlpParserLexparserTreebankLangParserParams> tlpParams, jboolean directional, jboolean useDistance, jboolean useCoarseDistance, EduStanfordNlpParserLexparserOptions *op, id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex);

FOUNDATION_EXPORT EduStanfordNlpParserLexparserMLEDependencyGrammar_EndHead *EduStanfordNlpParserLexparserMLEDependencyGrammar_treeToDependencyHelperWithEduStanfordNlpTreesTree_withJavaUtilList_withInt_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(EduStanfordNlpTreesTree *tree, id<JavaUtilList> depList, jint loc, id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex);

FOUNDATION_EXPORT id<JavaUtilList> EduStanfordNlpParserLexparserMLEDependencyGrammar_treeToDependencyListWithEduStanfordNlpTreesTree_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(EduStanfordNlpTreesTree *tree, id<EduStanfordNlpUtilIndex> wordIndex, id<EduStanfordNlpUtilIndex> tagIndex);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpParserLexparserMLEDependencyGrammar)

#endif

#if !defined (EduStanfordNlpParserLexparserMLEDependencyGrammar_EndHead_) && (INCLUDE_ALL_EduStanfordNlpParserLexparserMLEDependencyGrammar || defined(INCLUDE_EduStanfordNlpParserLexparserMLEDependencyGrammar_EndHead))
#define EduStanfordNlpParserLexparserMLEDependencyGrammar_EndHead_

@interface EduStanfordNlpParserLexparserMLEDependencyGrammar_EndHead : NSObject {
 @public
  jint end_;
  jint head_;
}

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpParserLexparserMLEDependencyGrammar_EndHead)

FOUNDATION_EXPORT void EduStanfordNlpParserLexparserMLEDependencyGrammar_EndHead_init(EduStanfordNlpParserLexparserMLEDependencyGrammar_EndHead *self);

FOUNDATION_EXPORT EduStanfordNlpParserLexparserMLEDependencyGrammar_EndHead *new_EduStanfordNlpParserLexparserMLEDependencyGrammar_EndHead_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpParserLexparserMLEDependencyGrammar_EndHead *create_EduStanfordNlpParserLexparserMLEDependencyGrammar_EndHead_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpParserLexparserMLEDependencyGrammar_EndHead)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpParserLexparserMLEDependencyGrammar")
