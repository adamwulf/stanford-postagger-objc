//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/parser/lexparser/Lexicon.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpParserLexparserLexicon")
#ifdef RESTRICT_EduStanfordNlpParserLexparserLexicon
#define INCLUDE_ALL_EduStanfordNlpParserLexparserLexicon 0
#else
#define INCLUDE_ALL_EduStanfordNlpParserLexparserLexicon 1
#endif
#undef RESTRICT_EduStanfordNlpParserLexparserLexicon

#if !defined (EduStanfordNlpParserLexparserLexicon_) && (INCLUDE_ALL_EduStanfordNlpParserLexparserLexicon || defined(INCLUDE_EduStanfordNlpParserLexparserLexicon))
#define EduStanfordNlpParserLexparserLexicon_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class EduStanfordNlpLingTaggedWord;
@class EduStanfordNlpParserLexparserIntTaggedWord;
@class EduStanfordNlpTreesTree;
@class JavaIoBufferedReader;
@class JavaIoWriter;
@protocol EduStanfordNlpParserLexparserUnknownWordModel;
@protocol JavaUtilCollection;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilIterator;
@protocol JavaUtilList;
@protocol JavaUtilSet;

@protocol EduStanfordNlpParserLexparserLexicon < JavaIoSerializable, JavaObject >

- (jboolean)isKnownWithInt:(jint)word;

- (jboolean)isKnownWithNSString:(NSString *)word;

- (id<JavaUtilSet>)tagSetWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)basicCategoryFunction;

- (id<JavaUtilIterator>)ruleIteratorByWordWithInt:(jint)word
                                          withInt:(jint)loc
                                     withNSString:(NSString *)featureSpec;

- (id<JavaUtilIterator>)ruleIteratorByWordWithNSString:(NSString *)word
                                               withInt:(jint)loc
                                          withNSString:(NSString *)featureSpec;

- (jint)numRules;

- (void)initializeTrainingWithDouble:(jdouble)numTrees OBJC_METHOD_FAMILY_NONE;

- (void)trainWithJavaUtilCollection:(id<JavaUtilCollection>)trees;

- (void)trainWithJavaUtilCollection:(id<JavaUtilCollection>)trees
                         withDouble:(jdouble)weight;

- (void)trainWithJavaUtilCollection:(id<JavaUtilCollection>)trees
             withJavaUtilCollection:(id<JavaUtilCollection>)rawTrees;

- (void)trainWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                              withDouble:(jdouble)weight;

- (void)trainWithJavaUtilList:(id<JavaUtilList>)sentence
                   withDouble:(jdouble)weight;

- (void)trainWithEduStanfordNlpLingTaggedWord:(EduStanfordNlpLingTaggedWord *)tw
                                      withInt:(jint)loc
                                   withDouble:(jdouble)weight;

- (void)incrementTreesReadWithDouble:(jdouble)weight;

- (void)trainUnannotatedWithJavaUtilList:(id<JavaUtilList>)sentence
                              withDouble:(jdouble)weight;

- (void)finishTraining;

- (jfloat)scoreWithEduStanfordNlpParserLexparserIntTaggedWord:(EduStanfordNlpParserLexparserIntTaggedWord *)iTW
                                                      withInt:(jint)loc
                                                 withNSString:(NSString *)word
                                                 withNSString:(NSString *)featureSpec;

- (void)writeDataWithJavaIoWriter:(JavaIoWriter *)w;

- (void)readDataWithJavaIoBufferedReader:(JavaIoBufferedReader *)inArg;

- (id<EduStanfordNlpParserLexparserUnknownWordModel>)getUnknownWordModel;

- (void)setUnknownWordModelWithEduStanfordNlpParserLexparserUnknownWordModel:(id<EduStanfordNlpParserLexparserUnknownWordModel>)uwm;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpParserLexparserLexicon)

inline NSString *EduStanfordNlpParserLexparserLexicon_get_UNKNOWN_WORD();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpParserLexparserLexicon_UNKNOWN_WORD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserLexicon, UNKNOWN_WORD, NSString *)

inline NSString *EduStanfordNlpParserLexparserLexicon_get_BOUNDARY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpParserLexparserLexicon_BOUNDARY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserLexicon, BOUNDARY, NSString *)

inline NSString *EduStanfordNlpParserLexparserLexicon_get_BOUNDARY_TAG();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpParserLexparserLexicon_BOUNDARY_TAG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserLexicon, BOUNDARY_TAG, NSString *)

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpParserLexparserLexicon)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpParserLexparserLexicon")
