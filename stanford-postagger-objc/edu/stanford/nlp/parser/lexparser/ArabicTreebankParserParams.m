//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/international/arabic/ArabicMorphoFeatureSpecification.h"
#include "edu/stanford/nlp/international/morph/MorphoFeatureSpecification.h"
#include "edu/stanford/nlp/international/morph/MorphoFeatures.h"
#include "edu/stanford/nlp/ling/CoreLabel.h"
#include "edu/stanford/nlp/ling/HasTag.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/ling/Sentence.h"
#include "edu/stanford/nlp/parser/lexparser/AbstractTreebankParserParams.h"
#include "edu/stanford/nlp/parser/lexparser/ArabicTreebankParserParams.h"
#include "edu/stanford/nlp/parser/lexparser/BaseLexicon.h"
#include "edu/stanford/nlp/parser/lexparser/FactoredLexicon.h"
#include "edu/stanford/nlp/parser/lexparser/Lexicon.h"
#include "edu/stanford/nlp/parser/lexparser/Options.h"
#include "edu/stanford/nlp/parser/lexparser/TreeCollinizer.h"
#include "edu/stanford/nlp/process/SerializableFunction.h"
#include "edu/stanford/nlp/trees/DiskTreebank.h"
#include "edu/stanford/nlp/trees/HeadFinder.h"
#include "edu/stanford/nlp/trees/LabeledScoredTreeFactory.h"
#include "edu/stanford/nlp/trees/MemoryTreebank.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeFactory.h"
#include "edu/stanford/nlp/trees/TreeReaderFactory.h"
#include "edu/stanford/nlp/trees/TreeTransformer.h"
#include "edu/stanford/nlp/trees/TreebankLanguagePack.h"
#include "edu/stanford/nlp/trees/international/arabic/ArabicHeadFinder.h"
#include "edu/stanford/nlp/trees/international/arabic/ArabicTreeReaderFactory.h"
#include "edu/stanford/nlp/trees/international/arabic/ArabicTreebankLanguagePack.h"
#include "edu/stanford/nlp/trees/tregex/TregexMatcher.h"
#include "edu/stanford/nlp/trees/tregex/TregexParseException.h"
#include "edu/stanford/nlp/trees/tregex/TregexPattern.h"
#include "edu/stanford/nlp/trees/tregex/TregexPatternCompiler.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "edu/stanford/nlp/util/Index.h"
#include "edu/stanford/nlp/util/Pair.h"
#include "java/io/PrintStream.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/function/Function.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"
#include "java/util/regex/PatternSyntaxException.h"

@interface EduStanfordNlpParserLexparserArabicTreebankParserParams () {
 @public
  JavaLangStringBuilder *optionsString_;
  jboolean retainNPTmp_;
  jboolean retainNPSbj_;
  jboolean retainPRD_;
  jboolean retainPPClr_;
  jboolean changeNoLabels_;
  jboolean collinizerRetainsPunctuation_;
  jboolean discardX_;
  id<EduStanfordNlpTreesHeadFinder> headFinder_;
  id<JavaUtilMap> annotationPatterns_;
  id<JavaUtilList> activeAnnotations_;
  EduStanfordNlpInternationalMorphMorphoFeatureSpecification *morphoSpec_;
  id<JavaUtilList> baselineFeatures_;
  id<JavaUtilList> additionalFeatures_;
}

- (void)initializeAnnotationPatterns OBJC_METHOD_FAMILY_NONE;

- (void)setHeadFinderWithEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)hf;

- (NSString *)setupMorphoFeaturesWithNSString:(NSString *)activeFeats;

- (void)removeBaselineFeatureWithNSString:(NSString *)featName;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams, optionsString_, JavaLangStringBuilder *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams, headFinder_, id<EduStanfordNlpTreesHeadFinder>)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams, annotationPatterns_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams, activeAnnotations_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams, morphoSpec_, EduStanfordNlpInternationalMorphMorphoFeatureSpecification *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams, baselineFeatures_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams, additionalFeatures_, id<JavaUtilList>)

inline jlong EduStanfordNlpParserLexparserArabicTreebankParserParams_get_serialVersionUID();
#define EduStanfordNlpParserLexparserArabicTreebankParserParams_serialVersionUID 8853426784197984653LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpParserLexparserArabicTreebankParserParams, serialVersionUID, jlong)

inline IOSObjectArray *EduStanfordNlpParserLexparserArabicTreebankParserParams_get_EMPTY_STRING_ARRAY();
static IOSObjectArray *EduStanfordNlpParserLexparserArabicTreebankParserParams_EMPTY_STRING_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserArabicTreebankParserParams, EMPTY_STRING_ARRAY, IOSObjectArray *)

inline EduStanfordNlpInternationalMorphMorphoFeatureSpecification *EduStanfordNlpParserLexparserArabicTreebankParserParams_get_tagSpec();
static EduStanfordNlpInternationalMorphMorphoFeatureSpecification *EduStanfordNlpParserLexparserArabicTreebankParserParams_tagSpec;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserArabicTreebankParserParams, tagSpec, EduStanfordNlpInternationalMorphMorphoFeatureSpecification *)

__attribute__((unused)) static void EduStanfordNlpParserLexparserArabicTreebankParserParams_initializeAnnotationPatterns(EduStanfordNlpParserLexparserArabicTreebankParserParams *self);

__attribute__((unused)) static void EduStanfordNlpParserLexparserArabicTreebankParserParams_setHeadFinderWithEduStanfordNlpTreesHeadFinder_(EduStanfordNlpParserLexparserArabicTreebankParserParams *self, id<EduStanfordNlpTreesHeadFinder> hf);

__attribute__((unused)) static NSString *EduStanfordNlpParserLexparserArabicTreebankParserParams_setupMorphoFeaturesWithNSString_(EduStanfordNlpParserLexparserArabicTreebankParserParams *self, NSString *activeFeats);

@interface EduStanfordNlpParserLexparserArabicTreebankParserParams_ArabicSubcategoryStripper () {
 @public
  EduStanfordNlpParserLexparserArabicTreebankParserParams *this$0_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams_ArabicSubcategoryStripper, this$0_, EduStanfordNlpParserLexparserArabicTreebankParserParams *)

@interface EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction : NSObject < EduStanfordNlpProcessSerializableFunction > {
 @public
  NSString *result_;
}

- (instancetype)initWithNSString:(NSString *)result;

- (NSString *)applyWithId:(EduStanfordNlpTreesTregexTregexMatcher *)tregexMatcher;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction)

J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction, result_, NSString *)

inline jlong EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_get_serialVersionUID();
#define EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction *self, NSString *result);

__attribute__((unused)) static EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction *new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(NSString *result) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction *create_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(NSString *result);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction)

@interface EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction : NSObject < EduStanfordNlpProcessSerializableFunction > {
 @public
  NSString *annotationMark_;
  NSString *key_;
  NSString *key2_;
  jboolean doBasicCat_;
}

- (instancetype)initWithNSString:(NSString *)annotationMark
                    withNSString:(NSString *)key
                     withBoolean:(jboolean)basicCategory;

- (instancetype)initWithNSString:(NSString *)annotationMark
                    withNSString:(NSString *)key1
                    withNSString:(NSString *)key2
                     withBoolean:(jboolean)basicCategory;

- (NSString *)applyWithId:(EduStanfordNlpTreesTregexTregexMatcher *)m;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction)

J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction, annotationMark_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction, key_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction, key2_, NSString *)

inline id<EduStanfordNlpTreesTreebankLanguagePack> EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_get_tlp();
static id<EduStanfordNlpTreesTreebankLanguagePack> EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_tlp;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction, tlp, id<EduStanfordNlpTreesTreebankLanguagePack>)

inline jlong EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_get_serialVersionUID();
#define EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withBoolean_(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction *self, NSString *annotationMark, NSString *key, jboolean basicCategory);

__attribute__((unused)) static EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction *new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withBoolean_(NSString *annotationMark, NSString *key, jboolean basicCategory) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction *create_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withBoolean_(NSString *annotationMark, NSString *key, jboolean basicCategory);

__attribute__((unused)) static void EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withNSString_withBoolean_(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction *self, NSString *annotationMark, NSString *key1, NSString *key2, jboolean basicCategory);

__attribute__((unused)) static EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction *new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withNSString_withBoolean_(NSString *annotationMark, NSString *key1, NSString *key2, jboolean basicCategory) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction *create_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withNSString_withBoolean_(NSString *annotationMark, NSString *key1, NSString *key2, jboolean basicCategory);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction)

@interface EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction : NSObject < EduStanfordNlpProcessSerializableFunction > {
 @public
  NSString *annotationMark_;
  NSString *key_;
  JavaUtilRegexPattern *pattern_;
  NSString *key2_;
  JavaUtilRegexPattern *pattern2_;
}

- (instancetype)initWithNSString:(NSString *)annotationMark
                    withNSString:(NSString *)key
                    withNSString:(NSString *)regex;

- (NSString *)applyWithId:(EduStanfordNlpTreesTregexTregexMatcher *)m;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction)

J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction, annotationMark_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction, key_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction, pattern_, JavaUtilRegexPattern *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction, key2_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction, pattern2_, JavaUtilRegexPattern *)

inline jlong EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction_get_serialVersionUID();
#define EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction_initWithNSString_withNSString_withNSString_(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction *self, NSString *annotationMark, NSString *key, NSString *regex);

__attribute__((unused)) static EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction *new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction_initWithNSString_withNSString_withNSString_(NSString *annotationMark, NSString *key, NSString *regex) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction *create_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction_initWithNSString_withNSString_withNSString_(NSString *annotationMark, NSString *key, NSString *regex);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction)

@interface EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction : NSObject < EduStanfordNlpProcessSerializableFunction > {
 @public
  NSString *annotationMark_;
  NSString *key_;
}

- (instancetype)initWithNSString:(NSString *)annotationMark
                    withNSString:(NSString *)key;

- (NSString *)applyWithId:(EduStanfordNlpTreesTregexTregexMatcher *)m;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction)

J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction, annotationMark_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction, key_, NSString *)

inline jlong EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction_get_serialVersionUID();
#define EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction_initWithNSString_withNSString_(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction *self, NSString *annotationMark, NSString *key);

__attribute__((unused)) static EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction *new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction_initWithNSString_withNSString_(NSString *annotationMark, NSString *key) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction *create_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction_initWithNSString_withNSString_(NSString *annotationMark, NSString *key);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction)

@interface EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar : NSObject < EduStanfordNlpProcessSerializableFunction > {
 @public
  NSString *annotationMark_;
  NSString *key_;
}

- (instancetype)initWithNSString:(NSString *)annotationMark
                    withNSString:(NSString *)key;

- (NSString *)applyWithId:(EduStanfordNlpTreesTregexTregexMatcher *)m;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar)

J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar, annotationMark_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar, key_, NSString *)

inline jlong EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar_get_serialVersionUID();
#define EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar_initWithNSString_withNSString_(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar *self, NSString *annotationMark, NSString *key);

__attribute__((unused)) static EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar *new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar_initWithNSString_withNSString_(NSString *annotationMark, NSString *key) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar *create_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar_initWithNSString_withNSString_(NSString *annotationMark, NSString *key);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar)

@interface EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2 : NSObject < EduStanfordNlpProcessSerializableFunction >

- (NSString *)applyWithId:(EduStanfordNlpTreesTregexTregexMatcher *)m;

- (NSString *)description;

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2)

inline NSString *EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2_get_key();
static NSString *EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2_key = @"term";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2, key, NSString *)

inline JavaUtilRegexPattern *EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2_get_quote();
static JavaUtilRegexPattern *EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2_quote;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2, quote, JavaUtilRegexPattern *)

inline jlong EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2_get_serialVersionUID();
#define EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2_init(EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2 *self);

__attribute__((unused)) static EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2 *new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2 *create_EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2)

@interface EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode : NSObject < EduStanfordNlpProcessSerializableFunction > {
 @public
  NSString *annotationMark_;
  NSString *key_;
}

- (instancetype)initWithNSString:(NSString *)annotationMark
                    withNSString:(NSString *)key;

- (NSString *)applyWithId:(EduStanfordNlpTreesTregexTregexMatcher *)m;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode)

J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode, annotationMark_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode, key_, NSString *)

inline NSString *EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_get_nnTags();
static NSString *EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_nnTags = @"DTNN DTNNP DTNNPS DTNNS NN NNP NNS NNPS";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode, nnTags, NSString *)

inline id<JavaUtilSet> EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_get_nnTagClass();
static id<JavaUtilSet> EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_nnTagClass;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode, nnTagClass, id<JavaUtilSet>)

inline NSString *EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_get_jjTags();
static NSString *EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_jjTags = @"ADJ_NUM DTJJ DTJJR JJ JJR";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode, jjTags, NSString *)

inline id<JavaUtilSet> EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_get_jjTagClass();
static id<JavaUtilSet> EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_jjTagClass;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode, jjTagClass, id<JavaUtilSet>)

inline NSString *EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_get_vbTags();
static NSString *EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_vbTags = @"VBD VBP";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode, vbTags, NSString *)

inline id<JavaUtilSet> EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_get_vbTagClass();
static id<JavaUtilSet> EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_vbTagClass;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode, vbTagClass, id<JavaUtilSet>)

inline id<EduStanfordNlpTreesTreebankLanguagePack> EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_get_tlp();
static id<EduStanfordNlpTreesTreebankLanguagePack> EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_tlp;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode, tlp, id<EduStanfordNlpTreesTreebankLanguagePack>)

inline jlong EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_get_serialVersionUID();
#define EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_initWithNSString_withNSString_(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode *self, NSString *annotationMark, NSString *key);

__attribute__((unused)) static EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode *new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_initWithNSString_withNSString_(NSString *annotationMark, NSString *key) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode *create_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_initWithNSString_withNSString_(NSString *annotationMark, NSString *key);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpParserLexparserArabicTreebankParserParams)

@implementation EduStanfordNlpParserLexparserArabicTreebankParserParams

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpParserLexparserArabicTreebankParserParams_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<EduStanfordNlpTreesTreeReaderFactory>)treeReaderFactory {
  return new_EduStanfordNlpTreesInternationalArabicArabicTreeReaderFactory_initWithBoolean_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_(retainNPTmp_, retainPRD_, changeNoLabels_, discardX_, retainNPSbj_, false, retainPPClr_);
}

- (EduStanfordNlpTreesMemoryTreebank *)memoryTreebank {
  return new_EduStanfordNlpTreesMemoryTreebank_initWithEduStanfordNlpTreesTreeReaderFactory_withNSString_([self treeReaderFactory], inputEncoding_);
}

- (EduStanfordNlpTreesDiskTreebank *)diskTreebank {
  return new_EduStanfordNlpTreesDiskTreebank_initWithEduStanfordNlpTreesTreeReaderFactory_withNSString_([self treeReaderFactory], inputEncoding_);
}

- (id<EduStanfordNlpTreesHeadFinder>)headFinder {
  if (headFinder_ == nil) headFinder_ = new_EduStanfordNlpTreesInternationalArabicArabicHeadFinder_initWithEduStanfordNlpTreesTreebankLanguagePack_([self treebankLanguagePack]);
  return headFinder_;
}

- (id<EduStanfordNlpTreesHeadFinder>)typedDependencyHeadFinder {
  return [self headFinder];
}

- (id<EduStanfordNlpParserLexparserLexicon>)lexWithEduStanfordNlpParserLexparserOptions:(EduStanfordNlpParserLexparserOptions *)op
                                                            withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)wordIndex
                                                            withEduStanfordNlpUtilIndex:(id<EduStanfordNlpUtilIndex>)tagIndex {
  if (((EduStanfordNlpParserLexparserOptions_LexOptions *) nil_chk(((EduStanfordNlpParserLexparserOptions *) nil_chk(op))->lexOptions_))->uwModelTrainer_ == nil) {
    op->lexOptions_->uwModelTrainer_ = @"edu.stanford.nlp.parser.lexparser.ArabicUnknownWordModelTrainer";
  }
  if (morphoSpec_ != nil) {
    return new_EduStanfordNlpParserLexparserFactoredLexicon_initWithEduStanfordNlpParserLexparserOptions_withEduStanfordNlpInternationalMorphMorphoFeatureSpecification_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(op, morphoSpec_, wordIndex, tagIndex);
  }
  return new_EduStanfordNlpParserLexparserBaseLexicon_initWithEduStanfordNlpParserLexparserOptions_withEduStanfordNlpUtilIndex_withEduStanfordNlpUtilIndex_(op, wordIndex, tagIndex);
}

- (id<JavaUtilList>)defaultTestSentence {
  IOSObjectArray *sent = [IOSObjectArray newArrayWithObjects:(id[]){ @"\u0647\u0648", @"\u0627\u0633\u062a\u0646\u0643\u0631", @"\u0627\u0644\u062d\u0643\u0648\u0645\u0629", @"\u064a\u0648\u0645", @"\u0627\u0645\u0633", @"." } count:6 type:NSString_class_()];
  return EduStanfordNlpLingSentence_toWordListWithNSStringArray_(sent);
}

- (id<EduStanfordNlpTreesTreeTransformer>)subcategoryStripper {
  return new_EduStanfordNlpParserLexparserArabicTreebankParserParams_ArabicSubcategoryStripper_initWithEduStanfordNlpParserLexparserArabicTreebankParserParams_(self);
}

- (id<EduStanfordNlpTreesTreeTransformer>)collinizer {
  return new_EduStanfordNlpParserLexparserTreeCollinizer_initWithEduStanfordNlpTreesTreebankLanguagePack_withBoolean_withBoolean_(tlp_, !collinizerRetainsPunctuation_, false);
}

- (id<EduStanfordNlpTreesTreeTransformer>)collinizerEvalb {
  return [self collinizer];
}

- (IOSObjectArray *)sisterSplitters {
  return EduStanfordNlpParserLexparserArabicTreebankParserParams_EMPTY_STRING_ARRAY;
}

- (EduStanfordNlpTreesTree *)transformTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                          withEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)root {
  NSString *baseCat = [((EduStanfordNlpTreesTree *) nil_chk(t)) value];
  JavaLangStringBuilder *newCategory = new_JavaLangStringBuilder_init();
  for (EduStanfordNlpUtilPair * __strong e in nil_chk(activeAnnotations_)) {
    EduStanfordNlpTreesTregexTregexMatcher *m = [((EduStanfordNlpTreesTregexTregexPattern *) nil_chk([((EduStanfordNlpUtilPair *) nil_chk(e)) first])) matcherWithEduStanfordNlpTreesTree:root];
    if ([((EduStanfordNlpTreesTregexTregexMatcher *) nil_chk(m)) matchesAtWithEduStanfordNlpTreesTree:t]) (void) [newCategory appendWithNSString:[((id<JavaUtilFunctionFunction>) nil_chk([e second])) applyWithId:m]];
  }
  if ([t isPreTerminal] && EduStanfordNlpParserLexparserArabicTreebankParserParams_tagSpec != nil) {
    if (!([[((EduStanfordNlpTreesTree *) nil_chk([t firstChild])) label] isKindOfClass:[EduStanfordNlpLingCoreLabel class]]) || [((EduStanfordNlpLingCoreLabel *) nil_chk(((EduStanfordNlpLingCoreLabel *) cast_chk([((EduStanfordNlpTreesTree *) nil_chk([t firstChild])) label], [EduStanfordNlpLingCoreLabel class])))) originalText] == nil) @throw new_JavaLangRuntimeException_initWithNSString_(NSString_formatWithNSString_withNSObjectArray_(@"%s: Term lacks morpho analysis: %s", [IOSObjectArray newArrayWithObjects:(id[]){ [[self getClass] getName], [t description] } count:2 type:NSObject_class_()]));
    NSString *morphoStr = [((EduStanfordNlpLingCoreLabel *) nil_chk(((EduStanfordNlpLingCoreLabel *) cast_chk([((EduStanfordNlpTreesTree *) nil_chk([t firstChild])) label], [EduStanfordNlpLingCoreLabel class])))) originalText];
    EduStanfordNlpInternationalMorphMorphoFeatures *feats = [EduStanfordNlpParserLexparserArabicTreebankParserParams_tagSpec strToFeaturesWithNSString:morphoStr];
    baseCat = [((EduStanfordNlpInternationalMorphMorphoFeatures *) nil_chk(feats)) getTagWithNSString:baseCat];
  }
  NSString *newCat = JreStrcat("$$", baseCat, [newCategory description]);
  [t setValueWithNSString:newCat];
  if ([t isPreTerminal] && [EduStanfordNlpLingHasTag_class_() isInstance:[t label]]) [((id<EduStanfordNlpLingHasTag>) nil_chk(((id<EduStanfordNlpLingHasTag>) cast_check([t label], EduStanfordNlpLingHasTag_class_())))) setTagWithNSString:newCat];
  return t;
}

- (void)initializeAnnotationPatterns {
  EduStanfordNlpParserLexparserArabicTreebankParserParams_initializeAnnotationPatterns(self);
}

- (void)setHeadFinderWithEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)hf {
  EduStanfordNlpParserLexparserArabicTreebankParserParams_setHeadFinderWithEduStanfordNlpTreesHeadFinder_(self, hf);
}

- (NSString *)setupMorphoFeaturesWithNSString:(NSString *)activeFeats {
  return EduStanfordNlpParserLexparserArabicTreebankParserParams_setupMorphoFeaturesWithNSString_(self, activeFeats);
}

- (void)removeBaselineFeatureWithNSString:(NSString *)featName {
  if ([((id<JavaUtilList>) nil_chk(baselineFeatures_)) containsWithId:featName]) {
    [baselineFeatures_ removeWithId:featName];
    EduStanfordNlpUtilPair *p = [((id<JavaUtilMap>) nil_chk(annotationPatterns_)) getWithId:featName];
    [((id<JavaUtilList>) nil_chk(activeAnnotations_)) removeWithId:p];
  }
}

- (void)display {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:[((JavaLangStringBuilder *) nil_chk(optionsString_)) description]];
}

- (jint)setOptionFlagWithNSStringArray:(IOSObjectArray *)args
                               withInt:(jint)i {
  jboolean didSomething = false;
  if ([((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(annotationPatterns_)) keySet])) containsWithId:IOSObjectArray_Get(nil_chk(args), i)]) {
    if (![((id<JavaUtilList>) nil_chk(baselineFeatures_)) containsWithId:IOSObjectArray_Get(args, i)]) [((id<JavaUtilList>) nil_chk(additionalFeatures_)) addWithId:IOSObjectArray_Get(args, i)];
    EduStanfordNlpUtilPair *p = [annotationPatterns_ getWithId:IOSObjectArray_Get(args, i)];
    [((id<JavaUtilList>) nil_chk(activeAnnotations_)) addWithId:p];
    (void) [((JavaLangStringBuilder *) nil_chk(optionsString_)) appendWithNSString:JreStrcat("$$$@$@C", @"Option ", IOSObjectArray_Get(args, i), @" added annotation pattern ", [((EduStanfordNlpUtilPair *) nil_chk(p)) first], @" with annotation ", [p second], 0x000a)];
    didSomething = true;
  }
  else if ([((NSString *) nil_chk(IOSObjectArray_Get(args, i))) isEqual:@"-retainNPTmp"]) {
    (void) [((JavaLangStringBuilder *) nil_chk(optionsString_)) appendWithNSString:@"Retaining NP-TMP marking.\n"];
    retainNPTmp_ = true;
    didSomething = true;
  }
  else if ([((NSString *) nil_chk(IOSObjectArray_Get(args, i))) isEqual:@"-retainNPSbj"]) {
    (void) [((JavaLangStringBuilder *) nil_chk(optionsString_)) appendWithNSString:@"Retaining NP-SBJ dash tag.\n"];
    retainNPSbj_ = true;
    didSomething = true;
  }
  else if ([((NSString *) nil_chk(IOSObjectArray_Get(args, i))) isEqual:@"-retainPPClr"]) {
    (void) [((JavaLangStringBuilder *) nil_chk(optionsString_)) appendWithNSString:@"Retaining PP-CLR dash tag.\n"];
    retainPPClr_ = true;
    didSomething = true;
  }
  else if ([((NSString *) nil_chk(IOSObjectArray_Get(args, i))) isEqual:@"-discardX"]) {
    (void) [((JavaLangStringBuilder *) nil_chk(optionsString_)) appendWithNSString:@"Discarding X trees.\n"];
    discardX_ = true;
    didSomething = true;
  }
  else if ([((NSString *) nil_chk(IOSObjectArray_Get(args, i))) isEqual:@"-changeNoLabels"]) {
    (void) [((JavaLangStringBuilder *) nil_chk(optionsString_)) appendWithNSString:@"Change no labels.\n"];
    changeNoLabels_ = true;
    didSomething = true;
  }
  else if ([((NSString *) nil_chk(IOSObjectArray_Get(args, i))) isEqual:@"-markPRDverbs"]) {
    (void) [((JavaLangStringBuilder *) nil_chk(optionsString_)) appendWithNSString:@"Mark PRD.\n"];
    retainPRD_ = true;
    didSomething = true;
  }
  else if ([((NSString *) nil_chk(IOSObjectArray_Get(args, i))) isEqual:@"-collinizerRetainsPunctuation"]) {
    (void) [((JavaLangStringBuilder *) nil_chk(optionsString_)) appendWithNSString:@"Collinizer retains punctuation.\n"];
    collinizerRetainsPunctuation_ = true;
    didSomething = true;
  }
  else if ([((NSString *) nil_chk(IOSObjectArray_Get(args, i))) isEqual:@"-arabicFactored"]) {
    for (NSString * __strong annotation in nil_chk(baselineFeatures_)) {
      IOSObjectArray *a = [IOSObjectArray newArrayWithObjects:(id[]){ annotation } count:1 type:NSString_class_()];
      [self setOptionFlagWithNSStringArray:a withInt:0];
    }
    didSomething = true;
  }
  else if ([((NSString *) nil_chk(IOSObjectArray_Get(args, i))) equalsIgnoreCase:@"-headFinder"] && (i + 1 < args->size_)) {
    @try {
      id<EduStanfordNlpTreesHeadFinder> hf = (id<EduStanfordNlpTreesHeadFinder>) cast_check([((IOSClass *) nil_chk(IOSClass_forName_(IOSObjectArray_Get(args, i + 1)))) newInstance], EduStanfordNlpTreesHeadFinder_class_());
      EduStanfordNlpParserLexparserArabicTreebankParserParams_setHeadFinderWithEduStanfordNlpTreesHeadFinder_(self, hf);
      (void) [((JavaLangStringBuilder *) nil_chk(optionsString_)) appendWithNSString:JreStrcat("$$C", @"HeadFinder: ", IOSObjectArray_Get(args, i + 1), 0x000a)];
    }
    @catch (JavaLangException *e) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithId:e];
      [JreLoadStatic(JavaLangSystem, err) printlnWithNSString:JreStrcat("$$$", [[self getClass] getName], @": Could not load head finder ", IOSObjectArray_Get(args, i + 1))];
    }
    i++;
    didSomething = true;
  }
  else if ([((NSString *) nil_chk(IOSObjectArray_Get(args, i))) isEqual:@"-factlex"] && (i + 1 < args->size_)) {
    NSString *activeFeats = EduStanfordNlpParserLexparserArabicTreebankParserParams_setupMorphoFeaturesWithNSString_(self, IOSObjectArray_Get(args, ++i));
    (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(optionsString_)) appendWithNSString:@"Factored Lexicon: active features: "])) appendWithNSString:activeFeats];
    didSomething = true;
  }
  else if ([((NSString *) nil_chk(IOSObjectArray_Get(args, i))) isEqual:@"-noFeatures"]) {
    [((id<JavaUtilList>) nil_chk(activeAnnotations_)) clear];
    (void) [((JavaLangStringBuilder *) nil_chk(optionsString_)) appendWithNSString:@"Removed all manual features.\n"];
    didSomething = true;
  }
  if (didSomething) i++;
  return i;
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduStanfordNlpParserLexparserArabicTreebankParserParams_mainWithNSStringArray_(args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTreeReaderFactory;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesMemoryTreebank;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesDiskTreebank;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesHeadFinder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesHeadFinder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpParserLexparserLexicon;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTreeTransformer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTreeTransformer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTreeTransformer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 13, 14, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(treeReaderFactory);
  methods[2].selector = @selector(memoryTreebank);
  methods[3].selector = @selector(diskTreebank);
  methods[4].selector = @selector(headFinder);
  methods[5].selector = @selector(typedDependencyHeadFinder);
  methods[6].selector = @selector(lexWithEduStanfordNlpParserLexparserOptions:withEduStanfordNlpUtilIndex:withEduStanfordNlpUtilIndex:);
  methods[7].selector = @selector(defaultTestSentence);
  methods[8].selector = @selector(subcategoryStripper);
  methods[9].selector = @selector(collinizer);
  methods[10].selector = @selector(collinizerEvalb);
  methods[11].selector = @selector(sisterSplitters);
  methods[12].selector = @selector(transformTreeWithEduStanfordNlpTreesTree:withEduStanfordNlpTreesTree:);
  methods[13].selector = @selector(initializeAnnotationPatterns);
  methods[14].selector = @selector(setHeadFinderWithEduStanfordNlpTreesHeadFinder:);
  methods[15].selector = @selector(setupMorphoFeaturesWithNSString:);
  methods[16].selector = @selector(removeBaselineFeatureWithNSString:);
  methods[17].selector = @selector(display);
  methods[18].selector = @selector(setOptionFlagWithNSStringArray:withInt:);
  methods[19].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpParserLexparserArabicTreebankParserParams_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "optionsString_", "LJavaLangStringBuilder;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "retainNPTmp_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "retainNPSbj_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "retainPRD_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "retainPPClr_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "changeNoLabels_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "collinizerRetainsPunctuation_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "discardX_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "headFinder_", "LEduStanfordNlpTreesHeadFinder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "annotationPatterns_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 15, -1 },
    { "activeAnnotations_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 16, -1 },
    { "EMPTY_STRING_ARRAY", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 17, -1, -1 },
    { "morphoSpec_", "LEduStanfordNlpInternationalMorphMorphoFeatureSpecification;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "tagSpec", "LEduStanfordNlpInternationalMorphMorphoFeatureSpecification;", .constantValue.asLong = 0, 0x1a, -1, 18, -1, -1 },
    { "baselineFeatures_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 19, -1 },
    { "additionalFeatures_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 19, -1 },
  };
  static const void *ptrTable[] = { "lex", "LEduStanfordNlpParserLexparserOptions;LEduStanfordNlpUtilIndex;LEduStanfordNlpUtilIndex;", "(Ledu/stanford/nlp/parser/lexparser/Options;Ledu/stanford/nlp/util/Index<Ljava/lang/String;>;Ledu/stanford/nlp/util/Index<Ljava/lang/String;>;)Ledu/stanford/nlp/parser/lexparser/Lexicon;", "()Ljava/util/List<+Ledu/stanford/nlp/ling/HasWord;>;", "transformTree", "LEduStanfordNlpTreesTree;LEduStanfordNlpTreesTree;", "setHeadFinder", "LEduStanfordNlpTreesHeadFinder;", "setupMorphoFeatures", "LNSString;", "removeBaselineFeature", "setOptionFlag", "[LNSString;I", "main", "[LNSString;", "Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/util/Pair<Ledu/stanford/nlp/trees/tregex/TregexPattern;Ljava/util/function/Function<Ledu/stanford/nlp/trees/tregex/TregexMatcher;Ljava/lang/String;>;>;>;", "Ljava/util/List<Ledu/stanford/nlp/util/Pair<Ledu/stanford/nlp/trees/tregex/TregexPattern;Ljava/util/function/Function<Ledu/stanford/nlp/trees/tregex/TregexMatcher;Ljava/lang/String;>;>;>;", &EduStanfordNlpParserLexparserArabicTreebankParserParams_EMPTY_STRING_ARRAY, &EduStanfordNlpParserLexparserArabicTreebankParserParams_tagSpec, "Ljava/util/List<Ljava/lang/String;>;", "LEduStanfordNlpParserLexparserArabicTreebankParserParams_ArabicSubcategoryStripper;LEduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction;LEduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction;LEduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction;LEduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction;LEduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar;LEduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2;LEduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode;" };
  static const J2ObjcClassInfo _EduStanfordNlpParserLexparserArabicTreebankParserParams = { "ArabicTreebankParserParams", "edu.stanford.nlp.parser.lexparser", ptrTable, methods, fields, 7, 0x1, 20, 17, -1, 20, -1, -1, -1 };
  return &_EduStanfordNlpParserLexparserArabicTreebankParserParams;
}

+ (void)initialize {
  if (self == [EduStanfordNlpParserLexparserArabicTreebankParserParams class]) {
    EduStanfordNlpParserLexparserArabicTreebankParserParams_EMPTY_STRING_ARRAY = [IOSObjectArray newArrayWithLength:0 type:NSString_class_()];
    EduStanfordNlpParserLexparserArabicTreebankParserParams_tagSpec = new_EduStanfordNlpInternationalArabicArabicMorphoFeatureSpecification_init();
    {
      [EduStanfordNlpParserLexparserArabicTreebankParserParams_tagSpec activateWithEduStanfordNlpInternationalMorphMorphoFeatureSpecification_MorphoFeatureType:JreLoadEnum(EduStanfordNlpInternationalMorphMorphoFeatureSpecification_MorphoFeatureType, NGEN)];
    }
    J2OBJC_SET_INITIALIZED(EduStanfordNlpParserLexparserArabicTreebankParserParams)
  }
}

@end

void EduStanfordNlpParserLexparserArabicTreebankParserParams_init(EduStanfordNlpParserLexparserArabicTreebankParserParams *self) {
  EduStanfordNlpParserLexparserAbstractTreebankParserParams_initWithEduStanfordNlpTreesTreebankLanguagePack_(self, new_EduStanfordNlpTreesInternationalArabicArabicTreebankLanguagePack_init());
  self->retainNPTmp_ = false;
  self->retainNPSbj_ = false;
  self->retainPRD_ = false;
  self->retainPPClr_ = false;
  self->changeNoLabels_ = false;
  self->collinizerRetainsPunctuation_ = false;
  self->discardX_ = false;
  self->morphoSpec_ = nil;
  self->baselineFeatures_ = new_JavaUtilArrayList_init();
  {
    [self->baselineFeatures_ addWithId:@"-markNounNPargTakers"];
    [self->baselineFeatures_ addWithId:@"-genitiveMark"];
    [self->baselineFeatures_ addWithId:@"-splitPUNC"];
    [self->baselineFeatures_ addWithId:@"-markContainsVerb"];
    [self->baselineFeatures_ addWithId:@"-markStrictBaseNP"];
    [self->baselineFeatures_ addWithId:@"-markOneLevelIdafa"];
    [self->baselineFeatures_ addWithId:@"-splitIN"];
    [self->baselineFeatures_ addWithId:@"-markMasdarVP"];
    [self->baselineFeatures_ addWithId:@"-containsSVO"];
    [self->baselineFeatures_ addWithId:@"-splitCC"];
    [self->baselineFeatures_ addWithId:@"-markFem"];
    [self->baselineFeatures_ addWithId:@"-mwe"];
    [self->baselineFeatures_ addWithId:@"-mweContainsVerb"];
  }
  self->additionalFeatures_ = new_JavaUtilArrayList_init();
  self->optionsString_ = new_JavaLangStringBuilder_init();
  (void) [self->optionsString_ appendWithNSString:@"ArabicTreebankParserParams\n"];
  self->annotationPatterns_ = EduStanfordNlpUtilGenerics_newHashMap();
  self->activeAnnotations_ = new_JavaUtilArrayList_init();
  self->headFinder_ = [self headFinder];
  EduStanfordNlpParserLexparserArabicTreebankParserParams_initializeAnnotationPatterns(self);
}

EduStanfordNlpParserLexparserArabicTreebankParserParams *new_EduStanfordNlpParserLexparserArabicTreebankParserParams_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpParserLexparserArabicTreebankParserParams, init)
}

EduStanfordNlpParserLexparserArabicTreebankParserParams *create_EduStanfordNlpParserLexparserArabicTreebankParserParams_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpParserLexparserArabicTreebankParserParams, init)
}

void EduStanfordNlpParserLexparserArabicTreebankParserParams_initializeAnnotationPatterns(EduStanfordNlpParserLexparserArabicTreebankParserParams *self) {
  NSString *genitiveNodeTregexString = @"@NP > @NP $- /^N/";
  EduStanfordNlpTreesTregexTregexPatternCompiler *tregexPatternCompiler = new_EduStanfordNlpTreesTregexTregexPatternCompiler_initWithEduStanfordNlpTreesHeadFinder_([self headFinder]);
  @try {
    (void) [((id<JavaUtilMap>) nil_chk(self->annotationPatterns_)) putWithId:@"-genitiveMark" withId:new_EduStanfordNlpUtilPair_initWithId_withId_(EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(genitiveNodeTregexString), new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-genitive"))];
    (void) [self->annotationPatterns_ putWithId:@"-markStrictBaseNP" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP !< (__ < (__ < __))"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-base"))];
    (void) [self->annotationPatterns_ putWithId:@"-markOneLevelIdafa" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP < (@NP < (__ < __)) !< (/^[^N]/ < (__ < __)) !< (__ < (__ < (__ < __)))"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-idafa1"))];
    (void) [self->annotationPatterns_ putWithId:@"-markNounNPargTakers" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NN|NNS|NNP|NNPS|DTNN|DTNNS|DTNNP|DTNNPS ># (@NP < @NP)"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-NounNParg"))];
    (void) [self->annotationPatterns_ putWithId:@"-markContainsVerb" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ << (/^[CIP]?V/ < (__ !< __))"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-withV"))];
    (void) [self->annotationPatterns_ putWithId:@"-splitIN" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@IN < __=word"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withBoolean_(@"-", @"word", false))];
    (void) [self->annotationPatterns_ putWithId:@"-splitPUNC" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:JreStrcat("$$", @"@PUNC < __=", EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2_key)], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2_init())];
    (void) [self->annotationPatterns_ putWithId:@"-markMasdarVP" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@VP|MWVP < /VBG|VN/"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-masdar"))];
    (void) [self->annotationPatterns_ putWithId:@"-containsSVO" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ << (@S < (@NP . @VP|MWVP))"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-hasSVO"))];
    (void) [self->annotationPatterns_ putWithId:@"-splitCC" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@CC|CONJ . __=term , __"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_initWithNSString_withNSString_(@"-", @"term"))];
    (void) [self->annotationPatterns_ putWithId:@"-markFem" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ < /\u0629$/"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-fem"))];
    (void) [self->annotationPatterns_ putWithId:@"-mwe" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ > /MW/=tag"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withBoolean_(@"-", @"tag", true))];
    (void) [self->annotationPatterns_ putWithId:@"-mweContainsVerb" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ << @MWVP"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-withV"))];
    (void) [self->annotationPatterns_ putWithId:@"-splitPUNC2" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@PUNC < __=punc"], new_EduStanfordNlpParserLexparserAbstractTreebankParserParams_AnnotatePunctuationFunction_initWithNSString_withNSString_(@"-", @"punc"))];
    (void) [self->annotationPatterns_ putWithId:@"-tagPAar" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"!@PUNC < (__ !< __) > __=parent"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withBoolean_(@"-", @"parent", true))];
    (void) [self->annotationPatterns_ putWithId:@"-splitCC1" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@CC|CONJ < __=term"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction_initWithNSString_withNSString_withNSString_(@"-", @"term", @"-*([^-].*)"))];
    (void) [self->annotationPatterns_ putWithId:@"-splitCC2" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@CC . __=term , __"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withBoolean_(@"-", @"term", true))];
    (void) [self->annotationPatterns_ putWithId:@"-idafaJJ1" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP <, (@NN $+ @NP) <+(@NP) @ADJP"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-idafaJJ"))];
    (void) [self->annotationPatterns_ putWithId:@"-idafaJJ2" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP <, (@NN $+ @NP) <+(@NP) @ADJP !<< @SBAR"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-idafaJJ"))];
    (void) [self->annotationPatterns_ putWithId:@"-properBaseNP" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP !<< @NP < /NNP/ !< @PUNC|CD"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-prop"))];
    (void) [self->annotationPatterns_ putWithId:@"-interrog" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ << \u0647\u0644|\u0645\u0627\u0630\u0627|\u0644\u0645\u0627\u0630\u0627|\u0627\u064a\u0646|\u0645\u062a\u0649"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-inter"))];
    (void) [self->annotationPatterns_ putWithId:@"-splitPseudo" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NN < \u0645\u0639|\u0628\u0639\u062f|\u0628\u064a\u0646"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-pseudo"))];
    (void) [self->annotationPatterns_ putWithId:@"-nPseudo" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP < (@NN < \u0645\u0639|\u0628\u0639\u062f|\u0628\u064a\u0646)"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-npseudo"))];
    (void) [self->annotationPatterns_ putWithId:@"-pseudoArg" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP < @NP $, (@NN < \u0645\u0639|\u0628\u0639\u062f|\u0628\u064a\u0646)"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-pseudoArg"))];
    (void) [self->annotationPatterns_ putWithId:@"-eqL1" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ < (@S !< @VP|S)"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-haseq"))];
    (void) [self->annotationPatterns_ putWithId:@"-eqL1L2" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ < (__ < (@S !< @VP|S)) | < (@S !< @VP|S)"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-haseq"))];
    (void) [self->annotationPatterns_ putWithId:@"-fullQuote" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ < ((@PUNC < \") $ (@PUNC < \"))"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-fq"))];
    (void) [self->annotationPatterns_ putWithId:@"-brokeQuote" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ < ((@PUNC < \") !$ (@PUNC < \"))"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-bq"))];
    (void) [self->annotationPatterns_ putWithId:@"-splitVP" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@VP <# __=term1"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withBoolean_(@"-", @"term1", true))];
    (void) [self->annotationPatterns_ putWithId:@"-markFemP" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP|ADJP < (__ < /\u0629$/)"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-femP"))];
    (void) [self->annotationPatterns_ putWithId:@"-embedSBAR" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP|PP <+(@NP|PP) @SBAR"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-embedSBAR"))];
    (void) [self->annotationPatterns_ putWithId:@"-complexVP" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ << (@VP < (@NP $ @NP)) > __"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-complexVP"))];
    (void) [self->annotationPatterns_ putWithId:@"-containsJJ" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP <+(@NP) /JJ/"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-hasJJ"))];
    (void) [self->annotationPatterns_ putWithId:@"-markMasdarVP2" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ << @VN|VBG"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-masdar"))];
    (void) [self->annotationPatterns_ putWithId:@"-coordNP" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP|ADJP <+(@NP|ADJP) (@CC|PUNC $- __ $+ __)"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-coordNP"))];
    (void) [self->annotationPatterns_ putWithId:@"-coordWa" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ << (@CC , __ < \u0648-)"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-coordWA"))];
    (void) [self->annotationPatterns_ putWithId:@"-NPhasADJP" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP <+(@NP) @ADJP"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-NPhasADJP"))];
    (void) [self->annotationPatterns_ putWithId:@"-NPADJP" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP < @ADJP"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-npadj"))];
    (void) [self->annotationPatterns_ putWithId:@"-NPJJ" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP < /JJ/"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-npjj"))];
    (void) [self->annotationPatterns_ putWithId:@"-NPCC" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP <+(@NP) @CC"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-npcc"))];
    (void) [self->annotationPatterns_ putWithId:@"-NPCD" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP < @CD"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-npcd"))];
    (void) [self->annotationPatterns_ putWithId:@"-NPNNP" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP < /NNP/"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-npnnp"))];
    (void) [self->annotationPatterns_ putWithId:@"-SVO" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@S < (@NP . @VP)"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-svo"))];
    (void) [self->annotationPatterns_ putWithId:@"-containsSBAR" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ << @SBAR"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-hasSBAR"))];
    (void) [self->annotationPatterns_ putWithId:@"-markGappedVP" withId:new_EduStanfordNlpUtilPair_initWithId_withId_(EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@VP > @VP $- __ $ /^(?:CC|CONJ)/ !< /^V/"), new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-gappedVP"))];
    (void) [self->annotationPatterns_ putWithId:@"-markGappedVPConjoiners" withId:new_EduStanfordNlpUtilPair_initWithId_withId_(EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"/^(?:CC|CONJ)/ $ (@VP > @VP $- __ !< /^V/)"), new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-gappedVP"))];
    (void) [self->annotationPatterns_ putWithId:@"-markGenitiveParent" withId:new_EduStanfordNlpUtilPair_initWithId_withId_(EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(JreStrcat("$$C", @"@NP < (", genitiveNodeTregexString, ')')), new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-genitiveParent"))];
    (void) [self->annotationPatterns_ putWithId:@"-maSdrMark" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"/^N/ <<# (/^[t\\u062a].+[y\\u064a].$/ > @NN|NOUN|DTNN)"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-maSdr"))];
    (void) [self->annotationPatterns_ putWithId:@"-maSdrMark2" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"/^N/ <<# (/^(?:[t\\u062a].+[y\\u064a].|<.{3,}|A.{3,})$/ > @NN|NOUN|DTNN)"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-maSdr"))];
    (void) [self->annotationPatterns_ putWithId:@"-maSdrMark3" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"/^N/ <<# (/^(?:[t\\u062a<A].{3,})$/ > @NN|NOUN|DTNN)"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-maSdr"))];
    (void) [self->annotationPatterns_ putWithId:@"-maSdrMark4" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"/^N/ <<# (/^(?:[t\\u062a<A].{3,})$/ > (@NN|NOUN|DTNN > (@NP < @NP)))"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-maSdr"))];
    (void) [self->annotationPatterns_ putWithId:@"-maSdrMark5" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"/^N/ <<# (__ > (@NN|NOUN|DTNN > (@NP < @NP)))"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-maSdr"))];
    (void) [self->annotationPatterns_ putWithId:@"-mjjMark" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@JJ|DTJJ < /^m/ $+ @PP ># @ADJP "], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-mjj"))];
    (void) [self->annotationPatterns_ putWithId:@"-markNPwithSdescendant" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ !< @S << @S [ >> @NP | == @NP ]"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-inNPdominatesS"))];
    (void) [self->annotationPatterns_ putWithId:@"-markRightRecursiveNP" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ <<- @NP [>>- @NP | == @NP]"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-rrNP"))];
    (void) [self->annotationPatterns_ putWithId:@"-markBaseNP" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP !< @NP !< @VP !< @SBAR !< @ADJP !< @ADVP !< @S !< @QP !< @UCP !< @PP"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-base"))];
    (void) [self->annotationPatterns_ putWithId:@"-markBaseNPplusIdafa" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP !< (/^[^N]/ < (__ < __)) !< (__ < (__ < (__ < __)))"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-base"))];
    (void) [self->annotationPatterns_ putWithId:@"-markTwoLevelIdafa" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP < (@NP < (@NP < (__ < __)) !< (/^[^N]/ < (__ < __))) !< (/^[^N]/ < (__ < __)) !< (__ < (__ < (__ < (__ < __))))"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-idafa2"))];
    (void) [self->annotationPatterns_ putWithId:@"-markDefiniteIdafa" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP < (/^(?:NN|NOUN)/ !$,, /^[^AP]/) <+(/^NP/) (@NP < /^DT/)"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-defIdafa"))];
    (void) [self->annotationPatterns_ putWithId:@"-markDefiniteIdafa1" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP < (/^(?:NN|NOUN)/ !$,, /^[^AP]/) < (@NP < /^DT/) !< (/^[^N]/ < (__ < __)) !< (__ < (__ < (__ < __)))"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-defIdafa1"))];
    (void) [self->annotationPatterns_ putWithId:@"-markContainsSBAR" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ << @SBAR"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-withSBAR"))];
    (void) [self->annotationPatterns_ putWithId:@"-markPhrasalNodesDominatedBySBAR" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ < (__ < __) >> @SBAR"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-domBySBAR"))];
    (void) [self->annotationPatterns_ putWithId:@"-markCoordinateNPs" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP < @CC|CONJ"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-coord"))];
    (void) [self->annotationPatterns_ putWithId:@"-markNounAdjVPheads" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NN|NNS|NNP|NNPS|JJ|DTJJ|DTNN|DTNNS|DTNNP|DTNNPS ># @VP"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-VHead"))];
    (void) [self->annotationPatterns_ putWithId:@"-markPronominalNP" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP < @PRP"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-PRP"))];
    (void) [self->annotationPatterns_ putWithId:@"-markMultiCC" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ < (@CC $.. @CC)"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-multiCC"))];
    (void) [self->annotationPatterns_ putWithId:@"-markHasCCdaughter" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ < @CC"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-CCdtr"))];
    (void) [self->annotationPatterns_ putWithId:@"-markAcronymNP" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@NP !<  (__ < (__ < __)) < (/^NN/ < /^.$/ $ (/^NN/ < /^.$/)) !< (__ < /../)"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-acro"))];
    (void) [self->annotationPatterns_ putWithId:@"-markAcronymNN" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"/^NN/ < /^.$/ $ (/^NN/ < /^.$/) > (@NP !<  (__ < (__ < __)) !< (__ < /../))"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-acro"))];
    (void) [self->annotationPatterns_ putWithId:@"-markPPwithPPdescendant" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ !< @PP << @PP [ >> @PP | == @PP ]"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-inPPdominatesPP"))];
    (void) [self->annotationPatterns_ putWithId:@"-gpAnnotatePrepositions" withId:new_EduStanfordNlpUtilPair_initWithId_withId_(EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"/^(?:IN|PREP)$/ > (__ > __=gp)"), new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withBoolean_(@"^^", @"gp", false))];
    (void) [self->annotationPatterns_ putWithId:@"-gpEquivalencePrepositions" withId:new_EduStanfordNlpUtilPair_initWithId_withId_(EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"/^(?:IN|PREP)$/ > (@PP >+(/^PP/) __=gp)"), new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction_initWithNSString_withNSString_(@"^^", @"gp"))];
    (void) [self->annotationPatterns_ putWithId:@"-gpEquivalencePrepositionsVar" withId:new_EduStanfordNlpUtilPair_initWithId_withId_(EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"/^(?:IN|PREP)$/ > (@PP >+(/^PP/) __=gp)"), new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar_initWithNSString_withNSString_(@"^^", @"gp"))];
    (void) [self->annotationPatterns_ putWithId:@"-markPPParent" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@PP=max !< @PP"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction_initWithNSString_withNSString_withNSString_(@"^^", @"max", @"^(\\w)"))];
    (void) [self->annotationPatterns_ putWithId:@"-whPP" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@PP <- (@SBAR <, /^WH/)"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-whPP"))];
    (void) [self->annotationPatterns_ putWithId:@"-deflateMin" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"__ < (__ < \u0645\u0646)"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-min"))];
    (void) [self->annotationPatterns_ putWithId:@"-v2MarkovIN" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@IN > (@__=p1 > @__=p2)"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withNSString_withBoolean_(@"^", @"p1", @"p2", false))];
    (void) [self->annotationPatterns_ putWithId:@"-pleonasticMin" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@PP <, (IN < \u0645\u0646) > @S"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(@"-pleo"))];
    (void) [self->annotationPatterns_ putWithId:@"-v2MarkovPP" withId:new_EduStanfordNlpUtilPair_initWithId_withId_([tregexPatternCompiler compileWithNSString:@"@PP > (@__=p1 > @__=p2)"], new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withNSString_withBoolean_(@"^", @"p1", @"p2", false))];
  }
  @catch (EduStanfordNlpTreesTregexTregexParseException *e) {
    jint nth = [self->annotationPatterns_ size] + 1;
    NSString *nthStr = (nth == 1) ? @"1st" : ((nth == 2) ? @"2nd" : JreStrcat("I$", nth, @"th"));
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$$$@", @"Parse exception on ", nthStr, @" annotation pattern initialization:", e)];
    @throw e;
  }
}

void EduStanfordNlpParserLexparserArabicTreebankParserParams_setHeadFinderWithEduStanfordNlpTreesHeadFinder_(EduStanfordNlpParserLexparserArabicTreebankParserParams *self, id<EduStanfordNlpTreesHeadFinder> hf) {
  if (hf == nil) @throw new_JavaLangIllegalArgumentException_init();
  self->headFinder_ = hf;
  EduStanfordNlpParserLexparserArabicTreebankParserParams_initializeAnnotationPatterns(self);
  [((id<JavaUtilList>) nil_chk(self->activeAnnotations_)) clear];
  for (NSString * __strong key in nil_chk(self->baselineFeatures_)) {
    EduStanfordNlpUtilPair *p = [((id<JavaUtilMap>) nil_chk(self->annotationPatterns_)) getWithId:key];
    [self->activeAnnotations_ addWithId:p];
  }
  for (NSString * __strong key in nil_chk(self->additionalFeatures_)) {
    EduStanfordNlpUtilPair *p = [((id<JavaUtilMap>) nil_chk(self->annotationPatterns_)) getWithId:key];
    [self->activeAnnotations_ addWithId:p];
  }
}

NSString *EduStanfordNlpParserLexparserArabicTreebankParserParams_setupMorphoFeaturesWithNSString_(EduStanfordNlpParserLexparserArabicTreebankParserParams *self, NSString *activeFeats) {
  IOSObjectArray *feats = [((NSString *) nil_chk(activeFeats)) split:@","];
  self->morphoSpec_ = [((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(self->tlp_)) morphFeatureSpec];
  {
    IOSObjectArray *a__ = feats;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *feat = *b__++;
      EduStanfordNlpInternationalMorphMorphoFeatureSpecification_MorphoFeatureType *fType = EduStanfordNlpInternationalMorphMorphoFeatureSpecification_MorphoFeatureType_valueOfWithNSString_([((NSString *) nil_chk(feat)) trim]);
      [((EduStanfordNlpInternationalMorphMorphoFeatureSpecification *) nil_chk(self->morphoSpec_)) activateWithEduStanfordNlpInternationalMorphMorphoFeatureSpecification_MorphoFeatureType:fType];
    }
  }
  return [((EduStanfordNlpInternationalMorphMorphoFeatureSpecification *) nil_chk(self->morphoSpec_)) description];
}

void EduStanfordNlpParserLexparserArabicTreebankParserParams_mainWithNSStringArray_(IOSObjectArray *args) {
  EduStanfordNlpParserLexparserArabicTreebankParserParams_initialize();
  if (((IOSObjectArray *) nil_chk(args))->size_ != 1) {
    JavaLangSystem_exitWithInt_(-1);
  }
  EduStanfordNlpParserLexparserArabicTreebankParserParams *tlpp = new_EduStanfordNlpParserLexparserArabicTreebankParserParams_init();
  IOSObjectArray *options = [IOSObjectArray newArrayWithObjects:(id[]){ @"-arabicFactored" } count:1 type:NSString_class_()];
  [tlpp setOptionFlagWithNSStringArray:options withInt:0];
  EduStanfordNlpTreesDiskTreebank *tb = [tlpp diskTreebank];
  [((EduStanfordNlpTreesDiskTreebank *) nil_chk(tb)) loadPathWithNSString:IOSObjectArray_Get(args, 0) withNSString:@"txt" withBoolean:false];
  for (EduStanfordNlpTreesTree * __strong t in tb) {
    for (EduStanfordNlpTreesTree * __strong subtree in nil_chk(t)) {
      (void) [tlpp transformTreeWithEduStanfordNlpTreesTree:subtree withEduStanfordNlpTreesTree:t];
    }
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:[t description]];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpParserLexparserArabicTreebankParserParams)

@implementation EduStanfordNlpParserLexparserArabicTreebankParserParams_ArabicSubcategoryStripper

- (EduStanfordNlpTreesTree *)transformTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree {
  id<EduStanfordNlpLingLabel> lab = [((EduStanfordNlpTreesTree *) nil_chk(tree)) label];
  NSString *s = [((id<EduStanfordNlpLingLabel>) nil_chk(lab)) value];
  if ([tree isLeaf]) {
    EduStanfordNlpTreesTree *leaf = [((id<EduStanfordNlpTreesTreeFactory>) nil_chk(tf_)) newLeafWithEduStanfordNlpLingLabel:lab];
    [((EduStanfordNlpTreesTree *) nil_chk(leaf)) setScoreWithDouble:[tree score]];
    return leaf;
  }
  else if ([tree isPhrasal]) {
    if (this$0_->retainNPTmp_ && [((NSString *) nil_chk(s)) hasPrefix:@"NP-TMP"]) {
      s = @"NP-TMP";
    }
    else if (this$0_->retainNPSbj_ && [((NSString *) nil_chk(s)) hasPrefix:@"NP-SBJ"]) {
      s = @"NP-SBJ";
    }
    else if (this$0_->retainPRD_ && [((NSString *) nil_chk(s)) matches:@"VB[^P].*PRD.*"]) {
      s = [((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(this$0_->tlp_)) basicCategoryWithNSString:s];
      (void) JreStrAppendStrong(&s, "$", @"-PRD");
    }
    else {
      s = [((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(this$0_->tlp_)) basicCategoryWithNSString:s];
    }
  }
  else if ([tree isPreTerminal]) {
    s = [((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(this$0_->tlp_)) basicCategoryWithNSString:s];
  }
  else {
    (void) [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printfWithNSString:@"Encountered a non-leaf/phrasal/pre-terminal node %s\n" withNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ s } count:1 type:NSObject_class_()]];
    s = [((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(this$0_->tlp_)) basicCategoryWithNSString:s];
  }
  id<JavaUtilList> children = new_JavaUtilArrayList_initWithInt_([tree numChildren]);
  for (EduStanfordNlpTreesTree * __strong child in nil_chk([tree getChildrenAsList])) {
    EduStanfordNlpTreesTree *newChild = [self transformTreeWithEduStanfordNlpTreesTree:child];
    [children addWithId:newChild];
  }
  EduStanfordNlpTreesTree *node = [((id<EduStanfordNlpTreesTreeFactory>) nil_chk(tf_)) newTreeNodeWithEduStanfordNlpLingLabel:lab withJavaUtilList:children];
  [((EduStanfordNlpTreesTree *) nil_chk(node)) setValueWithNSString:s];
  [node setScoreWithDouble:[tree score]];
  if ([EduStanfordNlpLingHasTag_class_() isInstance:[node label]]) [((id<EduStanfordNlpLingHasTag>) nil_chk(((id<EduStanfordNlpLingHasTag>) cast_check([node label], EduStanfordNlpLingHasTag_class_())))) setTagWithNSString:s];
  return node;
}

- (instancetype)initWithEduStanfordNlpParserLexparserArabicTreebankParserParams:(EduStanfordNlpParserLexparserArabicTreebankParserParams *)outer$ {
  EduStanfordNlpParserLexparserArabicTreebankParserParams_ArabicSubcategoryStripper_initWithEduStanfordNlpParserLexparserArabicTreebankParserParams_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(transformTreeWithEduStanfordNlpTreesTree:);
  methods[1].selector = @selector(initWithEduStanfordNlpParserLexparserArabicTreebankParserParams:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LEduStanfordNlpParserLexparserArabicTreebankParserParams;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "tf_", "LEduStanfordNlpTreesTreeFactory;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "transformTree", "LEduStanfordNlpTreesTree;", "LEduStanfordNlpParserLexparserArabicTreebankParserParams;" };
  static const J2ObjcClassInfo _EduStanfordNlpParserLexparserArabicTreebankParserParams_ArabicSubcategoryStripper = { "ArabicSubcategoryStripper", "edu.stanford.nlp.parser.lexparser", ptrTable, methods, fields, 7, 0x4, 2, 2, 2, -1, -1, -1, -1 };
  return &_EduStanfordNlpParserLexparserArabicTreebankParserParams_ArabicSubcategoryStripper;
}

@end

void EduStanfordNlpParserLexparserArabicTreebankParserParams_ArabicSubcategoryStripper_initWithEduStanfordNlpParserLexparserArabicTreebankParserParams_(EduStanfordNlpParserLexparserArabicTreebankParserParams_ArabicSubcategoryStripper *self, EduStanfordNlpParserLexparserArabicTreebankParserParams *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->tf_ = new_EduStanfordNlpTreesLabeledScoredTreeFactory_init();
}

EduStanfordNlpParserLexparserArabicTreebankParserParams_ArabicSubcategoryStripper *new_EduStanfordNlpParserLexparserArabicTreebankParserParams_ArabicSubcategoryStripper_initWithEduStanfordNlpParserLexparserArabicTreebankParserParams_(EduStanfordNlpParserLexparserArabicTreebankParserParams *outer$) {
  J2OBJC_NEW_IMPL(EduStanfordNlpParserLexparserArabicTreebankParserParams_ArabicSubcategoryStripper, initWithEduStanfordNlpParserLexparserArabicTreebankParserParams_, outer$)
}

EduStanfordNlpParserLexparserArabicTreebankParserParams_ArabicSubcategoryStripper *create_EduStanfordNlpParserLexparserArabicTreebankParserParams_ArabicSubcategoryStripper_initWithEduStanfordNlpParserLexparserArabicTreebankParserParams_(EduStanfordNlpParserLexparserArabicTreebankParserParams *outer$) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpParserLexparserArabicTreebankParserParams_ArabicSubcategoryStripper, initWithEduStanfordNlpParserLexparserArabicTreebankParserParams_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpParserLexparserArabicTreebankParserParams_ArabicSubcategoryStripper)

@implementation EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction

- (instancetype)initWithNSString:(NSString *)result {
  EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(self, result);
  return self;
}

- (NSString *)applyWithId:(EduStanfordNlpTreesTregexTregexMatcher *)tregexMatcher {
  return result_;
}

- (NSString *)description {
  return JreStrcat("$$C", @"SimpleStringFunction[", result_, ']');
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(applyWithId:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "result_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "apply", "LEduStanfordNlpTreesTregexTregexMatcher;", "toString", "LEduStanfordNlpParserLexparserArabicTreebankParserParams;", "Ljava/lang/Object;Ledu/stanford/nlp/process/SerializableFunction<Ledu/stanford/nlp/trees/tregex/TregexMatcher;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction = { "SimpleStringFunction", "edu.stanford.nlp.parser.lexparser", ptrTable, methods, fields, 7, 0xa, 3, 2, 4, -1, -1, 5, -1 };
  return &_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction;
}

@end

void EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction *self, NSString *result) {
  NSObject_init(self);
  self->result_ = result;
}

EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction *new_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(NSString *result) {
  J2OBJC_NEW_IMPL(EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction, initWithNSString_, result)
}

EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction *create_EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction_initWithNSString_(NSString *result) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction, initWithNSString_, result)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpParserLexparserArabicTreebankParserParams_SimpleStringFunction)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction)

@implementation EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction

- (instancetype)initWithNSString:(NSString *)annotationMark
                    withNSString:(NSString *)key
                     withBoolean:(jboolean)basicCategory {
  EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withBoolean_(self, annotationMark, key, basicCategory);
  return self;
}

- (instancetype)initWithNSString:(NSString *)annotationMark
                    withNSString:(NSString *)key1
                    withNSString:(NSString *)key2
                     withBoolean:(jboolean)basicCategory {
  EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withNSString_withBoolean_(self, annotationMark, key1, key2, basicCategory);
  return self;
}

- (NSString *)applyWithId:(EduStanfordNlpTreesTregexTregexMatcher *)m {
  if (key2_ == nil) return JreStrcat("$$", annotationMark_, ((doBasicCat_) ? [((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_tlp)) basicCategoryWithNSString:[((id<EduStanfordNlpLingLabel>) nil_chk([((EduStanfordNlpTreesTree *) nil_chk([((EduStanfordNlpTreesTregexTregexMatcher *) nil_chk(m)) getNodeWithNSString:key_])) label])) value]] : [((id<EduStanfordNlpLingLabel>) nil_chk([((EduStanfordNlpTreesTree *) nil_chk([((EduStanfordNlpTreesTregexTregexMatcher *) nil_chk(m)) getNodeWithNSString:key_])) label])) value]));
  else {
    NSString *annot1 = (doBasicCat_) ? [((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_tlp)) basicCategoryWithNSString:[((id<EduStanfordNlpLingLabel>) nil_chk([((EduStanfordNlpTreesTree *) nil_chk([((EduStanfordNlpTreesTregexTregexMatcher *) nil_chk(m)) getNodeWithNSString:key_])) label])) value]] : [((id<EduStanfordNlpLingLabel>) nil_chk([((EduStanfordNlpTreesTree *) nil_chk([((EduStanfordNlpTreesTregexTregexMatcher *) nil_chk(m)) getNodeWithNSString:key_])) label])) value];
    NSString *annot2 = (doBasicCat_) ? [((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_tlp)) basicCategoryWithNSString:[((id<EduStanfordNlpLingLabel>) nil_chk([((EduStanfordNlpTreesTree *) nil_chk([m getNodeWithNSString:key2_])) label])) value]] : [((id<EduStanfordNlpLingLabel>) nil_chk([((EduStanfordNlpTreesTree *) nil_chk([m getNodeWithNSString:key2_])) label])) value];
    return JreStrcat("$$$$", annotationMark_, annot1, annotationMark_, annot2);
  }
}

- (NSString *)description {
  if (key2_ == nil) return JreStrcat("$$C$C", @"AddRelativeNodeFunction[", annotationMark_, ',', key_, ']');
  else return JreStrcat("$$C$C$C", @"AddRelativeNodeFunction[", annotationMark_, ',', key_, ',', key2_, ']');
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:withBoolean:);
  methods[1].selector = @selector(initWithNSString:withNSString:withNSString:withBoolean:);
  methods[2].selector = @selector(applyWithId:);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "annotationMark_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "key_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "key2_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "doBasicCat_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "tlp", "LEduStanfordNlpTreesTreebankLanguagePack;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;Z", "LNSString;LNSString;LNSString;Z", "apply", "LEduStanfordNlpTreesTregexTregexMatcher;", "toString", &EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_tlp, "LEduStanfordNlpParserLexparserArabicTreebankParserParams;", "Ljava/lang/Object;Ledu/stanford/nlp/process/SerializableFunction<Ledu/stanford/nlp/trees/tregex/TregexMatcher;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction = { "AddRelativeNodeFunction", "edu.stanford.nlp.parser.lexparser", ptrTable, methods, fields, 7, 0xa, 4, 6, 6, -1, -1, 7, -1 };
  return &_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction;
}

+ (void)initialize {
  if (self == [EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction class]) {
    EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_tlp = new_EduStanfordNlpTreesInternationalArabicArabicTreebankLanguagePack_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction)
  }
}

@end

void EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withBoolean_(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction *self, NSString *annotationMark, NSString *key, jboolean basicCategory) {
  NSObject_init(self);
  self->doBasicCat_ = false;
  self->annotationMark_ = annotationMark;
  self->key_ = key;
  self->key2_ = nil;
  self->doBasicCat_ = basicCategory;
}

EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction *new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withBoolean_(NSString *annotationMark, NSString *key, jboolean basicCategory) {
  J2OBJC_NEW_IMPL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction, initWithNSString_withNSString_withBoolean_, annotationMark, key, basicCategory)
}

EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction *create_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withBoolean_(NSString *annotationMark, NSString *key, jboolean basicCategory) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction, initWithNSString_withNSString_withBoolean_, annotationMark, key, basicCategory)
}

void EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withNSString_withBoolean_(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction *self, NSString *annotationMark, NSString *key1, NSString *key2, jboolean basicCategory) {
  EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withBoolean_(self, annotationMark, key1, basicCategory);
  self->key2_ = key2;
}

EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction *new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withNSString_withBoolean_(NSString *annotationMark, NSString *key1, NSString *key2, jboolean basicCategory) {
  J2OBJC_NEW_IMPL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction, initWithNSString_withNSString_withNSString_withBoolean_, annotationMark, key1, key2, basicCategory)
}

EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction *create_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction_initWithNSString_withNSString_withNSString_withBoolean_(NSString *annotationMark, NSString *key1, NSString *key2, jboolean basicCategory) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction, initWithNSString_withNSString_withNSString_withBoolean_, annotationMark, key1, key2, basicCategory)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeFunction)

@implementation EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction

- (instancetype)initWithNSString:(NSString *)annotationMark
                    withNSString:(NSString *)key
                    withNSString:(NSString *)regex {
  EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction_initWithNSString_withNSString_withNSString_(self, annotationMark, key, regex);
  return self;
}

- (NSString *)applyWithId:(EduStanfordNlpTreesTregexTregexMatcher *)m {
  NSString *val = [((id<EduStanfordNlpLingLabel>) nil_chk([((EduStanfordNlpTreesTree *) nil_chk([((EduStanfordNlpTreesTregexTregexMatcher *) nil_chk(m)) getNodeWithNSString:key_])) label])) value];
  if (pattern_ != nil) {
    JavaUtilRegexMatcher *mat = [pattern_ matcherWithJavaLangCharSequence:val];
    if ([((JavaUtilRegexMatcher *) nil_chk(mat)) find]) {
      val = [mat groupWithInt:1];
    }
  }
  if (key2_ != nil && pattern2_ != nil) {
    NSString *val2 = [((id<EduStanfordNlpLingLabel>) nil_chk([((EduStanfordNlpTreesTree *) nil_chk([m getNodeWithNSString:key2_])) label])) value];
    JavaUtilRegexMatcher *mat2 = [((JavaUtilRegexPattern *) nil_chk(pattern2_)) matcherWithJavaLangCharSequence:val2];
    if ([((JavaUtilRegexMatcher *) nil_chk(mat2)) find]) {
      val = JreStrcat("$$$", val, annotationMark_, [mat2 groupWithInt:1]);
    }
    else {
      val = JreStrcat("$$$", val, annotationMark_, val2);
    }
  }
  return JreStrcat("$$", annotationMark_, val);
}

- (NSString *)description {
  return JreStrcat("$$C$C@C", @"AddRelativeNodeRegexFunction[", annotationMark_, ',', key_, ',', pattern_, ']');
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:withNSString:);
  methods[1].selector = @selector(applyWithId:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "annotationMark_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "key_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pattern_", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "key2_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pattern2_", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;LNSString;", "apply", "LEduStanfordNlpTreesTregexTregexMatcher;", "toString", "LEduStanfordNlpParserLexparserArabicTreebankParserParams;", "Ljava/lang/Object;Ledu/stanford/nlp/process/SerializableFunction<Ledu/stanford/nlp/trees/tregex/TregexMatcher;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction = { "AddRelativeNodeRegexFunction", "edu.stanford.nlp.parser.lexparser", ptrTable, methods, fields, 7, 0xa, 3, 6, 4, -1, -1, 5, -1 };
  return &_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction;
}

@end

void EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction_initWithNSString_withNSString_withNSString_(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction *self, NSString *annotationMark, NSString *key, NSString *regex) {
  NSObject_init(self);
  self->key2_ = nil;
  self->annotationMark_ = annotationMark;
  self->key_ = key;
  @try {
    self->pattern_ = JavaUtilRegexPattern_compileWithNSString_(regex);
  }
  @catch (JavaUtilRegexPatternSyntaxException *pse) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$$", @"Bad pattern: ", regex)];
    self->pattern_ = nil;
    @throw new_JavaLangIllegalArgumentException_initWithNSException_(pse);
  }
}

EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction *new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction_initWithNSString_withNSString_withNSString_(NSString *annotationMark, NSString *key, NSString *regex) {
  J2OBJC_NEW_IMPL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction, initWithNSString_withNSString_withNSString_, annotationMark, key, regex)
}

EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction *create_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction_initWithNSString_withNSString_withNSString_(NSString *annotationMark, NSString *key, NSString *regex) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction, initWithNSString_withNSString_withNSString_, annotationMark, key, regex)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddRelativeNodeRegexFunction)

@implementation EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction

- (instancetype)initWithNSString:(NSString *)annotationMark
                    withNSString:(NSString *)key {
  EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction_initWithNSString_withNSString_(self, annotationMark, key);
  return self;
}

- (NSString *)applyWithId:(EduStanfordNlpTreesTregexTregexMatcher *)m {
  NSString *node = [((id<EduStanfordNlpLingLabel>) nil_chk([((EduStanfordNlpTreesTree *) nil_chk([((EduStanfordNlpTreesTregexTregexMatcher *) nil_chk(m)) getNodeWithNSString:key_])) label])) value];
  if ([((NSString *) nil_chk(node)) hasPrefix:@"S"]) {
    return JreStrcat("$C", annotationMark_, 'S');
  }
  else if ([node hasPrefix:@"V"]) {
    return JreStrcat("$C", annotationMark_, 'V');
  }
  else {
    return @"";
  }
}

- (NSString *)description {
  return JreStrcat("$$C$C", @"AddEquivalencedNodeFunction[", annotationMark_, ',', key_, ']');
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(applyWithId:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "annotationMark_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "key_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;", "apply", "LEduStanfordNlpTreesTregexTregexMatcher;", "toString", "LEduStanfordNlpParserLexparserArabicTreebankParserParams;", "Ljava/lang/Object;Ledu/stanford/nlp/process/SerializableFunction<Ledu/stanford/nlp/trees/tregex/TregexMatcher;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction = { "AddEquivalencedNodeFunction", "edu.stanford.nlp.parser.lexparser", ptrTable, methods, fields, 7, 0xa, 3, 3, 4, -1, -1, 5, -1 };
  return &_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction;
}

@end

void EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction_initWithNSString_withNSString_(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction *self, NSString *annotationMark, NSString *key) {
  NSObject_init(self);
  self->annotationMark_ = annotationMark;
  self->key_ = key;
}

EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction *new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction_initWithNSString_withNSString_(NSString *annotationMark, NSString *key) {
  J2OBJC_NEW_IMPL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction, initWithNSString_withNSString_, annotationMark, key)
}

EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction *create_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction_initWithNSString_withNSString_(NSString *annotationMark, NSString *key) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction, initWithNSString_withNSString_, annotationMark, key)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunction)

@implementation EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar

- (instancetype)initWithNSString:(NSString *)annotationMark
                    withNSString:(NSString *)key {
  EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar_initWithNSString_withNSString_(self, annotationMark, key);
  return self;
}

- (NSString *)applyWithId:(EduStanfordNlpTreesTregexTregexMatcher *)m {
  NSString *node = [((id<EduStanfordNlpLingLabel>) nil_chk([((EduStanfordNlpTreesTree *) nil_chk([((EduStanfordNlpTreesTregexTregexMatcher *) nil_chk(m)) getNodeWithNSString:key_])) label])) value];
  if ([((NSString *) nil_chk(node)) hasPrefix:@"S"] || [node hasPrefix:@"V"] || [node hasPrefix:@"A"]) {
    return JreStrcat("$$", annotationMark_, @"VSA");
  }
  else {
    return @"";
  }
}

- (NSString *)description {
  return JreStrcat("$$C$C", @"AddEquivalencedNodeFunctionVar[", annotationMark_, ',', key_, ']');
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(applyWithId:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "annotationMark_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "key_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;", "apply", "LEduStanfordNlpTreesTregexTregexMatcher;", "toString", "LEduStanfordNlpParserLexparserArabicTreebankParserParams;", "Ljava/lang/Object;Ledu/stanford/nlp/process/SerializableFunction<Ledu/stanford/nlp/trees/tregex/TregexMatcher;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar = { "AddEquivalencedNodeFunctionVar", "edu.stanford.nlp.parser.lexparser", ptrTable, methods, fields, 7, 0xa, 3, 3, 4, -1, -1, 5, -1 };
  return &_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar;
}

@end

void EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar_initWithNSString_withNSString_(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar *self, NSString *annotationMark, NSString *key) {
  NSObject_init(self);
  self->annotationMark_ = annotationMark;
  self->key_ = key;
}

EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar *new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar_initWithNSString_withNSString_(NSString *annotationMark, NSString *key) {
  J2OBJC_NEW_IMPL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar, initWithNSString_withNSString_, annotationMark, key)
}

EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar *create_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar_initWithNSString_withNSString_(NSString *annotationMark, NSString *key) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar, initWithNSString_withNSString_, annotationMark, key)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedNodeFunctionVar)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2)

@implementation EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2

- (NSString *)applyWithId:(EduStanfordNlpTreesTregexTregexMatcher *)m {
  NSString *punc = [((EduStanfordNlpTreesTree *) nil_chk([((EduStanfordNlpTreesTregexTregexMatcher *) nil_chk(m)) getNodeWithNSString:EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2_key])) value];
  if ([((NSString *) nil_chk(punc)) isEqual:@"."]) return @"-fs";
  else if ([punc isEqual:@"?"]) return @"-quest";
  else if ([punc isEqual:@","]) return @"-comma";
  else if ([punc isEqual:@":"] || [punc isEqual:@";"]) return @"-colon";
  else if ([punc isEqual:@"-LRB-"]) return @"-lrb";
  else if ([punc isEqual:@"-RRB-"]) return @"-rrb";
  else if ([punc isEqual:@"-PLUS-"]) return @"-plus";
  else if ([punc isEqual:@"-"]) return @"-dash";
  else if ([((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2_quote)) matcherWithJavaLangCharSequence:punc])) matches]) return @"-quote";
  return @"";
}

- (NSString *)description {
  return @"AnnotatePunctuationFunction2";
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(applyWithId:);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "key", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 3, -1, -1 },
    { "quote", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "apply", "LEduStanfordNlpTreesTregexTregexMatcher;", "toString", &EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2_key, &EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2_quote, "LEduStanfordNlpParserLexparserArabicTreebankParserParams;", "Ljava/lang/Object;Ledu/stanford/nlp/process/SerializableFunction<Ledu/stanford/nlp/trees/tregex/TregexMatcher;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2 = { "AnnotatePunctuationFunction2", "edu.stanford.nlp.parser.lexparser", ptrTable, methods, fields, 7, 0xa, 3, 3, 5, -1, -1, 6, -1 };
  return &_EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2;
}

+ (void)initialize {
  if (self == [EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2 class]) {
    EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2_quote = JavaUtilRegexPattern_compileWithNSString_(@"^\"$");
    J2OBJC_SET_INITIALIZED(EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2)
  }
}

@end

void EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2_init(EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2 *self) {
  NSObject_init(self);
}

EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2 *new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2, init)
}

EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2 *create_EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpParserLexparserArabicTreebankParserParams_AnnotatePunctuationFunction2)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode)

@implementation EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode

- (instancetype)initWithNSString:(NSString *)annotationMark
                    withNSString:(NSString *)key {
  EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_initWithNSString_withNSString_(self, annotationMark, key);
  return self;
}

- (NSString *)applyWithId:(EduStanfordNlpTreesTregexTregexMatcher *)m {
  NSString *node = [((EduStanfordNlpTreesTree *) nil_chk([((EduStanfordNlpTreesTregexTregexMatcher *) nil_chk(m)) getNodeWithNSString:key_])) value];
  NSString *eqClass = [((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_tlp)) basicCategoryWithNSString:node];
  if ([((id<JavaUtilSet>) nil_chk(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_nnTagClass)) containsWithId:eqClass]) eqClass = @"noun";
  else if ([((id<JavaUtilSet>) nil_chk(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_jjTagClass)) containsWithId:eqClass]) eqClass = @"adj";
  else if ([((id<JavaUtilSet>) nil_chk(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_vbTagClass)) containsWithId:eqClass]) eqClass = @"vb";
  return JreStrcat("$$", annotationMark_, eqClass);
}

- (NSString *)description {
  return JreStrcat("$$C$C", @"AddEquivalencedConjNode[", annotationMark_, ',', key_, ']');
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(applyWithId:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "annotationMark_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "key_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "nnTags", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
    { "nnTagClass", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1a, -1, 5, 6, -1 },
    { "jjTags", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
    { "jjTagClass", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1a, -1, 8, 6, -1 },
    { "vbTags", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
    { "vbTagClass", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1a, -1, 10, 6, -1 },
    { "tlp", "LEduStanfordNlpTreesTreebankLanguagePack;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;", "apply", "LEduStanfordNlpTreesTregexTregexMatcher;", "toString", &EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_nnTags, &EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_nnTagClass, "Ljava/util/Set<Ljava/lang/String;>;", &EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_jjTags, &EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_jjTagClass, &EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_vbTags, &EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_vbTagClass, &EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_tlp, "LEduStanfordNlpParserLexparserArabicTreebankParserParams;", "Ljava/lang/Object;Ledu/stanford/nlp/process/SerializableFunction<Ledu/stanford/nlp/trees/tregex/TregexMatcher;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode = { "AddEquivalencedConjNode", "edu.stanford.nlp.parser.lexparser", ptrTable, methods, fields, 7, 0xa, 3, 10, 12, -1, -1, 13, -1 };
  return &_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode;
}

+ (void)initialize {
  if (self == [EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode class]) {
    EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_nnTagClass = JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(EduStanfordNlpUtilGenerics_newHashSetWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([((NSString *) nil_chk(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_nnTags)) split:@"\\s+"])));
    EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_jjTagClass = JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(EduStanfordNlpUtilGenerics_newHashSetWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([((NSString *) nil_chk(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_jjTags)) split:@"\\s+"])));
    EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_vbTagClass = JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(EduStanfordNlpUtilGenerics_newHashSetWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([((NSString *) nil_chk(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_vbTags)) split:@"\\s+"])));
    EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_tlp = new_EduStanfordNlpTreesInternationalArabicArabicTreebankLanguagePack_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode)
  }
}

@end

void EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_initWithNSString_withNSString_(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode *self, NSString *annotationMark, NSString *key) {
  NSObject_init(self);
  self->annotationMark_ = annotationMark;
  self->key_ = key;
}

EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode *new_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_initWithNSString_withNSString_(NSString *annotationMark, NSString *key) {
  J2OBJC_NEW_IMPL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode, initWithNSString_withNSString_, annotationMark, key)
}

EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode *create_EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode_initWithNSString_withNSString_(NSString *annotationMark, NSString *key) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode, initWithNSString_withNSString_, annotationMark, key)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpParserLexparserArabicTreebankParserParams_AddEquivalencedConjNode)
