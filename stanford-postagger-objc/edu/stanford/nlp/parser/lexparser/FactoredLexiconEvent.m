//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/parser/lexparser/FactoredLexiconEvent.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/parser/lexparser/FactoredLexiconEvent.h"

@interface EduStanfordNlpParserLexparserFactoredLexiconEvent () {
 @public
  jint wordId_;
  jint lemmaId_;
  jint tagId_;
  jint morphId_;
  jint loc_;
  NSString *word_;
  NSString *featureStr_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserFactoredLexiconEvent, word_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpParserLexparserFactoredLexiconEvent, featureStr_, NSString *)

@implementation EduStanfordNlpParserLexparserFactoredLexiconEvent

- (instancetype)initWithInt:(jint)wordId
                    withInt:(jint)tagId
                    withInt:(jint)lemmaId
                    withInt:(jint)morphId
                    withInt:(jint)loc
               withNSString:(NSString *)word
               withNSString:(NSString *)featureStr {
  EduStanfordNlpParserLexparserFactoredLexiconEvent_initWithInt_withInt_withInt_withInt_withInt_withNSString_withNSString_(self, wordId, tagId, lemmaId, morphId, loc, word, featureStr);
  return self;
}

- (jint)wordId {
  return wordId_;
}

- (jint)tagId {
  return tagId_;
}

- (jint)morphId {
  return morphId_;
}

- (jint)lemmaId {
  return lemmaId_;
}

- (jint)getLoc {
  return loc_;
}

- (NSString *)word {
  return word_;
}

- (NSString *)featureStr {
  return featureStr_;
}

- (NSString *)description {
  return word_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:withInt:withInt:withInt:withInt:withNSString:withNSString:);
  methods[1].selector = @selector(wordId);
  methods[2].selector = @selector(tagId);
  methods[3].selector = @selector(morphId);
  methods[4].selector = @selector(lemmaId);
  methods[5].selector = @selector(getLoc);
  methods[6].selector = @selector(word);
  methods[7].selector = @selector(featureStr);
  methods[8].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "wordId_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "lemmaId_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "tagId_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "morphId_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "loc_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "word_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "featureStr_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "IIIIILNSString;LNSString;", "toString" };
  static const J2ObjcClassInfo _EduStanfordNlpParserLexparserFactoredLexiconEvent = { "FactoredLexiconEvent", "edu.stanford.nlp.parser.lexparser", ptrTable, methods, fields, 7, 0x1, 9, 7, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpParserLexparserFactoredLexiconEvent;
}

@end

void EduStanfordNlpParserLexparserFactoredLexiconEvent_initWithInt_withInt_withInt_withInt_withInt_withNSString_withNSString_(EduStanfordNlpParserLexparserFactoredLexiconEvent *self, jint wordId, jint tagId, jint lemmaId, jint morphId, jint loc, NSString *word, NSString *featureStr) {
  NSObject_init(self);
  self->wordId_ = wordId;
  self->tagId_ = tagId;
  self->lemmaId_ = lemmaId;
  self->morphId_ = morphId;
  self->loc_ = loc;
  self->word_ = word;
  self->featureStr_ = featureStr;
}

EduStanfordNlpParserLexparserFactoredLexiconEvent *new_EduStanfordNlpParserLexparserFactoredLexiconEvent_initWithInt_withInt_withInt_withInt_withInt_withNSString_withNSString_(jint wordId, jint tagId, jint lemmaId, jint morphId, jint loc, NSString *word, NSString *featureStr) {
  J2OBJC_NEW_IMPL(EduStanfordNlpParserLexparserFactoredLexiconEvent, initWithInt_withInt_withInt_withInt_withInt_withNSString_withNSString_, wordId, tagId, lemmaId, morphId, loc, word, featureStr)
}

EduStanfordNlpParserLexparserFactoredLexiconEvent *create_EduStanfordNlpParserLexparserFactoredLexiconEvent_initWithInt_withInt_withInt_withInt_withInt_withNSString_withNSString_(jint wordId, jint tagId, jint lemmaId, jint morphId, jint loc, NSString *word, NSString *featureStr) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpParserLexparserFactoredLexiconEvent, initWithInt_withInt_withInt_withInt_withInt_withNSString_withNSString_, wordId, tagId, lemmaId, morphId, loc, word, featureStr)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpParserLexparserFactoredLexiconEvent)
