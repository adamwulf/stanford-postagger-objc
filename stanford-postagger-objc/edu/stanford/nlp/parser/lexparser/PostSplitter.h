//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/parser/lexparser/PostSplitter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpParserLexparserPostSplitter")
#ifdef RESTRICT_EduStanfordNlpParserLexparserPostSplitter
#define INCLUDE_ALL_EduStanfordNlpParserLexparserPostSplitter 0
#else
#define INCLUDE_ALL_EduStanfordNlpParserLexparserPostSplitter 1
#endif
#undef RESTRICT_EduStanfordNlpParserLexparserPostSplitter

#if !defined (EduStanfordNlpParserLexparserPostSplitter_) && (INCLUDE_ALL_EduStanfordNlpParserLexparserPostSplitter || defined(INCLUDE_EduStanfordNlpParserLexparserPostSplitter))
#define EduStanfordNlpParserLexparserPostSplitter_

#define RESTRICT_EduStanfordNlpTreesTreeTransformer 1
#define INCLUDE_EduStanfordNlpTreesTreeTransformer 1
#include "edu/stanford/nlp/trees/TreeTransformer.h"

@class EduStanfordNlpParserLexparserOptions;
@class EduStanfordNlpTreesTree;
@protocol EduStanfordNlpParserLexparserTreebankLangParserParams;
@protocol EduStanfordNlpTreesTreeFactory;

@interface EduStanfordNlpParserLexparserPostSplitter : NSObject < EduStanfordNlpTreesTreeTransformer >

#pragma mark Public

- (instancetype)initWithEduStanfordNlpParserLexparserTreebankLangParserParams:(id<EduStanfordNlpParserLexparserTreebankLangParserParams>)tlpParams
                                     withEduStanfordNlpParserLexparserOptions:(EduStanfordNlpParserLexparserOptions *)op;

- (void)dumpStats;

- (EduStanfordNlpTreesTree *)transformTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

- (EduStanfordNlpTreesTree *)transformTreeHelperWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                                withEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)root
                                         withEduStanfordNlpTreesTreeFactory:(id<EduStanfordNlpTreesTreeFactory>)tf;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpParserLexparserPostSplitter)

FOUNDATION_EXPORT void EduStanfordNlpParserLexparserPostSplitter_initWithEduStanfordNlpParserLexparserTreebankLangParserParams_withEduStanfordNlpParserLexparserOptions_(EduStanfordNlpParserLexparserPostSplitter *self, id<EduStanfordNlpParserLexparserTreebankLangParserParams> tlpParams, EduStanfordNlpParserLexparserOptions *op);

FOUNDATION_EXPORT EduStanfordNlpParserLexparserPostSplitter *new_EduStanfordNlpParserLexparserPostSplitter_initWithEduStanfordNlpParserLexparserTreebankLangParserParams_withEduStanfordNlpParserLexparserOptions_(id<EduStanfordNlpParserLexparserTreebankLangParserParams> tlpParams, EduStanfordNlpParserLexparserOptions *op) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpParserLexparserPostSplitter *create_EduStanfordNlpParserLexparserPostSplitter_initWithEduStanfordNlpParserLexparserTreebankLangParserParams_withEduStanfordNlpParserLexparserOptions_(id<EduStanfordNlpParserLexparserTreebankLangParserParams> tlpParams, EduStanfordNlpParserLexparserOptions *op);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpParserLexparserPostSplitter)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpParserLexparserPostSplitter")
