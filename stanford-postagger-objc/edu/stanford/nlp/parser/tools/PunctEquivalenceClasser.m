//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/parser/tools/PunctEquivalenceClasser.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/parser/tools/PunctEquivalenceClasser.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

inline IOSObjectArray *EduStanfordNlpParserToolsPunctEquivalenceClasser_get_eolClassRaw();
static IOSObjectArray *EduStanfordNlpParserToolsPunctEquivalenceClasser_eolClassRaw;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserToolsPunctEquivalenceClasser, eolClassRaw, IOSObjectArray *)

inline id<JavaUtilSet> EduStanfordNlpParserToolsPunctEquivalenceClasser_get_sfClass();
static id<JavaUtilSet> EduStanfordNlpParserToolsPunctEquivalenceClasser_sfClass;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserToolsPunctEquivalenceClasser, sfClass, id<JavaUtilSet>)

inline IOSObjectArray *EduStanfordNlpParserToolsPunctEquivalenceClasser_get_colonClassRaw();
static IOSObjectArray *EduStanfordNlpParserToolsPunctEquivalenceClasser_colonClassRaw;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserToolsPunctEquivalenceClasser, colonClassRaw, IOSObjectArray *)

inline id<JavaUtilSet> EduStanfordNlpParserToolsPunctEquivalenceClasser_get_colonClass();
static id<JavaUtilSet> EduStanfordNlpParserToolsPunctEquivalenceClasser_colonClass;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserToolsPunctEquivalenceClasser, colonClass, id<JavaUtilSet>)

inline IOSObjectArray *EduStanfordNlpParserToolsPunctEquivalenceClasser_get_commaClassRaw();
static IOSObjectArray *EduStanfordNlpParserToolsPunctEquivalenceClasser_commaClassRaw;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserToolsPunctEquivalenceClasser, commaClassRaw, IOSObjectArray *)

inline id<JavaUtilSet> EduStanfordNlpParserToolsPunctEquivalenceClasser_get_commaClass();
static id<JavaUtilSet> EduStanfordNlpParserToolsPunctEquivalenceClasser_commaClass;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserToolsPunctEquivalenceClasser, commaClass, id<JavaUtilSet>)

inline IOSObjectArray *EduStanfordNlpParserToolsPunctEquivalenceClasser_get_currencyClassRaw();
static IOSObjectArray *EduStanfordNlpParserToolsPunctEquivalenceClasser_currencyClassRaw;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserToolsPunctEquivalenceClasser, currencyClassRaw, IOSObjectArray *)

inline id<JavaUtilSet> EduStanfordNlpParserToolsPunctEquivalenceClasser_get_currencyClass();
static id<JavaUtilSet> EduStanfordNlpParserToolsPunctEquivalenceClasser_currencyClass;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserToolsPunctEquivalenceClasser, currencyClass, id<JavaUtilSet>)

inline JavaUtilRegexPattern *EduStanfordNlpParserToolsPunctEquivalenceClasser_get_pEllipsis();
static JavaUtilRegexPattern *EduStanfordNlpParserToolsPunctEquivalenceClasser_pEllipsis;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserToolsPunctEquivalenceClasser, pEllipsis, JavaUtilRegexPattern *)

inline IOSObjectArray *EduStanfordNlpParserToolsPunctEquivalenceClasser_get_slashClassRaw();
static IOSObjectArray *EduStanfordNlpParserToolsPunctEquivalenceClasser_slashClassRaw;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserToolsPunctEquivalenceClasser, slashClassRaw, IOSObjectArray *)

inline id<JavaUtilSet> EduStanfordNlpParserToolsPunctEquivalenceClasser_get_slashClass();
static id<JavaUtilSet> EduStanfordNlpParserToolsPunctEquivalenceClasser_slashClass;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserToolsPunctEquivalenceClasser, slashClass, id<JavaUtilSet>)

inline IOSObjectArray *EduStanfordNlpParserToolsPunctEquivalenceClasser_get_lBracketClassRaw();
static IOSObjectArray *EduStanfordNlpParserToolsPunctEquivalenceClasser_lBracketClassRaw;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserToolsPunctEquivalenceClasser, lBracketClassRaw, IOSObjectArray *)

inline id<JavaUtilSet> EduStanfordNlpParserToolsPunctEquivalenceClasser_get_lBracketClass();
static id<JavaUtilSet> EduStanfordNlpParserToolsPunctEquivalenceClasser_lBracketClass;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserToolsPunctEquivalenceClasser, lBracketClass, id<JavaUtilSet>)

inline IOSObjectArray *EduStanfordNlpParserToolsPunctEquivalenceClasser_get_rBracketClassRaw();
static IOSObjectArray *EduStanfordNlpParserToolsPunctEquivalenceClasser_rBracketClassRaw;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserToolsPunctEquivalenceClasser, rBracketClassRaw, IOSObjectArray *)

inline id<JavaUtilSet> EduStanfordNlpParserToolsPunctEquivalenceClasser_get_rBracketClass();
static id<JavaUtilSet> EduStanfordNlpParserToolsPunctEquivalenceClasser_rBracketClass;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserToolsPunctEquivalenceClasser, rBracketClass, id<JavaUtilSet>)

inline IOSObjectArray *EduStanfordNlpParserToolsPunctEquivalenceClasser_get_quoteClassRaw();
static IOSObjectArray *EduStanfordNlpParserToolsPunctEquivalenceClasser_quoteClassRaw;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserToolsPunctEquivalenceClasser, quoteClassRaw, IOSObjectArray *)

inline id<JavaUtilSet> EduStanfordNlpParserToolsPunctEquivalenceClasser_get_quoteClass();
static id<JavaUtilSet> EduStanfordNlpParserToolsPunctEquivalenceClasser_quoteClass;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpParserToolsPunctEquivalenceClasser, quoteClass, id<JavaUtilSet>)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpParserToolsPunctEquivalenceClasser)

@implementation EduStanfordNlpParserToolsPunctEquivalenceClasser

+ (NSString *)getPunctClassWithNSString:(NSString *)punc {
  return EduStanfordNlpParserToolsPunctEquivalenceClasser_getPunctClassWithNSString_(punc);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpParserToolsPunctEquivalenceClasser_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getPunctClassWithNSString:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "eolClassRaw", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
    { "sfClass", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1a, -1, 3, 4, -1 },
    { "colonClassRaw", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
    { "colonClass", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1a, -1, 6, 4, -1 },
    { "commaClassRaw", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
    { "commaClass", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1a, -1, 8, 4, -1 },
    { "currencyClassRaw", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
    { "currencyClass", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1a, -1, 10, 4, -1 },
    { "pEllipsis", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "slashClassRaw", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
    { "slashClass", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1a, -1, 13, 4, -1 },
    { "lBracketClassRaw", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 14, -1, -1 },
    { "lBracketClass", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1a, -1, 15, 4, -1 },
    { "rBracketClassRaw", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 16, -1, -1 },
    { "rBracketClass", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1a, -1, 17, 4, -1 },
    { "quoteClassRaw", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 18, -1, -1 },
    { "quoteClass", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1a, -1, 19, 4, -1 },
  };
  static const void *ptrTable[] = { "getPunctClass", "LNSString;", &EduStanfordNlpParserToolsPunctEquivalenceClasser_eolClassRaw, &EduStanfordNlpParserToolsPunctEquivalenceClasser_sfClass, "Ljava/util/Set<Ljava/lang/String;>;", &EduStanfordNlpParserToolsPunctEquivalenceClasser_colonClassRaw, &EduStanfordNlpParserToolsPunctEquivalenceClasser_colonClass, &EduStanfordNlpParserToolsPunctEquivalenceClasser_commaClassRaw, &EduStanfordNlpParserToolsPunctEquivalenceClasser_commaClass, &EduStanfordNlpParserToolsPunctEquivalenceClasser_currencyClassRaw, &EduStanfordNlpParserToolsPunctEquivalenceClasser_currencyClass, &EduStanfordNlpParserToolsPunctEquivalenceClasser_pEllipsis, &EduStanfordNlpParserToolsPunctEquivalenceClasser_slashClassRaw, &EduStanfordNlpParserToolsPunctEquivalenceClasser_slashClass, &EduStanfordNlpParserToolsPunctEquivalenceClasser_lBracketClassRaw, &EduStanfordNlpParserToolsPunctEquivalenceClasser_lBracketClass, &EduStanfordNlpParserToolsPunctEquivalenceClasser_rBracketClassRaw, &EduStanfordNlpParserToolsPunctEquivalenceClasser_rBracketClass, &EduStanfordNlpParserToolsPunctEquivalenceClasser_quoteClassRaw, &EduStanfordNlpParserToolsPunctEquivalenceClasser_quoteClass };
  static const J2ObjcClassInfo _EduStanfordNlpParserToolsPunctEquivalenceClasser = { "PunctEquivalenceClasser", "edu.stanford.nlp.parser.tools", ptrTable, methods, fields, 7, 0x1, 2, 17, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpParserToolsPunctEquivalenceClasser;
}

+ (void)initialize {
  if (self == [EduStanfordNlpParserToolsPunctEquivalenceClasser class]) {
    EduStanfordNlpParserToolsPunctEquivalenceClasser_eolClassRaw = [IOSObjectArray newArrayWithObjects:(id[]){ @".", @"?", @"!" } count:3 type:NSString_class_()];
    EduStanfordNlpParserToolsPunctEquivalenceClasser_sfClass = EduStanfordNlpUtilGenerics_newHashSetWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_(EduStanfordNlpParserToolsPunctEquivalenceClasser_eolClassRaw));
    EduStanfordNlpParserToolsPunctEquivalenceClasser_colonClassRaw = [IOSObjectArray newArrayWithObjects:(id[]){ @":", @";", @"-", @"_" } count:4 type:NSString_class_()];
    EduStanfordNlpParserToolsPunctEquivalenceClasser_colonClass = EduStanfordNlpUtilGenerics_newHashSetWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_(EduStanfordNlpParserToolsPunctEquivalenceClasser_colonClassRaw));
    EduStanfordNlpParserToolsPunctEquivalenceClasser_commaClassRaw = [IOSObjectArray newArrayWithObjects:(id[]){ @",", @"\u0631" } count:2 type:NSString_class_()];
    EduStanfordNlpParserToolsPunctEquivalenceClasser_commaClass = EduStanfordNlpUtilGenerics_newHashSetWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_(EduStanfordNlpParserToolsPunctEquivalenceClasser_commaClassRaw));
    EduStanfordNlpParserToolsPunctEquivalenceClasser_currencyClassRaw = [IOSObjectArray newArrayWithObjects:(id[]){ @"$", @"#", @"=" } count:3 type:NSString_class_()];
    EduStanfordNlpParserToolsPunctEquivalenceClasser_currencyClass = EduStanfordNlpUtilGenerics_newHashSetWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_(EduStanfordNlpParserToolsPunctEquivalenceClasser_currencyClassRaw));
    EduStanfordNlpParserToolsPunctEquivalenceClasser_pEllipsis = JavaUtilRegexPattern_compileWithNSString_(@"\\.\\.+");
    EduStanfordNlpParserToolsPunctEquivalenceClasser_slashClassRaw = [IOSObjectArray newArrayWithObjects:(id[]){ @"/", @"\\" } count:2 type:NSString_class_()];
    EduStanfordNlpParserToolsPunctEquivalenceClasser_slashClass = EduStanfordNlpUtilGenerics_newHashSetWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_(EduStanfordNlpParserToolsPunctEquivalenceClasser_slashClassRaw));
    EduStanfordNlpParserToolsPunctEquivalenceClasser_lBracketClassRaw = [IOSObjectArray newArrayWithObjects:(id[]){ @"-LRB-", @"(", @"[", @"<" } count:4 type:NSString_class_()];
    EduStanfordNlpParserToolsPunctEquivalenceClasser_lBracketClass = EduStanfordNlpUtilGenerics_newHashSetWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_(EduStanfordNlpParserToolsPunctEquivalenceClasser_lBracketClassRaw));
    EduStanfordNlpParserToolsPunctEquivalenceClasser_rBracketClassRaw = [IOSObjectArray newArrayWithObjects:(id[]){ @"-RRB-", @")", @"]", @">" } count:4 type:NSString_class_()];
    EduStanfordNlpParserToolsPunctEquivalenceClasser_rBracketClass = EduStanfordNlpUtilGenerics_newHashSetWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_(EduStanfordNlpParserToolsPunctEquivalenceClasser_rBracketClassRaw));
    EduStanfordNlpParserToolsPunctEquivalenceClasser_quoteClassRaw = [IOSObjectArray newArrayWithObjects:(id[]){ @"\"", @"``", @"''", @"'", @"`" } count:5 type:NSString_class_()];
    EduStanfordNlpParserToolsPunctEquivalenceClasser_quoteClass = EduStanfordNlpUtilGenerics_newHashSetWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_(EduStanfordNlpParserToolsPunctEquivalenceClasser_quoteClassRaw));
    J2OBJC_SET_INITIALIZED(EduStanfordNlpParserToolsPunctEquivalenceClasser)
  }
}

@end

NSString *EduStanfordNlpParserToolsPunctEquivalenceClasser_getPunctClassWithNSString_(NSString *punc) {
  EduStanfordNlpParserToolsPunctEquivalenceClasser_initialize();
  if ([((NSString *) nil_chk(punc)) isEqual:@"%"] || [punc isEqual:@"-PLUS-"]) return @"perc";
  else if ([punc hasPrefix:@"*"]) return @"bullet";
  else if ([((id<JavaUtilSet>) nil_chk(EduStanfordNlpParserToolsPunctEquivalenceClasser_sfClass)) containsWithId:punc]) return @"sf";
  else if ([((id<JavaUtilSet>) nil_chk(EduStanfordNlpParserToolsPunctEquivalenceClasser_colonClass)) containsWithId:punc] || [((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(EduStanfordNlpParserToolsPunctEquivalenceClasser_pEllipsis)) matcherWithJavaLangCharSequence:punc])) matches]) return @"colon";
  else if ([((id<JavaUtilSet>) nil_chk(EduStanfordNlpParserToolsPunctEquivalenceClasser_commaClass)) containsWithId:punc]) return @"comma";
  else if ([((id<JavaUtilSet>) nil_chk(EduStanfordNlpParserToolsPunctEquivalenceClasser_currencyClass)) containsWithId:punc]) return @"curr";
  else if ([((id<JavaUtilSet>) nil_chk(EduStanfordNlpParserToolsPunctEquivalenceClasser_slashClass)) containsWithId:punc]) return @"slash";
  else if ([((id<JavaUtilSet>) nil_chk(EduStanfordNlpParserToolsPunctEquivalenceClasser_lBracketClass)) containsWithId:punc]) return @"lrb";
  else if ([((id<JavaUtilSet>) nil_chk(EduStanfordNlpParserToolsPunctEquivalenceClasser_rBracketClass)) containsWithId:punc]) return @"rrb";
  else if ([((id<JavaUtilSet>) nil_chk(EduStanfordNlpParserToolsPunctEquivalenceClasser_quoteClass)) containsWithId:punc]) return @"quote";
  return @"";
}

void EduStanfordNlpParserToolsPunctEquivalenceClasser_init(EduStanfordNlpParserToolsPunctEquivalenceClasser *self) {
  NSObject_init(self);
}

EduStanfordNlpParserToolsPunctEquivalenceClasser *new_EduStanfordNlpParserToolsPunctEquivalenceClasser_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpParserToolsPunctEquivalenceClasser, init)
}

EduStanfordNlpParserToolsPunctEquivalenceClasser *create_EduStanfordNlpParserToolsPunctEquivalenceClasser_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpParserToolsPunctEquivalenceClasser, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpParserToolsPunctEquivalenceClasser)
