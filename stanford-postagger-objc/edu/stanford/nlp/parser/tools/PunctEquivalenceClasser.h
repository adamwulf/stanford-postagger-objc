//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/parser/tools/PunctEquivalenceClasser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpParserToolsPunctEquivalenceClasser")
#ifdef RESTRICT_EduStanfordNlpParserToolsPunctEquivalenceClasser
#define INCLUDE_ALL_EduStanfordNlpParserToolsPunctEquivalenceClasser 0
#else
#define INCLUDE_ALL_EduStanfordNlpParserToolsPunctEquivalenceClasser 1
#endif
#undef RESTRICT_EduStanfordNlpParserToolsPunctEquivalenceClasser

#if !defined (EduStanfordNlpParserToolsPunctEquivalenceClasser_) && (INCLUDE_ALL_EduStanfordNlpParserToolsPunctEquivalenceClasser || defined(INCLUDE_EduStanfordNlpParserToolsPunctEquivalenceClasser))
#define EduStanfordNlpParserToolsPunctEquivalenceClasser_

@interface EduStanfordNlpParserToolsPunctEquivalenceClasser : NSObject

#pragma mark Public

- (instancetype)init;

+ (NSString *)getPunctClassWithNSString:(NSString *)punc;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpParserToolsPunctEquivalenceClasser)

FOUNDATION_EXPORT NSString *EduStanfordNlpParserToolsPunctEquivalenceClasser_getPunctClassWithNSString_(NSString *punc);

FOUNDATION_EXPORT void EduStanfordNlpParserToolsPunctEquivalenceClasser_init(EduStanfordNlpParserToolsPunctEquivalenceClasser *self);

FOUNDATION_EXPORT EduStanfordNlpParserToolsPunctEquivalenceClasser *new_EduStanfordNlpParserToolsPunctEquivalenceClasser_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpParserToolsPunctEquivalenceClasser *create_EduStanfordNlpParserToolsPunctEquivalenceClasser_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpParserToolsPunctEquivalenceClasser)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpParserToolsPunctEquivalenceClasser")
