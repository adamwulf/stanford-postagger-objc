//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/semgraph/SemanticGraphFactory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/IndexedWord.h"
#include "edu/stanford/nlp/semgraph/SemanticGraph.h"
#include "edu/stanford/nlp/semgraph/SemanticGraphEdge.h"
#include "edu/stanford/nlp/semgraph/SemanticGraphFactory.h"
#include "edu/stanford/nlp/trees/EnglishGrammaticalStructure.h"
#include "edu/stanford/nlp/trees/GrammaticalRelation.h"
#include "edu/stanford/nlp/trees/GrammaticalStructure.h"
#include "edu/stanford/nlp/trees/PennTreebankLanguagePack.h"
#include "edu/stanford/nlp/trees/SemanticHeadFinder.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TypedDependency.h"
#include "edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure.h"
#include "edu/stanford/nlp/trees/UniversalSemanticHeadFinder.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/function/Predicate.h"

@interface EduStanfordNlpSemgraphSemanticGraphFactory ()

- (instancetype)init;

@end

inline jboolean EduStanfordNlpSemgraphSemanticGraphFactory_get_INCLUDE_PUNCTUATION_DEPENDENCIES();
#define EduStanfordNlpSemgraphSemanticGraphFactory_INCLUDE_PUNCTUATION_DEPENDENCIES false
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpSemgraphSemanticGraphFactory, INCLUDE_PUNCTUATION_DEPENDENCIES, jboolean)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemanticGraphFactory_init(EduStanfordNlpSemgraphSemanticGraphFactory *self);

__attribute__((unused)) static EduStanfordNlpSemgraphSemanticGraphFactory *new_EduStanfordNlpSemgraphSemanticGraphFactory_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemanticGraphFactory *create_EduStanfordNlpSemgraphSemanticGraphFactory_init();

__attribute__((unused)) static IOSObjectArray *EduStanfordNlpSemgraphSemanticGraphFactory__Annotations$0();

__attribute__((unused)) static IOSObjectArray *EduStanfordNlpSemgraphSemanticGraphFactory__Annotations$1();

__attribute__((unused)) static IOSObjectArray *EduStanfordNlpSemgraphSemanticGraphFactory__Annotations$2();

__attribute__((unused)) static IOSObjectArray *EduStanfordNlpSemgraphSemanticGraphFactory__Annotations$3();

__attribute__((unused)) static void EduStanfordNlpSemgraphSemanticGraphFactory_Mode_initWithNSString_withInt_(EduStanfordNlpSemgraphSemanticGraphFactory_Mode *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static EduStanfordNlpSemgraphSemanticGraphFactory_Mode *new_EduStanfordNlpSemgraphSemanticGraphFactory_Mode_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@implementation EduStanfordNlpSemgraphSemanticGraphFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpSemgraphSemanticGraphFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (EduStanfordNlpSemgraphSemanticGraph *)generateUncollapsedDependenciesWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree {
  return EduStanfordNlpSemgraphSemanticGraphFactory_generateUncollapsedDependenciesWithEduStanfordNlpTreesTree_(tree);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)generateCollapsedDependenciesWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree {
  return EduStanfordNlpSemgraphSemanticGraphFactory_generateCollapsedDependenciesWithEduStanfordNlpTreesTree_(tree);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)generateCCProcessedDependenciesWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree {
  return EduStanfordNlpSemgraphSemanticGraphFactory_generateCCProcessedDependenciesWithEduStanfordNlpTreesTree_(tree);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)generateUncollapsedDependenciesWithEduStanfordNlpTreesGrammaticalStructure:(EduStanfordNlpTreesGrammaticalStructure *)gs {
  return EduStanfordNlpSemgraphSemanticGraphFactory_generateUncollapsedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_(gs);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)generateCollapsedDependenciesWithEduStanfordNlpTreesGrammaticalStructure:(EduStanfordNlpTreesGrammaticalStructure *)gs {
  return EduStanfordNlpSemgraphSemanticGraphFactory_generateCollapsedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_(gs);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)generateCCProcessedDependenciesWithEduStanfordNlpTreesGrammaticalStructure:(EduStanfordNlpTreesGrammaticalStructure *)gs {
  return EduStanfordNlpSemgraphSemanticGraphFactory_generateCCProcessedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_(gs);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)generateUncollapsedDependenciesWithEduStanfordNlpTreesGrammaticalStructure:(EduStanfordNlpTreesGrammaticalStructure *)gs
                                                                 withEduStanfordNlpTreesGrammaticalStructure_Extras:(EduStanfordNlpTreesGrammaticalStructure_Extras *)extras {
  return EduStanfordNlpSemgraphSemanticGraphFactory_generateUncollapsedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_withEduStanfordNlpTreesGrammaticalStructure_Extras_(gs, extras);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)generateCollapsedDependenciesWithEduStanfordNlpTreesGrammaticalStructure:(EduStanfordNlpTreesGrammaticalStructure *)gs
                                                               withEduStanfordNlpTreesGrammaticalStructure_Extras:(EduStanfordNlpTreesGrammaticalStructure_Extras *)extras {
  return EduStanfordNlpSemgraphSemanticGraphFactory_generateCollapsedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_withEduStanfordNlpTreesGrammaticalStructure_Extras_(gs, extras);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)generateCCProcessedDependenciesWithEduStanfordNlpTreesGrammaticalStructure:(EduStanfordNlpTreesGrammaticalStructure *)gs
                                                                 withEduStanfordNlpTreesGrammaticalStructure_Extras:(EduStanfordNlpTreesGrammaticalStructure_Extras *)extras {
  return EduStanfordNlpSemgraphSemanticGraphFactory_generateCCProcessedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_withEduStanfordNlpTreesGrammaticalStructure_Extras_(gs, extras);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)makeFromTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                             withEduStanfordNlpSemgraphSemanticGraphFactory_Mode:(EduStanfordNlpSemgraphSemanticGraphFactory_Mode *)mode
                              withEduStanfordNlpTreesGrammaticalStructure_Extras:(EduStanfordNlpTreesGrammaticalStructure_Extras *)includeExtras
                                                                     withBoolean:(jboolean)threadSafe
                                                   withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)filter
                                                                     withBoolean:(jboolean)originalDependencies {
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_withJavaUtilFunctionPredicate_withBoolean_(tree, mode, includeExtras, threadSafe, filter, originalDependencies);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)makeFromTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                             withEduStanfordNlpSemgraphSemanticGraphFactory_Mode:(EduStanfordNlpSemgraphSemanticGraphFactory_Mode *)mode
                                                                     withBoolean:(jboolean)includeExtras
                                                                     withBoolean:(jboolean)threadSafe
                                                   withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)filter {
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withBoolean_withBoolean_withJavaUtilFunctionPredicate_(tree, mode, includeExtras, threadSafe, filter);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)makeFromTreeWithEduStanfordNlpTreesGrammaticalStructure:(EduStanfordNlpTreesGrammaticalStructure *)gs
                                             withEduStanfordNlpSemgraphSemanticGraphFactory_Mode:(EduStanfordNlpSemgraphSemanticGraphFactory_Mode *)mode
                                              withEduStanfordNlpTreesGrammaticalStructure_Extras:(EduStanfordNlpTreesGrammaticalStructure_Extras *)includeExtras
                                                                                     withBoolean:(jboolean)threadSafe
                                                                   withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)filter {
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesGrammaticalStructure_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_withJavaUtilFunctionPredicate_(gs, mode, includeExtras, threadSafe, filter);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)makeFromTreeWithEduStanfordNlpTreesGrammaticalStructure:(EduStanfordNlpTreesGrammaticalStructure *)tree
                                             withEduStanfordNlpSemgraphSemanticGraphFactory_Mode:(EduStanfordNlpSemgraphSemanticGraphFactory_Mode *)mode
                                                                                     withBoolean:(jboolean)includeExtras
                                                                                     withBoolean:(jboolean)threadSafe
                                                                   withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)filter {
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesGrammaticalStructure_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withBoolean_withBoolean_withJavaUtilFunctionPredicate_(tree, mode, includeExtras, threadSafe, filter);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)makeFromTreeWithEduStanfordNlpTreesGrammaticalStructure:(EduStanfordNlpTreesGrammaticalStructure *)structure {
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesGrammaticalStructure_(structure);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)makeFromTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                             withEduStanfordNlpSemgraphSemanticGraphFactory_Mode:(EduStanfordNlpSemgraphSemanticGraphFactory_Mode *)mode
                              withEduStanfordNlpTreesGrammaticalStructure_Extras:(EduStanfordNlpTreesGrammaticalStructure_Extras *)includeExtras
                                                   withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)filter {
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withJavaUtilFunctionPredicate_(tree, mode, includeExtras, filter);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)makeFromTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                             withEduStanfordNlpSemgraphSemanticGraphFactory_Mode:(EduStanfordNlpSemgraphSemanticGraphFactory_Mode *)mode
                                                                     withBoolean:(jboolean)includeExtras
                                                   withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)filter {
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withBoolean_withJavaUtilFunctionPredicate_(tree, mode, includeExtras, filter);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)makeFromTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                             withEduStanfordNlpSemgraphSemanticGraphFactory_Mode:(EduStanfordNlpSemgraphSemanticGraphFactory_Mode *)mode
                              withEduStanfordNlpTreesGrammaticalStructure_Extras:(EduStanfordNlpTreesGrammaticalStructure_Extras *)includeExtras
                                                                     withBoolean:(jboolean)threadSafe {
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_(tree, mode, includeExtras, threadSafe);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)makeFromTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                             withEduStanfordNlpSemgraphSemanticGraphFactory_Mode:(EduStanfordNlpSemgraphSemanticGraphFactory_Mode *)mode
                                                                     withBoolean:(jboolean)includeExtras
                                                                     withBoolean:(jboolean)threadSafe {
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withBoolean_withBoolean_(tree, mode, includeExtras, threadSafe);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)makeFromTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                                                                     withBoolean:(jboolean)collapse {
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withBoolean_(tree, collapse);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)makeFromTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree {
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_(tree);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)allTypedDependenciesWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                                                                             withBoolean:(jboolean)collapse {
  return EduStanfordNlpSemgraphSemanticGraphFactory_allTypedDependenciesWithEduStanfordNlpTreesTree_withBoolean_(tree, collapse);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)makeFromEdgesWithJavaLangIterable:(id<JavaLangIterable>)edges {
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromEdgesWithJavaLangIterable_(edges);
}

+ (id<JavaUtilSet>)getVerticesFromEdgeSetWithJavaLangIterable:(id<JavaLangIterable>)edges {
  return EduStanfordNlpSemgraphSemanticGraphFactory_getVerticesFromEdgeSetWithJavaLangIterable_(edges);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)makeFromVerticesWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                                                          withJavaUtilCollection:(id<JavaUtilCollection>)nodes {
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromVerticesWithEduStanfordNlpSemgraphSemanticGraph_withJavaUtilCollection_(sg, nodes);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)duplicateKeepNodesWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  return EduStanfordNlpSemgraphSemanticGraphFactory_duplicateKeepNodesWithEduStanfordNlpSemgraphSemanticGraph_(sg);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)makeFromGraphsWithJavaUtilCollection:(id<JavaUtilCollection>)sgList {
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromGraphsWithJavaUtilCollection_(sgList);
}

+ (EduStanfordNlpSemgraphSemanticGraph *)deepCopyFromGraphsWithJavaUtilList:(id<JavaUtilList>)graphs
                                                           withJavaUtilList:(id<JavaUtilList>)lengths {
  return EduStanfordNlpSemgraphSemanticGraphFactory_deepCopyFromGraphsWithJavaUtilList_withJavaUtilList_(graphs, lengths);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 3, 1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 0, 4, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 2, 4, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 0, 5, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 2, 5, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 3, 5, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 6, 7, -1, 8, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 6, 9, -1, 10, 11, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 6, 12, -1, 13, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 6, 14, -1, 15, 16, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 6, 4, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 6, 17, -1, 18, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 6, 19, -1, 20, 21, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 6, 22, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 6, 23, -1, -1, 24, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 6, 25, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 6, 1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 26, 25, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 27, 28, -1, 29, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x9, 30, 28, -1, 31, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 32, 33, -1, 34, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 35, 36, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 37, 38, -1, 39, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraph;", 0x9, 40, 41, -1, 42, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(generateUncollapsedDependenciesWithEduStanfordNlpTreesTree:);
  methods[2].selector = @selector(generateCollapsedDependenciesWithEduStanfordNlpTreesTree:);
  methods[3].selector = @selector(generateCCProcessedDependenciesWithEduStanfordNlpTreesTree:);
  methods[4].selector = @selector(generateUncollapsedDependenciesWithEduStanfordNlpTreesGrammaticalStructure:);
  methods[5].selector = @selector(generateCollapsedDependenciesWithEduStanfordNlpTreesGrammaticalStructure:);
  methods[6].selector = @selector(generateCCProcessedDependenciesWithEduStanfordNlpTreesGrammaticalStructure:);
  methods[7].selector = @selector(generateUncollapsedDependenciesWithEduStanfordNlpTreesGrammaticalStructure:withEduStanfordNlpTreesGrammaticalStructure_Extras:);
  methods[8].selector = @selector(generateCollapsedDependenciesWithEduStanfordNlpTreesGrammaticalStructure:withEduStanfordNlpTreesGrammaticalStructure_Extras:);
  methods[9].selector = @selector(generateCCProcessedDependenciesWithEduStanfordNlpTreesGrammaticalStructure:withEduStanfordNlpTreesGrammaticalStructure_Extras:);
  methods[10].selector = @selector(makeFromTreeWithEduStanfordNlpTreesTree:withEduStanfordNlpSemgraphSemanticGraphFactory_Mode:withEduStanfordNlpTreesGrammaticalStructure_Extras:withBoolean:withJavaUtilFunctionPredicate:withBoolean:);
  methods[11].selector = @selector(makeFromTreeWithEduStanfordNlpTreesTree:withEduStanfordNlpSemgraphSemanticGraphFactory_Mode:withBoolean:withBoolean:withJavaUtilFunctionPredicate:);
  methods[12].selector = @selector(makeFromTreeWithEduStanfordNlpTreesGrammaticalStructure:withEduStanfordNlpSemgraphSemanticGraphFactory_Mode:withEduStanfordNlpTreesGrammaticalStructure_Extras:withBoolean:withJavaUtilFunctionPredicate:);
  methods[13].selector = @selector(makeFromTreeWithEduStanfordNlpTreesGrammaticalStructure:withEduStanfordNlpSemgraphSemanticGraphFactory_Mode:withBoolean:withBoolean:withJavaUtilFunctionPredicate:);
  methods[14].selector = @selector(makeFromTreeWithEduStanfordNlpTreesGrammaticalStructure:);
  methods[15].selector = @selector(makeFromTreeWithEduStanfordNlpTreesTree:withEduStanfordNlpSemgraphSemanticGraphFactory_Mode:withEduStanfordNlpTreesGrammaticalStructure_Extras:withJavaUtilFunctionPredicate:);
  methods[16].selector = @selector(makeFromTreeWithEduStanfordNlpTreesTree:withEduStanfordNlpSemgraphSemanticGraphFactory_Mode:withBoolean:withJavaUtilFunctionPredicate:);
  methods[17].selector = @selector(makeFromTreeWithEduStanfordNlpTreesTree:withEduStanfordNlpSemgraphSemanticGraphFactory_Mode:withEduStanfordNlpTreesGrammaticalStructure_Extras:withBoolean:);
  methods[18].selector = @selector(makeFromTreeWithEduStanfordNlpTreesTree:withEduStanfordNlpSemgraphSemanticGraphFactory_Mode:withBoolean:withBoolean:);
  methods[19].selector = @selector(makeFromTreeWithEduStanfordNlpTreesTree:withBoolean:);
  methods[20].selector = @selector(makeFromTreeWithEduStanfordNlpTreesTree:);
  methods[21].selector = @selector(allTypedDependenciesWithEduStanfordNlpTreesTree:withBoolean:);
  methods[22].selector = @selector(makeFromEdgesWithJavaLangIterable:);
  methods[23].selector = @selector(getVerticesFromEdgeSetWithJavaLangIterable:);
  methods[24].selector = @selector(makeFromVerticesWithEduStanfordNlpSemgraphSemanticGraph:withJavaUtilCollection:);
  methods[25].selector = @selector(duplicateKeepNodesWithEduStanfordNlpSemgraphSemanticGraph:);
  methods[26].selector = @selector(makeFromGraphsWithJavaUtilCollection:);
  methods[27].selector = @selector(deepCopyFromGraphsWithJavaUtilList:withJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INCLUDE_PUNCTUATION_DEPENDENCIES", "Z", .constantValue.asBOOL = EduStanfordNlpSemgraphSemanticGraphFactory_INCLUDE_PUNCTUATION_DEPENDENCIES, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "generateUncollapsedDependencies", "LEduStanfordNlpTreesTree;", "generateCollapsedDependencies", "generateCCProcessedDependencies", "LEduStanfordNlpTreesGrammaticalStructure;", "LEduStanfordNlpTreesGrammaticalStructure;LEduStanfordNlpTreesGrammaticalStructure_Extras;", "makeFromTree", "LEduStanfordNlpTreesTree;LEduStanfordNlpSemgraphSemanticGraphFactory_Mode;LEduStanfordNlpTreesGrammaticalStructure_Extras;ZLJavaUtilFunctionPredicate;Z", "(Ledu/stanford/nlp/trees/Tree;Ledu/stanford/nlp/semgraph/SemanticGraphFactory$Mode;Ledu/stanford/nlp/trees/GrammaticalStructure$Extras;ZLjava/util/function/Predicate<Ledu/stanford/nlp/trees/TypedDependency;>;Z)Ledu/stanford/nlp/semgraph/SemanticGraph;", "LEduStanfordNlpTreesTree;LEduStanfordNlpSemgraphSemanticGraphFactory_Mode;ZZLJavaUtilFunctionPredicate;", "(Ledu/stanford/nlp/trees/Tree;Ledu/stanford/nlp/semgraph/SemanticGraphFactory$Mode;ZZLjava/util/function/Predicate<Ledu/stanford/nlp/trees/TypedDependency;>;)Ledu/stanford/nlp/semgraph/SemanticGraph;", (void *)&EduStanfordNlpSemgraphSemanticGraphFactory__Annotations$0, "LEduStanfordNlpTreesGrammaticalStructure;LEduStanfordNlpSemgraphSemanticGraphFactory_Mode;LEduStanfordNlpTreesGrammaticalStructure_Extras;ZLJavaUtilFunctionPredicate;", "(Ledu/stanford/nlp/trees/GrammaticalStructure;Ledu/stanford/nlp/semgraph/SemanticGraphFactory$Mode;Ledu/stanford/nlp/trees/GrammaticalStructure$Extras;ZLjava/util/function/Predicate<Ledu/stanford/nlp/trees/TypedDependency;>;)Ledu/stanford/nlp/semgraph/SemanticGraph;", "LEduStanfordNlpTreesGrammaticalStructure;LEduStanfordNlpSemgraphSemanticGraphFactory_Mode;ZZLJavaUtilFunctionPredicate;", "(Ledu/stanford/nlp/trees/GrammaticalStructure;Ledu/stanford/nlp/semgraph/SemanticGraphFactory$Mode;ZZLjava/util/function/Predicate<Ledu/stanford/nlp/trees/TypedDependency;>;)Ledu/stanford/nlp/semgraph/SemanticGraph;", (void *)&EduStanfordNlpSemgraphSemanticGraphFactory__Annotations$1, "LEduStanfordNlpTreesTree;LEduStanfordNlpSemgraphSemanticGraphFactory_Mode;LEduStanfordNlpTreesGrammaticalStructure_Extras;LJavaUtilFunctionPredicate;", "(Ledu/stanford/nlp/trees/Tree;Ledu/stanford/nlp/semgraph/SemanticGraphFactory$Mode;Ledu/stanford/nlp/trees/GrammaticalStructure$Extras;Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/TypedDependency;>;)Ledu/stanford/nlp/semgraph/SemanticGraph;", "LEduStanfordNlpTreesTree;LEduStanfordNlpSemgraphSemanticGraphFactory_Mode;ZLJavaUtilFunctionPredicate;", "(Ledu/stanford/nlp/trees/Tree;Ledu/stanford/nlp/semgraph/SemanticGraphFactory$Mode;ZLjava/util/function/Predicate<Ledu/stanford/nlp/trees/TypedDependency;>;)Ledu/stanford/nlp/semgraph/SemanticGraph;", (void *)&EduStanfordNlpSemgraphSemanticGraphFactory__Annotations$2, "LEduStanfordNlpTreesTree;LEduStanfordNlpSemgraphSemanticGraphFactory_Mode;LEduStanfordNlpTreesGrammaticalStructure_Extras;Z", "LEduStanfordNlpTreesTree;LEduStanfordNlpSemgraphSemanticGraphFactory_Mode;ZZ", (void *)&EduStanfordNlpSemgraphSemanticGraphFactory__Annotations$3, "LEduStanfordNlpTreesTree;Z", "allTypedDependencies", "makeFromEdges", "LJavaLangIterable;", "(Ljava/lang/Iterable<Ledu/stanford/nlp/semgraph/SemanticGraphEdge;>;)Ledu/stanford/nlp/semgraph/SemanticGraph;", "getVerticesFromEdgeSet", "(Ljava/lang/Iterable<Ledu/stanford/nlp/semgraph/SemanticGraphEdge;>;)Ljava/util/Set<Ledu/stanford/nlp/ling/IndexedWord;>;", "makeFromVertices", "LEduStanfordNlpSemgraphSemanticGraph;LJavaUtilCollection;", "(Ledu/stanford/nlp/semgraph/SemanticGraph;Ljava/util/Collection<Ledu/stanford/nlp/ling/IndexedWord;>;)Ledu/stanford/nlp/semgraph/SemanticGraph;", "duplicateKeepNodes", "LEduStanfordNlpSemgraphSemanticGraph;", "makeFromGraphs", "LJavaUtilCollection;", "(Ljava/util/Collection<Ledu/stanford/nlp/semgraph/SemanticGraph;>;)Ledu/stanford/nlp/semgraph/SemanticGraph;", "deepCopyFromGraphs", "LJavaUtilList;LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/semgraph/SemanticGraph;>;Ljava/util/List<Ljava/lang/Integer;>;)Ledu/stanford/nlp/semgraph/SemanticGraph;", "LEduStanfordNlpSemgraphSemanticGraphFactory_Mode;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemanticGraphFactory = { "SemanticGraphFactory", "edu.stanford.nlp.semgraph", ptrTable, methods, fields, 7, 0x1, 28, 1, -1, 43, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemanticGraphFactory;
}

@end

void EduStanfordNlpSemgraphSemanticGraphFactory_init(EduStanfordNlpSemgraphSemanticGraphFactory *self) {
  NSObject_init(self);
}

EduStanfordNlpSemgraphSemanticGraphFactory *new_EduStanfordNlpSemgraphSemanticGraphFactory_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemanticGraphFactory, init)
}

EduStanfordNlpSemgraphSemanticGraphFactory *create_EduStanfordNlpSemgraphSemanticGraphFactory_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemanticGraphFactory, init)
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_generateUncollapsedDependenciesWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *tree) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_(tree, JreLoadEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, BASIC), JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE), true);
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_generateCollapsedDependenciesWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *tree) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_(tree, JreLoadEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, COLLAPSED), JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE), true);
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_generateCCProcessedDependenciesWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *tree) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_(tree, JreLoadEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, CCPROCESSED), JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE), true);
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_generateUncollapsedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_(EduStanfordNlpTreesGrammaticalStructure *gs) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesGrammaticalStructure_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_withJavaUtilFunctionPredicate_(gs, JreLoadEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, BASIC), JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE), true, nil);
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_generateCollapsedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_(EduStanfordNlpTreesGrammaticalStructure *gs) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesGrammaticalStructure_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_withJavaUtilFunctionPredicate_(gs, JreLoadEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, COLLAPSED), JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE), true, nil);
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_generateCCProcessedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_(EduStanfordNlpTreesGrammaticalStructure *gs) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesGrammaticalStructure_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_withJavaUtilFunctionPredicate_(gs, JreLoadEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, CCPROCESSED), JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE), true, nil);
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_generateUncollapsedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_withEduStanfordNlpTreesGrammaticalStructure_Extras_(EduStanfordNlpTreesGrammaticalStructure *gs, EduStanfordNlpTreesGrammaticalStructure_Extras *extras) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesGrammaticalStructure_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_withJavaUtilFunctionPredicate_(gs, JreLoadEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, BASIC), extras, true, nil);
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_generateCollapsedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_withEduStanfordNlpTreesGrammaticalStructure_Extras_(EduStanfordNlpTreesGrammaticalStructure *gs, EduStanfordNlpTreesGrammaticalStructure_Extras *extras) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesGrammaticalStructure_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_withJavaUtilFunctionPredicate_(gs, JreLoadEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, COLLAPSED), extras, true, nil);
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_generateCCProcessedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_withEduStanfordNlpTreesGrammaticalStructure_Extras_(EduStanfordNlpTreesGrammaticalStructure *gs, EduStanfordNlpTreesGrammaticalStructure_Extras *extras) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesGrammaticalStructure_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_withJavaUtilFunctionPredicate_(gs, JreLoadEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, CCPROCESSED), extras, true, nil);
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_withJavaUtilFunctionPredicate_withBoolean_(EduStanfordNlpTreesTree *tree, EduStanfordNlpSemgraphSemanticGraphFactory_Mode *mode, EduStanfordNlpTreesGrammaticalStructure_Extras *includeExtras, jboolean threadSafe, id<JavaUtilFunctionPredicate> filter, jboolean originalDependencies) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  EduStanfordNlpTreesGrammaticalStructure *gs;
  if (originalDependencies) {
    id<JavaUtilFunctionPredicate> wordFilt;
    {
      wordFilt = [new_EduStanfordNlpTreesPennTreebankLanguagePack_init() punctuationWordRejectFilter];
    }
    gs = new_EduStanfordNlpTreesEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_withEduStanfordNlpTreesHeadFinder_(tree, wordFilt, new_EduStanfordNlpTreesSemanticHeadFinder_initWithBoolean_(true));
  }
  else {
    id<JavaUtilFunctionPredicate> tagFilt;
    {
      tagFilt = [new_EduStanfordNlpTreesPennTreebankLanguagePack_init() punctuationTagRejectFilter];
    }
    gs = new_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_withEduStanfordNlpTreesHeadFinder_withBoolean_(tree, tagFilt, new_EduStanfordNlpTreesUniversalSemanticHeadFinder_initWithBoolean_(true), threadSafe);
  }
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesGrammaticalStructure_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_withJavaUtilFunctionPredicate_(gs, mode, includeExtras, threadSafe, filter);
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withBoolean_withBoolean_withJavaUtilFunctionPredicate_(EduStanfordNlpTreesTree *tree, EduStanfordNlpSemgraphSemanticGraphFactory_Mode *mode, jboolean includeExtras, jboolean threadSafe, id<JavaUtilFunctionPredicate> filter) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_withJavaUtilFunctionPredicate_withBoolean_(tree, mode, includeExtras ? JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, MAXIMAL) : JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE), threadSafe, filter, false);
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesGrammaticalStructure_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_withJavaUtilFunctionPredicate_(EduStanfordNlpTreesGrammaticalStructure *gs, EduStanfordNlpSemgraphSemanticGraphFactory_Mode *mode, EduStanfordNlpTreesGrammaticalStructure_Extras *includeExtras, jboolean threadSafe, id<JavaUtilFunctionPredicate> filter) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  id<JavaUtilCollection> deps;
  switch ([mode ordinal]) {
    case EduStanfordNlpSemgraphSemanticGraphFactory_Mode_Enum_COLLAPSED_TREE:
    deps = [((EduStanfordNlpTreesGrammaticalStructure *) nil_chk(gs)) typedDependenciesCollapsedTree];
    break;
    case EduStanfordNlpSemgraphSemanticGraphFactory_Mode_Enum_COLLAPSED:
    deps = [((EduStanfordNlpTreesGrammaticalStructure *) nil_chk(gs)) typedDependenciesCollapsedWithEduStanfordNlpTreesGrammaticalStructure_Extras:includeExtras];
    break;
    case EduStanfordNlpSemgraphSemanticGraphFactory_Mode_Enum_CCPROCESSED:
    deps = [((EduStanfordNlpTreesGrammaticalStructure *) nil_chk(gs)) typedDependenciesCCprocessedWithEduStanfordNlpTreesGrammaticalStructure_Extras:includeExtras];
    break;
    case EduStanfordNlpSemgraphSemanticGraphFactory_Mode_Enum_BASIC:
    deps = [((EduStanfordNlpTreesGrammaticalStructure *) nil_chk(gs)) typedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_Extras:includeExtras];
    break;
    default:
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"Unknown mode ", mode));
  }
  if (filter != nil) {
    id<JavaUtilList> depsFiltered = EduStanfordNlpUtilGenerics_newArrayList();
    for (EduStanfordNlpTreesTypedDependency * __strong td in nil_chk(deps)) {
      if ([filter testWithId:td]) {
        [((id<JavaUtilList>) nil_chk(depsFiltered)) addWithId:td];
      }
    }
    deps = depsFiltered;
  }
  return new_EduStanfordNlpSemgraphSemanticGraph_initWithJavaUtilCollection_(deps);
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesGrammaticalStructure_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withBoolean_withBoolean_withJavaUtilFunctionPredicate_(EduStanfordNlpTreesGrammaticalStructure *tree, EduStanfordNlpSemgraphSemanticGraphFactory_Mode *mode, jboolean includeExtras, jboolean threadSafe, id<JavaUtilFunctionPredicate> filter) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesGrammaticalStructure_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_withJavaUtilFunctionPredicate_(tree, mode, includeExtras ? JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, MAXIMAL) : JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE), threadSafe, filter);
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesGrammaticalStructure_(EduStanfordNlpTreesGrammaticalStructure *structure) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesGrammaticalStructure_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_withJavaUtilFunctionPredicate_(structure, JreLoadEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, BASIC), JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE), false, nil);
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withJavaUtilFunctionPredicate_(EduStanfordNlpTreesTree *tree, EduStanfordNlpSemgraphSemanticGraphFactory_Mode *mode, EduStanfordNlpTreesGrammaticalStructure_Extras *includeExtras, id<JavaUtilFunctionPredicate> filter) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_withJavaUtilFunctionPredicate_withBoolean_(tree, mode, includeExtras, false, filter, false);
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withBoolean_withJavaUtilFunctionPredicate_(EduStanfordNlpTreesTree *tree, EduStanfordNlpSemgraphSemanticGraphFactory_Mode *mode, jboolean includeExtras, id<JavaUtilFunctionPredicate> filter) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withJavaUtilFunctionPredicate_(tree, mode, includeExtras ? JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, MAXIMAL) : JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE), filter);
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_(EduStanfordNlpTreesTree *tree, EduStanfordNlpSemgraphSemanticGraphFactory_Mode *mode, EduStanfordNlpTreesGrammaticalStructure_Extras *includeExtras, jboolean threadSafe) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_withJavaUtilFunctionPredicate_withBoolean_(tree, mode, includeExtras, threadSafe, nil, false);
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withBoolean_withBoolean_(EduStanfordNlpTreesTree *tree, EduStanfordNlpSemgraphSemanticGraphFactory_Mode *mode, jboolean includeExtras, jboolean threadSafe) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_(tree, mode, includeExtras ? JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, MAXIMAL) : JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE), threadSafe);
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withBoolean_(EduStanfordNlpTreesTree *tree, jboolean collapse) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_withJavaUtilFunctionPredicate_withBoolean_(tree, (collapse) ? JreLoadEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, COLLAPSED) : JreLoadEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, BASIC), JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE), false, nil, false);
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *tree) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withBoolean_withJavaUtilFunctionPredicate_withBoolean_(tree, JreLoadEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, COLLAPSED), JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE), false, nil, false);
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_allTypedDependenciesWithEduStanfordNlpTreesTree_withBoolean_(EduStanfordNlpTreesTree *tree, jboolean collapse) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  return EduStanfordNlpSemgraphSemanticGraphFactory_makeFromTreeWithEduStanfordNlpTreesTree_withEduStanfordNlpSemgraphSemanticGraphFactory_Mode_withEduStanfordNlpTreesGrammaticalStructure_Extras_withJavaUtilFunctionPredicate_(tree, (collapse) ? JreLoadEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, COLLAPSED) : JreLoadEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, BASIC), JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, MAXIMAL), nil);
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_makeFromEdgesWithJavaLangIterable_(id<JavaLangIterable> edges) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  EduStanfordNlpSemgraphSemanticGraph *sg = new_EduStanfordNlpSemgraphSemanticGraph_init();
  id<JavaUtilCollection> vertices = EduStanfordNlpSemgraphSemanticGraphFactory_getVerticesFromEdgeSetWithJavaLangIterable_(edges);
  for (EduStanfordNlpLingIndexedWord * __strong vertex in nil_chk(vertices)) {
    [sg addVertexWithEduStanfordNlpLingIndexedWord:vertex];
  }
  for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong edge in nil_chk(edges)) {
    (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:[((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge)) getSource] withEduStanfordNlpLingIndexedWord:[edge getTarget] withEduStanfordNlpTreesGrammaticalRelation:[edge getRelation] withDouble:[edge getWeight] withBoolean:[edge isExtra]];
  }
  [sg resetRoots];
  return sg;
}

id<JavaUtilSet> EduStanfordNlpSemgraphSemanticGraphFactory_getVerticesFromEdgeSetWithJavaLangIterable_(id<JavaLangIterable> edges) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  id<JavaUtilSet> retSet = EduStanfordNlpUtilGenerics_newHashSet();
  for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong edge in nil_chk(edges)) {
    [((id<JavaUtilSet>) nil_chk(retSet)) addWithId:[((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge)) getGovernor]];
    [retSet addWithId:[edge getDependent]];
  }
  return retSet;
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_makeFromVerticesWithEduStanfordNlpSemgraphSemanticGraph_withJavaUtilCollection_(EduStanfordNlpSemgraphSemanticGraph *sg, id<JavaUtilCollection> nodes) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  id<JavaUtilList> edgesToAdd = new_JavaUtilArrayList_init();
  id<JavaUtilList> nodesToAdd = new_JavaUtilArrayList_initWithJavaUtilCollection_(nodes);
  for (EduStanfordNlpLingIndexedWord * __strong nodeA in nil_chk(nodes)) {
    for (EduStanfordNlpLingIndexedWord * __strong nodeB in nodes) {
      if (nodeA != nodeB) {
        id<JavaUtilList> edges = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) getShortestDirectedPathEdgesWithEduStanfordNlpLingIndexedWord:nodeA withEduStanfordNlpLingIndexedWord:nodeB];
        if (edges != nil) {
          [edgesToAdd addAllWithJavaUtilCollection:edges];
          for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong edge in edges) {
            EduStanfordNlpLingIndexedWord *gov = [((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge)) getGovernor];
            EduStanfordNlpLingIndexedWord *dep = [edge getDependent];
            if (gov != nil && ![nodesToAdd containsWithId:gov]) {
              [nodesToAdd addWithId:gov];
            }
            if (dep != nil && ![nodesToAdd containsWithId:dep]) {
              [nodesToAdd addWithId:dep];
            }
          }
        }
      }
    }
  }
  EduStanfordNlpSemgraphSemanticGraph *retSg = new_EduStanfordNlpSemgraphSemanticGraph_init();
  for (EduStanfordNlpLingIndexedWord * __strong node in nodesToAdd) {
    [retSg addVertexWithEduStanfordNlpLingIndexedWord:node];
  }
  for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong edge in edgesToAdd) {
    (void) [retSg addEdgeWithEduStanfordNlpLingIndexedWord:[((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge)) getGovernor] withEduStanfordNlpLingIndexedWord:[edge getDependent] withEduStanfordNlpTreesGrammaticalRelation:[edge getRelation] withDouble:[edge getWeight] withBoolean:[edge isExtra]];
  }
  [retSg resetRoots];
  return retSg;
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_duplicateKeepNodesWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  EduStanfordNlpSemgraphSemanticGraph *retSg = new_EduStanfordNlpSemgraphSemanticGraph_init();
  for (EduStanfordNlpLingIndexedWord * __strong node in nil_chk([((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) vertexSet])) {
    [retSg addVertexWithEduStanfordNlpLingIndexedWord:node];
  }
  [retSg setRootsWithJavaUtilCollection:[sg getRoots]];
  for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong edge in nil_chk([sg edgeIterable])) {
    (void) [retSg addEdgeWithEduStanfordNlpLingIndexedWord:[((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge)) getGovernor] withEduStanfordNlpLingIndexedWord:[edge getDependent] withEduStanfordNlpTreesGrammaticalRelation:[edge getRelation] withDouble:[edge getWeight] withBoolean:[edge isExtra]];
  }
  return retSg;
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_makeFromGraphsWithJavaUtilCollection_(id<JavaUtilCollection> sgList) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  EduStanfordNlpSemgraphSemanticGraph *sg = new_EduStanfordNlpSemgraphSemanticGraph_init();
  id<JavaUtilCollection> newRoots = EduStanfordNlpUtilGenerics_newHashSet();
  for (EduStanfordNlpSemgraphSemanticGraph * __strong currSg in nil_chk(sgList)) {
    [((id<JavaUtilCollection>) nil_chk(newRoots)) addAllWithJavaUtilCollection:[((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(currSg)) getRoots]];
    for (EduStanfordNlpLingIndexedWord * __strong currVertex in nil_chk([currSg vertexSet])) [sg addVertexWithEduStanfordNlpLingIndexedWord:currVertex];
    for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong currEdge in nil_chk([currSg edgeIterable])) (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:[((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(currEdge)) getGovernor] withEduStanfordNlpLingIndexedWord:[currEdge getDependent] withEduStanfordNlpTreesGrammaticalRelation:[currEdge getRelation] withDouble:[currEdge getWeight] withBoolean:[currEdge isExtra]];
  }
  [sg setRootsWithJavaUtilCollection:newRoots];
  return sg;
}

EduStanfordNlpSemgraphSemanticGraph *EduStanfordNlpSemgraphSemanticGraphFactory_deepCopyFromGraphsWithJavaUtilList_withJavaUtilList_(id<JavaUtilList> graphs, id<JavaUtilList> lengths) {
  EduStanfordNlpSemgraphSemanticGraphFactory_initialize();
  EduStanfordNlpSemgraphSemanticGraph *newGraph = new_EduStanfordNlpSemgraphSemanticGraph_init();
  id<JavaUtilMap> newWords = EduStanfordNlpUtilGenerics_newHashMap();
  id<JavaUtilList> newRoots = new_JavaUtilArrayList_init();
  jint vertexOffset = 0;
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(graphs)) size]; ++i) {
    EduStanfordNlpSemgraphSemanticGraph *graph = [graphs getWithInt:i];
    for (EduStanfordNlpLingIndexedWord * __strong vertex in nil_chk([((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(graph)) vertexSet])) {
      EduStanfordNlpLingIndexedWord *newVertex = new_EduStanfordNlpLingIndexedWord_initWithEduStanfordNlpLingLabel_(vertex);
      [newVertex setIndexWithInt:[((EduStanfordNlpLingIndexedWord *) nil_chk(vertex)) index] + vertexOffset];
      [newGraph addVertexWithEduStanfordNlpLingIndexedWord:newVertex];
      (void) [((id<JavaUtilMap>) nil_chk(newWords)) putWithId:JavaLangInteger_valueOfWithInt_([newVertex index]) withId:newVertex];
    }
    for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong edge in nil_chk([graph edgeIterable])) {
      EduStanfordNlpLingIndexedWord *gov = [((id<JavaUtilMap>) nil_chk(newWords)) getWithId:JavaLangInteger_valueOfWithInt_([((EduStanfordNlpLingIndexedWord *) nil_chk([((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge)) getGovernor])) index] + vertexOffset)];
      EduStanfordNlpLingIndexedWord *dep = [newWords getWithId:JavaLangInteger_valueOfWithInt_([((EduStanfordNlpLingIndexedWord *) nil_chk([edge getDependent])) index] + vertexOffset)];
      if (gov == nil || dep == nil) {
        @throw new_JavaLangAssertionError_initWithId_(@"Counting problem (or broken edge)");
      }
      (void) [newGraph addEdgeWithEduStanfordNlpLingIndexedWord:gov withEduStanfordNlpLingIndexedWord:dep withEduStanfordNlpTreesGrammaticalRelation:[edge getRelation] withDouble:[edge getWeight] withBoolean:[edge isExtra]];
    }
    for (EduStanfordNlpLingIndexedWord * __strong root in nil_chk([graph getRoots])) {
      [newRoots addWithId:[((id<JavaUtilMap>) nil_chk(newWords)) getWithId:JavaLangInteger_valueOfWithInt_([((EduStanfordNlpLingIndexedWord *) nil_chk(root)) index] + vertexOffset)]];
    }
    vertexOffset += [((JavaLangInteger *) nil_chk([((id<JavaUtilList>) nil_chk(lengths)) getWithInt:i])) intValue];
  }
  [newGraph setRootsWithJavaUtilCollection:newRoots];
  return newGraph;
}

IOSObjectArray *EduStanfordNlpSemgraphSemanticGraphFactory__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *EduStanfordNlpSemgraphSemanticGraphFactory__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *EduStanfordNlpSemgraphSemanticGraphFactory__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *EduStanfordNlpSemgraphSemanticGraphFactory__Annotations$3() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpSemgraphSemanticGraphFactory)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpSemgraphSemanticGraphFactory_Mode)

EduStanfordNlpSemgraphSemanticGraphFactory_Mode *EduStanfordNlpSemgraphSemanticGraphFactory_Mode_values_[4];

@implementation EduStanfordNlpSemgraphSemanticGraphFactory_Mode

+ (IOSObjectArray *)values {
  return EduStanfordNlpSemgraphSemanticGraphFactory_Mode_values();
}

+ (EduStanfordNlpSemgraphSemanticGraphFactory_Mode *)valueOfWithNSString:(NSString *)name {
  return EduStanfordNlpSemgraphSemanticGraphFactory_Mode_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LEduStanfordNlpSemgraphSemanticGraphFactory_Mode;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemanticGraphFactory_Mode;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "COLLAPSED_TREE", "LEduStanfordNlpSemgraphSemanticGraphFactory_Mode;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "COLLAPSED", "LEduStanfordNlpSemgraphSemanticGraphFactory_Mode;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "CCPROCESSED", "LEduStanfordNlpSemgraphSemanticGraphFactory_Mode;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "BASIC", "LEduStanfordNlpSemgraphSemanticGraphFactory_Mode;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, COLLAPSED_TREE), &JreEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, COLLAPSED), &JreEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, CCPROCESSED), &JreEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, BASIC), "LEduStanfordNlpSemgraphSemanticGraphFactory;", "Ljava/lang/Enum<Ledu/stanford/nlp/semgraph/SemanticGraphFactory$Mode;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemanticGraphFactory_Mode = { "Mode", "edu.stanford.nlp.semgraph", ptrTable, methods, fields, 7, 0x4019, 2, 4, 6, -1, -1, 7, -1 };
  return &_EduStanfordNlpSemgraphSemanticGraphFactory_Mode;
}

+ (void)initialize {
  if (self == [EduStanfordNlpSemgraphSemanticGraphFactory_Mode class]) {
    JreEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, COLLAPSED_TREE) = new_EduStanfordNlpSemgraphSemanticGraphFactory_Mode_initWithNSString_withInt_(@"COLLAPSED_TREE", 0);
    JreEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, COLLAPSED) = new_EduStanfordNlpSemgraphSemanticGraphFactory_Mode_initWithNSString_withInt_(@"COLLAPSED", 1);
    JreEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, CCPROCESSED) = new_EduStanfordNlpSemgraphSemanticGraphFactory_Mode_initWithNSString_withInt_(@"CCPROCESSED", 2);
    JreEnum(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, BASIC) = new_EduStanfordNlpSemgraphSemanticGraphFactory_Mode_initWithNSString_withInt_(@"BASIC", 3);
    J2OBJC_SET_INITIALIZED(EduStanfordNlpSemgraphSemanticGraphFactory_Mode)
  }
}

@end

void EduStanfordNlpSemgraphSemanticGraphFactory_Mode_initWithNSString_withInt_(EduStanfordNlpSemgraphSemanticGraphFactory_Mode *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

EduStanfordNlpSemgraphSemanticGraphFactory_Mode *new_EduStanfordNlpSemgraphSemanticGraphFactory_Mode_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemanticGraphFactory_Mode, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *EduStanfordNlpSemgraphSemanticGraphFactory_Mode_values() {
  EduStanfordNlpSemgraphSemanticGraphFactory_Mode_initialize();
  return [IOSObjectArray arrayWithObjects:EduStanfordNlpSemgraphSemanticGraphFactory_Mode_values_ count:4 type:EduStanfordNlpSemgraphSemanticGraphFactory_Mode_class_()];
}

EduStanfordNlpSemgraphSemanticGraphFactory_Mode *EduStanfordNlpSemgraphSemanticGraphFactory_Mode_valueOfWithNSString_(NSString *name) {
  EduStanfordNlpSemgraphSemanticGraphFactory_Mode_initialize();
  for (int i = 0; i < 4; i++) {
    EduStanfordNlpSemgraphSemanticGraphFactory_Mode *e = EduStanfordNlpSemgraphSemanticGraphFactory_Mode_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

EduStanfordNlpSemgraphSemanticGraphFactory_Mode *EduStanfordNlpSemgraphSemanticGraphFactory_Mode_fromOrdinal(NSUInteger ordinal) {
  EduStanfordNlpSemgraphSemanticGraphFactory_Mode_initialize();
  if (ordinal >= 4) {
    return nil;
  }
  return EduStanfordNlpSemgraphSemanticGraphFactory_Mode_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpSemgraphSemanticGraphFactory_Mode)
