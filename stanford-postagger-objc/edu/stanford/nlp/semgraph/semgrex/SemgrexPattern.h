//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/semgraph/semgrex/SemgrexPattern.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexSemgrexPattern")
#ifdef RESTRICT_EduStanfordNlpSemgraphSemgrexSemgrexPattern
#define INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexSemgrexPattern 0
#else
#define INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexSemgrexPattern 1
#endif
#undef RESTRICT_EduStanfordNlpSemgraphSemgrexSemgrexPattern

#if !defined (EduStanfordNlpSemgraphSemgrexSemgrexPattern_) && (INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexSemgrexPattern || defined(INCLUDE_EduStanfordNlpSemgraphSemgrexSemgrexPattern))
#define EduStanfordNlpSemgraphSemgrexSemgrexPattern_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class EduStanfordNlpLingIndexedWord;
@class EduStanfordNlpSemgraphSemanticGraph;
@class EduStanfordNlpSemgraphSemgrexAlignment;
@class EduStanfordNlpSemgraphSemgrexEnv;
@class EduStanfordNlpSemgraphSemgrexSemgrexMatcher;
@class EduStanfordNlpSemgraphSemgrexVariableStrings;
@class IOSObjectArray;
@class JavaIoPrintStream;
@class JavaIoPrintWriter;
@protocol JavaUtilList;
@protocol JavaUtilMap;

@interface EduStanfordNlpSemgraphSemgrexSemgrexPattern : NSObject < JavaIoSerializable > {
 @public
  EduStanfordNlpSemgraphSemgrexEnv *env_;
}

#pragma mark Public

+ (EduStanfordNlpSemgraphSemgrexSemgrexPattern *)compileWithNSString:(NSString *)semgrex;

+ (EduStanfordNlpSemgraphSemgrexSemgrexPattern *)compileWithNSString:(NSString *)semgrex
                                withEduStanfordNlpSemgraphSemgrexEnv:(EduStanfordNlpSemgraphSemgrexEnv *)env;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

+ (void)help;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (EduStanfordNlpSemgraphSemgrexSemgrexMatcher *)matcherWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

- (EduStanfordNlpSemgraphSemgrexSemgrexMatcher *)matcherWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)hypGraph
                                                     withEduStanfordNlpSemgraphSemgrexAlignment:(EduStanfordNlpSemgraphSemgrexAlignment *)alignment
                                                        withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)txtGraph;

- (EduStanfordNlpSemgraphSemgrexSemgrexMatcher *)matcherWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)hypGraph
                                                     withEduStanfordNlpSemgraphSemgrexAlignment:(EduStanfordNlpSemgraphSemgrexAlignment *)alignment
                                                        withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)txtGraph
                                                                                    withBoolean:(jboolean)ignoreCase;

- (EduStanfordNlpSemgraphSemgrexSemgrexMatcher *)matcherWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                                                                    withBoolean:(jboolean)ignoreCase;

- (EduStanfordNlpSemgraphSemgrexSemgrexMatcher *)matcherWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                                                                withJavaUtilMap:(id<JavaUtilMap>)variables;

- (NSString *)pattern;

- (void)prettyPrint;

- (void)prettyPrintWithJavaIoPrintStream:(JavaIoPrintStream *)ps;

- (void)prettyPrintWithJavaIoPrintWriter:(JavaIoPrintWriter *)pw;

- (void)setEnvWithEduStanfordNlpSemgraphSemgrexEnv:(EduStanfordNlpSemgraphSemgrexEnv *)env;

- (NSString *)description;

- (NSString *)toStringWithBoolean:(jboolean)hasPrecedence;

#pragma mark Package-Private

- (instancetype)init;

- (id<JavaUtilList>)getChildren;

- (jboolean)isNegated;

- (jboolean)isOptional;

- (NSString *)localString;

- (void)makeOptional;

- (EduStanfordNlpSemgraphSemgrexSemgrexMatcher *)matcherWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                                     withEduStanfordNlpSemgraphSemgrexAlignment:(EduStanfordNlpSemgraphSemgrexAlignment *)alignment
                                                        withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg_align
                                                                                    withBoolean:(jboolean)hypToText
                                                              withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                                                                withJavaUtilMap:(id<JavaUtilMap>)namesToNodes
                                                                                withJavaUtilMap:(id<JavaUtilMap>)namesToRelations
                                               withEduStanfordNlpSemgraphSemgrexVariableStrings:(EduStanfordNlpSemgraphSemgrexVariableStrings *)variableStrings
                                                                                    withBoolean:(jboolean)ignoreCase;

- (EduStanfordNlpSemgraphSemgrexSemgrexMatcher *)matcherWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                                              withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                                                                withJavaUtilMap:(id<JavaUtilMap>)namesToNodes
                                                                                withJavaUtilMap:(id<JavaUtilMap>)namesToRelations
                                               withEduStanfordNlpSemgraphSemgrexVariableStrings:(EduStanfordNlpSemgraphSemgrexVariableStrings *)variableStrings
                                                                                    withBoolean:(jboolean)ignoreCase;

- (void)negate;

- (void)setChildWithEduStanfordNlpSemgraphSemgrexSemgrexPattern:(EduStanfordNlpSemgraphSemgrexSemgrexPattern *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexSemgrexPattern)

J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexSemgrexPattern, env_, EduStanfordNlpSemgraphSemgrexEnv *)

inline NSString *EduStanfordNlpSemgraphSemgrexSemgrexPattern_get_PATTERN();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpSemgraphSemgrexSemgrexPattern_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpSemgraphSemgrexSemgrexPattern, PATTERN, NSString *)

inline NSString *EduStanfordNlpSemgraphSemgrexSemgrexPattern_get_TREE_FILE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpSemgraphSemgrexSemgrexPattern_TREE_FILE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpSemgraphSemgrexSemgrexPattern, TREE_FILE, NSString *)

inline NSString *EduStanfordNlpSemgraphSemgrexSemgrexPattern_get_MODE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpSemgraphSemgrexSemgrexPattern_MODE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpSemgraphSemgrexSemgrexPattern, MODE, NSString *)

inline NSString *EduStanfordNlpSemgraphSemgrexSemgrexPattern_get_DEFAULT_MODE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpSemgraphSemgrexSemgrexPattern_DEFAULT_MODE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpSemgraphSemgrexSemgrexPattern, DEFAULT_MODE, NSString *)

inline NSString *EduStanfordNlpSemgraphSemgrexSemgrexPattern_get_EXTRAS();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpSemgraphSemgrexSemgrexPattern_EXTRAS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpSemgraphSemgrexSemgrexPattern, EXTRAS, NSString *)

inline NSString *EduStanfordNlpSemgraphSemgrexSemgrexPattern_get_CONLLU_FILE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpSemgraphSemgrexSemgrexPattern_CONLLU_FILE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpSemgraphSemgrexSemgrexPattern, CONLLU_FILE, NSString *)

inline NSString *EduStanfordNlpSemgraphSemgrexSemgrexPattern_get_OUTPUT_FORMAT_OPTION();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpSemgraphSemgrexSemgrexPattern_OUTPUT_FORMAT_OPTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpSemgraphSemgrexSemgrexPattern, OUTPUT_FORMAT_OPTION, NSString *)

inline NSString *EduStanfordNlpSemgraphSemgrexSemgrexPattern_get_DEFAULT_OUTPUT_FORMAT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpSemgraphSemgrexSemgrexPattern_DEFAULT_OUTPUT_FORMAT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpSemgraphSemgrexSemgrexPattern, DEFAULT_OUTPUT_FORMAT, NSString *)

FOUNDATION_EXPORT void EduStanfordNlpSemgraphSemgrexSemgrexPattern_init(EduStanfordNlpSemgraphSemgrexSemgrexPattern *self);

FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexPattern_compileWithNSString_withEduStanfordNlpSemgraphSemgrexEnv_(NSString *semgrex, EduStanfordNlpSemgraphSemgrexEnv *env);

FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexPattern_compileWithNSString_(NSString *semgrex);

FOUNDATION_EXPORT void EduStanfordNlpSemgraphSemgrexSemgrexPattern_help();

FOUNDATION_EXPORT void EduStanfordNlpSemgraphSemgrexSemgrexPattern_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpSemgraphSemgrexSemgrexPattern)

#endif

#if !defined (EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat_) && (INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexSemgrexPattern || defined(INCLUDE_EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat))
#define EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat_Enum) {
  EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat_Enum_LIST = 0,
  EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat_Enum_OFFSET = 1,
};

@interface EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat : JavaLangEnum < NSCopying >

#pragma mark Public

+ (EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat *EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat_values_[];

inline EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat *EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat_get_LIST();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat, LIST)

inline EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat *EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat_get_OFFSET();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat, OFFSET)

FOUNDATION_EXPORT IOSObjectArray *EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat_values();

FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat *EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat *EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpSemgraphSemgrexSemgrexPattern_OutputFormat)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexSemgrexPattern")
