//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/semgraph/semgrex/GraphRelation.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexGraphRelation")
#ifdef RESTRICT_EduStanfordNlpSemgraphSemgrexGraphRelation
#define INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexGraphRelation 0
#else
#define INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexGraphRelation 1
#endif
#undef RESTRICT_EduStanfordNlpSemgraphSemgrexGraphRelation
#ifdef INCLUDE_EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT
#define INCLUDE_EduStanfordNlpSemgraphSemgrexGraphRelation 1
#endif

#if !defined (EduStanfordNlpSemgraphSemgrexGraphRelation_) && (INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexGraphRelation || defined(INCLUDE_EduStanfordNlpSemgraphSemgrexGraphRelation))
#define EduStanfordNlpSemgraphSemgrexGraphRelation_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class EduStanfordNlpLingIndexedWord;
@class EduStanfordNlpSemgraphSemanticGraph;
@protocol JavaUtilFunctionPredicate;
@protocol JavaUtilIterator;

@interface EduStanfordNlpSemgraphSemgrexGraphRelation : NSObject < JavaIoSerializable > {
 @public
  NSString *symbol_;
  id<JavaUtilFunctionPredicate> type_;
  NSString *rawType_;
  NSString *name_;
}

#pragma mark Public

- (jboolean)isEqual:(id)o;

- (NSString *)getName;

- (id<JavaUtilFunctionPredicate>)getPatternWithNSString:(NSString *)relnType;

+ (EduStanfordNlpSemgraphSemgrexGraphRelation *)getRelationWithNSString:(NSString *)reln
                                                           withNSString:(NSString *)type
                                                                withInt:(jint)num
                                                                withInt:(jint)num2
                                                           withNSString:(NSString *)name;

+ (EduStanfordNlpSemgraphSemgrexGraphRelation *)getRelationWithNSString:(NSString *)reln
                                                           withNSString:(NSString *)type
                                                                withInt:(jint)num
                                                           withNSString:(NSString *)name;

+ (EduStanfordNlpSemgraphSemgrexGraphRelation *)getRelationWithNSString:(NSString *)reln
                                                           withNSString:(NSString *)type
                                                           withNSString:(NSString *)name;

- (NSUInteger)hash;

+ (jboolean)isKnownRelationWithNSString:(NSString *)reln;

- (NSString *)description;

#pragma mark Package-Private

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)n1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)n2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation)

J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation, symbol_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation, type_, id<JavaUtilFunctionPredicate>)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation, rawType_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation, name_, NSString *)

inline EduStanfordNlpSemgraphSemgrexGraphRelation *EduStanfordNlpSemgraphSemgrexGraphRelation_get_ROOT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexGraphRelation *EduStanfordNlpSemgraphSemgrexGraphRelation_ROOT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpSemgraphSemgrexGraphRelation, ROOT, EduStanfordNlpSemgraphSemgrexGraphRelation *)

inline EduStanfordNlpSemgraphSemgrexGraphRelation *EduStanfordNlpSemgraphSemgrexGraphRelation_get_ITERATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexGraphRelation *EduStanfordNlpSemgraphSemgrexGraphRelation_ITERATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpSemgraphSemgrexGraphRelation, ITERATOR, EduStanfordNlpSemgraphSemgrexGraphRelation *)

inline EduStanfordNlpSemgraphSemgrexGraphRelation *EduStanfordNlpSemgraphSemgrexGraphRelation_get_ALIGNED_ROOT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexGraphRelation *EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNED_ROOT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpSemgraphSemgrexGraphRelation, ALIGNED_ROOT, EduStanfordNlpSemgraphSemgrexGraphRelation *)

FOUNDATION_EXPORT jboolean EduStanfordNlpSemgraphSemgrexGraphRelation_isKnownRelationWithNSString_(NSString *reln);

FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexGraphRelation *EduStanfordNlpSemgraphSemgrexGraphRelation_getRelationWithNSString_withNSString_withNSString_(NSString *reln, NSString *type, NSString *name);

FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexGraphRelation *EduStanfordNlpSemgraphSemgrexGraphRelation_getRelationWithNSString_withNSString_withInt_withNSString_(NSString *reln, NSString *type, jint num, NSString *name);

FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexGraphRelation *EduStanfordNlpSemgraphSemgrexGraphRelation_getRelationWithNSString_withNSString_withInt_withInt_withNSString_(NSString *reln, NSString *type, jint num, jint num2, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpSemgraphSemgrexGraphRelation)

#endif

#if !defined (EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_) && (INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexGraphRelation || defined(INCLUDE_EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT))
#define EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_

@class EduStanfordNlpLingIndexedWord;
@class EduStanfordNlpSemgraphSemanticGraph;
@class EduStanfordNlpSemgraphSemgrexAlignment;
@class EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator;
@protocol JavaUtilIterator;

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT : EduStanfordNlpSemgraphSemgrexGraphRelation

#pragma mark Package-Private

- (instancetype)init;

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

- (void)setAlignmentWithEduStanfordNlpSemgraphSemgrexAlignment:(EduStanfordNlpSemgraphSemgrexAlignment *)alignment
                                                   withBoolean:(jboolean)hypToText
withEduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator:(EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator *)itr;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT)

FOUNDATION_EXPORT void EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_init(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT *self);

FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT *new_EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT *create_EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT)

#endif

#if !defined (EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator_) && (INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexGraphRelation || defined(INCLUDE_EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator))
#define EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator_

#define RESTRICT_JavaUtilIterator 1
#define INCLUDE_JavaUtilIterator 1
#include "java/util/Iterator.h"

@class EduStanfordNlpLingIndexedWord;
@protocol JavaUtilFunctionConsumer;

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator : NSObject < JavaUtilIterator > {
 @public
  EduStanfordNlpLingIndexedWord *next_;
  NSString *relation_;
}

#pragma mark Public

- (instancetype)init;

- (jboolean)hasNext;

- (EduStanfordNlpLingIndexedWord *)next;

- (void)remove;

#pragma mark Package-Private

- (void)advance;

- (NSString *)getReln;

- (void)initialize__ OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator)

J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator, next_, EduStanfordNlpLingIndexedWord *)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator, relation_, NSString *)

FOUNDATION_EXPORT void EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator_init(EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator *self);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexGraphRelation")
