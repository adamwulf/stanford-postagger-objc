//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/semgraph/semgrex/VariableStrings.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/semgraph/semgrex/VariableStrings.h"
#include "edu/stanford/nlp/stats/IntCounter.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "java/lang/RuntimeException.h"
#include "java/util/Map.h"

@interface EduStanfordNlpSemgraphSemgrexVariableStrings () {
 @public
  id<JavaUtilMap> varsToStrings_;
  EduStanfordNlpStatsIntCounter *numVarsSet_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexVariableStrings, varsToStrings_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexVariableStrings, numVarsSet_, EduStanfordNlpStatsIntCounter *)

@implementation EduStanfordNlpSemgraphSemgrexVariableStrings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpSemgraphSemgrexVariableStrings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)isSetWithId:(id)o {
  return [((EduStanfordNlpStatsIntCounter *) nil_chk(numVarsSet_)) getCountWithId:o] == 1;
}

- (void)setVarWithId:(id)var
        withNSString:(NSString *)string {
  NSString *oldString = [((id<JavaUtilMap>) nil_chk(varsToStrings_)) putWithId:var withId:string];
  if (oldString != nil && ![oldString isEqual:string]) @throw new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$$$", @"Error -- can't setVar to a different string -- old: ", oldString, @" new: ", string));
  [((EduStanfordNlpStatsIntCounter *) nil_chk(numVarsSet_)) incrementCountWithId:var];
}

- (void)unsetVarWithId:(id)var {
  if ([((EduStanfordNlpStatsIntCounter *) nil_chk(numVarsSet_)) getCountWithId:var] > 0) [((EduStanfordNlpStatsIntCounter *) nil_chk(numVarsSet_)) decrementCountWithId:var];
  if ([((EduStanfordNlpStatsIntCounter *) nil_chk(numVarsSet_)) getCountWithId:var] == 0) (void) [((id<JavaUtilMap>) nil_chk(varsToStrings_)) putWithId:var withId:nil];
}

- (NSString *)getStringWithId:(id)var {
  return [((id<JavaUtilMap>) nil_chk(varsToStrings_)) getWithId:var];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isSetWithId:);
  methods[2].selector = @selector(setVarWithId:withNSString:);
  methods[3].selector = @selector(unsetVarWithId:);
  methods[4].selector = @selector(getStringWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "varsToStrings_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 6, -1 },
    { "numVarsSet_", "LEduStanfordNlpStatsIntCounter;", .constantValue.asLong = 0, 0x2, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "isSet", "LNSObject;", "setVar", "LNSObject;LNSString;", "unsetVar", "getString", "Ljava/util/Map<Ljava/lang/Object;Ljava/lang/String;>;", "Ledu/stanford/nlp/stats/IntCounter<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexVariableStrings = { "VariableStrings", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0x0, 5, 2, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexVariableStrings;
}

@end

void EduStanfordNlpSemgraphSemgrexVariableStrings_init(EduStanfordNlpSemgraphSemgrexVariableStrings *self) {
  NSObject_init(self);
  self->varsToStrings_ = EduStanfordNlpUtilGenerics_newHashMap();
  self->numVarsSet_ = new_EduStanfordNlpStatsIntCounter_init();
}

EduStanfordNlpSemgraphSemgrexVariableStrings *new_EduStanfordNlpSemgraphSemgrexVariableStrings_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexVariableStrings, init)
}

EduStanfordNlpSemgraphSemgrexVariableStrings *create_EduStanfordNlpSemgraphSemgrexVariableStrings_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexVariableStrings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpSemgraphSemgrexVariableStrings)
