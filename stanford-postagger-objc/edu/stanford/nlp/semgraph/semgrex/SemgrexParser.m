//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/semgraph/semgrex/SemgrexParser.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/semgraph/semgrex/CoordinationPattern.h"
#include "edu/stanford/nlp/semgraph/semgrex/GraphRelation.h"
#include "edu/stanford/nlp/semgraph/semgrex/NodePattern.h"
#include "edu/stanford/nlp/semgraph/semgrex/ParseException.h"
#include "edu/stanford/nlp/semgraph/semgrex/SemgrexParser.h"
#include "edu/stanford/nlp/semgraph/semgrex/SemgrexParserConstants.h"
#include "edu/stanford/nlp/semgraph/semgrex/SemgrexParserTokenManager.h"
#include "edu/stanford/nlp/semgraph/semgrex/SemgrexPattern.h"
#include "edu/stanford/nlp/semgraph/semgrex/SimpleCharStream.h"
#include "edu/stanford/nlp/semgraph/semgrex/Token.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "java/io/InputStream.h"
#include "java/io/Reader.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/Error.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@interface EduStanfordNlpSemgraphSemgrexSemgrexParser () {
 @public
  jboolean underNegation_;
  jboolean underNodeNegation_;
  id<JavaUtilSet> knownVariables_;
  jint jj_ntk_;
  jint jj_gen_;
  IOSIntArray *jj_la1_;
  id<JavaUtilList> jj_expentries_;
  IOSIntArray *jj_expentry_;
  jint jj_kind_;
}

+ (void)jj_la1_init_0;

- (EduStanfordNlpSemgraphSemgrexToken *)jj_consume_tokenWithInt:(jint)kind;

- (jint)jj_ntk;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexSemgrexParser, knownVariables_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexSemgrexParser, jj_la1_, IOSIntArray *)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexSemgrexParser, jj_expentries_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexSemgrexParser, jj_expentry_, IOSIntArray *)

inline IOSIntArray *EduStanfordNlpSemgraphSemgrexSemgrexParser_get_jj_la1_0();
inline IOSIntArray *EduStanfordNlpSemgraphSemgrexSemgrexParser_set_jj_la1_0(IOSIntArray *value);
static IOSIntArray *EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_la1_0;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpSemgraphSemgrexSemgrexParser, jj_la1_0, IOSIntArray *)

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_SubNodeWithEduStanfordNlpSemgraphSemgrexGraphRelation_(EduStanfordNlpSemgraphSemgrexSemgrexParser *self, EduStanfordNlpSemgraphSemgrexGraphRelation *r);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_RelationDisj(EduStanfordNlpSemgraphSemgrexSemgrexParser *self);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_RelationConj(EduStanfordNlpSemgraphSemgrexSemgrexParser *self);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_ModRelation(EduStanfordNlpSemgraphSemgrexSemgrexParser *self);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_RelChild(EduStanfordNlpSemgraphSemgrexSemgrexParser *self);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_Relation(EduStanfordNlpSemgraphSemgrexSemgrexParser *self);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_NodeDisjWithEduStanfordNlpSemgraphSemgrexGraphRelation_(EduStanfordNlpSemgraphSemgrexSemgrexParser *self, EduStanfordNlpSemgraphSemgrexGraphRelation *r);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_NodeConjWithEduStanfordNlpSemgraphSemgrexGraphRelation_(EduStanfordNlpSemgraphSemgrexSemgrexParser *self, EduStanfordNlpSemgraphSemgrexGraphRelation *r);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_ModNodeWithEduStanfordNlpSemgraphSemgrexGraphRelation_(EduStanfordNlpSemgraphSemgrexSemgrexParser *self, EduStanfordNlpSemgraphSemgrexGraphRelation *r);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_ChildWithEduStanfordNlpSemgraphSemgrexGraphRelation_(EduStanfordNlpSemgraphSemgrexSemgrexParser *self, EduStanfordNlpSemgraphSemgrexGraphRelation *r);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexNodePattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_DescriptionWithEduStanfordNlpSemgraphSemgrexGraphRelation_(EduStanfordNlpSemgraphSemgrexSemgrexParser *self, EduStanfordNlpSemgraphSemgrexGraphRelation *r);

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_la1_init_0();

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexToken *EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(EduStanfordNlpSemgraphSemgrexSemgrexParser *self, jint kind);

__attribute__((unused)) static jint EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(EduStanfordNlpSemgraphSemgrexSemgrexParser *self);

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpSemgraphSemgrexSemgrexParser)

@implementation EduStanfordNlpSemgraphSemgrexSemgrexParser

- (EduStanfordNlpSemgraphSemgrexSemgrexPattern *)Root {
  EduStanfordNlpSemgraphSemgrexSemgrexPattern *node;
  EduStanfordNlpSemgraphSemgrexToken *reverse = nil;
  id<JavaUtilList> children = new_JavaUtilArrayList_init();
  switch ((jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : jj_ntk_) {
    case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_ALIGNRELN:
    reverse = EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_ALIGNRELN);
    node = EduStanfordNlpSemgraphSemgrexSemgrexParser_SubNodeWithEduStanfordNlpSemgraphSemgrexGraphRelation_(self, JreLoadStatic(EduStanfordNlpSemgraphSemgrexGraphRelation, ALIGNED_ROOT));
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 11);
    break;
    case 13:
    case 17:
    case 19:
    case 23:
    node = EduStanfordNlpSemgraphSemgrexSemgrexParser_SubNodeWithEduStanfordNlpSemgraphSemgrexGraphRelation_(self, JreLoadStatic(EduStanfordNlpSemgraphSemgrexGraphRelation, ROOT));
    [children addWithId:node];
    {
      while (true) {
        switch ((jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : jj_ntk_) {
          case 12:
          ;
          break;
          default:
          *IOSIntArray_GetRef(nil_chk(jj_la1_), 0) = jj_gen_;
          goto break_label_1;
        }
        (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 12);
        node = EduStanfordNlpSemgraphSemgrexSemgrexParser_SubNodeWithEduStanfordNlpSemgraphSemgrexGraphRelation_(self, JreLoadStatic(EduStanfordNlpSemgraphSemgrexGraphRelation, ITERATOR));
        [children addWithId:node];
      }
      break_label_1: ;
    }
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 11);
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(jj_la1_), 1) = jj_gen_;
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpSemgraphSemgrexParseException_init();
  }
  if ([children size] <= 1) {
    return node;
  }
  {
    return new_EduStanfordNlpSemgraphSemgrexCoordinationPattern_initWithBoolean_withJavaUtilList_withBoolean_(true, children, true);
  }
}

- (EduStanfordNlpSemgraphSemgrexSemgrexPattern *)SubNodeWithEduStanfordNlpSemgraphSemgrexGraphRelation:(EduStanfordNlpSemgraphSemgrexGraphRelation *)r {
  return EduStanfordNlpSemgraphSemgrexSemgrexParser_SubNodeWithEduStanfordNlpSemgraphSemgrexGraphRelation_(self, r);
}

- (EduStanfordNlpSemgraphSemgrexSemgrexPattern *)RelationDisj {
  return EduStanfordNlpSemgraphSemgrexSemgrexParser_RelationDisj(self);
}

- (EduStanfordNlpSemgraphSemgrexSemgrexPattern *)RelationConj {
  return EduStanfordNlpSemgraphSemgrexSemgrexParser_RelationConj(self);
}

- (EduStanfordNlpSemgraphSemgrexSemgrexPattern *)ModRelation {
  return EduStanfordNlpSemgraphSemgrexSemgrexParser_ModRelation(self);
}

- (EduStanfordNlpSemgraphSemgrexSemgrexPattern *)RelChild {
  return EduStanfordNlpSemgraphSemgrexSemgrexParser_RelChild(self);
}

- (EduStanfordNlpSemgraphSemgrexSemgrexPattern *)Relation {
  return EduStanfordNlpSemgraphSemgrexSemgrexParser_Relation(self);
}

- (EduStanfordNlpSemgraphSemgrexSemgrexPattern *)NodeDisjWithEduStanfordNlpSemgraphSemgrexGraphRelation:(EduStanfordNlpSemgraphSemgrexGraphRelation *)r {
  return EduStanfordNlpSemgraphSemgrexSemgrexParser_NodeDisjWithEduStanfordNlpSemgraphSemgrexGraphRelation_(self, r);
}

- (EduStanfordNlpSemgraphSemgrexSemgrexPattern *)NodeConjWithEduStanfordNlpSemgraphSemgrexGraphRelation:(EduStanfordNlpSemgraphSemgrexGraphRelation *)r {
  return EduStanfordNlpSemgraphSemgrexSemgrexParser_NodeConjWithEduStanfordNlpSemgraphSemgrexGraphRelation_(self, r);
}

- (EduStanfordNlpSemgraphSemgrexSemgrexPattern *)ModNodeWithEduStanfordNlpSemgraphSemgrexGraphRelation:(EduStanfordNlpSemgraphSemgrexGraphRelation *)r {
  return EduStanfordNlpSemgraphSemgrexSemgrexParser_ModNodeWithEduStanfordNlpSemgraphSemgrexGraphRelation_(self, r);
}

- (EduStanfordNlpSemgraphSemgrexSemgrexPattern *)ChildWithEduStanfordNlpSemgraphSemgrexGraphRelation:(EduStanfordNlpSemgraphSemgrexGraphRelation *)r {
  return EduStanfordNlpSemgraphSemgrexSemgrexParser_ChildWithEduStanfordNlpSemgraphSemgrexGraphRelation_(self, r);
}

- (EduStanfordNlpSemgraphSemgrexNodePattern *)DescriptionWithEduStanfordNlpSemgraphSemgrexGraphRelation:(EduStanfordNlpSemgraphSemgrexGraphRelation *)r {
  return EduStanfordNlpSemgraphSemgrexSemgrexParser_DescriptionWithEduStanfordNlpSemgraphSemgrexGraphRelation_(self, r);
}

+ (void)jj_la1_init_0 {
  EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_la1_init_0();
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)stream {
  EduStanfordNlpSemgraphSemgrexSemgrexParser_initWithJavaIoInputStream_(self, stream);
  return self;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)stream
                             withNSString:(NSString *)encoding {
  EduStanfordNlpSemgraphSemgrexSemgrexParser_initWithJavaIoInputStream_withNSString_(self, stream, encoding);
  return self;
}

- (void)ReInitWithJavaIoInputStream:(JavaIoInputStream *)stream {
  [self ReInitWithJavaIoInputStream:stream withNSString:nil];
}

- (void)ReInitWithJavaIoInputStream:(JavaIoInputStream *)stream
                       withNSString:(NSString *)encoding {
  @try {
    [((EduStanfordNlpSemgraphSemgrexSimpleCharStream *) nil_chk(jj_input_stream_)) ReInitWithJavaIoInputStream:stream withNSString:encoding withInt:1 withInt:1];
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
  [((EduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager *) nil_chk(token_source_)) ReInitWithEduStanfordNlpSemgraphSemgrexSimpleCharStream:jj_input_stream_];
  token_ = new_EduStanfordNlpSemgraphSemgrexToken_init();
  jj_ntk_ = -1;
  jj_gen_ = 0;
  for (jint i = 0; i < 27; i++) *IOSIntArray_GetRef(nil_chk(jj_la1_), i) = -1;
}

- (instancetype)initWithJavaIoReader:(JavaIoReader *)stream {
  EduStanfordNlpSemgraphSemgrexSemgrexParser_initWithJavaIoReader_(self, stream);
  return self;
}

- (void)ReInitWithJavaIoReader:(JavaIoReader *)stream {
  [((EduStanfordNlpSemgraphSemgrexSimpleCharStream *) nil_chk(jj_input_stream_)) ReInitWithJavaIoReader:stream withInt:1 withInt:1];
  [((EduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager *) nil_chk(token_source_)) ReInitWithEduStanfordNlpSemgraphSemgrexSimpleCharStream:jj_input_stream_];
  token_ = new_EduStanfordNlpSemgraphSemgrexToken_init();
  jj_ntk_ = -1;
  jj_gen_ = 0;
  for (jint i = 0; i < 27; i++) *IOSIntArray_GetRef(nil_chk(jj_la1_), i) = -1;
}

- (instancetype)initWithEduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager:(EduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager *)tm {
  EduStanfordNlpSemgraphSemgrexSemgrexParser_initWithEduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager_(self, tm);
  return self;
}

- (void)ReInitWithEduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager:(EduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager *)tm {
  token_source_ = tm;
  token_ = new_EduStanfordNlpSemgraphSemgrexToken_init();
  jj_ntk_ = -1;
  jj_gen_ = 0;
  for (jint i = 0; i < 27; i++) *IOSIntArray_GetRef(nil_chk(jj_la1_), i) = -1;
}

- (EduStanfordNlpSemgraphSemgrexToken *)jj_consume_tokenWithInt:(jint)kind {
  return EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, kind);
}

- (EduStanfordNlpSemgraphSemgrexToken *)getNextToken {
  if (((EduStanfordNlpSemgraphSemgrexToken *) nil_chk(token_))->next_ != nil) token_ = token_->next_;
  else token_ = token_->next_ = [((EduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager *) nil_chk(token_source_)) getNextToken];
  jj_ntk_ = -1;
  jj_gen_++;
  return token_;
}

- (EduStanfordNlpSemgraphSemgrexToken *)getTokenWithInt:(jint)index {
  EduStanfordNlpSemgraphSemgrexToken *t = token_;
  for (jint i = 0; i < index; i++) {
    if (((EduStanfordNlpSemgraphSemgrexToken *) nil_chk(t))->next_ != nil) t = t->next_;
    else t = t->next_ = [((EduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager *) nil_chk(token_source_)) getNextToken];
  }
  return t;
}

- (jint)jj_ntk {
  return EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self);
}

- (EduStanfordNlpSemgraphSemgrexParseException *)generateParseException {
  [((id<JavaUtilList>) nil_chk(jj_expentries_)) clear];
  IOSBooleanArray *la1tokens = [IOSBooleanArray newArrayWithLength:26];
  if (jj_kind_ >= 0) {
    *IOSBooleanArray_GetRef(la1tokens, jj_kind_) = true;
    jj_kind_ = -1;
  }
  for (jint i = 0; i < 27; i++) {
    if (IOSIntArray_Get(nil_chk(jj_la1_), i) == jj_gen_) {
      for (jint j = 0; j < 32; j++) {
        if ((IOSIntArray_Get(nil_chk(EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_la1_0), i) & (JreLShift32(1, j))) != 0) {
          *IOSBooleanArray_GetRef(la1tokens, j) = true;
        }
      }
    }
  }
  for (jint i = 0; i < 26; i++) {
    if (IOSBooleanArray_Get(la1tokens, i)) {
      jj_expentry_ = [IOSIntArray newArrayWithLength:1];
      *IOSIntArray_GetRef(jj_expentry_, 0) = i;
      [((id<JavaUtilList>) nil_chk(jj_expentries_)) addWithId:jj_expentry_];
    }
  }
  IOSObjectArray *exptokseq = [IOSObjectArray newArrayWithLength:[((id<JavaUtilList>) nil_chk(jj_expentries_)) size] type:IOSClass_intArray(1)];
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(jj_expentries_)) size]; i++) {
    (void) IOSObjectArray_Set(exptokseq, i, [((id<JavaUtilList>) nil_chk(jj_expentries_)) getWithInt:i]);
  }
  return new_EduStanfordNlpSemgraphSemgrexParseException_initWithEduStanfordNlpSemgraphSemgrexToken_withIntArray2_withNSStringArray_(token_, exptokseq, JreLoadStatic(EduStanfordNlpSemgraphSemgrexSemgrexParserConstants, tokenImage));
}

- (void)enable_tracing {
}

- (void)disable_tracing {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", 0x11, -1, -1, 0, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", 0x11, 1, 2, 0, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", 0x11, -1, -1, 0, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", 0x11, -1, -1, 0, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", 0x11, -1, -1, 0, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", 0x11, -1, -1, 0, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", 0x11, -1, -1, 0, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", 0x11, 3, 2, 0, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", 0x11, 4, 2, 0, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", 0x11, 5, 2, 0, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", 0x11, 6, 2, 0, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemgrexNodePattern;", 0x11, 7, 2, 0, -1, -1, -1 },
    { NULL, "V", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 8, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 9, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 12, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemgrexToken;", 0x2, 13, 14, 0, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemgrexToken;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemgrexToken;", 0x11, 15, 14, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemgrexParseException;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(Root);
  methods[1].selector = @selector(SubNodeWithEduStanfordNlpSemgraphSemgrexGraphRelation:);
  methods[2].selector = @selector(RelationDisj);
  methods[3].selector = @selector(RelationConj);
  methods[4].selector = @selector(ModRelation);
  methods[5].selector = @selector(RelChild);
  methods[6].selector = @selector(Relation);
  methods[7].selector = @selector(NodeDisjWithEduStanfordNlpSemgraphSemgrexGraphRelation:);
  methods[8].selector = @selector(NodeConjWithEduStanfordNlpSemgraphSemgrexGraphRelation:);
  methods[9].selector = @selector(ModNodeWithEduStanfordNlpSemgraphSemgrexGraphRelation:);
  methods[10].selector = @selector(ChildWithEduStanfordNlpSemgraphSemgrexGraphRelation:);
  methods[11].selector = @selector(DescriptionWithEduStanfordNlpSemgraphSemgrexGraphRelation:);
  methods[12].selector = @selector(jj_la1_init_0);
  methods[13].selector = @selector(initWithJavaIoInputStream:);
  methods[14].selector = @selector(initWithJavaIoInputStream:withNSString:);
  methods[15].selector = @selector(ReInitWithJavaIoInputStream:);
  methods[16].selector = @selector(ReInitWithJavaIoInputStream:withNSString:);
  methods[17].selector = @selector(initWithJavaIoReader:);
  methods[18].selector = @selector(ReInitWithJavaIoReader:);
  methods[19].selector = @selector(initWithEduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager:);
  methods[20].selector = @selector(ReInitWithEduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager:);
  methods[21].selector = @selector(jj_consume_tokenWithInt:);
  methods[22].selector = @selector(getNextToken);
  methods[23].selector = @selector(getTokenWithInt:);
  methods[24].selector = @selector(jj_ntk);
  methods[25].selector = @selector(generateParseException);
  methods[26].selector = @selector(enable_tracing);
  methods[27].selector = @selector(disable_tracing);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "underNegation_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "underNodeNegation_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "knownVariables_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x2, -1, -1, 16, -1 },
    { "token_source_", "LEduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "jj_input_stream_", "LEduStanfordNlpSemgraphSemgrexSimpleCharStream;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "token_", "LEduStanfordNlpSemgraphSemgrexToken;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "jj_nt_", "LEduStanfordNlpSemgraphSemgrexToken;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "jj_ntk_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "jj_gen_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "jj_la1_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "jj_la1_0", "[I", .constantValue.asLong = 0, 0xa, -1, 17, -1, -1 },
    { "jj_expentries_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 18, -1 },
    { "jj_expentry_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "jj_kind_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpSemgraphSemgrexParseException;", "SubNode", "LEduStanfordNlpSemgraphSemgrexGraphRelation;", "NodeDisj", "NodeConj", "ModNode", "Child", "Description", "LJavaIoInputStream;", "LJavaIoInputStream;LNSString;", "ReInit", "LJavaIoReader;", "LEduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager;", "jj_consume_token", "I", "getToken", "Ljava/util/Set<Ljava/lang/String;>;", &EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_la1_0, "Ljava/util/List<[LI;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexSemgrexParser = { "SemgrexParser", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0x0, 28, 14, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexSemgrexParser;
}

+ (void)initialize {
  if (self == [EduStanfordNlpSemgraphSemgrexSemgrexParser class]) {
    {
      EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_la1_init_0();
    }
    J2OBJC_SET_INITIALIZED(EduStanfordNlpSemgraphSemgrexSemgrexParser)
  }
}

@end

EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_SubNodeWithEduStanfordNlpSemgraphSemgrexGraphRelation_(EduStanfordNlpSemgraphSemgrexSemgrexParser *self, EduStanfordNlpSemgraphSemgrexGraphRelation *r) {
  EduStanfordNlpSemgraphSemgrexSemgrexPattern *result = nil;
  EduStanfordNlpSemgraphSemgrexSemgrexPattern *child = nil;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
    case 13:
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 13);
    result = EduStanfordNlpSemgraphSemgrexSemgrexParser_SubNodeWithEduStanfordNlpSemgraphSemgrexGraphRelation_(self, r);
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 14);
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
      case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_RELATION:
      case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_ALIGNRELN:
      case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_IDENTIFIER:
      case 17:
      case 18:
      case 19:
      child = EduStanfordNlpSemgraphSemgrexSemgrexParser_RelationDisj(self);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 2) = self->jj_gen_;
      ;
    }
    if (child != nil) {
      id<JavaUtilList> newChildren = new_JavaUtilArrayList_init();
      [newChildren addAllWithJavaUtilCollection:[((EduStanfordNlpSemgraphSemgrexSemgrexPattern *) nil_chk(result)) getChildren]];
      [newChildren addWithId:child];
      [result setChildWithEduStanfordNlpSemgraphSemgrexSemgrexPattern:new_EduStanfordNlpSemgraphSemgrexCoordinationPattern_initWithBoolean_withJavaUtilList_withBoolean_(false, newChildren, true)];
    }
    {
      return result;
    }
    break;
    case 17:
    case 19:
    case 23:
    result = EduStanfordNlpSemgraphSemgrexSemgrexParser_ModNodeWithEduStanfordNlpSemgraphSemgrexGraphRelation_(self, r);
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
      case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_RELATION:
      case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_ALIGNRELN:
      case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_IDENTIFIER:
      case 17:
      case 18:
      case 19:
      child = EduStanfordNlpSemgraphSemgrexSemgrexParser_RelationDisj(self);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 3) = self->jj_gen_;
      ;
    }
    if (child != nil) [((EduStanfordNlpSemgraphSemgrexSemgrexPattern *) nil_chk(result)) setChildWithEduStanfordNlpSemgraphSemgrexSemgrexPattern:child];
    {
      return result;
    }
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 4) = self->jj_gen_;
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpSemgraphSemgrexParseException_init();
  }
  @throw new_JavaLangError_initWithNSString_(@"Missing return statement in function");
}

EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_RelationDisj(EduStanfordNlpSemgraphSemgrexSemgrexParser *self) {
  EduStanfordNlpSemgraphSemgrexSemgrexPattern *child;
  id<JavaUtilList> children = new_JavaUtilArrayList_init();
  child = EduStanfordNlpSemgraphSemgrexSemgrexParser_RelationConj(self);
  [children addWithId:child];
  while (true) {
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
      case 15:
      ;
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 5) = self->jj_gen_;
      goto break_label_2;
    }
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 15);
    child = EduStanfordNlpSemgraphSemgrexSemgrexParser_RelationConj(self);
    [children addWithId:child];
  }
  break_label_2: ;
  if ([children size] == 1) {
    {
      return child;
    }
  }
  else {
    {
      return new_EduStanfordNlpSemgraphSemgrexCoordinationPattern_initWithBoolean_withJavaUtilList_withBoolean_(false, children, false);
    }
  }
  @throw new_JavaLangError_initWithNSString_(@"Missing return statement in function");
}

EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_RelationConj(EduStanfordNlpSemgraphSemgrexSemgrexParser *self) {
  EduStanfordNlpSemgraphSemgrexSemgrexPattern *child;
  id<JavaUtilList> children = new_JavaUtilArrayList_init();
  child = EduStanfordNlpSemgraphSemgrexSemgrexParser_ModRelation(self);
  [children addWithId:child];
  while (true) {
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
      case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_RELATION:
      case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_ALIGNRELN:
      case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_IDENTIFIER:
      case 16:
      case 17:
      case 18:
      case 19:
      ;
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 6) = self->jj_gen_;
      goto break_label_3;
    }
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
      case 16:
      (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 16);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 7) = self->jj_gen_;
      ;
    }
    child = EduStanfordNlpSemgraphSemgrexSemgrexParser_ModRelation(self);
    [children addWithId:child];
  }
  break_label_3: ;
  if ([children size] == 1) {
    {
      return child;
    }
  }
  else {
    {
      return new_EduStanfordNlpSemgraphSemgrexCoordinationPattern_initWithBoolean_withJavaUtilList_withBoolean_(false, children, true);
    }
  }
  @throw new_JavaLangError_initWithNSString_(@"Missing return statement in function");
}

EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_ModRelation(EduStanfordNlpSemgraphSemgrexSemgrexParser *self) {
  EduStanfordNlpSemgraphSemgrexSemgrexPattern *child;
  jboolean startUnderNeg;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
    case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_RELATION:
    case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_ALIGNRELN:
    case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_IDENTIFIER:
    case 19:
    child = EduStanfordNlpSemgraphSemgrexSemgrexParser_RelChild(self);
    break;
    case 17:
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 17);
    startUnderNeg = self->underNegation_;
    self->underNegation_ = true;
    child = EduStanfordNlpSemgraphSemgrexSemgrexParser_RelChild(self);
    self->underNegation_ = startUnderNeg;
    [((EduStanfordNlpSemgraphSemgrexSemgrexPattern *) nil_chk(child)) negate];
    break;
    case 18:
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 18);
    child = EduStanfordNlpSemgraphSemgrexSemgrexParser_RelChild(self);
    [((EduStanfordNlpSemgraphSemgrexSemgrexPattern *) nil_chk(child)) makeOptional];
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 8) = self->jj_gen_;
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpSemgraphSemgrexParseException_init();
  }
  {
    return child;
  }
}

EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_RelChild(EduStanfordNlpSemgraphSemgrexSemgrexParser *self) {
  EduStanfordNlpSemgraphSemgrexSemgrexPattern *child;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
    case 19:
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 19);
    child = EduStanfordNlpSemgraphSemgrexSemgrexParser_RelationDisj(self);
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 20);
    break;
    case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_RELATION:
    case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_ALIGNRELN:
    case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_IDENTIFIER:
    child = EduStanfordNlpSemgraphSemgrexSemgrexParser_Relation(self);
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 9) = self->jj_gen_;
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpSemgraphSemgrexParseException_init();
  }
  {
    return child;
  }
}

EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_Relation(EduStanfordNlpSemgraphSemgrexSemgrexParser *self) {
  EduStanfordNlpSemgraphSemgrexGraphRelation *reln;
  EduStanfordNlpSemgraphSemgrexToken *rel = nil;
  EduStanfordNlpSemgraphSemgrexToken *relnType = nil;
  EduStanfordNlpSemgraphSemgrexToken *numArg = nil;
  EduStanfordNlpSemgraphSemgrexToken *numArg2 = nil;
  EduStanfordNlpSemgraphSemgrexToken *name = nil;
  EduStanfordNlpSemgraphSemgrexSemgrexPattern *node;
  jboolean pC = false;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
    case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_RELATION:
    case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_IDENTIFIER:
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
      case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_IDENTIFIER:
      numArg = EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_IDENTIFIER);
      switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
        case 21:
        (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 21);
        numArg2 = EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_IDENTIFIER);
        break;
        default:
        *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 10) = self->jj_gen_;
        ;
      }
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 11) = self->jj_gen_;
      ;
    }
    rel = EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_RELATION);
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
      case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_IDENTIFIER:
      case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_REGEX:
      switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
        case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_IDENTIFIER:
        relnType = EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_IDENTIFIER);
        break;
        case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_REGEX:
        relnType = EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_REGEX);
        break;
        default:
        *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 12) = self->jj_gen_;
        (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, -1);
        @throw new_EduStanfordNlpSemgraphSemgrexParseException_init();
      }
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 13) = self->jj_gen_;
      ;
    }
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
      case 22:
      (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 22);
      name = EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_IDENTIFIER);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 14) = self->jj_gen_;
      ;
    }
    break;
    case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_ALIGNRELN:
    rel = EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_ALIGNRELN);
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 15) = self->jj_gen_;
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpSemgraphSemgrexParseException_init();
  }
  if (numArg == nil && numArg2 == nil) {
    reln = EduStanfordNlpSemgraphSemgrexGraphRelation_getRelationWithNSString_withNSString_withNSString_(rel != nil ? rel->image_ : nil, relnType != nil ? relnType->image_ : nil, name != nil ? name->image_ : nil);
  }
  else if (numArg2 == nil) {
    reln = EduStanfordNlpSemgraphSemgrexGraphRelation_getRelationWithNSString_withNSString_withInt_withNSString_(rel != nil ? rel->image_ : nil, relnType != nil ? relnType->image_ : nil, JavaLangInteger_parseIntWithNSString_(((EduStanfordNlpSemgraphSemgrexToken *) nil_chk(numArg))->image_), name != nil ? name->image_ : nil);
  }
  else {
    reln = EduStanfordNlpSemgraphSemgrexGraphRelation_getRelationWithNSString_withNSString_withInt_withInt_withNSString_(rel != nil ? rel->image_ : nil, relnType != nil ? relnType->image_ : nil, JavaLangInteger_parseIntWithNSString_(((EduStanfordNlpSemgraphSemgrexToken *) nil_chk(numArg))->image_), JavaLangInteger_parseIntWithNSString_(numArg2->image_), name != nil ? name->image_ : nil);
  }
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
    case 17:
    case 19:
    case 23:
    node = EduStanfordNlpSemgraphSemgrexSemgrexParser_ModNodeWithEduStanfordNlpSemgraphSemgrexGraphRelation_(self, reln);
    break;
    case 13:
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 13);
    node = EduStanfordNlpSemgraphSemgrexSemgrexParser_SubNodeWithEduStanfordNlpSemgraphSemgrexGraphRelation_(self, reln);
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 14);
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 16) = self->jj_gen_;
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpSemgraphSemgrexParseException_init();
  }
  {
    return node;
  }
}

EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_NodeDisjWithEduStanfordNlpSemgraphSemgrexGraphRelation_(EduStanfordNlpSemgraphSemgrexSemgrexParser *self, EduStanfordNlpSemgraphSemgrexGraphRelation *r) {
  EduStanfordNlpSemgraphSemgrexSemgrexPattern *child;
  id<JavaUtilList> children = new_JavaUtilArrayList_init();
  (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 19);
  child = EduStanfordNlpSemgraphSemgrexSemgrexParser_NodeConjWithEduStanfordNlpSemgraphSemgrexGraphRelation_(self, r);
  [children addWithId:child];
  while (true) {
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
      case 15:
      ;
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 17) = self->jj_gen_;
      goto break_label_4;
    }
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 15);
    child = EduStanfordNlpSemgraphSemgrexSemgrexParser_NodeConjWithEduStanfordNlpSemgraphSemgrexGraphRelation_(self, r);
    [children addWithId:child];
  }
  break_label_4: ;
  (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 20);
  if ([children size] == 1) {
    return child;
  }
  else {
    return new_EduStanfordNlpSemgraphSemgrexCoordinationPattern_initWithBoolean_withJavaUtilList_withBoolean_(true, children, false);
  }
  @throw new_JavaLangError_initWithNSString_(@"Missing return statement in function");
}

EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_NodeConjWithEduStanfordNlpSemgraphSemgrexGraphRelation_(EduStanfordNlpSemgraphSemgrexSemgrexParser *self, EduStanfordNlpSemgraphSemgrexGraphRelation *r) {
  EduStanfordNlpSemgraphSemgrexSemgrexPattern *child;
  id<JavaUtilList> children = new_JavaUtilArrayList_init();
  child = EduStanfordNlpSemgraphSemgrexSemgrexParser_ModNodeWithEduStanfordNlpSemgraphSemgrexGraphRelation_(self, r);
  [children addWithId:child];
  while (true) {
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
      case 16:
      case 17:
      case 19:
      case 23:
      ;
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 18) = self->jj_gen_;
      goto break_label_5;
    }
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
      case 16:
      (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 16);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 19) = self->jj_gen_;
      ;
    }
    child = EduStanfordNlpSemgraphSemgrexSemgrexParser_ModNodeWithEduStanfordNlpSemgraphSemgrexGraphRelation_(self, r);
    [children addWithId:child];
  }
  break_label_5: ;
  if ([children size] == 1) {
    return child;
  }
  else {
    return new_EduStanfordNlpSemgraphSemgrexCoordinationPattern_initWithBoolean_withJavaUtilList_withBoolean_(true, children, true);
  }
  @throw new_JavaLangError_initWithNSString_(@"Missing return statement in function");
}

EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_ModNodeWithEduStanfordNlpSemgraphSemgrexGraphRelation_(EduStanfordNlpSemgraphSemgrexSemgrexParser *self, EduStanfordNlpSemgraphSemgrexGraphRelation *r) {
  EduStanfordNlpSemgraphSemgrexSemgrexPattern *child;
  jboolean startUnderNeg;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
    case 19:
    case 23:
    child = EduStanfordNlpSemgraphSemgrexSemgrexParser_ChildWithEduStanfordNlpSemgraphSemgrexGraphRelation_(self, r);
    break;
    case 17:
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 17);
    startUnderNeg = self->underNodeNegation_;
    self->underNodeNegation_ = true;
    child = EduStanfordNlpSemgraphSemgrexSemgrexParser_ChildWithEduStanfordNlpSemgraphSemgrexGraphRelation_(self, r);
    self->underNodeNegation_ = startUnderNeg;
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 20) = self->jj_gen_;
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpSemgraphSemgrexParseException_init();
  }
  {
    return child;
  }
}

EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_ChildWithEduStanfordNlpSemgraphSemgrexGraphRelation_(EduStanfordNlpSemgraphSemgrexSemgrexParser *self, EduStanfordNlpSemgraphSemgrexGraphRelation *r) {
  EduStanfordNlpSemgraphSemgrexSemgrexPattern *child;
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
    case 19:
    child = EduStanfordNlpSemgraphSemgrexSemgrexParser_NodeDisjWithEduStanfordNlpSemgraphSemgrexGraphRelation_(self, r);
    break;
    case 23:
    child = EduStanfordNlpSemgraphSemgrexSemgrexParser_DescriptionWithEduStanfordNlpSemgraphSemgrexGraphRelation_(self, r);
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 21) = self->jj_gen_;
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpSemgraphSemgrexParseException_init();
  }
  {
    return child;
  }
}

EduStanfordNlpSemgraphSemgrexNodePattern *EduStanfordNlpSemgraphSemgrexSemgrexParser_DescriptionWithEduStanfordNlpSemgraphSemgrexGraphRelation_(EduStanfordNlpSemgraphSemgrexSemgrexParser *self, EduStanfordNlpSemgraphSemgrexGraphRelation *r) {
  EduStanfordNlpSemgraphSemgrexToken *name = nil;
  jboolean link = false;
  jboolean isRoot = false;
  jboolean isEmpty = false;
  EduStanfordNlpSemgraphSemgrexToken *attr = nil;
  EduStanfordNlpSemgraphSemgrexToken *value = nil;
  id<JavaUtilMap> attributes = EduStanfordNlpUtilGenerics_newHashMap();
  EduStanfordNlpSemgraphSemgrexNodePattern *pat;
  (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 23);
  switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
    case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_IDENTIFIER:
    attr = EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_IDENTIFIER);
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 12);
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
      case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_IDENTIFIER:
      value = EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_IDENTIFIER);
      break;
      case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_REGEX:
      value = EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_REGEX);
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 22) = self->jj_gen_;
      (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, -1);
      @throw new_EduStanfordNlpSemgraphSemgrexParseException_init();
    }
    if (attr != nil && value != nil) (void) [((id<JavaUtilMap>) nil_chk(attributes)) putWithId:attr->image_ withId:value->image_];
    {
      while (true) {
        switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
          case 24:
          ;
          break;
          default:
          *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 23) = self->jj_gen_;
          goto break_label_6;
        }
        (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 24);
        attr = EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_IDENTIFIER);
        (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 12);
        switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
          case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_IDENTIFIER:
          value = EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_IDENTIFIER);
          break;
          case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_REGEX:
          value = EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_REGEX);
          break;
          default:
          *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 24) = self->jj_gen_;
          (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, -1);
          @throw new_EduStanfordNlpSemgraphSemgrexParseException_init();
        }
        if (attr != nil && value != nil) (void) [((id<JavaUtilMap>) nil_chk(attributes)) putWithId:attr->image_ withId:value->image_];
      }
      break_label_6: ;
    }
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 25);
    break;
    case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_ROOT:
    attr = EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_ROOT);
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 25);
    isRoot = true;
    break;
    case EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_EMPTY:
    attr = EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_EMPTY);
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 25);
    isEmpty = true;
    break;
    case 25:
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 25);
    break;
    default:
    *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 25) = self->jj_gen_;
    (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, -1);
    @throw new_EduStanfordNlpSemgraphSemgrexParseException_init();
  }
  {
    NSString *nodeName;
    switch ((self->jj_ntk_ == -1) ? EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(self) : self->jj_ntk_) {
      case 22:
      (void) EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, 22);
      link = true;
      name = EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(self, EduStanfordNlpSemgraphSemgrexSemgrexParserConstants_IDENTIFIER);
      nodeName = ((EduStanfordNlpSemgraphSemgrexToken *) nil_chk(name))->image_;
      if (self->underNegation_) {
        if (![((id<JavaUtilSet>) nil_chk(self->knownVariables_)) containsWithId:nodeName]) {
          {
            @throw new_EduStanfordNlpSemgraphSemgrexParseException_initWithNSString_(JreStrcat("$$$", @"Cannot add new variable names under negation.  Node '", nodeName, @"' not seen before"));
          }
        }
      }
      else {
        [((id<JavaUtilSet>) nil_chk(self->knownVariables_)) addWithId:nodeName];
      }
      break;
      default:
      *IOSIntArray_GetRef(nil_chk(self->jj_la1_), 26) = self->jj_gen_;
      ;
    }
  }
  pat = new_EduStanfordNlpSemgraphSemgrexNodePattern_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_withBoolean_withJavaUtilMap_withBoolean_withBoolean_withNSString_(r, self->underNodeNegation_, attributes, isRoot, isEmpty, name != nil ? name->image_ : nil);
  if (link) [pat makeLink];
  {
    return pat;
  }
}

void EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_la1_init_0() {
  EduStanfordNlpSemgraphSemgrexSemgrexParser_initialize();
  EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_la1_0 = [IOSIntArray newArrayWithInts:(jint[]){ (jint) 0x1000, (jint) 0x8a2020, (jint) 0xe0070, (jint) 0xe0070, (jint) 0x8a2000, (jint) 0x8000, (jint) 0xf0070, (jint) 0x10000, (jint) 0xe0070, (jint) 0x80070, (jint) 0x200000, (jint) 0x40, (jint) 0x440, (jint) 0x440, (jint) 0x400000, (jint) 0x70, (jint) 0x8a2000, (jint) 0x8000, (jint) 0x8b0000, (jint) 0x10000, (jint) 0x8a0000, (jint) 0x880000, (jint) 0x440, (jint) 0x1000000, (jint) 0x440, (jint) 0x2000340, (jint) 0x400000 } count:27];
}

void EduStanfordNlpSemgraphSemgrexSemgrexParser_initWithJavaIoInputStream_(EduStanfordNlpSemgraphSemgrexSemgrexParser *self, JavaIoInputStream *stream) {
  EduStanfordNlpSemgraphSemgrexSemgrexParser_initWithJavaIoInputStream_withNSString_(self, stream, nil);
}

EduStanfordNlpSemgraphSemgrexSemgrexParser *new_EduStanfordNlpSemgraphSemgrexSemgrexParser_initWithJavaIoInputStream_(JavaIoInputStream *stream) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexSemgrexParser, initWithJavaIoInputStream_, stream)
}

EduStanfordNlpSemgraphSemgrexSemgrexParser *create_EduStanfordNlpSemgraphSemgrexSemgrexParser_initWithJavaIoInputStream_(JavaIoInputStream *stream) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexSemgrexParser, initWithJavaIoInputStream_, stream)
}

void EduStanfordNlpSemgraphSemgrexSemgrexParser_initWithJavaIoInputStream_withNSString_(EduStanfordNlpSemgraphSemgrexSemgrexParser *self, JavaIoInputStream *stream, NSString *encoding) {
  NSObject_init(self);
  self->underNegation_ = false;
  self->underNodeNegation_ = false;
  self->knownVariables_ = EduStanfordNlpUtilGenerics_newHashSet();
  self->jj_la1_ = [IOSIntArray newArrayWithLength:27];
  self->jj_expentries_ = new_JavaUtilArrayList_init();
  self->jj_kind_ = -1;
  @try {
    self->jj_input_stream_ = new_EduStanfordNlpSemgraphSemgrexSimpleCharStream_initWithJavaIoInputStream_withNSString_withInt_withInt_(stream, encoding, 1, 1);
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
  self->token_source_ = new_EduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager_initWithEduStanfordNlpSemgraphSemgrexSimpleCharStream_(self->jj_input_stream_);
  self->token_ = new_EduStanfordNlpSemgraphSemgrexToken_init();
  self->jj_ntk_ = -1;
  self->jj_gen_ = 0;
  for (jint i = 0; i < 27; i++) *IOSIntArray_GetRef(self->jj_la1_, i) = -1;
}

EduStanfordNlpSemgraphSemgrexSemgrexParser *new_EduStanfordNlpSemgraphSemgrexSemgrexParser_initWithJavaIoInputStream_withNSString_(JavaIoInputStream *stream, NSString *encoding) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexSemgrexParser, initWithJavaIoInputStream_withNSString_, stream, encoding)
}

EduStanfordNlpSemgraphSemgrexSemgrexParser *create_EduStanfordNlpSemgraphSemgrexSemgrexParser_initWithJavaIoInputStream_withNSString_(JavaIoInputStream *stream, NSString *encoding) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexSemgrexParser, initWithJavaIoInputStream_withNSString_, stream, encoding)
}

void EduStanfordNlpSemgraphSemgrexSemgrexParser_initWithJavaIoReader_(EduStanfordNlpSemgraphSemgrexSemgrexParser *self, JavaIoReader *stream) {
  NSObject_init(self);
  self->underNegation_ = false;
  self->underNodeNegation_ = false;
  self->knownVariables_ = EduStanfordNlpUtilGenerics_newHashSet();
  self->jj_la1_ = [IOSIntArray newArrayWithLength:27];
  self->jj_expentries_ = new_JavaUtilArrayList_init();
  self->jj_kind_ = -1;
  self->jj_input_stream_ = new_EduStanfordNlpSemgraphSemgrexSimpleCharStream_initWithJavaIoReader_withInt_withInt_(stream, 1, 1);
  self->token_source_ = new_EduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager_initWithEduStanfordNlpSemgraphSemgrexSimpleCharStream_(self->jj_input_stream_);
  self->token_ = new_EduStanfordNlpSemgraphSemgrexToken_init();
  self->jj_ntk_ = -1;
  self->jj_gen_ = 0;
  for (jint i = 0; i < 27; i++) *IOSIntArray_GetRef(self->jj_la1_, i) = -1;
}

EduStanfordNlpSemgraphSemgrexSemgrexParser *new_EduStanfordNlpSemgraphSemgrexSemgrexParser_initWithJavaIoReader_(JavaIoReader *stream) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexSemgrexParser, initWithJavaIoReader_, stream)
}

EduStanfordNlpSemgraphSemgrexSemgrexParser *create_EduStanfordNlpSemgraphSemgrexSemgrexParser_initWithJavaIoReader_(JavaIoReader *stream) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexSemgrexParser, initWithJavaIoReader_, stream)
}

void EduStanfordNlpSemgraphSemgrexSemgrexParser_initWithEduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager_(EduStanfordNlpSemgraphSemgrexSemgrexParser *self, EduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager *tm) {
  NSObject_init(self);
  self->underNegation_ = false;
  self->underNodeNegation_ = false;
  self->knownVariables_ = EduStanfordNlpUtilGenerics_newHashSet();
  self->jj_la1_ = [IOSIntArray newArrayWithLength:27];
  self->jj_expentries_ = new_JavaUtilArrayList_init();
  self->jj_kind_ = -1;
  self->token_source_ = tm;
  self->token_ = new_EduStanfordNlpSemgraphSemgrexToken_init();
  self->jj_ntk_ = -1;
  self->jj_gen_ = 0;
  for (jint i = 0; i < 27; i++) *IOSIntArray_GetRef(self->jj_la1_, i) = -1;
}

EduStanfordNlpSemgraphSemgrexSemgrexParser *new_EduStanfordNlpSemgraphSemgrexSemgrexParser_initWithEduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager_(EduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager *tm) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexSemgrexParser, initWithEduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager_, tm)
}

EduStanfordNlpSemgraphSemgrexSemgrexParser *create_EduStanfordNlpSemgraphSemgrexSemgrexParser_initWithEduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager_(EduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager *tm) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexSemgrexParser, initWithEduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager_, tm)
}

EduStanfordNlpSemgraphSemgrexToken *EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_consume_tokenWithInt_(EduStanfordNlpSemgraphSemgrexSemgrexParser *self, jint kind) {
  EduStanfordNlpSemgraphSemgrexToken *oldToken;
  if ((oldToken = self->token_)->next_ != nil) self->token_ = ((EduStanfordNlpSemgraphSemgrexToken *) nil_chk(self->token_))->next_;
  else self->token_ = ((EduStanfordNlpSemgraphSemgrexToken *) nil_chk(self->token_))->next_ = [((EduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager *) nil_chk(self->token_source_)) getNextToken];
  self->jj_ntk_ = -1;
  if (self->token_->kind_ == kind) {
    self->jj_gen_++;
    return self->token_;
  }
  self->token_ = oldToken;
  self->jj_kind_ = kind;
  @throw [self generateParseException];
}

jint EduStanfordNlpSemgraphSemgrexSemgrexParser_jj_ntk(EduStanfordNlpSemgraphSemgrexSemgrexParser *self) {
  if ((self->jj_nt_ = ((EduStanfordNlpSemgraphSemgrexToken *) nil_chk(self->token_))->next_) == nil) return (self->jj_ntk_ = (self->token_->next_ = [((EduStanfordNlpSemgraphSemgrexSemgrexParserTokenManager *) nil_chk(self->token_source_)) getNextToken])->kind_);
  else return (self->jj_ntk_ = ((EduStanfordNlpSemgraphSemgrexToken *) nil_chk(self->jj_nt_))->kind_);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpSemgraphSemgrexSemgrexParser)
