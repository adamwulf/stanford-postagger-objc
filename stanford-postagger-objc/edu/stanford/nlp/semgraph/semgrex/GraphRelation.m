//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/semgraph/semgrex/GraphRelation.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/IndexedWord.h"
#include "edu/stanford/nlp/semgraph/SemanticGraph.h"
#include "edu/stanford/nlp/semgraph/SemanticGraphEdge.h"
#include "edu/stanford/nlp/semgraph/semgrex/Alignment.h"
#include "edu/stanford/nlp/semgraph/semgrex/GraphRelation.h"
#include "edu/stanford/nlp/semgraph/semgrex/ParseException.h"
#include "edu/stanford/nlp/trees/GrammaticalRelation.h"
#include "edu/stanford/nlp/util/ArrayStringFilter.h"
#include "edu/stanford/nlp/util/Filters.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "edu/stanford/nlp/util/Pair.h"
#include "edu/stanford/nlp/util/RegexStringFilter.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/Stack.h"
#include "java/util/function/Consumer.h"
#include "java/util/function/Predicate.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface EduStanfordNlpSemgraphSemgrexGraphRelation ()

- (instancetype)initWithNSString:(NSString *)symbol
                    withNSString:(NSString *)type
                    withNSString:(NSString *)name;

- (instancetype)initWithNSString:(NSString *)symbol
                    withNSString:(NSString *)type;

- (instancetype)initWithNSString:(NSString *)symbol;

@end

inline jlong EduStanfordNlpSemgraphSemgrexGraphRelation_get_serialVersionUID();
#define EduStanfordNlpSemgraphSemgrexGraphRelation_serialVersionUID -9128973950911993056LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpSemgraphSemgrexGraphRelation, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_withNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation *self, NSString *symbol, NSString *type, NSString *name);

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation *self, NSString *symbol, NSString *type);

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation *self, NSString *symbol);

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT () {
 @public
  EduStanfordNlpSemgraphSemgrexAlignment *alignment_;
  jboolean hypToText_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT, alignment_, EduStanfordNlpSemgraphSemgrexAlignment *)

inline jlong EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_get_serialVersionUID();
#define EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_serialVersionUID -2936526066368043778LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT, serialVersionUID, jlong)

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1 : EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator {
 @public
  EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT *this$0_;
  jboolean foundOnce_;
  jint nextNum_;
  EduStanfordNlpLingIndexedWord *val$node_;
}

- (void)initialize__ OBJC_METHOD_FAMILY_NONE;

- (void)advance;

- (instancetype)initWithEduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT:(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT *)outer$
                                           withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1)

J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1, this$0_, EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT *)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1, val$node_, EduStanfordNlpLingIndexedWord *)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_withEduStanfordNlpLingIndexedWord_(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1 *self, EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT *outer$, EduStanfordNlpLingIndexedWord *capture$0);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_withEduStanfordNlpLingIndexedWord_(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT *outer$, EduStanfordNlpLingIndexedWord *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_withEduStanfordNlpLingIndexedWord_(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT *outer$, EduStanfordNlpLingIndexedWord *capture$0);

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER : EduStanfordNlpSemgraphSemgrexGraphRelation

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name;

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER)

inline jlong EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_get_serialVersionUID();
#define EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_serialVersionUID -7003148918274183951LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER *self, NSString *reln, NSString *name);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER *new_EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_initWithNSString_withNSString_(NSString *reln, NSString *name) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER *create_EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_initWithNSString_withNSString_(NSString *reln, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER)

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1 : EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator {
 @public
  EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER *this$0_;
  id<JavaUtilIterator> iterator_;
  EduStanfordNlpLingIndexedWord *val$node_;
  EduStanfordNlpSemgraphSemanticGraph *val$sg_;
}

- (void)advance;

- (instancetype)initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER:(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER *)outer$
                                          withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1)

J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1, this$0_, EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER *)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1, iterator_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1, val$node_, EduStanfordNlpLingIndexedWord *)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1, val$sg_, EduStanfordNlpSemgraphSemanticGraph *)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1 *self, EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1);

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT : EduStanfordNlpSemgraphSemgrexGraphRelation

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name;

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT)

inline jlong EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_get_serialVersionUID();
#define EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_serialVersionUID -5115389883698108694LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT *self, NSString *reln, NSString *name);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT *new_EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_initWithNSString_withNSString_(NSString *reln, NSString *name) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT *create_EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_initWithNSString_withNSString_(NSString *reln, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT)

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1 : EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator {
 @public
  EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT *this$0_;
  jint nextNum_;
  EduStanfordNlpLingIndexedWord *val$node_;
  EduStanfordNlpSemgraphSemanticGraph *val$sg_;
}

- (void)advance;

- (instancetype)initWithEduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT:(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT *)outer$
                                           withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0
                                     withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1)

J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1, this$0_, EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT *)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1, val$node_, EduStanfordNlpLingIndexedWord *)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1, val$sg_, EduStanfordNlpSemgraphSemanticGraph *)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1 *self, EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1);

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT : EduStanfordNlpSemgraphSemgrexGraphRelation {
 @public
  jint startDepth_, endDepth_;
}

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name
                         withInt:(jint)startDepth
                         withInt:(jint)endDepth;

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

- (jboolean)satisfyHelperWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)parent
                         withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
                   withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                                   withInt:(jint)depth
                                          withJavaUtilList:(id<JavaUtilList>)usedNodes;

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT)

inline jlong EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_get_serialVersionUID();
#define EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_initWithNSString_withNSString_withInt_withInt_(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT *self, NSString *reln, NSString *name, jint startDepth, jint endDepth);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT *new_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_initWithNSString_withNSString_withInt_withInt_(NSString *reln, NSString *name, jint startDepth, jint endDepth) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT *create_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_initWithNSString_withNSString_withInt_withInt_(NSString *reln, NSString *name, jint startDepth, jint endDepth);

__attribute__((unused)) static jboolean EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_satisfyHelperWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_withInt_withJavaUtilList_(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT *self, EduStanfordNlpLingIndexedWord *parent, EduStanfordNlpLingIndexedWord *l2, EduStanfordNlpSemgraphSemanticGraph *sg, jint depth, id<JavaUtilList> usedNodes);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT)

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1 : EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator {
 @public
  EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT *this$0_;
  id<JavaUtilList> searchStack_;
  id<JavaUtilList> seenNodes_;
  id<JavaUtilSet> returnedNodes_;
  jint currentDepth_;
  EduStanfordNlpLingIndexedWord *val$node_;
  EduStanfordNlpSemgraphSemanticGraph *val$sg_;
}

- (void)initialize__ OBJC_METHOD_FAMILY_NONE;

- (void)advance;

- (instancetype)initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT:(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT *)outer$
                                                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0
                                               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1)

J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1, this$0_, EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT *)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1, searchStack_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1, seenNodes_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1, returnedNodes_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1, val$node_, EduStanfordNlpLingIndexedWord *)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1, val$sg_, EduStanfordNlpSemgraphSemanticGraph *)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1 *self, EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1);

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING : EduStanfordNlpSemgraphSemgrexGraphRelation

- (instancetype)initWithNSString:(NSString *)symbol
                    withNSString:(NSString *)reln
                    withNSString:(NSString *)name;

- (id<JavaUtilList>)getNeighborPairsWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                          withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node;

- (id<JavaUtilIterator>)neighborIteratorWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                              withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)search;

- (EduStanfordNlpLingIndexedWord *)followEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:(EduStanfordNlpSemgraphSemanticGraphEdge *)edge;

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

- (jboolean)satisfyHelperWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                         withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
                   withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                           withJavaUtilSet:(id<JavaUtilSet>)usedNodes;

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING)

inline jlong EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_get_serialVersionUID();
#define EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_initWithNSString_withNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING *self, NSString *symbol, NSString *reln, NSString *name);

__attribute__((unused)) static jboolean EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_satisfyHelperWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_withJavaUtilSet_(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING *self, EduStanfordNlpLingIndexedWord *node, EduStanfordNlpLingIndexedWord *l2, EduStanfordNlpSemgraphSemanticGraph *sg, id<JavaUtilSet> usedNodes);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING)

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1 : EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator {
 @public
  EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING *this$0_;
  JavaUtilStack *searchStack_;
  id<JavaUtilSet> searchedNodes_;
  id<JavaUtilSet> matchedNodes_;
  id<JavaUtilIterator> neighborIterator_;
  EduStanfordNlpLingIndexedWord *val$node_;
  EduStanfordNlpSemgraphSemanticGraph *val$sg_;
}

- (void)initialize__ OBJC_METHOD_FAMILY_NONE;

- (void)advance;

- (instancetype)initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING:(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING *)outer$
                                                withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0
                                          withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1)

J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1, this$0_, EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING *)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1, searchStack_, JavaUtilStack *)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1, searchedNodes_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1, matchedNodes_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1, neighborIterator_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1, val$node_, EduStanfordNlpLingIndexedWord *)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1, val$sg_, EduStanfordNlpSemgraphSemanticGraph *)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1 *self, EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1);

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT : EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name;

- (id<JavaUtilList>)getNeighborPairsWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                          withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node;

- (id<JavaUtilIterator>)neighborIteratorWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                              withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)search;

- (EduStanfordNlpLingIndexedWord *)followEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:(EduStanfordNlpSemgraphSemanticGraphEdge *)edge;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT)

inline jlong EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT_get_serialVersionUID();
#define EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT *self, NSString *reln, NSString *name);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT *new_EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT_initWithNSString_withNSString_(NSString *reln, NSString *name) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT *create_EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT_initWithNSString_withNSString_(NSString *reln, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT)

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID : EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name;

- (id<JavaUtilList>)getNeighborPairsWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                          withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node;

- (id<JavaUtilIterator>)neighborIteratorWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                              withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)search;

- (EduStanfordNlpLingIndexedWord *)followEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:(EduStanfordNlpSemgraphSemanticGraphEdge *)edge;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID)

inline jlong EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID_get_serialVersionUID();
#define EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID *self, NSString *reln, NSString *name);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID *new_EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID_initWithNSString_withNSString_(NSString *reln, NSString *name) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID *create_EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID_initWithNSString_withNSString_(NSString *reln, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID)

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID : EduStanfordNlpSemgraphSemgrexGraphRelation {
 @public
  jint startDepth_, endDepth_;
}

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name
                         withInt:(jint)startDepth
                         withInt:(jint)endDepth;

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

- (jboolean)satisfyHelperWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)child
                         withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
                   withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                                   withInt:(jint)depth
                                          withJavaUtilList:(id<JavaUtilList>)usedNodes;

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID)

inline jlong EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_get_serialVersionUID();
#define EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_initWithNSString_withNSString_withInt_withInt_(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID *self, NSString *reln, NSString *name, jint startDepth, jint endDepth);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID *new_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_initWithNSString_withNSString_withInt_withInt_(NSString *reln, NSString *name, jint startDepth, jint endDepth) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID *create_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_initWithNSString_withNSString_withInt_withInt_(NSString *reln, NSString *name, jint startDepth, jint endDepth);

__attribute__((unused)) static jboolean EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_satisfyHelperWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_withInt_withJavaUtilList_(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID *self, EduStanfordNlpLingIndexedWord *child, EduStanfordNlpLingIndexedWord *l2, EduStanfordNlpSemgraphSemanticGraph *sg, jint depth, id<JavaUtilList> usedNodes);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID)

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1 : EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator {
 @public
  EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID *this$0_;
  id<JavaUtilList> searchStack_;
  id<JavaUtilList> seenNodes_;
  id<JavaUtilSet> returnedNodes_;
  jint currentDepth_;
  EduStanfordNlpLingIndexedWord *val$node_;
  EduStanfordNlpSemgraphSemanticGraph *val$sg_;
}

- (void)initialize__ OBJC_METHOD_FAMILY_NONE;

- (void)advance;

- (instancetype)initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID:(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID *)outer$
                                                  withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0
                                            withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1)

J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1, this$0_, EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID *)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1, searchStack_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1, seenNodes_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1, returnedNodes_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1, val$node_, EduStanfordNlpLingIndexedWord *)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1, val$sg_, EduStanfordNlpSemgraphSemanticGraph *)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1 *self, EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1);

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS : EduStanfordNlpSemgraphSemgrexGraphRelation

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name;

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS *self, NSString *reln, NSString *name);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS *new_EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_initWithNSString_withNSString_(NSString *reln, NSString *name) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS *create_EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_initWithNSString_withNSString_(NSString *reln, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS)

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1 : EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator {
 @public
  jboolean alreadyIterated_;
  EduStanfordNlpLingIndexedWord *val$node_;
}

- (void)advance;

- (instancetype)initWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1)

J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1, val$node_, EduStanfordNlpLingIndexedWord *)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1_initWithEduStanfordNlpLingIndexedWord_(EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1 *self, EduStanfordNlpLingIndexedWord *capture$0);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1_initWithEduStanfordNlpLingIndexedWord_(EduStanfordNlpLingIndexedWord *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1_initWithEduStanfordNlpLingIndexedWord_(EduStanfordNlpLingIndexedWord *capture$0);

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION : EduStanfordNlpSemgraphSemgrexGraphRelation

- (instancetype)initWithNSString:(NSString *)symbol
                    withNSString:(NSString *)reln
                    withNSString:(NSString *)name;

- (jboolean)satisfiesOrderWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                          withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2;

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION)

inline jlong EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_get_serialVersionUID();
#define EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_initWithNSString_withNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION *self, NSString *symbol, NSString *reln, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION)

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1 : EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator {
 @public
  EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION *this$0_;
  id<JavaUtilIterator> iterator_;
  EduStanfordNlpLingIndexedWord *val$node_;
  EduStanfordNlpSemgraphSemanticGraph *val$sg_;
}

- (void)advance;

- (instancetype)initWithEduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION:(EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION *)outer$
                                                  withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0
                                            withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1)

J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1, this$0_, EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION *)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1, iterator_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1, val$node_, EduStanfordNlpLingIndexedWord *)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1, val$sg_, EduStanfordNlpSemgraphSemanticGraph *)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1 *self, EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1);

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING : EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name;

- (jboolean)satisfiesOrderWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                          withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING)

inline jlong EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING_get_serialVersionUID();
#define EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING *self, NSString *reln, NSString *name);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING *new_EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING_initWithNSString_withNSString_(NSString *reln, NSString *name) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING *create_EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING_initWithNSString_withNSString_(NSString *reln, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING)

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING : EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name;

- (jboolean)satisfiesOrderWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                          withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING)

inline jlong EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING_get_serialVersionUID();
#define EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING *self, NSString *reln, NSString *name);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING *new_EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING_initWithNSString_withNSString_(NSString *reln, NSString *name) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING *create_EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING_initWithNSString_withNSString_(NSString *reln, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING)

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING : EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name;

- (jboolean)satisfiesOrderWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                          withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING)

inline jlong EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING_get_serialVersionUID();
#define EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING *self, NSString *reln, NSString *name);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING *new_EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING_initWithNSString_withNSString_(NSString *reln, NSString *name) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING *create_EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING_initWithNSString_withNSString_(NSString *reln, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING)

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING : EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name;

- (jboolean)satisfiesOrderWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                          withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING)

inline jlong EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING_get_serialVersionUID();
#define EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING *self, NSString *reln, NSString *name);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING *new_EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING_initWithNSString_withNSString_(NSString *reln, NSString *name) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING *create_EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING_initWithNSString_withNSString_(NSString *reln, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING)

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE : EduStanfordNlpSemgraphSemgrexGraphRelation

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name;

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE)

inline jlong EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_get_serialVersionUID();
#define EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE *self, NSString *reln, NSString *name);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE *new_EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_initWithNSString_withNSString_(NSString *reln, NSString *name) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE *create_EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_initWithNSString_withNSString_(NSString *reln, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE)

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1 : EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator {
 @public
  id<JavaUtilIterator> iterator_;
  EduStanfordNlpLingIndexedWord *val$node_;
  EduStanfordNlpSemgraphSemanticGraph *val$sg_;
}

- (void)advance;

- (instancetype)initWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0
              withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1)

J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1, iterator_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1, val$node_, EduStanfordNlpLingIndexedWord *)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1, val$sg_, EduStanfordNlpSemgraphSemanticGraph *)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1_initWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1 *self, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1_initWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1_initWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1);

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_$1 : EduStanfordNlpSemgraphSemgrexGraphRelation

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

- (instancetype)initWithNSString:(NSString *)arg$0
                    withNSString:(NSString *)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_$1)

inline jlong EduStanfordNlpSemgraphSemgrexGraphRelation_$1_get_serialVersionUID();
#define EduStanfordNlpSemgraphSemgrexGraphRelation_$1_serialVersionUID 4710135995247390313LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpSemgraphSemgrexGraphRelation_$1, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_$1_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_$1 *self, NSString *arg$0, NSString *arg$1);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_$1_initWithNSString_withNSString_(NSString *arg$0, NSString *arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_$1_initWithNSString_withNSString_(NSString *arg$0, NSString *arg$1);

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1 : EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator {
 @public
  EduStanfordNlpLingIndexedWord *val$node_;
}

- (void)initialize__ OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1)

J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1, val$node_, EduStanfordNlpLingIndexedWord *)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1_initWithEduStanfordNlpLingIndexedWord_(EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1 *self, EduStanfordNlpLingIndexedWord *capture$0);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1_initWithEduStanfordNlpLingIndexedWord_(EduStanfordNlpLingIndexedWord *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1_initWithEduStanfordNlpLingIndexedWord_(EduStanfordNlpLingIndexedWord *capture$0);

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_$2 : EduStanfordNlpSemgraphSemgrexGraphRelation

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

- (instancetype)initWithNSString:(NSString *)arg$0
                    withNSString:(NSString *)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_$2)

inline jlong EduStanfordNlpSemgraphSemgrexGraphRelation_$2_get_serialVersionUID();
#define EduStanfordNlpSemgraphSemgrexGraphRelation_$2_serialVersionUID 5259713498453659251LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpSemgraphSemgrexGraphRelation_$2, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_$2_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_$2 *self, NSString *arg$0, NSString *arg$1);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_$2 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_$2_initWithNSString_withNSString_(NSString *arg$0, NSString *arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_$2 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_$2_initWithNSString_withNSString_(NSString *arg$0, NSString *arg$1);

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_$3 : EduStanfordNlpSemgraphSemgrexGraphRelation

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

- (instancetype)initWithNSString:(NSString *)arg$0
                    withNSString:(NSString *)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_$3)

inline jlong EduStanfordNlpSemgraphSemgrexGraphRelation_$3_get_serialVersionUID();
#define EduStanfordNlpSemgraphSemgrexGraphRelation_$3_serialVersionUID -3088857488269777611LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpSemgraphSemgrexGraphRelation_$3, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_$3_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_$3 *self, NSString *arg$0, NSString *arg$1);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_$3 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_$3_initWithNSString_withNSString_(NSString *arg$0, NSString *arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_$3 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_$3_initWithNSString_withNSString_(NSString *arg$0, NSString *arg$1);

@interface EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1 : EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator {
 @public
  EduStanfordNlpLingIndexedWord *val$node_;
}

- (void)initialize__ OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1)

J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1, val$node_, EduStanfordNlpLingIndexedWord *)

__attribute__((unused)) static void EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1_initWithEduStanfordNlpLingIndexedWord_(EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1 *self, EduStanfordNlpLingIndexedWord *capture$0);

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1_initWithEduStanfordNlpLingIndexedWord_(EduStanfordNlpLingIndexedWord *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1_initWithEduStanfordNlpLingIndexedWord_(EduStanfordNlpLingIndexedWord *capture$0);

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpSemgraphSemgrexGraphRelation)

EduStanfordNlpSemgraphSemgrexGraphRelation *EduStanfordNlpSemgraphSemgrexGraphRelation_ROOT;
EduStanfordNlpSemgraphSemgrexGraphRelation *EduStanfordNlpSemgraphSemgrexGraphRelation_ITERATOR;
EduStanfordNlpSemgraphSemgrexGraphRelation *EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNED_ROOT;

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)n1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)n2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (instancetype)initWithNSString:(NSString *)symbol
                    withNSString:(NSString *)type
                    withNSString:(NSString *)name {
  EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_withNSString_withNSString_(self, symbol, type, name);
  return self;
}

- (instancetype)initWithNSString:(NSString *)symbol
                    withNSString:(NSString *)type {
  EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_withNSString_(self, symbol, type);
  return self;
}

- (instancetype)initWithNSString:(NSString *)symbol {
  EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_(self, symbol);
  return self;
}

- (NSString *)description {
  return JreStrcat("$$$", symbol_, ((rawType_ != nil) ? rawType_ : @""), ((name_ != nil) ? JreStrcat("C$", '=', name_) : @""));
}

- (id<JavaUtilFunctionPredicate>)getPatternWithNSString:(NSString *)relnType {
  if ((relnType == nil) || ([((NSString *) nil_chk(relnType)) isEqual:@""])) {
    return EduStanfordNlpUtilFilters_acceptFilter();
  }
  else if ([((NSString *) nil_chk(relnType)) matches:@"/.*/"]) {
    return new_EduStanfordNlpUtilRegexStringFilter_initWithNSString_([relnType substring:1 endIndex:((jint) [relnType length]) - 1]);
  }
  else {
    return new_EduStanfordNlpUtilArrayStringFilter_initWithEduStanfordNlpUtilArrayStringFilter_Mode_withNSStringArray_(JreLoadEnum(EduStanfordNlpUtilArrayStringFilter_Mode, EXACT), [IOSObjectArray newArrayWithObjects:(id[]){ relnType } count:1 type:NSString_class_()]);
  }
}

- (NSString *)getName {
  if (name_ == nil || [@"" isEqual:name_]) return nil;
  return name_;
}

+ (jboolean)isKnownRelationWithNSString:(NSString *)reln {
  return EduStanfordNlpSemgraphSemgrexGraphRelation_isKnownRelationWithNSString_(reln);
}

+ (EduStanfordNlpSemgraphSemgrexGraphRelation *)getRelationWithNSString:(NSString *)reln
                                                           withNSString:(NSString *)type
                                                           withNSString:(NSString *)name {
  return EduStanfordNlpSemgraphSemgrexGraphRelation_getRelationWithNSString_withNSString_withNSString_(reln, type, name);
}

+ (EduStanfordNlpSemgraphSemgrexGraphRelation *)getRelationWithNSString:(NSString *)reln
                                                           withNSString:(NSString *)type
                                                                withInt:(jint)num
                                                           withNSString:(NSString *)name {
  return EduStanfordNlpSemgraphSemgrexGraphRelation_getRelationWithNSString_withNSString_withInt_withNSString_(reln, type, num, name);
}

+ (EduStanfordNlpSemgraphSemgrexGraphRelation *)getRelationWithNSString:(NSString *)reln
                                                           withNSString:(NSString *)type
                                                                withInt:(jint)num
                                                                withInt:(jint)num2
                                                           withNSString:(NSString *)name {
  return EduStanfordNlpSemgraphSemgrexGraphRelation_getRelationWithNSString_withNSString_withInt_withInt_withNSString_(reln, type, num, num2, name);
}

- (NSUInteger)hash {
  return ((jint) [((NSString *) nil_chk(symbol_)) hash]);
}

- (jboolean)isEqual:(id)o {
  if (self == o) {
    return true;
  }
  if (!([o isKindOfClass:[EduStanfordNlpSemgraphSemgrexGraphRelation class]])) {
    return false;
  }
  EduStanfordNlpSemgraphSemgrexGraphRelation *relation = (EduStanfordNlpSemgraphSemgrexGraphRelation *) cast_chk(o, [EduStanfordNlpSemgraphSemgrexGraphRelation class]);
  if (![((NSString *) nil_chk(symbol_)) isEqual:((EduStanfordNlpSemgraphSemgrexGraphRelation *) nil_chk(relation))->symbol_] || ![((id<JavaUtilFunctionPredicate>) nil_chk(type_)) isEqual:relation->type_]) {
    return false;
  }
  return true;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x400, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x400, 2, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x2, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 7, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 8, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilFunctionPredicate;", 0x1, 9, 7, -1, 10, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 11, 7, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemgrexGraphRelation;", 0x9, 12, 5, 13, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemgrexGraphRelation;", 0x9, 12, 14, 13, -1, -1, -1 },
    { NULL, "LEduStanfordNlpSemgraphSemgrexGraphRelation;", 0x9, 12, 15, 13, -1, -1, -1 },
    { NULL, "I", 0x1, 16, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 17, 18, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(satisfiesWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  methods[1].selector = @selector(searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  methods[2].selector = @selector(initWithNSString:withNSString:withNSString:);
  methods[3].selector = @selector(initWithNSString:withNSString:);
  methods[4].selector = @selector(initWithNSString:);
  methods[5].selector = @selector(description);
  methods[6].selector = @selector(getPatternWithNSString:);
  methods[7].selector = @selector(getName);
  methods[8].selector = @selector(isKnownRelationWithNSString:);
  methods[9].selector = @selector(getRelationWithNSString:withNSString:withNSString:);
  methods[10].selector = @selector(getRelationWithNSString:withNSString:withInt:withNSString:);
  methods[11].selector = @selector(getRelationWithNSString:withNSString:withInt:withInt:withNSString:);
  methods[12].selector = @selector(hash);
  methods[13].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "symbol_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "type_", "LJavaUtilFunctionPredicate;", .constantValue.asLong = 0, 0x10, -1, -1, 19, -1 },
    { "rawType_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "ROOT", "LEduStanfordNlpSemgraphSemgrexGraphRelation;", .constantValue.asLong = 0, 0x18, -1, 20, -1, -1 },
    { "ITERATOR", "LEduStanfordNlpSemgraphSemgrexGraphRelation;", .constantValue.asLong = 0, 0x18, -1, 21, -1, -1 },
    { "ALIGNED_ROOT", "LEduStanfordNlpSemgraphSemgrexGraphRelation;", .constantValue.asLong = 0, 0x18, -1, 22, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpSemgraphSemgrexGraphRelation_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "satisfies", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "searchNodeIterator", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "(Ledu/stanford/nlp/ling/IndexedWord;Ledu/stanford/nlp/semgraph/SemanticGraph;)Ljava/util/Iterator<Ledu/stanford/nlp/ling/IndexedWord;>;", "LNSString;LNSString;LNSString;", "LNSString;LNSString;", "LNSString;", "toString", "getPattern", "(Ljava/lang/String;)Ljava/util/function/Predicate<Ljava/lang/String;>;", "isKnownRelation", "getRelation", "LEduStanfordNlpSemgraphSemgrexParseException;", "LNSString;LNSString;ILNSString;", "LNSString;LNSString;IILNSString;", "hashCode", "equals", "LNSObject;", "Ljava/util/function/Predicate<Ljava/lang/String;>;", &EduStanfordNlpSemgraphSemgrexGraphRelation_ROOT, &EduStanfordNlpSemgraphSemgrexGraphRelation_ITERATOR, &EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNED_ROOT, "LEduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT;LEduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER;LEduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT;LEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT;LEduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING;LEduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT;LEduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID;LEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID;LEduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS;LEduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION;LEduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING;LEduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING;LEduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING;LEduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING;LEduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE;LEduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation = { "GraphRelation", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0x400, 14, 8, -1, 23, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation;
}

+ (void)initialize {
  if (self == [EduStanfordNlpSemgraphSemgrexGraphRelation class]) {
    EduStanfordNlpSemgraphSemgrexGraphRelation_ROOT = new_EduStanfordNlpSemgraphSemgrexGraphRelation_$1_initWithNSString_withNSString_(@"", @"");
    EduStanfordNlpSemgraphSemgrexGraphRelation_ITERATOR = new_EduStanfordNlpSemgraphSemgrexGraphRelation_$2_initWithNSString_withNSString_(@":", @"");
    EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNED_ROOT = new_EduStanfordNlpSemgraphSemgrexGraphRelation_$3_initWithNSString_withNSString_(@"AlignRoot", @"");
    J2OBJC_SET_INITIALIZED(EduStanfordNlpSemgraphSemgrexGraphRelation)
  }
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_withNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation *self, NSString *symbol, NSString *type, NSString *name) {
  NSObject_init(self);
  self->symbol_ = symbol;
  self->type_ = [self getPatternWithNSString:type];
  self->rawType_ = type;
  self->name_ = name;
}

void EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation *self, NSString *symbol, NSString *type) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_withNSString_withNSString_(self, symbol, type, nil);
}

void EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation *self, NSString *symbol) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_withNSString_(self, symbol, nil);
}

jboolean EduStanfordNlpSemgraphSemgrexGraphRelation_isKnownRelationWithNSString_(NSString *reln) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_initialize();
  return ([((NSString *) nil_chk(reln)) isEqual:@">"] || [reln isEqual:@"<"] || [reln isEqual:@">>"] || [reln isEqual:@"<<"] || [reln isEqual:@"@"] || [reln isEqual:@"=="] || [reln isEqual:@"$+"] || [reln isEqual:@"$++"] || [reln isEqual:@"$-"] || [reln isEqual:@"$--"] || [reln isEqual:@"."]);
}

EduStanfordNlpSemgraphSemgrexGraphRelation *EduStanfordNlpSemgraphSemgrexGraphRelation_getRelationWithNSString_withNSString_withNSString_(NSString *reln, NSString *type, NSString *name) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_initialize();
  if (reln == nil && type == nil) return nil;
  if (!EduStanfordNlpSemgraphSemgrexGraphRelation_isKnownRelationWithNSString_(reln)) {
    @throw new_EduStanfordNlpSemgraphSemgrexParseException_initWithNSString_(JreStrcat("$$", @"Unknown relation ", reln));
  }
  switch (JreIndexOfStr(reln, (id[]){ @">", @"<", @">>", @"<<", @"==", @"$+", @"$-", @"$++", @"$--", @".", @"@" }, 11)) {
    case 0:
    return new_EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_initWithNSString_withNSString_(type, name);
    case 1:
    return new_EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_initWithNSString_withNSString_(type, name);
    case 2:
    return new_EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT_initWithNSString_withNSString_(type, name);
    case 3:
    return new_EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID_initWithNSString_withNSString_(type, name);
    case 4:
    return new_EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_initWithNSString_withNSString_(type, name);
    case 5:
    return new_EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING_initWithNSString_withNSString_(type, name);
    case 6:
    return new_EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING_initWithNSString_withNSString_(type, name);
    case 7:
    return new_EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING_initWithNSString_withNSString_(type, name);
    case 8:
    return new_EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING_initWithNSString_withNSString_(type, name);
    case 9:
    return new_EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_initWithNSString_withNSString_(type, name);
    case 10:
    return new_EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_init();
    default:
    @throw new_EduStanfordNlpSemgraphSemgrexParseException_initWithNSString_(JreStrcat("$$$", @"Relation ", reln, @" not handled by getRelation"));
  }
}

EduStanfordNlpSemgraphSemgrexGraphRelation *EduStanfordNlpSemgraphSemgrexGraphRelation_getRelationWithNSString_withNSString_withInt_withNSString_(NSString *reln, NSString *type, jint num, NSString *name) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_initialize();
  if (reln == nil && type == nil) return nil;
  if ([((NSString *) nil_chk(reln)) isEqual:@">>"]) return new_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_initWithNSString_withNSString_withInt_withInt_(type, name, num, num);
  else if ([reln isEqual:@"<<"]) return new_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_initWithNSString_withNSString_withInt_withInt_(type, name, num, num);
  else if (EduStanfordNlpSemgraphSemgrexGraphRelation_isKnownRelationWithNSString_(reln)) @throw new_EduStanfordNlpSemgraphSemgrexParseException_initWithNSString_(JreStrcat("$$$", @"Relation ", reln, @" does not use numeric arguments"));
  else @throw new_EduStanfordNlpSemgraphSemgrexParseException_initWithNSString_(JreStrcat("$$C$", @"Unrecognized compound relation ", reln, ' ', type));
}

EduStanfordNlpSemgraphSemgrexGraphRelation *EduStanfordNlpSemgraphSemgrexGraphRelation_getRelationWithNSString_withNSString_withInt_withInt_withNSString_(NSString *reln, NSString *type, jint num, jint num2, NSString *name) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_initialize();
  if (reln == nil && type == nil) return nil;
  if ([((NSString *) nil_chk(reln)) isEqual:@">>"]) return new_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_initWithNSString_withNSString_withInt_withInt_(type, name, num, num2);
  else if ([reln isEqual:@"<<"]) return new_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_initWithNSString_withNSString_withInt_withInt_(type, name, num, num2);
  else if (EduStanfordNlpSemgraphSemgrexGraphRelation_isKnownRelationWithNSString_(reln)) @throw new_EduStanfordNlpSemgraphSemgrexParseException_initWithNSString_(JreStrcat("$$$", @"Relation ", reln, @" does not use numeric arguments"));
  else @throw new_EduStanfordNlpSemgraphSemgrexParseException_initWithNSString_(JreStrcat("$$C$", @"Unrecognized compound relation ", reln, ' ', type));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpSemgraphSemgrexGraphRelation)

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setAlignmentWithEduStanfordNlpSemgraphSemgrexAlignment:(EduStanfordNlpSemgraphSemgrexAlignment *)alignment
                                                   withBoolean:(jboolean)hypToText
withEduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator:(EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator *)itr {
  self->alignment_ = alignment;
  self->hypToText_ = hypToText;
  [((EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator *) nil_chk(itr)) advance];
}

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  if (alignment_ == nil) return false;
  if (hypToText_) return [((EduStanfordNlpLingIndexedWord *) nil_chk(([((id<JavaUtilMap>) nil_chk([alignment_ getMap])) getWithId:l1]))) isEqual:l2];
  else {
    return [((EduStanfordNlpLingIndexedWord *) nil_chk(([((id<JavaUtilMap>) nil_chk([alignment_ getMap])) getWithId:l2]))) isEqual:l1];
  }
}

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  return new_EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_withEduStanfordNlpLingIndexedWord_(self, node);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x0, 4, 5, -1, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setAlignmentWithEduStanfordNlpSemgraphSemgrexAlignment:withBoolean:withEduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator:);
  methods[2].selector = @selector(satisfiesWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  methods[3].selector = @selector(searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "alignment_", "LEduStanfordNlpSemgraphSemgrexAlignment;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hypToText_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setAlignment", "LEduStanfordNlpSemgraphSemgrexAlignment;ZLEduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator;", "satisfies", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "searchNodeIterator", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "(Ledu/stanford/nlp/ling/IndexedWord;Ledu/stanford/nlp/semgraph/SemanticGraph;)Ljava/util/Iterator<Ledu/stanford/nlp/ling/IndexedWord;>;", "LEduStanfordNlpSemgraphSemgrexGraphRelation;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT = { "ALIGNMENT", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0x8, 4, 3, 7, -1, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_init(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT *self) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_withNSString_(self, @"@", @"");
  self->hypToText_ = true;
}

EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT *new_EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT, init)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT *create_EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT)

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)initialize__ {
  [self advance];
}

- (void)advance {
  next_ = nil;
}

- (jboolean)hasNext {
  return next_ != nil;
}

- (EduStanfordNlpLingIndexedWord *)next {
  if (next_ == nil) {
    return nil;
  }
  EduStanfordNlpLingIndexedWord *ret = next_;
  [self advance];
  return ret;
}

- (NSString *)getReln {
  return relation_;
}

- (void)remove {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"SearchNodeIterator does not support remove().");
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingIndexedWord;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initialize__);
  methods[2].selector = @selector(advance);
  methods[3].selector = @selector(hasNext);
  methods[4].selector = @selector(next);
  methods[5].selector = @selector(getReln);
  methods[6].selector = @selector(remove);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "next_", "LEduStanfordNlpLingIndexedWord;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "relation_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "initialize", "LEduStanfordNlpSemgraphSemgrexGraphRelation;", "Ljava/lang/Object;Ljava/util/Iterator<Ledu/stanford/nlp/ling/IndexedWord;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator = { "SearchNodeIterator", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0x408, 7, 2, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator_init(EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator *self) {
  NSObject_init(self);
  self->next_ = nil;
  self->relation_ = nil;
  [self initialize__];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator)

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1

- (void)initialize__ {
}

- (void)advance {
  if (this$0_->alignment_ == nil) return;
  if ([((EduStanfordNlpLingIndexedWord *) nil_chk(val$node_)) isEqual:JreLoadStatic(EduStanfordNlpLingIndexedWord, NO_WORD)]) next_ = nil;
  if (this$0_->hypToText_) {
    if (!foundOnce_) {
      next_ = [((id<JavaUtilMap>) nil_chk([((EduStanfordNlpSemgraphSemgrexAlignment *) nil_chk(this$0_->alignment_)) getMap])) getWithId:val$node_];
      foundOnce_ = true;
    }
    else {
      next_ = nil;
    }
  }
  else {
    jint num = 0;
    for (id<JavaUtilMap_Entry> __strong pair in nil_chk([((id<JavaUtilMap>) nil_chk([((EduStanfordNlpSemgraphSemgrexAlignment *) nil_chk(this$0_->alignment_)) getMap])) entrySet])) {
      if ([((EduStanfordNlpLingIndexedWord *) nil_chk([((id<JavaUtilMap_Entry>) nil_chk(pair)) getValue])) isEqual:val$node_]) {
        if (nextNum_ == num) {
          next_ = [pair getKey];
          nextNum_++;
          return;
        }
        num++;
      }
    }
    next_ = nil;
  }
}

- (instancetype)initWithEduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT:(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT *)outer$
                                           withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0 {
  EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_withEduStanfordNlpLingIndexedWord_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initialize__);
  methods[1].selector = @selector(advance);
  methods[2].selector = @selector(initWithEduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT:withEduStanfordNlpLingIndexedWord:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LEduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "foundOnce_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "nextNum_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "val$node_", "LEduStanfordNlpLingIndexedWord;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "initialize", "LEduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT;LEduStanfordNlpLingIndexedWord;", "LEduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT;", "searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1 = { "", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0x8008, 3, 4, 2, -1, 3, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_withEduStanfordNlpLingIndexedWord_(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1 *self, EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT *outer$, EduStanfordNlpLingIndexedWord *capture$0) {
  self->this$0_ = outer$;
  self->val$node_ = capture$0;
  EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator_init(self);
  self->foundOnce_ = false;
}

EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_withEduStanfordNlpLingIndexedWord_(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT *outer$, EduStanfordNlpLingIndexedWord *capture$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1, initWithEduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_withEduStanfordNlpLingIndexedWord_, outer$, capture$0)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_withEduStanfordNlpLingIndexedWord_(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT *outer$, EduStanfordNlpLingIndexedWord *capture$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_$1, initWithEduStanfordNlpSemgraphSemgrexGraphRelation_ALIGNMENT_withEduStanfordNlpLingIndexedWord_, outer$, capture$0)
}

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name {
  EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_initWithNSString_withNSString_(self, reln, name);
  return self;
}

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  id<JavaUtilList> deps = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) childPairsWithEduStanfordNlpLingIndexedWord:l1];
  for (EduStanfordNlpUtilPair * __strong dep in nil_chk(deps)) {
    if ([((id<JavaUtilFunctionPredicate>) nil_chk(self->type_)) testWithId:[((EduStanfordNlpTreesGrammaticalRelation *) nil_chk([((EduStanfordNlpUtilPair *) nil_chk(dep)) first])) description]] && [((EduStanfordNlpLingIndexedWord *) nil_chk([dep second])) isEqual:l2]) {
      return true;
    }
  }
  return false;
}

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  return new_EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(self, node, sg);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x0, 3, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(satisfiesWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  methods[2].selector = @selector(searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;", "satisfies", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "searchNodeIterator", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "(Ledu/stanford/nlp/ling/IndexedWord;Ledu/stanford/nlp/semgraph/SemanticGraph;)Ljava/util/Iterator<Ledu/stanford/nlp/ling/IndexedWord;>;", "LEduStanfordNlpSemgraphSemgrexGraphRelation;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER = { "GOVERNER", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0xa, 3, 1, 6, -1, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER *self, NSString *reln, NSString *name) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_withNSString_withNSString_(self, @">", reln, name);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER *new_EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_initWithNSString_withNSString_(NSString *reln, NSString *name) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER, initWithNSString_withNSString_, reln, name)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER *create_EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_initWithNSString_withNSString_(NSString *reln, NSString *name) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER, initWithNSString_withNSString_, reln, name)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER)

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1

- (void)advance {
  if ([((EduStanfordNlpLingIndexedWord *) nil_chk(val$node_)) isEqual:JreLoadStatic(EduStanfordNlpLingIndexedWord, NO_WORD)]) {
    next_ = nil;
    return;
  }
  if (iterator_ == nil) {
    iterator_ = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(val$sg_)) outgoingEdgeIteratorWithEduStanfordNlpLingIndexedWord:val$node_];
  }
  while ([((id<JavaUtilIterator>) nil_chk(iterator_)) hasNext]) {
    EduStanfordNlpSemgraphSemanticGraphEdge *edge = [((id<JavaUtilIterator>) nil_chk(iterator_)) next];
    relation_ = [((EduStanfordNlpTreesGrammaticalRelation *) nil_chk([((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge)) getRelation])) description];
    if (![((id<JavaUtilFunctionPredicate>) nil_chk(this$0_->type_)) testWithId:relation_]) {
      continue;
    }
    self->next_ = [edge getTarget];
    return;
  }
  self->next_ = nil;
}

- (instancetype)initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER:(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER *)outer$
                                          withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)capture$1 {
  EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(self, outer$, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(advance);
  methods[1].selector = @selector(initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LEduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "iterator_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x0, -1, -1, 1, -1 },
    { "val$node_", "LEduStanfordNlpLingIndexedWord;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$sg_", "LEduStanfordNlpSemgraphSemanticGraph;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "Ljava/util/Iterator<Ledu/stanford/nlp/semgraph/SemanticGraphEdge;>;", "LEduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER;", "searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1 = { "", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0x8008, 2, 4, 2, -1, 3, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1 *self, EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) {
  self->this$0_ = outer$;
  self->val$node_ = capture$0;
  self->val$sg_ = capture$1;
  EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator_init(self);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1, initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_, outer$, capture$0, capture$1)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_$1, initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GOVERNER_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_, outer$, capture$0, capture$1)
}

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name {
  EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_initWithNSString_withNSString_(self, reln, name);
  return self;
}

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  if ([((EduStanfordNlpLingIndexedWord *) nil_chk(l1)) isEqual:JreLoadStatic(EduStanfordNlpLingIndexedWord, NO_WORD)] || [((EduStanfordNlpLingIndexedWord *) nil_chk(l2)) isEqual:JreLoadStatic(EduStanfordNlpLingIndexedWord, NO_WORD)]) return false;
  id<JavaUtilList> govs = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) parentPairsWithEduStanfordNlpLingIndexedWord:l1];
  for (EduStanfordNlpUtilPair * __strong gov in nil_chk(govs)) {
    if ([((id<JavaUtilFunctionPredicate>) nil_chk(self->type_)) testWithId:[((EduStanfordNlpTreesGrammaticalRelation *) nil_chk([((EduStanfordNlpUtilPair *) nil_chk(gov)) first])) description]] && [((EduStanfordNlpLingIndexedWord *) nil_chk([gov second])) isEqual:l2]) return true;
  }
  return false;
}

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  return new_EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(self, node, sg);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x0, 3, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(satisfiesWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  methods[2].selector = @selector(searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;", "satisfies", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "searchNodeIterator", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "(Ledu/stanford/nlp/ling/IndexedWord;Ledu/stanford/nlp/semgraph/SemanticGraph;)Ljava/util/Iterator<Ledu/stanford/nlp/ling/IndexedWord;>;", "LEduStanfordNlpSemgraphSemgrexGraphRelation;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT = { "DEPENDENT", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0xa, 3, 1, 6, -1, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT *self, NSString *reln, NSString *name) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_withNSString_withNSString_(self, @"<", reln, name);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT *new_EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_initWithNSString_withNSString_(NSString *reln, NSString *name) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT, initWithNSString_withNSString_, reln, name)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT *create_EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_initWithNSString_withNSString_(NSString *reln, NSString *name) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT, initWithNSString_withNSString_, reln, name)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT)

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1

- (void)advance {
  if ([((EduStanfordNlpLingIndexedWord *) nil_chk(val$node_)) isEqual:JreLoadStatic(EduStanfordNlpLingIndexedWord, NO_WORD)]) {
    next_ = nil;
    return;
  }
  id<JavaUtilList> govs = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(val$sg_)) parentPairsWithEduStanfordNlpLingIndexedWord:val$node_];
  while (nextNum_ < [((id<JavaUtilList>) nil_chk(govs)) size] && ![((id<JavaUtilFunctionPredicate>) nil_chk(this$0_->type_)) testWithId:[((EduStanfordNlpTreesGrammaticalRelation *) nil_chk([((EduStanfordNlpUtilPair *) nil_chk([govs getWithInt:nextNum_])) first])) description]]) {
    nextNum_++;
  }
  if (nextNum_ < [govs size]) {
    next_ = [((EduStanfordNlpUtilPair *) nil_chk([govs getWithInt:nextNum_])) second];
    relation_ = [((EduStanfordNlpTreesGrammaticalRelation *) nil_chk([((EduStanfordNlpUtilPair *) nil_chk([govs getWithInt:nextNum_])) first])) description];
    nextNum_++;
  }
  else {
    next_ = nil;
  }
}

- (instancetype)initWithEduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT:(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT *)outer$
                                           withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0
                                     withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)capture$1 {
  EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(self, outer$, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(advance);
  methods[1].selector = @selector(initWithEduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LEduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "nextNum_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "val$node_", "LEduStanfordNlpLingIndexedWord;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$sg_", "LEduStanfordNlpSemgraphSemanticGraph;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "LEduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT;", "searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1 = { "", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0x8008, 2, 4, 1, -1, 2, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1 *self, EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) {
  self->this$0_ = outer$;
  self->val$node_ = capture$0;
  self->val$sg_ = capture$1;
  EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator_init(self);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1, initWithEduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_, outer$, capture$0, capture$1)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_$1, initWithEduStanfordNlpSemgraphSemgrexGraphRelation_DEPENDENT_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_, outer$, capture$0, capture$1)
}

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name
                         withInt:(jint)startDepth
                         withInt:(jint)endDepth {
  EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_initWithNSString_withNSString_withInt_withInt_(self, reln, name, startDepth, endDepth);
  return self;
}

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  if ([((EduStanfordNlpLingIndexedWord *) nil_chk(l1)) isEqual:JreLoadStatic(EduStanfordNlpLingIndexedWord, NO_WORD)] || [((EduStanfordNlpLingIndexedWord *) nil_chk(l2)) isEqual:JreLoadStatic(EduStanfordNlpLingIndexedWord, NO_WORD)]) return false;
  id<JavaUtilList> usedNodes = new_JavaUtilArrayList_init();
  for (jint i = 0; i <= endDepth_; ++i) {
    [usedNodes addWithId:EduStanfordNlpUtilGenerics_newIdentityHashSet()];
  }
  return l1 != l2 && EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_satisfyHelperWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_withInt_withJavaUtilList_(self, l1, l2, sg, 0, usedNodes);
}

- (jboolean)satisfyHelperWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)parent
                         withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
                   withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                                   withInt:(jint)depth
                                          withJavaUtilList:(id<JavaUtilList>)usedNodes {
  return EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_satisfyHelperWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_withInt_withJavaUtilList_(self, parent, l2, sg, depth, usedNodes);
}

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  return new_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(self, node, sg);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 3, 4, -1, 5, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x0, 6, 7, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:withInt:withInt:);
  methods[1].selector = @selector(satisfiesWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  methods[2].selector = @selector(satisfyHelperWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:withInt:withJavaUtilList:);
  methods[3].selector = @selector(searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "startDepth_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "endDepth_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;II", "satisfies", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "satisfyHelper", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;ILJavaUtilList;", "(Ledu/stanford/nlp/ling/IndexedWord;Ledu/stanford/nlp/ling/IndexedWord;Ledu/stanford/nlp/semgraph/SemanticGraph;ILjava/util/List<Ljava/util/Set<Ledu/stanford/nlp/ling/IndexedWord;>;>;)Z", "searchNodeIterator", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "(Ledu/stanford/nlp/ling/IndexedWord;Ledu/stanford/nlp/semgraph/SemanticGraph;)Ljava/util/Iterator<Ledu/stanford/nlp/ling/IndexedWord;>;", "LEduStanfordNlpSemgraphSemgrexGraphRelation;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT = { "LIMITED_GRANDPARENT", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0xa, 4, 3, 9, -1, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_initWithNSString_withNSString_withInt_withInt_(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT *self, NSString *reln, NSString *name, jint startDepth, jint endDepth) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_withNSString_withNSString_(self, JreStrcat("ICI$", startDepth, ',', endDepth, @">>"), reln, name);
  self->startDepth_ = startDepth;
  self->endDepth_ = endDepth;
}

EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT *new_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_initWithNSString_withNSString_withInt_withInt_(NSString *reln, NSString *name, jint startDepth, jint endDepth) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT, initWithNSString_withNSString_withInt_withInt_, reln, name, startDepth, endDepth)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT *create_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_initWithNSString_withNSString_withInt_withInt_(NSString *reln, NSString *name, jint startDepth, jint endDepth) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT, initWithNSString_withNSString_withInt_withInt_, reln, name, startDepth, endDepth)
}

jboolean EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_satisfyHelperWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_withInt_withJavaUtilList_(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT *self, EduStanfordNlpLingIndexedWord *parent, EduStanfordNlpLingIndexedWord *l2, EduStanfordNlpSemgraphSemanticGraph *sg, jint depth, id<JavaUtilList> usedNodes) {
  id<JavaUtilList> deps = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) childPairsWithEduStanfordNlpLingIndexedWord:parent];
  if (depth + 1 > self->endDepth_) {
    return false;
  }
  if (depth + 1 >= self->startDepth_) {
    for (EduStanfordNlpUtilPair * __strong dep in nil_chk(deps)) {
      if ([((id<JavaUtilFunctionPredicate>) nil_chk(self->type_)) testWithId:[((EduStanfordNlpTreesGrammaticalRelation *) nil_chk([((EduStanfordNlpUtilPair *) nil_chk(dep)) first])) description]] && [((EduStanfordNlpLingIndexedWord *) nil_chk([dep second])) isEqual:l2]) return true;
    }
  }
  [((id<JavaUtilSet>) nil_chk([((id<JavaUtilList>) nil_chk(usedNodes)) getWithInt:depth])) addWithId:parent];
  for (EduStanfordNlpUtilPair * __strong dep in nil_chk(deps)) {
    if (([usedNodes size] < depth + 1 || ![((id<JavaUtilSet>) nil_chk([usedNodes getWithInt:depth + 1])) containsWithId:[((EduStanfordNlpUtilPair *) nil_chk(dep)) second]]) && EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_satisfyHelperWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_withInt_withJavaUtilList_(self, [((EduStanfordNlpUtilPair *) nil_chk(dep)) second], l2, sg, depth + 1, usedNodes)) return true;
  }
  return false;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT)

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1

- (void)initialize__ {
  if ([((EduStanfordNlpLingIndexedWord *) nil_chk(val$node_)) isEqual:JreLoadStatic(EduStanfordNlpLingIndexedWord, NO_WORD)]) {
    next_ = nil;
    return;
  }
  searchStack_ = EduStanfordNlpUtilGenerics_newArrayList();
  for (jint i = 0; i <= this$0_->endDepth_; ++i) {
    [((id<JavaUtilList>) nil_chk(searchStack_)) addWithId:new_JavaUtilStack_init()];
  }
  seenNodes_ = new_JavaUtilArrayList_init();
  for (jint i = 0; i <= this$0_->endDepth_; ++i) {
    [((id<JavaUtilList>) nil_chk(seenNodes_)) addWithId:EduStanfordNlpUtilGenerics_newIdentityHashSet()];
  }
  returnedNodes_ = EduStanfordNlpUtilGenerics_newIdentityHashSet();
  currentDepth_ = 1;
  id<JavaUtilList> children = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(val$sg_)) childPairsWithEduStanfordNlpLingIndexedWord:val$node_];
  for (jint i = [((id<JavaUtilList>) nil_chk(children)) size] - 1; i >= 0; i--) {
    (void) [((JavaUtilStack *) nil_chk([((id<JavaUtilList>) nil_chk(searchStack_)) getWithInt:1])) pushWithId:[children getWithInt:i]];
  }
  if (![((JavaUtilStack *) nil_chk([((id<JavaUtilList>) nil_chk(searchStack_)) getWithInt:1])) isEmpty]) {
    [self advance];
  }
}

- (void)advance {
  if ([((EduStanfordNlpLingIndexedWord *) nil_chk(val$node_)) isEqual:JreLoadStatic(EduStanfordNlpLingIndexedWord, NO_WORD)]) {
    next_ = nil;
    return;
  }
  EduStanfordNlpUtilPair *nextPair;
  while (currentDepth_ <= this$0_->endDepth_) {
    JavaUtilStack *thisStack = [((id<JavaUtilList>) nil_chk(searchStack_)) getWithInt:currentDepth_];
    id<JavaUtilSet> thisSeen = [((id<JavaUtilList>) nil_chk(seenNodes_)) getWithInt:currentDepth_];
    JavaUtilStack *nextStack;
    id<JavaUtilSet> nextSeen;
    if (currentDepth_ < this$0_->endDepth_) {
      nextStack = [((id<JavaUtilList>) nil_chk(searchStack_)) getWithInt:currentDepth_ + 1];
      nextSeen = [((id<JavaUtilList>) nil_chk(seenNodes_)) getWithInt:currentDepth_ + 1];
    }
    else {
      nextStack = nil;
      nextSeen = nil;
    }
    while (![((JavaUtilStack *) nil_chk(thisStack)) isEmpty]) {
      nextPair = [thisStack pop];
      if ([((id<JavaUtilSet>) nil_chk(thisSeen)) containsWithId:[((EduStanfordNlpUtilPair *) nil_chk(nextPair)) second]]) {
        continue;
      }
      [thisSeen addWithId:[nextPair second]];
      id<JavaUtilList> children = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(val$sg_)) childPairsWithEduStanfordNlpLingIndexedWord:[nextPair second]];
      for (jint i = [((id<JavaUtilList>) nil_chk(children)) size] - 1; i >= 0; i--) {
        if (nextSeen != nil && ![nextSeen containsWithId:[((EduStanfordNlpUtilPair *) nil_chk([children getWithInt:i])) second]]) (void) [((JavaUtilStack *) nil_chk(nextStack)) pushWithId:[children getWithInt:i]];
      }
      if (currentDepth_ >= this$0_->startDepth_ && [((id<JavaUtilFunctionPredicate>) nil_chk(this$0_->type_)) testWithId:[((EduStanfordNlpTreesGrammaticalRelation *) nil_chk([nextPair first])) description]] && ![((id<JavaUtilSet>) nil_chk(returnedNodes_)) containsWithId:[nextPair second]]) {
        next_ = [nextPair second];
        relation_ = [((EduStanfordNlpTreesGrammaticalRelation *) nil_chk([nextPair first])) description];
        [((id<JavaUtilSet>) nil_chk(returnedNodes_)) addWithId:[nextPair second]];
        return;
      }
    }
    ++currentDepth_;
  }
  next_ = nil;
}

- (instancetype)initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT:(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT *)outer$
                                                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0
                                               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)capture$1 {
  EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(self, outer$, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initialize__);
  methods[1].selector = @selector(advance);
  methods[2].selector = @selector(initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "searchStack_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 2, -1 },
    { "seenNodes_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 3, -1 },
    { "returnedNodes_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x0, -1, -1, 4, -1 },
    { "currentDepth_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "val$node_", "LEduStanfordNlpLingIndexedWord;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$sg_", "LEduStanfordNlpSemgraphSemanticGraph;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "initialize", "LEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "Ljava/util/List<Ljava/util/Stack<Ledu/stanford/nlp/util/Pair<Ledu/stanford/nlp/trees/GrammaticalRelation;Ledu/stanford/nlp/ling/IndexedWord;>;>;>;", "Ljava/util/List<Ljava/util/Set<Ledu/stanford/nlp/ling/IndexedWord;>;>;", "Ljava/util/Set<Ledu/stanford/nlp/ling/IndexedWord;>;", "LEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT;", "searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1 = { "", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0x8008, 3, 7, 5, -1, 6, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1 *self, EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) {
  self->this$0_ = outer$;
  self->val$node_ = capture$0;
  self->val$sg_ = capture$1;
  EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator_init(self);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1, initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_, outer$, capture$0, capture$1)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_$1, initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDPARENT_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_, outer$, capture$0, capture$1)
}

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING

- (instancetype)initWithNSString:(NSString *)symbol
                    withNSString:(NSString *)reln
                    withNSString:(NSString *)name {
  EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_initWithNSString_withNSString_withNSString_(self, symbol, reln, name);
  return self;
}

- (id<JavaUtilList>)getNeighborPairsWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                          withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<JavaUtilIterator>)neighborIteratorWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                              withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)search {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (EduStanfordNlpLingIndexedWord *)followEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:(EduStanfordNlpSemgraphSemanticGraphEdge *)edge {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  return l1 != l2 && EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_satisfyHelperWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_withJavaUtilSet_(self, l1, l2, sg, EduStanfordNlpUtilGenerics_newIdentityHashSet());
}

- (jboolean)satisfyHelperWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                         withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
                   withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                           withJavaUtilSet:(id<JavaUtilSet>)usedNodes {
  return EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_satisfyHelperWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_withJavaUtilSet_(self, node, l2, sg, usedNodes);
}

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  return new_EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(self, node, sg);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x400, 1, 2, -1, 3, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x400, 4, 2, -1, 5, -1, -1 },
    { NULL, "LEduStanfordNlpLingIndexedWord;", 0x400, 6, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 8, 9, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 10, 11, -1, 12, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x0, 13, 14, -1, 15, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:withNSString:);
  methods[1].selector = @selector(getNeighborPairsWithEduStanfordNlpSemgraphSemanticGraph:withEduStanfordNlpLingIndexedWord:);
  methods[2].selector = @selector(neighborIteratorWithEduStanfordNlpSemgraphSemanticGraph:withEduStanfordNlpLingIndexedWord:);
  methods[3].selector = @selector(followEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:);
  methods[4].selector = @selector(satisfiesWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  methods[5].selector = @selector(satisfyHelperWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:withJavaUtilSet:);
  methods[6].selector = @selector(searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;LNSString;", "getNeighborPairs", "LEduStanfordNlpSemgraphSemanticGraph;LEduStanfordNlpLingIndexedWord;", "(Ledu/stanford/nlp/semgraph/SemanticGraph;Ledu/stanford/nlp/ling/IndexedWord;)Ljava/util/List<Ledu/stanford/nlp/util/Pair<Ledu/stanford/nlp/trees/GrammaticalRelation;Ledu/stanford/nlp/ling/IndexedWord;>;>;", "neighborIterator", "(Ledu/stanford/nlp/semgraph/SemanticGraph;Ledu/stanford/nlp/ling/IndexedWord;)Ljava/util/Iterator<Ledu/stanford/nlp/semgraph/SemanticGraphEdge;>;", "followEdge", "LEduStanfordNlpSemgraphSemanticGraphEdge;", "satisfies", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "satisfyHelper", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;LJavaUtilSet;", "(Ledu/stanford/nlp/ling/IndexedWord;Ledu/stanford/nlp/ling/IndexedWord;Ledu/stanford/nlp/semgraph/SemanticGraph;Ljava/util/Set<Ledu/stanford/nlp/ling/IndexedWord;>;)Z", "searchNodeIterator", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "(Ledu/stanford/nlp/ling/IndexedWord;Ledu/stanford/nlp/semgraph/SemanticGraph;)Ljava/util/Iterator<Ledu/stanford/nlp/ling/IndexedWord;>;", "LEduStanfordNlpSemgraphSemgrexGraphRelation;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING = { "GRANDSOMETHING", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0x40a, 7, 1, 16, -1, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_initWithNSString_withNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING *self, NSString *symbol, NSString *reln, NSString *name) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_withNSString_withNSString_(self, symbol, reln, name);
}

jboolean EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_satisfyHelperWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_withJavaUtilSet_(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING *self, EduStanfordNlpLingIndexedWord *node, EduStanfordNlpLingIndexedWord *l2, EduStanfordNlpSemgraphSemanticGraph *sg, id<JavaUtilSet> usedNodes) {
  id<JavaUtilList> govs = [self getNeighborPairsWithEduStanfordNlpSemgraphSemanticGraph:sg withEduStanfordNlpLingIndexedWord:node];
  for (EduStanfordNlpUtilPair * __strong gov in nil_chk(govs)) {
    if ([((id<JavaUtilFunctionPredicate>) nil_chk(self->type_)) testWithId:[((EduStanfordNlpTreesGrammaticalRelation *) nil_chk([((EduStanfordNlpUtilPair *) nil_chk(gov)) first])) description]] && [((EduStanfordNlpLingIndexedWord *) nil_chk([gov second])) isEqual:l2]) return true;
  }
  [((id<JavaUtilSet>) nil_chk(usedNodes)) addWithId:node];
  for (EduStanfordNlpUtilPair * __strong gov in govs) {
    if (![usedNodes containsWithId:[((EduStanfordNlpUtilPair *) nil_chk(gov)) second]] && EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_satisfyHelperWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_withJavaUtilSet_(self, [gov second], l2, sg, usedNodes)) return true;
  }
  return false;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING)

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1

- (void)initialize__ {
  if ([((EduStanfordNlpLingIndexedWord *) nil_chk(val$node_)) isEqual:JreLoadStatic(EduStanfordNlpLingIndexedWord, NO_WORD)]) {
    next_ = nil;
    return;
  }
  neighborIterator_ = nil;
  searchedNodes_ = EduStanfordNlpUtilGenerics_newIdentityHashSet();
  matchedNodes_ = EduStanfordNlpUtilGenerics_newIdentityHashSet();
  searchStack_ = EduStanfordNlpUtilGenerics_newStack();
  (void) [((JavaUtilStack *) nil_chk(searchStack_)) pushWithId:val$node_];
  [self advance];
}

- (void)advance {
  if ([((EduStanfordNlpLingIndexedWord *) nil_chk(val$node_)) isEqual:JreLoadStatic(EduStanfordNlpLingIndexedWord, NO_WORD)]) {
    next_ = nil;
    return;
  }
  while (![((JavaUtilStack *) nil_chk(searchStack_)) isEmpty]) {
    if (neighborIterator_ == nil || ![neighborIterator_ hasNext]) {
      EduStanfordNlpLingIndexedWord *search = [((JavaUtilStack *) nil_chk(searchStack_)) pop];
      neighborIterator_ = [this$0_ neighborIteratorWithEduStanfordNlpSemgraphSemanticGraph:val$sg_ withEduStanfordNlpLingIndexedWord:search];
    }
    while ([((id<JavaUtilIterator>) nil_chk(neighborIterator_)) hasNext]) {
      EduStanfordNlpSemgraphSemanticGraphEdge *edge = [((id<JavaUtilIterator>) nil_chk(neighborIterator_)) next];
      EduStanfordNlpLingIndexedWord *otherEnd = [this$0_ followEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:edge];
      if (![((id<JavaUtilSet>) nil_chk(searchedNodes_)) containsWithId:otherEnd]) {
        (void) [((JavaUtilStack *) nil_chk(searchStack_)) pushWithId:otherEnd];
        [((id<JavaUtilSet>) nil_chk(searchedNodes_)) addWithId:otherEnd];
      }
      if ([((id<JavaUtilFunctionPredicate>) nil_chk(this$0_->type_)) testWithId:[((EduStanfordNlpTreesGrammaticalRelation *) nil_chk([((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge)) getRelation])) description]] && ![((id<JavaUtilSet>) nil_chk(matchedNodes_)) containsWithId:otherEnd]) {
        [((id<JavaUtilSet>) nil_chk(matchedNodes_)) addWithId:otherEnd];
        next_ = otherEnd;
        relation_ = [((EduStanfordNlpTreesGrammaticalRelation *) nil_chk([edge getRelation])) description];
        return;
      }
    }
  }
  next_ = nil;
}

- (instancetype)initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING:(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING *)outer$
                                                withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0
                                          withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)capture$1 {
  EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(self, outer$, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initialize__);
  methods[1].selector = @selector(advance);
  methods[2].selector = @selector(initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LEduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "searchStack_", "LJavaUtilStack;", .constantValue.asLong = 0, 0x0, -1, -1, 2, -1 },
    { "searchedNodes_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x0, -1, -1, 3, -1 },
    { "matchedNodes_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x0, -1, -1, 3, -1 },
    { "neighborIterator_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x0, -1, -1, 4, -1 },
    { "val$node_", "LEduStanfordNlpLingIndexedWord;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$sg_", "LEduStanfordNlpSemgraphSemanticGraph;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "initialize", "LEduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "Ljava/util/Stack<Ledu/stanford/nlp/ling/IndexedWord;>;", "Ljava/util/Set<Ledu/stanford/nlp/ling/IndexedWord;>;", "Ljava/util/Iterator<Ledu/stanford/nlp/semgraph/SemanticGraphEdge;>;", "LEduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING;", "searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1 = { "", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0x8008, 3, 7, 5, -1, 6, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1 *self, EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) {
  self->this$0_ = outer$;
  self->val$node_ = capture$0;
  self->val$sg_ = capture$1;
  EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator_init(self);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1, initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_, outer$, capture$0, capture$1)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_$1, initWithEduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_, outer$, capture$0, capture$1)
}

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name {
  EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT_initWithNSString_withNSString_(self, reln, name);
  return self;
}

- (id<JavaUtilList>)getNeighborPairsWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                          withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node {
  return [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) childPairsWithEduStanfordNlpLingIndexedWord:node];
}

- (id<JavaUtilIterator>)neighborIteratorWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                              withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)search {
  return [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) outgoingEdgeIteratorWithEduStanfordNlpLingIndexedWord:search];
}

- (EduStanfordNlpLingIndexedWord *)followEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:(EduStanfordNlpSemgraphSemanticGraphEdge *)edge {
  return [((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge)) getTarget];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x0, 1, 2, -1, 3, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x0, 4, 2, -1, 5, -1, -1 },
    { NULL, "LEduStanfordNlpLingIndexedWord;", 0x0, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(getNeighborPairsWithEduStanfordNlpSemgraphSemanticGraph:withEduStanfordNlpLingIndexedWord:);
  methods[2].selector = @selector(neighborIteratorWithEduStanfordNlpSemgraphSemanticGraph:withEduStanfordNlpLingIndexedWord:);
  methods[3].selector = @selector(followEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;", "getNeighborPairs", "LEduStanfordNlpSemgraphSemanticGraph;LEduStanfordNlpLingIndexedWord;", "(Ledu/stanford/nlp/semgraph/SemanticGraph;Ledu/stanford/nlp/ling/IndexedWord;)Ljava/util/List<Ledu/stanford/nlp/util/Pair<Ledu/stanford/nlp/trees/GrammaticalRelation;Ledu/stanford/nlp/ling/IndexedWord;>;>;", "neighborIterator", "(Ledu/stanford/nlp/semgraph/SemanticGraph;Ledu/stanford/nlp/ling/IndexedWord;)Ljava/util/Iterator<Ledu/stanford/nlp/semgraph/SemanticGraphEdge;>;", "followEdge", "LEduStanfordNlpSemgraphSemanticGraphEdge;", "LEduStanfordNlpSemgraphSemgrexGraphRelation;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT = { "GRANDPARENT", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0xa, 4, 1, 8, -1, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT *self, NSString *reln, NSString *name) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_initWithNSString_withNSString_withNSString_(self, @">>", reln, name);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT *new_EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT_initWithNSString_withNSString_(NSString *reln, NSString *name) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT, initWithNSString_withNSString_, reln, name)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT *create_EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT_initWithNSString_withNSString_(NSString *reln, NSString *name) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT, initWithNSString_withNSString_, reln, name)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDPARENT)

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name {
  EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID_initWithNSString_withNSString_(self, reln, name);
  return self;
}

- (id<JavaUtilList>)getNeighborPairsWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                          withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node {
  return [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) parentPairsWithEduStanfordNlpLingIndexedWord:node];
}

- (id<JavaUtilIterator>)neighborIteratorWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                              withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)search {
  return [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) incomingEdgeIteratorWithEduStanfordNlpLingIndexedWord:search];
}

- (EduStanfordNlpLingIndexedWord *)followEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:(EduStanfordNlpSemgraphSemanticGraphEdge *)edge {
  return [((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge)) getSource];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x0, 1, 2, -1, 3, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x0, 4, 2, -1, 5, -1, -1 },
    { NULL, "LEduStanfordNlpLingIndexedWord;", 0x0, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(getNeighborPairsWithEduStanfordNlpSemgraphSemanticGraph:withEduStanfordNlpLingIndexedWord:);
  methods[2].selector = @selector(neighborIteratorWithEduStanfordNlpSemgraphSemanticGraph:withEduStanfordNlpLingIndexedWord:);
  methods[3].selector = @selector(followEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;", "getNeighborPairs", "LEduStanfordNlpSemgraphSemanticGraph;LEduStanfordNlpLingIndexedWord;", "(Ledu/stanford/nlp/semgraph/SemanticGraph;Ledu/stanford/nlp/ling/IndexedWord;)Ljava/util/List<Ledu/stanford/nlp/util/Pair<Ledu/stanford/nlp/trees/GrammaticalRelation;Ledu/stanford/nlp/ling/IndexedWord;>;>;", "neighborIterator", "(Ledu/stanford/nlp/semgraph/SemanticGraph;Ledu/stanford/nlp/ling/IndexedWord;)Ljava/util/Iterator<Ledu/stanford/nlp/semgraph/SemanticGraphEdge;>;", "followEdge", "LEduStanfordNlpSemgraphSemanticGraphEdge;", "LEduStanfordNlpSemgraphSemgrexGraphRelation;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID = { "GRANDKID", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0xa, 4, 1, 8, -1, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID *self, NSString *reln, NSString *name) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDSOMETHING_initWithNSString_withNSString_withNSString_(self, @"<<", reln, name);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID *new_EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID_initWithNSString_withNSString_(NSString *reln, NSString *name) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID, initWithNSString_withNSString_, reln, name)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID *create_EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID_initWithNSString_withNSString_(NSString *reln, NSString *name) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID, initWithNSString_withNSString_, reln, name)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpSemgraphSemgrexGraphRelation_GRANDKID)

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name
                         withInt:(jint)startDepth
                         withInt:(jint)endDepth {
  EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_initWithNSString_withNSString_withInt_withInt_(self, reln, name, startDepth, endDepth);
  return self;
}

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  if ([((EduStanfordNlpLingIndexedWord *) nil_chk(l1)) isEqual:JreLoadStatic(EduStanfordNlpLingIndexedWord, NO_WORD)] || [((EduStanfordNlpLingIndexedWord *) nil_chk(l2)) isEqual:JreLoadStatic(EduStanfordNlpLingIndexedWord, NO_WORD)]) return false;
  id<JavaUtilList> usedNodes = new_JavaUtilArrayList_init();
  for (jint i = 0; i <= endDepth_; ++i) {
    [usedNodes addWithId:EduStanfordNlpUtilGenerics_newIdentityHashSet()];
  }
  return l1 != l2 && EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_satisfyHelperWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_withInt_withJavaUtilList_(self, l1, l2, sg, 0, usedNodes);
}

- (jboolean)satisfyHelperWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)child
                         withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
                   withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                                   withInt:(jint)depth
                                          withJavaUtilList:(id<JavaUtilList>)usedNodes {
  return EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_satisfyHelperWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_withInt_withJavaUtilList_(self, child, l2, sg, depth, usedNodes);
}

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  return new_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(self, node, sg);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 3, 4, -1, 5, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x0, 6, 7, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:withInt:withInt:);
  methods[1].selector = @selector(satisfiesWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  methods[2].selector = @selector(satisfyHelperWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:withInt:withJavaUtilList:);
  methods[3].selector = @selector(searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "startDepth_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "endDepth_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;II", "satisfies", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "satisfyHelper", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;ILJavaUtilList;", "(Ledu/stanford/nlp/ling/IndexedWord;Ledu/stanford/nlp/ling/IndexedWord;Ledu/stanford/nlp/semgraph/SemanticGraph;ILjava/util/List<Ljava/util/Set<Ledu/stanford/nlp/ling/IndexedWord;>;>;)Z", "searchNodeIterator", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "(Ledu/stanford/nlp/ling/IndexedWord;Ledu/stanford/nlp/semgraph/SemanticGraph;)Ljava/util/Iterator<Ledu/stanford/nlp/ling/IndexedWord;>;", "LEduStanfordNlpSemgraphSemgrexGraphRelation;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID = { "LIMITED_GRANDKID", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0xa, 4, 3, 9, -1, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_initWithNSString_withNSString_withInt_withInt_(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID *self, NSString *reln, NSString *name, jint startDepth, jint endDepth) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_withNSString_withNSString_(self, JreStrcat("ICI$", startDepth, ',', endDepth, @"<<"), reln, name);
  self->startDepth_ = startDepth;
  self->endDepth_ = endDepth;
}

EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID *new_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_initWithNSString_withNSString_withInt_withInt_(NSString *reln, NSString *name, jint startDepth, jint endDepth) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID, initWithNSString_withNSString_withInt_withInt_, reln, name, startDepth, endDepth)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID *create_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_initWithNSString_withNSString_withInt_withInt_(NSString *reln, NSString *name, jint startDepth, jint endDepth) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID, initWithNSString_withNSString_withInt_withInt_, reln, name, startDepth, endDepth)
}

jboolean EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_satisfyHelperWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_withInt_withJavaUtilList_(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID *self, EduStanfordNlpLingIndexedWord *child, EduStanfordNlpLingIndexedWord *l2, EduStanfordNlpSemgraphSemanticGraph *sg, jint depth, id<JavaUtilList> usedNodes) {
  id<JavaUtilList> deps = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) parentPairsWithEduStanfordNlpLingIndexedWord:child];
  if (depth + 1 > self->endDepth_) {
    return false;
  }
  if (depth + 1 >= self->startDepth_) {
    for (EduStanfordNlpUtilPair * __strong dep in nil_chk(deps)) {
      if ([((id<JavaUtilFunctionPredicate>) nil_chk(self->type_)) testWithId:[((EduStanfordNlpTreesGrammaticalRelation *) nil_chk([((EduStanfordNlpUtilPair *) nil_chk(dep)) first])) description]] && [((EduStanfordNlpLingIndexedWord *) nil_chk([dep second])) isEqual:l2]) return true;
    }
  }
  [((id<JavaUtilSet>) nil_chk([((id<JavaUtilList>) nil_chk(usedNodes)) getWithInt:depth])) addWithId:child];
  for (EduStanfordNlpUtilPair * __strong dep in nil_chk(deps)) {
    if (([usedNodes size] < depth + 1 || ![((id<JavaUtilSet>) nil_chk([usedNodes getWithInt:depth + 1])) containsWithId:[((EduStanfordNlpUtilPair *) nil_chk(dep)) second]]) && EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_satisfyHelperWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_withInt_withJavaUtilList_(self, [((EduStanfordNlpUtilPair *) nil_chk(dep)) second], l2, sg, depth + 1, usedNodes)) return true;
  }
  return false;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID)

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1

- (void)initialize__ {
  if ([((EduStanfordNlpLingIndexedWord *) nil_chk(val$node_)) isEqual:JreLoadStatic(EduStanfordNlpLingIndexedWord, NO_WORD)]) {
    next_ = nil;
    return;
  }
  searchStack_ = EduStanfordNlpUtilGenerics_newArrayList();
  for (jint i = 0; i <= this$0_->endDepth_; ++i) {
    [((id<JavaUtilList>) nil_chk(searchStack_)) addWithId:new_JavaUtilStack_init()];
  }
  seenNodes_ = new_JavaUtilArrayList_init();
  for (jint i = 0; i <= this$0_->endDepth_; ++i) {
    [((id<JavaUtilList>) nil_chk(seenNodes_)) addWithId:EduStanfordNlpUtilGenerics_newIdentityHashSet()];
  }
  returnedNodes_ = EduStanfordNlpUtilGenerics_newIdentityHashSet();
  currentDepth_ = 1;
  id<JavaUtilList> parents = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(val$sg_)) parentPairsWithEduStanfordNlpLingIndexedWord:val$node_];
  for (jint i = [((id<JavaUtilList>) nil_chk(parents)) size] - 1; i >= 0; i--) {
    (void) [((JavaUtilStack *) nil_chk([((id<JavaUtilList>) nil_chk(searchStack_)) getWithInt:1])) pushWithId:[parents getWithInt:i]];
  }
  if (![((JavaUtilStack *) nil_chk([((id<JavaUtilList>) nil_chk(searchStack_)) getWithInt:1])) isEmpty]) {
    [self advance];
  }
}

- (void)advance {
  if ([((EduStanfordNlpLingIndexedWord *) nil_chk(val$node_)) isEqual:JreLoadStatic(EduStanfordNlpLingIndexedWord, NO_WORD)]) {
    next_ = nil;
    return;
  }
  EduStanfordNlpUtilPair *nextPair;
  while (currentDepth_ <= this$0_->endDepth_) {
    JavaUtilStack *thisStack = [((id<JavaUtilList>) nil_chk(searchStack_)) getWithInt:currentDepth_];
    id<JavaUtilSet> thisSeen = [((id<JavaUtilList>) nil_chk(seenNodes_)) getWithInt:currentDepth_];
    JavaUtilStack *nextStack;
    id<JavaUtilSet> nextSeen;
    if (currentDepth_ < this$0_->endDepth_) {
      nextStack = [((id<JavaUtilList>) nil_chk(searchStack_)) getWithInt:currentDepth_ + 1];
      nextSeen = [((id<JavaUtilList>) nil_chk(seenNodes_)) getWithInt:currentDepth_ + 1];
    }
    else {
      nextStack = nil;
      nextSeen = nil;
    }
    while (![((JavaUtilStack *) nil_chk(thisStack)) isEmpty]) {
      nextPair = [thisStack pop];
      if ([((id<JavaUtilSet>) nil_chk(thisSeen)) containsWithId:[((EduStanfordNlpUtilPair *) nil_chk(nextPair)) second]]) {
        continue;
      }
      [thisSeen addWithId:[nextPair second]];
      id<JavaUtilList> parents = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(val$sg_)) parentPairsWithEduStanfordNlpLingIndexedWord:[nextPair second]];
      for (jint i = [((id<JavaUtilList>) nil_chk(parents)) size] - 1; i >= 0; i--) {
        if (nextSeen != nil && ![nextSeen containsWithId:[((EduStanfordNlpUtilPair *) nil_chk([parents getWithInt:i])) second]]) (void) [((JavaUtilStack *) nil_chk(nextStack)) pushWithId:[parents getWithInt:i]];
      }
      if (currentDepth_ >= this$0_->startDepth_ && [((id<JavaUtilFunctionPredicate>) nil_chk(this$0_->type_)) testWithId:[((EduStanfordNlpTreesGrammaticalRelation *) nil_chk([nextPair first])) description]] && ![((id<JavaUtilSet>) nil_chk(returnedNodes_)) containsWithId:[nextPair second]]) {
        [((id<JavaUtilSet>) nil_chk(returnedNodes_)) addWithId:[nextPair second]];
        next_ = [nextPair second];
        relation_ = [((EduStanfordNlpTreesGrammaticalRelation *) nil_chk([nextPair first])) description];
        return;
      }
    }
    ++currentDepth_;
  }
  next_ = nil;
}

- (instancetype)initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID:(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID *)outer$
                                                  withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0
                                            withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)capture$1 {
  EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(self, outer$, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initialize__);
  methods[1].selector = @selector(advance);
  methods[2].selector = @selector(initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "searchStack_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 2, -1 },
    { "seenNodes_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 3, -1 },
    { "returnedNodes_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x0, -1, -1, 4, -1 },
    { "currentDepth_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "val$node_", "LEduStanfordNlpLingIndexedWord;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$sg_", "LEduStanfordNlpSemgraphSemanticGraph;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "initialize", "LEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "Ljava/util/List<Ljava/util/Stack<Ledu/stanford/nlp/util/Pair<Ledu/stanford/nlp/trees/GrammaticalRelation;Ledu/stanford/nlp/ling/IndexedWord;>;>;>;", "Ljava/util/List<Ljava/util/Set<Ledu/stanford/nlp/ling/IndexedWord;>;>;", "Ljava/util/Set<Ledu/stanford/nlp/ling/IndexedWord;>;", "LEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID;", "searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1 = { "", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0x8008, 3, 7, 5, -1, 6, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1 *self, EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) {
  self->this$0_ = outer$;
  self->val$node_ = capture$0;
  self->val$sg_ = capture$1;
  EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator_init(self);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1, initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_, outer$, capture$0, capture$1)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_$1, initWithEduStanfordNlpSemgraphSemgrexGraphRelation_LIMITED_GRANDKID_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_, outer$, capture$0, capture$1)
}

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name {
  EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_initWithNSString_withNSString_(self, reln, name);
  return self;
}

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  if (l1 == l2) {
    return true;
  }
  return false;
}

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  return new_EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1_initWithEduStanfordNlpLingIndexedWord_(node);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x0, 3, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(satisfiesWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  methods[2].selector = @selector(searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;LNSString;", "satisfies", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "searchNodeIterator", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "(Ledu/stanford/nlp/ling/IndexedWord;Ledu/stanford/nlp/semgraph/SemanticGraph;)Ljava/util/Iterator<Ledu/stanford/nlp/ling/IndexedWord;>;", "LEduStanfordNlpSemgraphSemgrexGraphRelation;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS = { "EQUALS", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, NULL, 7, 0xa, 3, 0, 6, -1, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS *self, NSString *reln, NSString *name) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_withNSString_withNSString_(self, @"==", reln, name);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS *new_EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_initWithNSString_withNSString_(NSString *reln, NSString *name) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS, initWithNSString_withNSString_, reln, name)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS *create_EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_initWithNSString_withNSString_(NSString *reln, NSString *name) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS, initWithNSString_withNSString_, reln, name)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS)

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1

- (void)advance {
  if ([((EduStanfordNlpLingIndexedWord *) nil_chk(val$node_)) isEqual:JreLoadStatic(EduStanfordNlpLingIndexedWord, NO_WORD)]) {
    next_ = nil;
    return;
  }
  if (alreadyIterated_) {
    next_ = nil;
    return;
  }
  alreadyIterated_ = true;
  next_ = val$node_;
  return;
}

- (instancetype)initWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0 {
  EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1_initWithEduStanfordNlpLingIndexedWord_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(advance);
  methods[1].selector = @selector(initWithEduStanfordNlpLingIndexedWord:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "alreadyIterated_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "val$node_", "LEduStanfordNlpLingIndexedWord;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpLingIndexedWord;", "LEduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS;", "searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1 = { "", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0x8008, 2, 2, 1, -1, 2, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1_initWithEduStanfordNlpLingIndexedWord_(EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1 *self, EduStanfordNlpLingIndexedWord *capture$0) {
  self->val$node_ = capture$0;
  EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator_init(self);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1_initWithEduStanfordNlpLingIndexedWord_(EduStanfordNlpLingIndexedWord *capture$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1, initWithEduStanfordNlpLingIndexedWord_, capture$0)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1_initWithEduStanfordNlpLingIndexedWord_(EduStanfordNlpLingIndexedWord *capture$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_EQUALS_$1, initWithEduStanfordNlpLingIndexedWord_, capture$0)
}

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION

- (instancetype)initWithNSString:(NSString *)symbol
                    withNSString:(NSString *)reln
                    withNSString:(NSString *)name {
  EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_initWithNSString_withNSString_withNSString_(self, symbol, reln, name);
  return self;
}

- (jboolean)satisfiesOrderWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                          withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  EduStanfordNlpLingIndexedWord *parent = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) getCommonAncestorWithEduStanfordNlpLingIndexedWord:l1 withEduStanfordNlpLingIndexedWord:l2];
  id<JavaUtilSet> l1Parents = [sg getParentsWithEduStanfordNlpLingIndexedWord:l1];
  if (parent != nil && [((id<JavaUtilSet>) nil_chk(l1Parents)) containsWithId:parent] && [self satisfiesOrderWithEduStanfordNlpLingIndexedWord:l1 withEduStanfordNlpLingIndexedWord:l2]) {
    return true;
  }
  return false;
}

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  return new_EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(self, node, sg);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x400, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 3, 4, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x0, 5, 6, -1, 7, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:withNSString:);
  methods[1].selector = @selector(satisfiesOrderWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:);
  methods[2].selector = @selector(satisfiesWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  methods[3].selector = @selector(searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;LNSString;", "satisfiesOrder", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;", "satisfies", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "searchNodeIterator", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "(Ledu/stanford/nlp/ling/IndexedWord;Ledu/stanford/nlp/semgraph/SemanticGraph;)Ljava/util/Iterator<Ledu/stanford/nlp/ling/IndexedWord;>;", "LEduStanfordNlpSemgraphSemgrexGraphRelation;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION = { "SIBLING_RELATION", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0x40a, 4, 1, 8, -1, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_initWithNSString_withNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION *self, NSString *symbol, NSString *reln, NSString *name) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_withNSString_withNSString_(self, symbol, reln, name);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION)

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1

- (void)advance {
  if ([((EduStanfordNlpLingIndexedWord *) nil_chk(val$node_)) isEqual:JreLoadStatic(EduStanfordNlpLingIndexedWord, NO_WORD)]) {
    next_ = nil;
    return;
  }
  if (iterator_ == nil) {
    id<JavaUtilSet> parents = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(val$sg_)) getParentsWithEduStanfordNlpLingIndexedWord:val$node_];
    id<JavaUtilSet> neighbors = EduStanfordNlpUtilGenerics_newIdentityHashSet();
    for (EduStanfordNlpLingIndexedWord * __strong parent in nil_chk(parents)) {
      [((id<JavaUtilSet>) nil_chk(neighbors)) addAllWithJavaUtilCollection:[val$sg_ getChildrenWithEduStanfordNlpLingIndexedWord:parent]];
    }
    iterator_ = [((id<JavaUtilSet>) nil_chk(neighbors)) iterator];
  }
  while ([((id<JavaUtilIterator>) nil_chk(iterator_)) hasNext]) {
    EduStanfordNlpLingIndexedWord *word = [((id<JavaUtilIterator>) nil_chk(iterator_)) next];
    if (![this$0_ satisfiesOrderWithEduStanfordNlpLingIndexedWord:val$node_ withEduStanfordNlpLingIndexedWord:word]) {
      continue;
    }
    self->next_ = word;
    return;
  }
  self->next_ = nil;
}

- (instancetype)initWithEduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION:(EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION *)outer$
                                                  withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0
                                            withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)capture$1 {
  EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(self, outer$, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(advance);
  methods[1].selector = @selector(initWithEduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LEduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "iterator_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x0, -1, -1, 1, -1 },
    { "val$node_", "LEduStanfordNlpLingIndexedWord;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$sg_", "LEduStanfordNlpSemgraphSemanticGraph;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "Ljava/util/Iterator<Ledu/stanford/nlp/ling/IndexedWord;>;", "LEduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION;", "searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1 = { "", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0x8008, 2, 4, 2, -1, 3, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1 *self, EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) {
  self->this$0_ = outer$;
  self->val$node_ = capture$0;
  self->val$sg_ = capture$1;
  EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator_init(self);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1, initWithEduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_, outer$, capture$0, capture$1)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION *outer$, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_$1, initWithEduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_, outer$, capture$0, capture$1)
}

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name {
  EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING_initWithNSString_withNSString_(self, reln, name);
  return self;
}

- (jboolean)satisfiesOrderWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                          withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2 {
  return [((EduStanfordNlpLingIndexedWord *) nil_chk(l1)) index] == ([((EduStanfordNlpLingIndexedWord *) nil_chk(l2)) index] - 1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(satisfiesOrderWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;", "satisfiesOrder", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;", "LEduStanfordNlpSemgraphSemgrexGraphRelation;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING = { "RIGHT_IMMEDIATE_SIBLING", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0xa, 2, 1, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING *self, NSString *reln, NSString *name) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_initWithNSString_withNSString_withNSString_(self, @"$+", reln, name);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING *new_EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING_initWithNSString_withNSString_(NSString *reln, NSString *name) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING, initWithNSString_withNSString_, reln, name)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING *create_EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING_initWithNSString_withNSString_(NSString *reln, NSString *name) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING, initWithNSString_withNSString_, reln, name)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_IMMEDIATE_SIBLING)

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name {
  EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING_initWithNSString_withNSString_(self, reln, name);
  return self;
}

- (jboolean)satisfiesOrderWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                          withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2 {
  return [((EduStanfordNlpLingIndexedWord *) nil_chk(l1)) index] == ([((EduStanfordNlpLingIndexedWord *) nil_chk(l2)) index] + 1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(satisfiesOrderWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;", "satisfiesOrder", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;", "LEduStanfordNlpSemgraphSemgrexGraphRelation;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING = { "LEFT_IMMEDIATE_SIBLING", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0xa, 2, 1, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING *self, NSString *reln, NSString *name) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_initWithNSString_withNSString_withNSString_(self, @"$-", reln, name);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING *new_EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING_initWithNSString_withNSString_(NSString *reln, NSString *name) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING, initWithNSString_withNSString_, reln, name)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING *create_EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING_initWithNSString_withNSString_(NSString *reln, NSString *name) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING, initWithNSString_withNSString_, reln, name)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_IMMEDIATE_SIBLING)

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name {
  EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING_initWithNSString_withNSString_(self, reln, name);
  return self;
}

- (jboolean)satisfiesOrderWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                          withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2 {
  return ([((EduStanfordNlpLingIndexedWord *) nil_chk(l1)) index] < [((EduStanfordNlpLingIndexedWord *) nil_chk(l2)) index]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(satisfiesOrderWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;", "satisfiesOrder", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;", "LEduStanfordNlpSemgraphSemgrexGraphRelation;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING = { "RIGHT_SIBLING", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0xa, 2, 1, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING *self, NSString *reln, NSString *name) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_initWithNSString_withNSString_withNSString_(self, @"$++", reln, name);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING *new_EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING_initWithNSString_withNSString_(NSString *reln, NSString *name) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING, initWithNSString_withNSString_, reln, name)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING *create_EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING_initWithNSString_withNSString_(NSString *reln, NSString *name) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING, initWithNSString_withNSString_, reln, name)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpSemgraphSemgrexGraphRelation_RIGHT_SIBLING)

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name {
  EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING_initWithNSString_withNSString_(self, reln, name);
  return self;
}

- (jboolean)satisfiesOrderWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                          withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2 {
  return ([((EduStanfordNlpLingIndexedWord *) nil_chk(l1)) index] > [((EduStanfordNlpLingIndexedWord *) nil_chk(l2)) index]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(satisfiesOrderWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;", "satisfiesOrder", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;", "LEduStanfordNlpSemgraphSemgrexGraphRelation;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING = { "LEFT_SIBLING", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0xa, 2, 1, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING *self, NSString *reln, NSString *name) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_SIBLING_RELATION_initWithNSString_withNSString_withNSString_(self, @"$--", reln, name);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING *new_EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING_initWithNSString_withNSString_(NSString *reln, NSString *name) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING, initWithNSString_withNSString_, reln, name)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING *create_EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING_initWithNSString_withNSString_(NSString *reln, NSString *name) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING, initWithNSString_withNSString_, reln, name)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpSemgraphSemgrexGraphRelation_LEFT_SIBLING)

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE

- (instancetype)initWithNSString:(NSString *)reln
                    withNSString:(NSString *)name {
  EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_initWithNSString_withNSString_(self, reln, name);
  return self;
}

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  if ([((EduStanfordNlpLingIndexedWord *) nil_chk(l1)) index] == ([((EduStanfordNlpLingIndexedWord *) nil_chk(l2)) index] - 1)) {
    return true;
  }
  return false;
}

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  return new_EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1_initWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(node, sg);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x0, 3, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(satisfiesWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  methods[2].selector = @selector(searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;", "satisfies", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "searchNodeIterator", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "(Ledu/stanford/nlp/ling/IndexedWord;Ledu/stanford/nlp/semgraph/SemanticGraph;)Ljava/util/Iterator<Ledu/stanford/nlp/ling/IndexedWord;>;", "LEduStanfordNlpSemgraphSemgrexGraphRelation;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE = { "ADJACENT_NODE", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0xa, 3, 1, 6, -1, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE *self, NSString *reln, NSString *name) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_withNSString_withNSString_(self, @".", reln, name);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE *new_EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_initWithNSString_withNSString_(NSString *reln, NSString *name) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE, initWithNSString_withNSString_, reln, name)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE *create_EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_initWithNSString_withNSString_(NSString *reln, NSString *name) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE, initWithNSString_withNSString_, reln, name)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE)

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1

- (void)advance {
  if ([((EduStanfordNlpLingIndexedWord *) nil_chk(val$node_)) isEqual:JreLoadStatic(EduStanfordNlpLingIndexedWord, NO_WORD)]) {
    next_ = nil;
    return;
  }
  if (iterator_ == nil) {
    iterator_ = [((id<JavaUtilSet>) nil_chk([((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(val$sg_)) vertexSet])) iterator];
  }
  while ([((id<JavaUtilIterator>) nil_chk(iterator_)) hasNext]) {
    EduStanfordNlpLingIndexedWord *word = [((id<JavaUtilIterator>) nil_chk(iterator_)) next];
    if ([val$node_ index] != ([((EduStanfordNlpLingIndexedWord *) nil_chk(word)) index] - 1)) {
      continue;
    }
    self->next_ = word;
    return;
  }
  self->next_ = nil;
}

- (instancetype)initWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0
              withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)capture$1 {
  EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1_initWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(self, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(advance);
  methods[1].selector = @selector(initWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "iterator_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x0, -1, -1, 1, -1 },
    { "val$node_", "LEduStanfordNlpLingIndexedWord;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$sg_", "LEduStanfordNlpSemgraphSemanticGraph;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "Ljava/util/Iterator<Ledu/stanford/nlp/ling/IndexedWord;>;", "LEduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE;", "searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1 = { "", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0x8008, 2, 3, 2, -1, 3, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1_initWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1 *self, EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) {
  self->val$node_ = capture$0;
  self->val$sg_ = capture$1;
  EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator_init(self);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1_initWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1, initWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_, capture$0, capture$1)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1_initWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpLingIndexedWord *capture$0, EduStanfordNlpSemgraphSemanticGraph *capture$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_ADJACENT_NODE_$1, initWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_, capture$0, capture$1)
}

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_$1

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  return l1 == l2;
}

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  return new_EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1_initWithEduStanfordNlpLingIndexedWord_(node);
}

- (instancetype)initWithNSString:(NSString *)arg$0
                    withNSString:(NSString *)arg$1 {
  EduStanfordNlpSemgraphSemgrexGraphRelation_$1_initWithNSString_withNSString_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x0, 2, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x0, -1, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(satisfiesWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  methods[1].selector = @selector(searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  methods[2].selector = @selector(initWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpSemgraphSemgrexGraphRelation_$1_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "satisfies", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "searchNodeIterator", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "(Ledu/stanford/nlp/ling/IndexedWord;Ledu/stanford/nlp/semgraph/SemanticGraph;)Ljava/util/Iterator<Ledu/stanford/nlp/ling/IndexedWord;>;", "LNSString;LNSString;", "LEduStanfordNlpSemgraphSemgrexGraphRelation;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_$1 = { "", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0x8008, 3, 1, 6, -1, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_$1;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_$1_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_$1 *self, NSString *arg$0, NSString *arg$1) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_withNSString_(self, arg$0, arg$1);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_$1_initWithNSString_withNSString_(NSString *arg$0, NSString *arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_$1, initWithNSString_withNSString_, arg$0, arg$1)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_$1_initWithNSString_withNSString_(NSString *arg$0, NSString *arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_$1, initWithNSString_withNSString_, arg$0, arg$1)
}

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1

- (void)initialize__ {
  next_ = val$node_;
}

- (instancetype)initWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0 {
  EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1_initWithEduStanfordNlpLingIndexedWord_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x0, 0, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initialize__);
  methods[1].selector = @selector(initWithEduStanfordNlpLingIndexedWord:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$node_", "LEduStanfordNlpLingIndexedWord;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "initialize", "LEduStanfordNlpLingIndexedWord;", "LEduStanfordNlpSemgraphSemgrexGraphRelation_$1;", "searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1 = { "", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1_initWithEduStanfordNlpLingIndexedWord_(EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1 *self, EduStanfordNlpLingIndexedWord *capture$0) {
  self->val$node_ = capture$0;
  EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator_init(self);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1_initWithEduStanfordNlpLingIndexedWord_(EduStanfordNlpLingIndexedWord *capture$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1, initWithEduStanfordNlpLingIndexedWord_, capture$0)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1_initWithEduStanfordNlpLingIndexedWord_(EduStanfordNlpLingIndexedWord *capture$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_$1_$1, initWithEduStanfordNlpLingIndexedWord_, capture$0)
}

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_$2

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  return true;
}

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  return [((id<JavaUtilSet>) nil_chk([((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) vertexSet])) iterator];
}

- (instancetype)initWithNSString:(NSString *)arg$0
                    withNSString:(NSString *)arg$1 {
  EduStanfordNlpSemgraphSemgrexGraphRelation_$2_initWithNSString_withNSString_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x0, 2, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x0, -1, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(satisfiesWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  methods[1].selector = @selector(searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  methods[2].selector = @selector(initWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpSemgraphSemgrexGraphRelation_$2_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "satisfies", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "searchNodeIterator", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "(Ledu/stanford/nlp/ling/IndexedWord;Ledu/stanford/nlp/semgraph/SemanticGraph;)Ljava/util/Iterator<Ledu/stanford/nlp/ling/IndexedWord;>;", "LNSString;LNSString;", "LEduStanfordNlpSemgraphSemgrexGraphRelation;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_$2 = { "", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0x8008, 3, 1, 6, -1, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_$2;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_$2_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_$2 *self, NSString *arg$0, NSString *arg$1) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_withNSString_(self, arg$0, arg$1);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_$2 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_$2_initWithNSString_withNSString_(NSString *arg$0, NSString *arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_$2, initWithNSString_withNSString_, arg$0, arg$1)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_$2 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_$2_initWithNSString_withNSString_(NSString *arg$0, NSString *arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_$2, initWithNSString_withNSString_, arg$0, arg$1)
}

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_$3

- (jboolean)satisfiesWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l1
                     withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)l2
               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  return l1 == l2;
}

- (id<JavaUtilIterator>)searchNodeIteratorWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                    withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  return new_EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1_initWithEduStanfordNlpLingIndexedWord_(node);
}

- (instancetype)initWithNSString:(NSString *)arg$0
                    withNSString:(NSString *)arg$1 {
  EduStanfordNlpSemgraphSemgrexGraphRelation_$3_initWithNSString_withNSString_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x0, 2, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x0, -1, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(satisfiesWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  methods[1].selector = @selector(searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  methods[2].selector = @selector(initWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpSemgraphSemgrexGraphRelation_$3_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "satisfies", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "searchNodeIterator", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "(Ledu/stanford/nlp/ling/IndexedWord;Ledu/stanford/nlp/semgraph/SemanticGraph;)Ljava/util/Iterator<Ledu/stanford/nlp/ling/IndexedWord;>;", "LNSString;LNSString;", "LEduStanfordNlpSemgraphSemgrexGraphRelation;" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_$3 = { "", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0x8008, 3, 1, 6, -1, -1, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_$3;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_$3_initWithNSString_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation_$3 *self, NSString *arg$0, NSString *arg$1) {
  EduStanfordNlpSemgraphSemgrexGraphRelation_initWithNSString_withNSString_(self, arg$0, arg$1);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_$3 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_$3_initWithNSString_withNSString_(NSString *arg$0, NSString *arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_$3, initWithNSString_withNSString_, arg$0, arg$1)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_$3 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_$3_initWithNSString_withNSString_(NSString *arg$0, NSString *arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_$3, initWithNSString_withNSString_, arg$0, arg$1)
}

@implementation EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1

- (void)initialize__ {
  next_ = val$node_;
}

- (instancetype)initWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)capture$0 {
  EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1_initWithEduStanfordNlpLingIndexedWord_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x0, 0, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initialize__);
  methods[1].selector = @selector(initWithEduStanfordNlpLingIndexedWord:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$node_", "LEduStanfordNlpLingIndexedWord;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "initialize", "LEduStanfordNlpLingIndexedWord;", "LEduStanfordNlpSemgraphSemgrexGraphRelation_$3;", "searchNodeIteratorWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:" };
  static const J2ObjcClassInfo _EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1 = { "", "edu.stanford.nlp.semgraph.semgrex", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, -1, -1 };
  return &_EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1;
}

@end

void EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1_initWithEduStanfordNlpLingIndexedWord_(EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1 *self, EduStanfordNlpLingIndexedWord *capture$0) {
  self->val$node_ = capture$0;
  EduStanfordNlpSemgraphSemgrexGraphRelation_SearchNodeIterator_init(self);
}

EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1 *new_EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1_initWithEduStanfordNlpLingIndexedWord_(EduStanfordNlpLingIndexedWord *capture$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1, initWithEduStanfordNlpLingIndexedWord_, capture$0)
}

EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1 *create_EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1_initWithEduStanfordNlpLingIndexedWord_(EduStanfordNlpLingIndexedWord *capture$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpSemgraphSemgrexGraphRelation_$3_$1, initWithEduStanfordNlpLingIndexedWord_, capture$0)
}
