//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/semgraph/semgrex/NodePattern.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexNodePattern")
#ifdef RESTRICT_EduStanfordNlpSemgraphSemgrexNodePattern
#define INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexNodePattern 0
#else
#define INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexNodePattern 1
#endif
#undef RESTRICT_EduStanfordNlpSemgraphSemgrexNodePattern

#if !defined (EduStanfordNlpSemgraphSemgrexNodePattern_) && (INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexNodePattern || defined(INCLUDE_EduStanfordNlpSemgraphSemgrexNodePattern))
#define EduStanfordNlpSemgraphSemgrexNodePattern_

#define RESTRICT_EduStanfordNlpSemgraphSemgrexSemgrexPattern 1
#define INCLUDE_EduStanfordNlpSemgraphSemgrexSemgrexPattern 1
#include "edu/stanford/nlp/semgraph/semgrex/SemgrexPattern.h"

@class EduStanfordNlpLingIndexedWord;
@class EduStanfordNlpSemgraphSemanticGraph;
@class EduStanfordNlpSemgraphSemgrexAlignment;
@class EduStanfordNlpSemgraphSemgrexGraphRelation;
@class EduStanfordNlpSemgraphSemgrexSemgrexMatcher;
@class EduStanfordNlpSemgraphSemgrexVariableStrings;
@protocol JavaUtilList;
@protocol JavaUtilMap;

@interface EduStanfordNlpSemgraphSemgrexNodePattern : EduStanfordNlpSemgraphSemgrexSemgrexPattern {
 @public
  EduStanfordNlpSemgraphSemgrexSemgrexPattern *child_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpSemgraphSemgrexGraphRelation:(EduStanfordNlpSemgraphSemgrexGraphRelation *)r
                                                       withBoolean:(jboolean)negDesc
                                                   withJavaUtilMap:(id<JavaUtilMap>)attrs
                                                       withBoolean:(jboolean)root
                                                       withBoolean:(jboolean)empty
                                                      withNSString:(NSString *)name;

- (instancetype)initWithEduStanfordNlpSemgraphSemgrexGraphRelation:(EduStanfordNlpSemgraphSemgrexGraphRelation *)r
                                                       withBoolean:(jboolean)negDesc
                                                   withJavaUtilMap:(id<JavaUtilMap>)attrs
                                                       withBoolean:(jboolean)root
                                                       withBoolean:(jboolean)empty
                                                      withNSString:(NSString *)name
                                                  withJavaUtilList:(id<JavaUtilList>)variableGroups;

- (id<JavaUtilList>)getChildren;

- (NSString *)getName;

- (jboolean)isNull;

- (jboolean)isRoot;

- (NSString *)localString;

- (void)makeLink;

- (EduStanfordNlpSemgraphSemgrexSemgrexMatcher *)matcherWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                                     withEduStanfordNlpSemgraphSemgrexAlignment:(EduStanfordNlpSemgraphSemgrexAlignment *)alignment
                                                        withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg_align
                                                                                    withBoolean:(jboolean)hyp
                                                              withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                                                                withJavaUtilMap:(id<JavaUtilMap>)namesToNodes
                                                                                withJavaUtilMap:(id<JavaUtilMap>)namesToRelations
                                               withEduStanfordNlpSemgraphSemgrexVariableStrings:(EduStanfordNlpSemgraphSemgrexVariableStrings *)variableStrings
                                                                                    withBoolean:(jboolean)ignoreCase;

- (EduStanfordNlpSemgraphSemgrexSemgrexMatcher *)matcherWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                                              withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                                                                                withJavaUtilMap:(id<JavaUtilMap>)namesToNodes
                                                                                withJavaUtilMap:(id<JavaUtilMap>)namesToRelations
                                               withEduStanfordNlpSemgraphSemgrexVariableStrings:(EduStanfordNlpSemgraphSemgrexVariableStrings *)variableStrings
                                                                                    withBoolean:(jboolean)ignoreCase;

- (jboolean)nodeAttrMatchWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)node
                   withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                               withBoolean:(jboolean)ignoreCase;

- (void)setChildWithEduStanfordNlpSemgraphSemgrexSemgrexPattern:(EduStanfordNlpSemgraphSemgrexSemgrexPattern *)n;

- (NSString *)description;

- (NSString *)toStringWithBoolean:(jboolean)hasPrecedence;

- (NSString *)toStringWithBoolean:(jboolean)hasPrecedence
                      withBoolean:(jboolean)addChild;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexNodePattern)

J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexNodePattern, child_, EduStanfordNlpSemgraphSemgrexSemgrexPattern *)

FOUNDATION_EXPORT void EduStanfordNlpSemgraphSemgrexNodePattern_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_withBoolean_withJavaUtilMap_withBoolean_withBoolean_withNSString_(EduStanfordNlpSemgraphSemgrexNodePattern *self, EduStanfordNlpSemgraphSemgrexGraphRelation *r, jboolean negDesc, id<JavaUtilMap> attrs, jboolean root, jboolean empty, NSString *name);

FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexNodePattern *new_EduStanfordNlpSemgraphSemgrexNodePattern_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_withBoolean_withJavaUtilMap_withBoolean_withBoolean_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation *r, jboolean negDesc, id<JavaUtilMap> attrs, jboolean root, jboolean empty, NSString *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexNodePattern *create_EduStanfordNlpSemgraphSemgrexNodePattern_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_withBoolean_withJavaUtilMap_withBoolean_withBoolean_withNSString_(EduStanfordNlpSemgraphSemgrexGraphRelation *r, jboolean negDesc, id<JavaUtilMap> attrs, jboolean root, jboolean empty, NSString *name);

FOUNDATION_EXPORT void EduStanfordNlpSemgraphSemgrexNodePattern_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_withBoolean_withJavaUtilMap_withBoolean_withBoolean_withNSString_withJavaUtilList_(EduStanfordNlpSemgraphSemgrexNodePattern *self, EduStanfordNlpSemgraphSemgrexGraphRelation *r, jboolean negDesc, id<JavaUtilMap> attrs, jboolean root, jboolean empty, NSString *name, id<JavaUtilList> variableGroups);

FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexNodePattern *new_EduStanfordNlpSemgraphSemgrexNodePattern_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_withBoolean_withJavaUtilMap_withBoolean_withBoolean_withNSString_withJavaUtilList_(EduStanfordNlpSemgraphSemgrexGraphRelation *r, jboolean negDesc, id<JavaUtilMap> attrs, jboolean root, jboolean empty, NSString *name, id<JavaUtilList> variableGroups) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexNodePattern *create_EduStanfordNlpSemgraphSemgrexNodePattern_initWithEduStanfordNlpSemgraphSemgrexGraphRelation_withBoolean_withJavaUtilMap_withBoolean_withBoolean_withNSString_withJavaUtilList_(EduStanfordNlpSemgraphSemgrexGraphRelation *r, jboolean negDesc, id<JavaUtilMap> attrs, jboolean root, jboolean empty, NSString *name, id<JavaUtilList> variableGroups);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpSemgraphSemgrexNodePattern)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexNodePattern")
