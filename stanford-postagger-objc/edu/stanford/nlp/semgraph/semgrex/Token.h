//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/semgraph/semgrex/Token.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexToken")
#ifdef RESTRICT_EduStanfordNlpSemgraphSemgrexToken
#define INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexToken 0
#else
#define INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexToken 1
#endif
#undef RESTRICT_EduStanfordNlpSemgraphSemgrexToken

#if !defined (EduStanfordNlpSemgraphSemgrexToken_) && (INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexToken || defined(INCLUDE_EduStanfordNlpSemgraphSemgrexToken))
#define EduStanfordNlpSemgraphSemgrexToken_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@interface EduStanfordNlpSemgraphSemgrexToken : NSObject < JavaIoSerializable > {
 @public
  jint kind_;
  jint beginLine_;
  jint beginColumn_;
  jint endLine_;
  jint endColumn_;
  NSString *image_;
  EduStanfordNlpSemgraphSemgrexToken *next_;
  EduStanfordNlpSemgraphSemgrexToken *specialToken_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)kind;

- (instancetype)initWithInt:(jint)kind
               withNSString:(NSString *)image;

- (id)getValue;

+ (EduStanfordNlpSemgraphSemgrexToken *)newTokenWithInt:(jint)ofKind OBJC_METHOD_FAMILY_NONE;

+ (EduStanfordNlpSemgraphSemgrexToken *)newTokenWithInt:(jint)ofKind
                                           withNSString:(NSString *)image OBJC_METHOD_FAMILY_NONE;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpSemgraphSemgrexToken)

J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexToken, image_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexToken, next_, EduStanfordNlpSemgraphSemgrexToken *)
J2OBJC_FIELD_SETTER(EduStanfordNlpSemgraphSemgrexToken, specialToken_, EduStanfordNlpSemgraphSemgrexToken *)

FOUNDATION_EXPORT void EduStanfordNlpSemgraphSemgrexToken_init(EduStanfordNlpSemgraphSemgrexToken *self);

FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexToken *new_EduStanfordNlpSemgraphSemgrexToken_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexToken *create_EduStanfordNlpSemgraphSemgrexToken_init();

FOUNDATION_EXPORT void EduStanfordNlpSemgraphSemgrexToken_initWithInt_(EduStanfordNlpSemgraphSemgrexToken *self, jint kind);

FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexToken *new_EduStanfordNlpSemgraphSemgrexToken_initWithInt_(jint kind) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexToken *create_EduStanfordNlpSemgraphSemgrexToken_initWithInt_(jint kind);

FOUNDATION_EXPORT void EduStanfordNlpSemgraphSemgrexToken_initWithInt_withNSString_(EduStanfordNlpSemgraphSemgrexToken *self, jint kind, NSString *image);

FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexToken *new_EduStanfordNlpSemgraphSemgrexToken_initWithInt_withNSString_(jint kind, NSString *image) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexToken *create_EduStanfordNlpSemgraphSemgrexToken_initWithInt_withNSString_(jint kind, NSString *image);

FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexToken *EduStanfordNlpSemgraphSemgrexToken_newTokenWithInt_withNSString_(jint ofKind, NSString *image);

FOUNDATION_EXPORT EduStanfordNlpSemgraphSemgrexToken *EduStanfordNlpSemgraphSemgrexToken_newTokenWithInt_(jint ofKind);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpSemgraphSemgrexToken)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpSemgraphSemgrexToken")
