//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/optimization/StochasticCalculateMethods.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpOptimizationStochasticCalculateMethods")
#ifdef RESTRICT_EduStanfordNlpOptimizationStochasticCalculateMethods
#define INCLUDE_ALL_EduStanfordNlpOptimizationStochasticCalculateMethods 0
#else
#define INCLUDE_ALL_EduStanfordNlpOptimizationStochasticCalculateMethods 1
#endif
#undef RESTRICT_EduStanfordNlpOptimizationStochasticCalculateMethods

#if !defined (EduStanfordNlpOptimizationStochasticCalculateMethods_) && (INCLUDE_ALL_EduStanfordNlpOptimizationStochasticCalculateMethods || defined(INCLUDE_EduStanfordNlpOptimizationStochasticCalculateMethods))
#define EduStanfordNlpOptimizationStochasticCalculateMethods_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, EduStanfordNlpOptimizationStochasticCalculateMethods_Enum) {
  EduStanfordNlpOptimizationStochasticCalculateMethods_Enum_NoneSpecified = 0,
  EduStanfordNlpOptimizationStochasticCalculateMethods_Enum_GradientOnly = 1,
  EduStanfordNlpOptimizationStochasticCalculateMethods_Enum_AlgorithmicDifferentiation = 2,
  EduStanfordNlpOptimizationStochasticCalculateMethods_Enum_IncorporatedFiniteDifference = 3,
  EduStanfordNlpOptimizationStochasticCalculateMethods_Enum_ExternalFiniteDifference = 4,
};

@interface EduStanfordNlpOptimizationStochasticCalculateMethods : JavaLangEnum < NSCopying >

#pragma mark Public

- (jboolean)calculatesHessianVectorProduct;

+ (EduStanfordNlpOptimizationStochasticCalculateMethods *)parseMethodWithNSString:(NSString *)method;

+ (EduStanfordNlpOptimizationStochasticCalculateMethods *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpOptimizationStochasticCalculateMethods)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT EduStanfordNlpOptimizationStochasticCalculateMethods *EduStanfordNlpOptimizationStochasticCalculateMethods_values_[];

inline EduStanfordNlpOptimizationStochasticCalculateMethods *EduStanfordNlpOptimizationStochasticCalculateMethods_get_NoneSpecified();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpOptimizationStochasticCalculateMethods, NoneSpecified)

inline EduStanfordNlpOptimizationStochasticCalculateMethods *EduStanfordNlpOptimizationStochasticCalculateMethods_get_GradientOnly();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpOptimizationStochasticCalculateMethods, GradientOnly)

inline EduStanfordNlpOptimizationStochasticCalculateMethods *EduStanfordNlpOptimizationStochasticCalculateMethods_get_AlgorithmicDifferentiation();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpOptimizationStochasticCalculateMethods, AlgorithmicDifferentiation)

inline EduStanfordNlpOptimizationStochasticCalculateMethods *EduStanfordNlpOptimizationStochasticCalculateMethods_get_IncorporatedFiniteDifference();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpOptimizationStochasticCalculateMethods, IncorporatedFiniteDifference)

inline EduStanfordNlpOptimizationStochasticCalculateMethods *EduStanfordNlpOptimizationStochasticCalculateMethods_get_ExternalFiniteDifference();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpOptimizationStochasticCalculateMethods, ExternalFiniteDifference)

FOUNDATION_EXPORT EduStanfordNlpOptimizationStochasticCalculateMethods *EduStanfordNlpOptimizationStochasticCalculateMethods_parseMethodWithNSString_(NSString *method);

FOUNDATION_EXPORT IOSObjectArray *EduStanfordNlpOptimizationStochasticCalculateMethods_values();

FOUNDATION_EXPORT EduStanfordNlpOptimizationStochasticCalculateMethods *EduStanfordNlpOptimizationStochasticCalculateMethods_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT EduStanfordNlpOptimizationStochasticCalculateMethods *EduStanfordNlpOptimizationStochasticCalculateMethods_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpOptimizationStochasticCalculateMethods)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpOptimizationStochasticCalculateMethods")
