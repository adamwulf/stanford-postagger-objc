//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/optimization/StochasticCalculateMethods.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/optimization/StochasticCalculateMethods.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

@interface EduStanfordNlpOptimizationStochasticCalculateMethods () {
 @public
  jboolean objFuncCalculatesHdotV_;
}

@end

__attribute__((unused)) static void EduStanfordNlpOptimizationStochasticCalculateMethods_initWithBoolean_withNSString_withInt_(EduStanfordNlpOptimizationStochasticCalculateMethods *self, jboolean ObjectiveFunctionCalculatesHdotV, NSString *__name, jint __ordinal);

__attribute__((unused)) static EduStanfordNlpOptimizationStochasticCalculateMethods *new_EduStanfordNlpOptimizationStochasticCalculateMethods_initWithBoolean_withNSString_withInt_(jboolean ObjectiveFunctionCalculatesHdotV, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpOptimizationStochasticCalculateMethods)

EduStanfordNlpOptimizationStochasticCalculateMethods *EduStanfordNlpOptimizationStochasticCalculateMethods_values_[5];

@implementation EduStanfordNlpOptimizationStochasticCalculateMethods

- (jboolean)calculatesHessianVectorProduct {
  return objFuncCalculatesHdotV_;
}

+ (EduStanfordNlpOptimizationStochasticCalculateMethods *)parseMethodWithNSString:(NSString *)method {
  return EduStanfordNlpOptimizationStochasticCalculateMethods_parseMethodWithNSString_(method);
}

+ (IOSObjectArray *)values {
  return EduStanfordNlpOptimizationStochasticCalculateMethods_values();
}

+ (EduStanfordNlpOptimizationStochasticCalculateMethods *)valueOfWithNSString:(NSString *)name {
  return EduStanfordNlpOptimizationStochasticCalculateMethods_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpOptimizationStochasticCalculateMethods;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "[LEduStanfordNlpOptimizationStochasticCalculateMethods;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpOptimizationStochasticCalculateMethods;", 0x9, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(calculatesHessianVectorProduct);
  methods[1].selector = @selector(parseMethodWithNSString:);
  methods[2].selector = @selector(values);
  methods[3].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NoneSpecified", "LEduStanfordNlpOptimizationStochasticCalculateMethods;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "GradientOnly", "LEduStanfordNlpOptimizationStochasticCalculateMethods;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "AlgorithmicDifferentiation", "LEduStanfordNlpOptimizationStochasticCalculateMethods;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "IncorporatedFiniteDifference", "LEduStanfordNlpOptimizationStochasticCalculateMethods;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "ExternalFiniteDifference", "LEduStanfordNlpOptimizationStochasticCalculateMethods;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "objFuncCalculatesHdotV_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "parseMethod", "LNSString;", "valueOf", &JreEnum(EduStanfordNlpOptimizationStochasticCalculateMethods, NoneSpecified), &JreEnum(EduStanfordNlpOptimizationStochasticCalculateMethods, GradientOnly), &JreEnum(EduStanfordNlpOptimizationStochasticCalculateMethods, AlgorithmicDifferentiation), &JreEnum(EduStanfordNlpOptimizationStochasticCalculateMethods, IncorporatedFiniteDifference), &JreEnum(EduStanfordNlpOptimizationStochasticCalculateMethods, ExternalFiniteDifference), "Ljava/lang/Enum<Ledu/stanford/nlp/optimization/StochasticCalculateMethods;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpOptimizationStochasticCalculateMethods = { "StochasticCalculateMethods", "edu.stanford.nlp.optimization", ptrTable, methods, fields, 7, 0x4011, 4, 6, -1, -1, -1, 8, -1 };
  return &_EduStanfordNlpOptimizationStochasticCalculateMethods;
}

+ (void)initialize {
  if (self == [EduStanfordNlpOptimizationStochasticCalculateMethods class]) {
    JreEnum(EduStanfordNlpOptimizationStochasticCalculateMethods, NoneSpecified) = new_EduStanfordNlpOptimizationStochasticCalculateMethods_initWithBoolean_withNSString_withInt_(false, @"NoneSpecified", 0);
    JreEnum(EduStanfordNlpOptimizationStochasticCalculateMethods, GradientOnly) = new_EduStanfordNlpOptimizationStochasticCalculateMethods_initWithBoolean_withNSString_withInt_(false, @"GradientOnly", 1);
    JreEnum(EduStanfordNlpOptimizationStochasticCalculateMethods, AlgorithmicDifferentiation) = new_EduStanfordNlpOptimizationStochasticCalculateMethods_initWithBoolean_withNSString_withInt_(true, @"AlgorithmicDifferentiation", 2);
    JreEnum(EduStanfordNlpOptimizationStochasticCalculateMethods, IncorporatedFiniteDifference) = new_EduStanfordNlpOptimizationStochasticCalculateMethods_initWithBoolean_withNSString_withInt_(true, @"IncorporatedFiniteDifference", 3);
    JreEnum(EduStanfordNlpOptimizationStochasticCalculateMethods, ExternalFiniteDifference) = new_EduStanfordNlpOptimizationStochasticCalculateMethods_initWithBoolean_withNSString_withInt_(false, @"ExternalFiniteDifference", 4);
    J2OBJC_SET_INITIALIZED(EduStanfordNlpOptimizationStochasticCalculateMethods)
  }
}

@end

void EduStanfordNlpOptimizationStochasticCalculateMethods_initWithBoolean_withNSString_withInt_(EduStanfordNlpOptimizationStochasticCalculateMethods *self, jboolean ObjectiveFunctionCalculatesHdotV, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  self->objFuncCalculatesHdotV_ = ObjectiveFunctionCalculatesHdotV;
}

EduStanfordNlpOptimizationStochasticCalculateMethods *new_EduStanfordNlpOptimizationStochasticCalculateMethods_initWithBoolean_withNSString_withInt_(jboolean ObjectiveFunctionCalculatesHdotV, NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(EduStanfordNlpOptimizationStochasticCalculateMethods, initWithBoolean_withNSString_withInt_, ObjectiveFunctionCalculatesHdotV, __name, __ordinal)
}

EduStanfordNlpOptimizationStochasticCalculateMethods *EduStanfordNlpOptimizationStochasticCalculateMethods_parseMethodWithNSString_(NSString *method) {
  EduStanfordNlpOptimizationStochasticCalculateMethods_initialize();
  if ([((NSString *) nil_chk(method)) equalsIgnoreCase:@"AlgorithmicDifferentiation"]) {
    return JreEnum(EduStanfordNlpOptimizationStochasticCalculateMethods, AlgorithmicDifferentiation);
  }
  else if ([method equalsIgnoreCase:@"IncorporatedFiniteDifference"]) {
    return JreEnum(EduStanfordNlpOptimizationStochasticCalculateMethods, IncorporatedFiniteDifference);
  }
  else if ([method equalsIgnoreCase:@"ExternalFinitedifference"]) {
    return JreEnum(EduStanfordNlpOptimizationStochasticCalculateMethods, ExternalFiniteDifference);
  }
  else {
    return nil;
  }
}

IOSObjectArray *EduStanfordNlpOptimizationStochasticCalculateMethods_values() {
  EduStanfordNlpOptimizationStochasticCalculateMethods_initialize();
  return [IOSObjectArray arrayWithObjects:EduStanfordNlpOptimizationStochasticCalculateMethods_values_ count:5 type:EduStanfordNlpOptimizationStochasticCalculateMethods_class_()];
}

EduStanfordNlpOptimizationStochasticCalculateMethods *EduStanfordNlpOptimizationStochasticCalculateMethods_valueOfWithNSString_(NSString *name) {
  EduStanfordNlpOptimizationStochasticCalculateMethods_initialize();
  for (int i = 0; i < 5; i++) {
    EduStanfordNlpOptimizationStochasticCalculateMethods *e = EduStanfordNlpOptimizationStochasticCalculateMethods_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

EduStanfordNlpOptimizationStochasticCalculateMethods *EduStanfordNlpOptimizationStochasticCalculateMethods_fromOrdinal(NSUInteger ordinal) {
  EduStanfordNlpOptimizationStochasticCalculateMethods_initialize();
  if (ordinal >= 5) {
    return nil;
  }
  return EduStanfordNlpOptimizationStochasticCalculateMethods_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpOptimizationStochasticCalculateMethods)
