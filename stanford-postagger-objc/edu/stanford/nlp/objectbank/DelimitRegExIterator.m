//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/objectbank/DelimitRegExIterator.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/objectbank/DelimitRegExIterator.h"
#include "edu/stanford/nlp/objectbank/IdentityFunction.h"
#include "edu/stanford/nlp/objectbank/IteratorFromReaderFactory.h"
#include "edu/stanford/nlp/util/AbstractIterator.h"
#include "java/io/BufferedReader.h"
#include "java/io/PrintStream.h"
#include "java/io/Reader.h"
#include "java/io/StringReader.h"
#include "java/lang/Exception.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/util/Arrays.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/function/Function.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

@interface EduStanfordNlpObjectbankDelimitRegExIterator () {
 @public
  id<JavaUtilIterator> tokens_;
  id<JavaUtilFunctionFunction> op_;
  id nextToken_;
}

- (void)setNext;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpObjectbankDelimitRegExIterator, tokens_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(EduStanfordNlpObjectbankDelimitRegExIterator, op_, id<JavaUtilFunctionFunction>)
J2OBJC_FIELD_SETTER(EduStanfordNlpObjectbankDelimitRegExIterator, nextToken_, id)

__attribute__((unused)) static void EduStanfordNlpObjectbankDelimitRegExIterator_setNext(EduStanfordNlpObjectbankDelimitRegExIterator *self);

@interface EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory () {
 @public
  NSString *delim_;
  id<JavaUtilFunctionFunction> op_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory, delim_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory, op_, id<JavaUtilFunctionFunction>)

inline jlong EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory_get_serialVersionUID();
#define EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory_serialVersionUID 6846060575832573082LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory, serialVersionUID, jlong)

@implementation EduStanfordNlpObjectbankDelimitRegExIterator

+ (EduStanfordNlpObjectbankDelimitRegExIterator *)defaultDelimitRegExIteratorWithJavaIoReader:(JavaIoReader *)inArg
                                                                                 withNSString:(NSString *)delimiter {
  return EduStanfordNlpObjectbankDelimitRegExIterator_defaultDelimitRegExIteratorWithJavaIoReader_withNSString_(inArg, delimiter);
}

- (instancetype)initWithJavaIoReader:(JavaIoReader *)r
                        withNSString:(NSString *)delimiter
        withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)op {
  EduStanfordNlpObjectbankDelimitRegExIterator_initWithJavaIoReader_withNSString_withJavaUtilFunctionFunction_(self, r, delimiter, op);
  return self;
}

- (void)setNext {
  EduStanfordNlpObjectbankDelimitRegExIterator_setNext(self);
}

- (id)parseStringWithNSString:(NSString *)s {
  return [((id<JavaUtilFunctionFunction>) nil_chk(op_)) applyWithId:s];
}

- (jboolean)hasNext {
  return nextToken_ != nil;
}

- (id)next {
  if (nextToken_ == nil) {
    @throw new_JavaUtilNoSuchElementException_initWithNSString_(@"DelimitRegExIterator exhausted");
  }
  id token = nextToken_;
  EduStanfordNlpObjectbankDelimitRegExIterator_setNext(self);
  return token;
}

- (id)peek {
  return nextToken_;
}

+ (id<EduStanfordNlpObjectbankIteratorFromReaderFactory>)getFactoryWithNSString:(NSString *)delim {
  return EduStanfordNlpObjectbankDelimitRegExIterator_getFactoryWithNSString_(delim);
}

+ (id<EduStanfordNlpObjectbankIteratorFromReaderFactory>)getFactoryWithNSString:(NSString *)delim
                                                   withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)op {
  return EduStanfordNlpObjectbankDelimitRegExIterator_getFactoryWithNSString_withJavaUtilFunctionFunction_(delim, op);
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduStanfordNlpObjectbankDelimitRegExIterator_mainWithNSStringArray_(args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEduStanfordNlpObjectbankDelimitRegExIterator;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, 5, 6, -1, 7, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 8, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpObjectbankIteratorFromReaderFactory;", 0x9, 9, 6, -1, 10, -1, -1 },
    { NULL, "LEduStanfordNlpObjectbankIteratorFromReaderFactory;", 0x9, 9, 11, -1, 12, -1, -1 },
    { NULL, "V", 0x9, 13, 14, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(defaultDelimitRegExIteratorWithJavaIoReader:withNSString:);
  methods[1].selector = @selector(initWithJavaIoReader:withNSString:withJavaUtilFunctionFunction:);
  methods[2].selector = @selector(setNext);
  methods[3].selector = @selector(parseStringWithNSString:);
  methods[4].selector = @selector(hasNext);
  methods[5].selector = @selector(next);
  methods[6].selector = @selector(peek);
  methods[7].selector = @selector(getFactoryWithNSString:);
  methods[8].selector = @selector(getFactoryWithNSString:withJavaUtilFunctionFunction:);
  methods[9].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "tokens_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x2, -1, -1, 15, -1 },
    { "op_", "LJavaUtilFunctionFunction;", .constantValue.asLong = 0, 0x12, -1, -1, 16, -1 },
    { "nextToken_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, 17, -1 },
  };
  static const void *ptrTable[] = { "defaultDelimitRegExIterator", "LJavaIoReader;LNSString;", "(Ljava/io/Reader;Ljava/lang/String;)Ledu/stanford/nlp/objectbank/DelimitRegExIterator<Ljava/lang/String;>;", "LJavaIoReader;LNSString;LJavaUtilFunctionFunction;", "(Ljava/io/Reader;Ljava/lang/String;Ljava/util/function/Function<Ljava/lang/String;TT;>;)V", "parseString", "LNSString;", "(Ljava/lang/String;)TT;", "()TT;", "getFactory", "(Ljava/lang/String;)Ledu/stanford/nlp/objectbank/IteratorFromReaderFactory<Ljava/lang/String;>;", "LNSString;LJavaUtilFunctionFunction;", "<T:Ljava/lang/Object;>(Ljava/lang/String;Ljava/util/function/Function<Ljava/lang/String;TT;>;)Ledu/stanford/nlp/objectbank/IteratorFromReaderFactory<TT;>;", "main", "[LNSString;", "Ljava/util/Iterator<Ljava/lang/String;>;", "Ljava/util/function/Function<Ljava/lang/String;TT;>;", "TT;", "LEduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory;", "<T:Ljava/lang/Object;>Ledu/stanford/nlp/util/AbstractIterator<TT;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpObjectbankDelimitRegExIterator = { "DelimitRegExIterator", "edu.stanford.nlp.objectbank", ptrTable, methods, fields, 7, 0x1, 10, 3, -1, 18, -1, 19, -1 };
  return &_EduStanfordNlpObjectbankDelimitRegExIterator;
}

@end

EduStanfordNlpObjectbankDelimitRegExIterator *EduStanfordNlpObjectbankDelimitRegExIterator_defaultDelimitRegExIteratorWithJavaIoReader_withNSString_(JavaIoReader *inArg, NSString *delimiter) {
  EduStanfordNlpObjectbankDelimitRegExIterator_initialize();
  return new_EduStanfordNlpObjectbankDelimitRegExIterator_initWithJavaIoReader_withNSString_withJavaUtilFunctionFunction_(inArg, delimiter, new_EduStanfordNlpObjectbankIdentityFunction_init());
}

void EduStanfordNlpObjectbankDelimitRegExIterator_initWithJavaIoReader_withNSString_withJavaUtilFunctionFunction_(EduStanfordNlpObjectbankDelimitRegExIterator *self, JavaIoReader *r, NSString *delimiter, id<JavaUtilFunctionFunction> op) {
  EduStanfordNlpUtilAbstractIterator_init(self);
  self->op_ = op;
  JavaIoBufferedReader *in = new_JavaIoBufferedReader_initWithJavaIoReader_(r);
  @try {
    NSString *line;
    JavaLangStringBuilder *input = new_JavaLangStringBuilder_init();
    while ((line = [in readLine]) != nil) {
      (void) [((JavaLangStringBuilder *) nil_chk([input appendWithNSString:line])) appendWithNSString:@"\n"];
    }
    line = [input description];
    JavaUtilRegexPattern *p = JavaUtilRegexPattern_compileWithNSString_(JreStrcat("C$", '^', delimiter));
    JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(p)) matcherWithJavaLangCharSequence:line];
    line = [((JavaUtilRegexMatcher *) nil_chk(m)) replaceAllWithNSString:@""];
    p = JavaUtilRegexPattern_compileWithNSString_(JreStrcat("$C", delimiter, '$'));
    m = [((JavaUtilRegexPattern *) nil_chk(p)) matcherWithJavaLangCharSequence:line];
    line = [((JavaUtilRegexMatcher *) nil_chk(m)) replaceAllWithNSString:@""];
    line = [((NSString *) nil_chk(line)) trim];
    self->tokens_ = [((id<JavaUtilList>) nil_chk(JavaUtilArrays_asListWithNSObjectArray_([((NSString *) nil_chk(line)) split:delimiter]))) iterator];
  }
  @catch (JavaLangException *e) {
  }
  EduStanfordNlpObjectbankDelimitRegExIterator_setNext(self);
}

EduStanfordNlpObjectbankDelimitRegExIterator *new_EduStanfordNlpObjectbankDelimitRegExIterator_initWithJavaIoReader_withNSString_withJavaUtilFunctionFunction_(JavaIoReader *r, NSString *delimiter, id<JavaUtilFunctionFunction> op) {
  J2OBJC_NEW_IMPL(EduStanfordNlpObjectbankDelimitRegExIterator, initWithJavaIoReader_withNSString_withJavaUtilFunctionFunction_, r, delimiter, op)
}

EduStanfordNlpObjectbankDelimitRegExIterator *create_EduStanfordNlpObjectbankDelimitRegExIterator_initWithJavaIoReader_withNSString_withJavaUtilFunctionFunction_(JavaIoReader *r, NSString *delimiter, id<JavaUtilFunctionFunction> op) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpObjectbankDelimitRegExIterator, initWithJavaIoReader_withNSString_withJavaUtilFunctionFunction_, r, delimiter, op)
}

void EduStanfordNlpObjectbankDelimitRegExIterator_setNext(EduStanfordNlpObjectbankDelimitRegExIterator *self) {
  if ([((id<JavaUtilIterator>) nil_chk(self->tokens_)) hasNext]) {
    NSString *s = [((id<JavaUtilIterator>) nil_chk(self->tokens_)) next];
    self->nextToken_ = [self parseStringWithNSString:s];
  }
  else {
    self->nextToken_ = nil;
  }
}

id<EduStanfordNlpObjectbankIteratorFromReaderFactory> EduStanfordNlpObjectbankDelimitRegExIterator_getFactoryWithNSString_(NSString *delim) {
  EduStanfordNlpObjectbankDelimitRegExIterator_initialize();
  return EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory_defaultDelimitRegExIteratorFactoryWithNSString_(delim);
}

id<EduStanfordNlpObjectbankIteratorFromReaderFactory> EduStanfordNlpObjectbankDelimitRegExIterator_getFactoryWithNSString_withJavaUtilFunctionFunction_(NSString *delim, id<JavaUtilFunctionFunction> op) {
  EduStanfordNlpObjectbankDelimitRegExIterator_initialize();
  return new_EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory_initWithNSString_withJavaUtilFunctionFunction_(delim, op);
}

void EduStanfordNlpObjectbankDelimitRegExIterator_mainWithNSStringArray_(IOSObjectArray *args) {
  EduStanfordNlpObjectbankDelimitRegExIterator_initialize();
  NSString *s = @"@@123\nthis\nis\na\nsentence\n\n@@124\nThis\nis\nanother\n.\n\n@125\nThis\nis\nthe\nlast\n";
  EduStanfordNlpObjectbankDelimitRegExIterator *di = EduStanfordNlpObjectbankDelimitRegExIterator_defaultDelimitRegExIteratorWithJavaIoReader_withNSString_(new_JavaIoStringReader_initWithNSString_(s), @"\n\n");
  while ([((EduStanfordNlpObjectbankDelimitRegExIterator *) nil_chk(di)) hasNext]) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$$", @"****\n", [di next], @"\n****")];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpObjectbankDelimitRegExIterator)

@implementation EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory

+ (EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory *)defaultDelimitRegExIteratorFactoryWithNSString:(NSString *)delim {
  return EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory_defaultDelimitRegExIteratorFactoryWithNSString_(delim);
}

- (instancetype)initWithNSString:(NSString *)delim
    withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)op {
  EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory_initWithNSString_withJavaUtilFunctionFunction_(self, delim, op);
  return self;
}

- (id<JavaUtilIterator>)getIteratorWithJavaIoReader:(JavaIoReader *)r {
  return new_EduStanfordNlpObjectbankDelimitRegExIterator_initWithJavaIoReader_withNSString_withJavaUtilFunctionFunction_(r, delim_, op_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, 4, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, 5, 6, -1, 7, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(defaultDelimitRegExIteratorFactoryWithNSString:);
  methods[1].selector = @selector(initWithNSString:withJavaUtilFunctionFunction:);
  methods[2].selector = @selector(getIteratorWithJavaIoReader:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "delim_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "op_", "LJavaUtilFunctionFunction;", .constantValue.asLong = 0, 0x12, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "defaultDelimitRegExIteratorFactory", "LNSString;", "(Ljava/lang/String;)Ledu/stanford/nlp/objectbank/DelimitRegExIterator$DelimitRegExIteratorFactory<Ljava/lang/String;>;", "LNSString;LJavaUtilFunctionFunction;", "(Ljava/lang/String;Ljava/util/function/Function<Ljava/lang/String;TT;>;)V", "getIterator", "LJavaIoReader;", "(Ljava/io/Reader;)Ljava/util/Iterator<TT;>;", "Ljava/util/function/Function<Ljava/lang/String;TT;>;", "LEduStanfordNlpObjectbankDelimitRegExIterator;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Ledu/stanford/nlp/objectbank/IteratorFromReaderFactory<TT;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory = { "DelimitRegExIteratorFactory", "edu.stanford.nlp.objectbank", ptrTable, methods, fields, 7, 0x9, 3, 3, 9, -1, -1, 10, -1 };
  return &_EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory;
}

@end

EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory *EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory_defaultDelimitRegExIteratorFactoryWithNSString_(NSString *delim) {
  EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory_initialize();
  return new_EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory_initWithNSString_withJavaUtilFunctionFunction_(delim, new_EduStanfordNlpObjectbankIdentityFunction_init());
}

void EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory_initWithNSString_withJavaUtilFunctionFunction_(EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory *self, NSString *delim, id<JavaUtilFunctionFunction> op) {
  NSObject_init(self);
  self->delim_ = delim;
  self->op_ = op;
}

EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory *new_EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory_initWithNSString_withJavaUtilFunctionFunction_(NSString *delim, id<JavaUtilFunctionFunction> op) {
  J2OBJC_NEW_IMPL(EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory, initWithNSString_withJavaUtilFunctionFunction_, delim, op)
}

EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory *create_EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory_initWithNSString_withJavaUtilFunctionFunction_(NSString *delim, id<JavaUtilFunctionFunction> op) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory, initWithNSString_withJavaUtilFunctionFunction_, delim, op)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpObjectbankDelimitRegExIterator_DelimitRegExIteratorFactory)
