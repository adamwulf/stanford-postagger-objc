//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/objectbank/ObjectBank.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpObjectbankObjectBank")
#ifdef RESTRICT_EduStanfordNlpObjectbankObjectBank
#define INCLUDE_ALL_EduStanfordNlpObjectbankObjectBank 0
#else
#define INCLUDE_ALL_EduStanfordNlpObjectbankObjectBank 1
#endif
#undef RESTRICT_EduStanfordNlpObjectbankObjectBank

#if !defined (EduStanfordNlpObjectbankObjectBank_) && (INCLUDE_ALL_EduStanfordNlpObjectbankObjectBank || defined(INCLUDE_EduStanfordNlpObjectbankObjectBank))
#define EduStanfordNlpObjectbankObjectBank_

#define RESTRICT_JavaUtilCollection 1
#define INCLUDE_JavaUtilCollection 1
#include "java/util/Collection.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class EduStanfordNlpObjectbankReaderIteratorFactory;
@class IOSObjectArray;
@class JavaIoFile;
@class JavaIoReader;
@protocol EduStanfordNlpObjectbankIteratorFromReaderFactory;
@protocol JavaUtilFunctionConsumer;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilFunctionPredicate;
@protocol JavaUtilIterator;
@protocol JavaUtilSpliterator;
@protocol JavaUtilStreamStream;

@interface EduStanfordNlpObjectbankObjectBank : NSObject < JavaUtilCollection, JavaIoSerializable > {
 @public
  EduStanfordNlpObjectbankReaderIteratorFactory *rif_;
  id<EduStanfordNlpObjectbankIteratorFromReaderFactory> ifrf_;
}

#pragma mark Public

- (instancetype)initWithEduStanfordNlpObjectbankReaderIteratorFactory:(EduStanfordNlpObjectbankReaderIteratorFactory *)rif
                withEduStanfordNlpObjectbankIteratorFromReaderFactory:(id<EduStanfordNlpObjectbankIteratorFromReaderFactory>)ifrf;

- (jboolean)addWithId:(id)o;

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (void)clear;

- (void)clearMemory;

- (jboolean)containsWithId:(id)o;

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;

+ (EduStanfordNlpObjectbankObjectBank *)getLineIteratorWithJavaUtilCollection:(id<JavaUtilCollection>)filesStringsAndReaders
                                                 withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)op;

+ (EduStanfordNlpObjectbankObjectBank *)getLineIteratorWithJavaUtilCollection:(id<JavaUtilCollection>)filesStringsAndReaders
                                                 withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)op
                                                                 withNSString:(NSString *)encoding;

+ (EduStanfordNlpObjectbankObjectBank *)getLineIteratorWithJavaUtilCollection:(id<JavaUtilCollection>)filesStringsAndReaders
                                                                 withNSString:(NSString *)encoding;

+ (EduStanfordNlpObjectbankObjectBank *)getLineIteratorWithJavaIoFile:(JavaIoFile *)file;

+ (EduStanfordNlpObjectbankObjectBank *)getLineIteratorWithJavaIoFile:(JavaIoFile *)file
                                         withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)op;

+ (EduStanfordNlpObjectbankObjectBank *)getLineIteratorWithJavaIoFile:(JavaIoFile *)file
                                         withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)op
                                                         withNSString:(NSString *)encoding;

+ (EduStanfordNlpObjectbankObjectBank *)getLineIteratorWithJavaIoFile:(JavaIoFile *)file
                                                         withNSString:(NSString *)encoding;

+ (EduStanfordNlpObjectbankObjectBank *)getLineIteratorWithJavaIoReader:(JavaIoReader *)reader;

+ (EduStanfordNlpObjectbankObjectBank *)getLineIteratorWithJavaIoReader:(JavaIoReader *)reader
                                           withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)op;

+ (EduStanfordNlpObjectbankObjectBank *)getLineIteratorWithNSString:(NSString *)filename;

+ (EduStanfordNlpObjectbankObjectBank *)getLineIteratorWithNSString:(NSString *)filename
                                       withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)op;

+ (EduStanfordNlpObjectbankObjectBank *)getLineIteratorWithNSString:(NSString *)filename
                                                       withNSString:(NSString *)encoding;

- (jboolean)isEmpty;

- (id<JavaUtilIterator>)iterator;

- (void)keepInMemoryWithBoolean:(jboolean)keep;

- (jboolean)removeWithId:(id)o;

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (jint)size;

- (IOSObjectArray *)toArray;

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)o;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpObjectbankObjectBank)

J2OBJC_FIELD_SETTER(EduStanfordNlpObjectbankObjectBank, rif_, EduStanfordNlpObjectbankReaderIteratorFactory *)
J2OBJC_FIELD_SETTER(EduStanfordNlpObjectbankObjectBank, ifrf_, id<EduStanfordNlpObjectbankIteratorFromReaderFactory>)

FOUNDATION_EXPORT void EduStanfordNlpObjectbankObjectBank_initWithEduStanfordNlpObjectbankReaderIteratorFactory_withEduStanfordNlpObjectbankIteratorFromReaderFactory_(EduStanfordNlpObjectbankObjectBank *self, EduStanfordNlpObjectbankReaderIteratorFactory *rif, id<EduStanfordNlpObjectbankIteratorFromReaderFactory> ifrf);

FOUNDATION_EXPORT EduStanfordNlpObjectbankObjectBank *new_EduStanfordNlpObjectbankObjectBank_initWithEduStanfordNlpObjectbankReaderIteratorFactory_withEduStanfordNlpObjectbankIteratorFromReaderFactory_(EduStanfordNlpObjectbankReaderIteratorFactory *rif, id<EduStanfordNlpObjectbankIteratorFromReaderFactory> ifrf) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpObjectbankObjectBank *create_EduStanfordNlpObjectbankObjectBank_initWithEduStanfordNlpObjectbankReaderIteratorFactory_withEduStanfordNlpObjectbankIteratorFromReaderFactory_(EduStanfordNlpObjectbankReaderIteratorFactory *rif, id<EduStanfordNlpObjectbankIteratorFromReaderFactory> ifrf);

FOUNDATION_EXPORT EduStanfordNlpObjectbankObjectBank *EduStanfordNlpObjectbankObjectBank_getLineIteratorWithNSString_(NSString *filename);

FOUNDATION_EXPORT EduStanfordNlpObjectbankObjectBank *EduStanfordNlpObjectbankObjectBank_getLineIteratorWithNSString_withJavaUtilFunctionFunction_(NSString *filename, id<JavaUtilFunctionFunction> op);

FOUNDATION_EXPORT EduStanfordNlpObjectbankObjectBank *EduStanfordNlpObjectbankObjectBank_getLineIteratorWithNSString_withNSString_(NSString *filename, NSString *encoding);

FOUNDATION_EXPORT EduStanfordNlpObjectbankObjectBank *EduStanfordNlpObjectbankObjectBank_getLineIteratorWithJavaIoReader_(JavaIoReader *reader);

FOUNDATION_EXPORT EduStanfordNlpObjectbankObjectBank *EduStanfordNlpObjectbankObjectBank_getLineIteratorWithJavaIoReader_withJavaUtilFunctionFunction_(JavaIoReader *reader, id<JavaUtilFunctionFunction> op);

FOUNDATION_EXPORT EduStanfordNlpObjectbankObjectBank *EduStanfordNlpObjectbankObjectBank_getLineIteratorWithJavaIoFile_(JavaIoFile *file);

FOUNDATION_EXPORT EduStanfordNlpObjectbankObjectBank *EduStanfordNlpObjectbankObjectBank_getLineIteratorWithJavaIoFile_withJavaUtilFunctionFunction_(JavaIoFile *file, id<JavaUtilFunctionFunction> op);

FOUNDATION_EXPORT EduStanfordNlpObjectbankObjectBank *EduStanfordNlpObjectbankObjectBank_getLineIteratorWithJavaIoFile_withNSString_(JavaIoFile *file, NSString *encoding);

FOUNDATION_EXPORT EduStanfordNlpObjectbankObjectBank *EduStanfordNlpObjectbankObjectBank_getLineIteratorWithJavaIoFile_withJavaUtilFunctionFunction_withNSString_(JavaIoFile *file, id<JavaUtilFunctionFunction> op, NSString *encoding);

FOUNDATION_EXPORT EduStanfordNlpObjectbankObjectBank *EduStanfordNlpObjectbankObjectBank_getLineIteratorWithJavaUtilCollection_withJavaUtilFunctionFunction_(id<JavaUtilCollection> filesStringsAndReaders, id<JavaUtilFunctionFunction> op);

FOUNDATION_EXPORT EduStanfordNlpObjectbankObjectBank *EduStanfordNlpObjectbankObjectBank_getLineIteratorWithJavaUtilCollection_withNSString_(id<JavaUtilCollection> filesStringsAndReaders, NSString *encoding);

FOUNDATION_EXPORT EduStanfordNlpObjectbankObjectBank *EduStanfordNlpObjectbankObjectBank_getLineIteratorWithJavaUtilCollection_withJavaUtilFunctionFunction_withNSString_(id<JavaUtilCollection> filesStringsAndReaders, id<JavaUtilFunctionFunction> op, NSString *encoding);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpObjectbankObjectBank)

#endif

#if !defined (EduStanfordNlpObjectbankObjectBank_PathToFileFunction_) && (INCLUDE_ALL_EduStanfordNlpObjectbankObjectBank || defined(INCLUDE_EduStanfordNlpObjectbankObjectBank_PathToFileFunction))
#define EduStanfordNlpObjectbankObjectBank_PathToFileFunction_

#define RESTRICT_JavaUtilFunctionFunction 1
#define INCLUDE_JavaUtilFunctionFunction 1
#include "java/util/function/Function.h"

@class JavaIoFile;

@interface EduStanfordNlpObjectbankObjectBank_PathToFileFunction : NSObject < JavaUtilFunctionFunction >

#pragma mark Public

- (instancetype)init;

- (JavaIoFile *)applyWithId:(NSString *)str;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpObjectbankObjectBank_PathToFileFunction)

FOUNDATION_EXPORT void EduStanfordNlpObjectbankObjectBank_PathToFileFunction_init(EduStanfordNlpObjectbankObjectBank_PathToFileFunction *self);

FOUNDATION_EXPORT EduStanfordNlpObjectbankObjectBank_PathToFileFunction *new_EduStanfordNlpObjectbankObjectBank_PathToFileFunction_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpObjectbankObjectBank_PathToFileFunction *create_EduStanfordNlpObjectbankObjectBank_PathToFileFunction_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpObjectbankObjectBank_PathToFileFunction)

#endif

#if !defined (EduStanfordNlpObjectbankObjectBank_OBIterator_) && (INCLUDE_ALL_EduStanfordNlpObjectbankObjectBank || defined(INCLUDE_EduStanfordNlpObjectbankObjectBank_OBIterator))
#define EduStanfordNlpObjectbankObjectBank_OBIterator_

#define RESTRICT_EduStanfordNlpUtilAbstractIterator 1
#define INCLUDE_EduStanfordNlpUtilAbstractIterator 1
#include "edu/stanford/nlp/util/AbstractIterator.h"

@class EduStanfordNlpObjectbankObjectBank;

@interface EduStanfordNlpObjectbankObjectBank_OBIterator : EduStanfordNlpUtilAbstractIterator

#pragma mark Public

- (instancetype)initWithEduStanfordNlpObjectbankObjectBank:(EduStanfordNlpObjectbankObjectBank *)outer$;

- (jboolean)hasNext;

- (id)next;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpObjectbankObjectBank_OBIterator)

FOUNDATION_EXPORT void EduStanfordNlpObjectbankObjectBank_OBIterator_initWithEduStanfordNlpObjectbankObjectBank_(EduStanfordNlpObjectbankObjectBank_OBIterator *self, EduStanfordNlpObjectbankObjectBank *outer$);

FOUNDATION_EXPORT EduStanfordNlpObjectbankObjectBank_OBIterator *new_EduStanfordNlpObjectbankObjectBank_OBIterator_initWithEduStanfordNlpObjectbankObjectBank_(EduStanfordNlpObjectbankObjectBank *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpObjectbankObjectBank_OBIterator *create_EduStanfordNlpObjectbankObjectBank_OBIterator_initWithEduStanfordNlpObjectbankObjectBank_(EduStanfordNlpObjectbankObjectBank *outer$);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpObjectbankObjectBank_OBIterator)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpObjectbankObjectBank")
