//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/maxent/Problem.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/io/PrintFile.h"
#include "edu/stanford/nlp/maxent/Experiments.h"
#include "edu/stanford/nlp/maxent/Feature.h"
#include "edu/stanford/nlp/maxent/Features.h"
#include "edu/stanford/nlp/maxent/Problem.h"
#include "java/io/PrintStream.h"
#include "java/lang/Exception.h"
#include "java/lang/System.h"

@implementation EduStanfordNlpMaxentProblem

- (instancetype)initWithEduStanfordNlpMaxentExperiments:(EduStanfordNlpMaxentExperiments *)d
                       withEduStanfordNlpMaxentFeatures:(EduStanfordNlpMaxentFeatures *)f {
  EduStanfordNlpMaxentProblem_initWithEduStanfordNlpMaxentExperiments_withEduStanfordNlpMaxentFeatures_(self, d, f);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpMaxentProblem_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)addWithEduStanfordNlpMaxentFeature:(EduStanfordNlpMaxentFeature *)f {
  [((EduStanfordNlpMaxentFeatures *) nil_chk(functions_)) addWithEduStanfordNlpMaxentFeature:f];
  fSize_++;
}

- (void)removeLast {
  [((EduStanfordNlpMaxentFeatures *) nil_chk(functions_)) removeLast];
  fSize_--;
}

- (void)print {
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@" Problem printing "];
  [((EduStanfordNlpMaxentExperiments *) nil_chk(data_)) print];
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:@" Function printing "];
  for (jint i = 0; i < fSize_; i++) {
    [((EduStanfordNlpMaxentFeature *) nil_chk([((EduStanfordNlpMaxentFeatures *) nil_chk(functions_)) getWithInt:i])) print];
  }
}

- (void)printWithNSString:(NSString *)filename {
  @try {
    EduStanfordNlpIoPrintFile *pf = new_EduStanfordNlpIoPrintFile_initWithNSString_(filename);
    [pf printlnWithNSString:@" Problem printing "];
    [((EduStanfordNlpMaxentExperiments *) nil_chk(data_)) printWithEduStanfordNlpIoPrintFile:pf];
    [pf printlnWithNSString:@" Function printing "];
    for (jint i = 0; i < fSize_; i++) {
      [((EduStanfordNlpMaxentFeature *) nil_chk([((EduStanfordNlpMaxentFeatures *) nil_chk(functions_)) getWithInt:i])) printWithJavaIoPrintStream:pf];
    }
  }
  @catch (JavaLangException *e) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"Exception in Problem.print()"];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpMaxentExperiments:withEduStanfordNlpMaxentFeatures:);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(addWithEduStanfordNlpMaxentFeature:);
  methods[3].selector = @selector(removeLast);
  methods[4].selector = @selector(print);
  methods[5].selector = @selector(printWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "exSize_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "fSize_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "data_", "LEduStanfordNlpMaxentExperiments;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "functions_", "LEduStanfordNlpMaxentFeatures;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpMaxentExperiments;LEduStanfordNlpMaxentFeatures;", "add", "LEduStanfordNlpMaxentFeature;", "print", "LNSString;" };
  static const J2ObjcClassInfo _EduStanfordNlpMaxentProblem = { "Problem", "edu.stanford.nlp.maxent", ptrTable, methods, fields, 7, 0x1, 6, 4, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpMaxentProblem;
}

@end

void EduStanfordNlpMaxentProblem_initWithEduStanfordNlpMaxentExperiments_withEduStanfordNlpMaxentFeatures_(EduStanfordNlpMaxentProblem *self, EduStanfordNlpMaxentExperiments *d, EduStanfordNlpMaxentFeatures *f) {
  NSObject_init(self);
  self->data_ = d;
  self->functions_ = f;
  self->exSize_ = [((EduStanfordNlpMaxentExperiments *) nil_chk(d)) size];
  self->fSize_ = [((EduStanfordNlpMaxentFeatures *) nil_chk(f)) size];
}

EduStanfordNlpMaxentProblem *new_EduStanfordNlpMaxentProblem_initWithEduStanfordNlpMaxentExperiments_withEduStanfordNlpMaxentFeatures_(EduStanfordNlpMaxentExperiments *d, EduStanfordNlpMaxentFeatures *f) {
  J2OBJC_NEW_IMPL(EduStanfordNlpMaxentProblem, initWithEduStanfordNlpMaxentExperiments_withEduStanfordNlpMaxentFeatures_, d, f)
}

EduStanfordNlpMaxentProblem *create_EduStanfordNlpMaxentProblem_initWithEduStanfordNlpMaxentExperiments_withEduStanfordNlpMaxentFeatures_(EduStanfordNlpMaxentExperiments *d, EduStanfordNlpMaxentFeatures *f) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpMaxentProblem, initWithEduStanfordNlpMaxentExperiments_withEduStanfordNlpMaxentFeatures_, d, f)
}

void EduStanfordNlpMaxentProblem_init(EduStanfordNlpMaxentProblem *self) {
  NSObject_init(self);
}

EduStanfordNlpMaxentProblem *new_EduStanfordNlpMaxentProblem_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpMaxentProblem, init)
}

EduStanfordNlpMaxentProblem *create_EduStanfordNlpMaxentProblem_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpMaxentProblem, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpMaxentProblem)
