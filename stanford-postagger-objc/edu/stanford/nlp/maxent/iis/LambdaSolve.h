//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/maxent/iis/LambdaSolve.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpMaxentIisLambdaSolve")
#ifdef RESTRICT_EduStanfordNlpMaxentIisLambdaSolve
#define INCLUDE_ALL_EduStanfordNlpMaxentIisLambdaSolve 0
#else
#define INCLUDE_ALL_EduStanfordNlpMaxentIisLambdaSolve 1
#endif
#undef RESTRICT_EduStanfordNlpMaxentIisLambdaSolve

#if !defined (EduStanfordNlpMaxentIisLambdaSolve_) && (INCLUDE_ALL_EduStanfordNlpMaxentIisLambdaSolve || defined(INCLUDE_EduStanfordNlpMaxentIisLambdaSolve))
#define EduStanfordNlpMaxentIisLambdaSolve_

@class EduStanfordNlpMaxentFeature;
@class EduStanfordNlpMaxentProblem;
@class EduStanfordNlpUtilMutableDouble;
@class IOSBooleanArray;
@class IOSDoubleArray;
@class IOSObjectArray;
@class JavaIoDataInputStream;
@class JavaIoDataOutputStream;

@interface EduStanfordNlpMaxentIisLambdaSolve : NSObject {
 @public
  IOSDoubleArray *lambda_;
  IOSBooleanArray *lambda_converged_;
  jdouble eps_;
  EduStanfordNlpMaxentProblem *p_;
  IOSObjectArray *probConds_;
  IOSDoubleArray *zlambda_;
  IOSObjectArray *fnumArr_;
  IOSDoubleArray *ftildeArr_;
  jboolean weightRanks_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithEduStanfordNlpMaxentProblem:(EduStanfordNlpMaxentProblem *)p1
                                         withDouble:(jdouble)eps1
                                         withDouble:(jdouble)nerr1;

- (instancetype)initWithNSString:(NSString *)filename;

- (jboolean)checkCorrectness;

+ (jdouble)divideWithDouble:(jdouble)first
                 withDouble:(jdouble)second;

- (jdouble)expectedValue;

- (jdouble)GainComputeWithEduStanfordNlpMaxentFeature:(EduStanfordNlpMaxentFeature *)f
                                           withDouble:(jdouble)errorGain;

- (IOSDoubleArray *)getDerivatives;

- (IOSDoubleArray *)getDerivativesExpectedValue;

- (IOSDoubleArray *)getDerivativesLossDomination;

- (IOSDoubleArray *)getDerivativesNeg;

- (void)improvedIterative;

- (void)improvedIterativeWithInt:(jint)iters;

- (jdouble)logLikelihood;

- (jdouble)logLikelihoodNeg;

- (jdouble)logLikelihoodScratch;

- (jdouble)lossDomination;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (jdouble)pcondWithInt:(jint)y
                withInt:(jint)x;

- (void)print;

+ (IOSDoubleArray *)read_lambdasWithJavaIoDataInputStream:(JavaIoDataInputStream *)rf;

- (void)readLWithNSString:(NSString *)filename;

+ (void)save_lambdasWithJavaIoDataOutputStream:(JavaIoDataOutputStream *)rf
                               withDoubleArray:(IOSDoubleArray *)lambdas;

- (void)save_lambdasWithNSString:(NSString *)filename;

- (void)setBinary;

- (void)setNonBinary;

- (void)transformValues;

#pragma mark Protected

- (jdouble)fnumWithInt:(jint)x
               withInt:(jint)y;

#pragma mark Package-Private

- (jdouble)fExpectedWithEduStanfordNlpMaxentFeature:(EduStanfordNlpMaxentFeature *)f;

- (jdouble)gWithDouble:(jdouble)lambdaP
               withInt:(jint)index;

- (jdouble)gprimeWithDouble:(jdouble)lambdaP
                    withInt:(jint)index;

- (jdouble)GSFWithDouble:(jdouble)alfa
withEduStanfordNlpMaxentFeature:(EduStanfordNlpMaxentFeature *)f;

- (jdouble)GSFWithDouble:(jdouble)alfa
withEduStanfordNlpMaxentFeature:(EduStanfordNlpMaxentFeature *)f
                 withInt:(jint)index;

- (jdouble)GSFPrimeWithDouble:(jdouble)alfa
withEduStanfordNlpMaxentFeature:(EduStanfordNlpMaxentFeature *)f;

- (jdouble)GSFPrimeWithDouble:(jdouble)alfa
withEduStanfordNlpMaxentFeature:(EduStanfordNlpMaxentFeature *)f
                      withInt:(jint)index;

- (jdouble)GSFSecondWithDouble:(jdouble)alfa
withEduStanfordNlpMaxentFeature:(EduStanfordNlpMaxentFeature *)f;

- (void)initCondsZlambdaEtc OBJC_METHOD_FAMILY_NONE;

- (jboolean)iterateWithInt:(jint)index
                withDouble:(jdouble)err
withEduStanfordNlpUtilMutableDouble:(EduStanfordNlpUtilMutableDouble *)ret;

- (jdouble)newtonWithDouble:(jdouble)lambda0
                    withInt:(jint)index
                 withDouble:(jdouble)err OBJC_METHOD_FAMILY_NONE;

- (jdouble)pcondFAlfaWithDouble:(jdouble)alfa
                        withInt:(jint)x
                        withInt:(jint)y
withEduStanfordNlpMaxentFeature:(EduStanfordNlpMaxentFeature *)f;

+ (IOSDoubleArray *)read_lambdasWithNSString:(NSString *)modelFilename;

- (void)save_problemWithNSString:(NSString *)filename;

- (void)updateCondsWithInt:(jint)index
                withDouble:(jdouble)deltaL;

- (jdouble)ZAlfaWithDouble:(jdouble)alfa
withEduStanfordNlpMaxentFeature:(EduStanfordNlpMaxentFeature *)f
                   withInt:(jint)x;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpMaxentIisLambdaSolve)

J2OBJC_FIELD_SETTER(EduStanfordNlpMaxentIisLambdaSolve, lambda_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(EduStanfordNlpMaxentIisLambdaSolve, lambda_converged_, IOSBooleanArray *)
J2OBJC_FIELD_SETTER(EduStanfordNlpMaxentIisLambdaSolve, p_, EduStanfordNlpMaxentProblem *)
J2OBJC_FIELD_SETTER(EduStanfordNlpMaxentIisLambdaSolve, probConds_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(EduStanfordNlpMaxentIisLambdaSolve, zlambda_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(EduStanfordNlpMaxentIisLambdaSolve, fnumArr_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(EduStanfordNlpMaxentIisLambdaSolve, ftildeArr_, IOSDoubleArray *)

FOUNDATION_EXPORT void EduStanfordNlpMaxentIisLambdaSolve_initWithEduStanfordNlpMaxentProblem_withDouble_withDouble_(EduStanfordNlpMaxentIisLambdaSolve *self, EduStanfordNlpMaxentProblem *p1, jdouble eps1, jdouble nerr1);

FOUNDATION_EXPORT EduStanfordNlpMaxentIisLambdaSolve *new_EduStanfordNlpMaxentIisLambdaSolve_initWithEduStanfordNlpMaxentProblem_withDouble_withDouble_(EduStanfordNlpMaxentProblem *p1, jdouble eps1, jdouble nerr1) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpMaxentIisLambdaSolve *create_EduStanfordNlpMaxentIisLambdaSolve_initWithEduStanfordNlpMaxentProblem_withDouble_withDouble_(EduStanfordNlpMaxentProblem *p1, jdouble eps1, jdouble nerr1);

FOUNDATION_EXPORT void EduStanfordNlpMaxentIisLambdaSolve_initWithNSString_(EduStanfordNlpMaxentIisLambdaSolve *self, NSString *filename);

FOUNDATION_EXPORT EduStanfordNlpMaxentIisLambdaSolve *new_EduStanfordNlpMaxentIisLambdaSolve_initWithNSString_(NSString *filename) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpMaxentIisLambdaSolve *create_EduStanfordNlpMaxentIisLambdaSolve_initWithNSString_(NSString *filename);

FOUNDATION_EXPORT void EduStanfordNlpMaxentIisLambdaSolve_init(EduStanfordNlpMaxentIisLambdaSolve *self);

FOUNDATION_EXPORT EduStanfordNlpMaxentIisLambdaSolve *new_EduStanfordNlpMaxentIisLambdaSolve_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpMaxentIisLambdaSolve *create_EduStanfordNlpMaxentIisLambdaSolve_init();

FOUNDATION_EXPORT void EduStanfordNlpMaxentIisLambdaSolve_save_lambdasWithJavaIoDataOutputStream_withDoubleArray_(JavaIoDataOutputStream *rf, IOSDoubleArray *lambdas);

FOUNDATION_EXPORT IOSDoubleArray *EduStanfordNlpMaxentIisLambdaSolve_read_lambdasWithNSString_(NSString *modelFilename);

FOUNDATION_EXPORT IOSDoubleArray *EduStanfordNlpMaxentIisLambdaSolve_read_lambdasWithJavaIoDataInputStream_(JavaIoDataInputStream *rf);

FOUNDATION_EXPORT jdouble EduStanfordNlpMaxentIisLambdaSolve_divideWithDouble_withDouble_(jdouble first, jdouble second);

FOUNDATION_EXPORT void EduStanfordNlpMaxentIisLambdaSolve_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpMaxentIisLambdaSolve)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpMaxentIisLambdaSolve")
