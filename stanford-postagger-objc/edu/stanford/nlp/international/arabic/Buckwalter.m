//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/international/arabic/Buckwalter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/international/arabic/Buckwalter.h"
#include "edu/stanford/nlp/io/EncodingPrintWriter.h"
#include "edu/stanford/nlp/stats/ClassicCounter.h"
#include "edu/stanford/nlp/trees/international/arabic/ATBTreeUtils.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "edu/stanford/nlp/util/StringUtils.h"
#include "java/io/BufferedReader.h"
#include "java/io/File.h"
#include "java/io/FileInputStream.h"
#include "java/io/FileNotFoundException.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/io/PrintStream.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/Character.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/StringTokenizer.h"
#include "java/util/function/Function.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

@interface EduStanfordNlpInternationalArabicBuckwalter () {
 @public
  jboolean unicode2Buckwalter_;
  id<JavaUtilMap> u2bMap_;
  id<JavaUtilMap> b2uMap_;
  EduStanfordNlpStatsClassicCounter *unmappable_;
}

- (NSString *)convertWithNSString:(NSString *)inArg
                      withBoolean:(jboolean)unicodeToBuckwalter;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpInternationalArabicBuckwalter, u2bMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduStanfordNlpInternationalArabicBuckwalter, b2uMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduStanfordNlpInternationalArabicBuckwalter, unmappable_, EduStanfordNlpStatsClassicCounter *)

inline jlong EduStanfordNlpInternationalArabicBuckwalter_get_serialVersionUID();
#define EduStanfordNlpInternationalArabicBuckwalter_serialVersionUID 4351710914246859336LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpInternationalArabicBuckwalter, serialVersionUID, jlong)

inline IOSCharArray *EduStanfordNlpInternationalArabicBuckwalter_get_arabicChars();
static IOSCharArray *EduStanfordNlpInternationalArabicBuckwalter_arabicChars;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpInternationalArabicBuckwalter, arabicChars, IOSCharArray *)

inline IOSCharArray *EduStanfordNlpInternationalArabicBuckwalter_get_buckChars();
static IOSCharArray *EduStanfordNlpInternationalArabicBuckwalter_buckChars;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpInternationalArabicBuckwalter, buckChars, IOSCharArray *)

inline jboolean EduStanfordNlpInternationalArabicBuckwalter_get_DEBUG();
inline jboolean EduStanfordNlpInternationalArabicBuckwalter_set_DEBUG(jboolean value);
inline jboolean *EduStanfordNlpInternationalArabicBuckwalter_getRef_DEBUG();
static jboolean EduStanfordNlpInternationalArabicBuckwalter_DEBUG = false;
J2OBJC_STATIC_FIELD_PRIMITIVE(EduStanfordNlpInternationalArabicBuckwalter, DEBUG, jboolean)

inline jboolean EduStanfordNlpInternationalArabicBuckwalter_get_PASS_ASCII_IN_UNICODE();
#define EduStanfordNlpInternationalArabicBuckwalter_PASS_ASCII_IN_UNICODE true
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpInternationalArabicBuckwalter, PASS_ASCII_IN_UNICODE, jboolean)

inline jboolean EduStanfordNlpInternationalArabicBuckwalter_get_SUPPRESS_DIGIT_MAPPING_IN_B2A();
inline jboolean EduStanfordNlpInternationalArabicBuckwalter_set_SUPPRESS_DIGIT_MAPPING_IN_B2A(jboolean value);
inline jboolean *EduStanfordNlpInternationalArabicBuckwalter_getRef_SUPPRESS_DIGIT_MAPPING_IN_B2A();
static jboolean EduStanfordNlpInternationalArabicBuckwalter_SUPPRESS_DIGIT_MAPPING_IN_B2A = true;
J2OBJC_STATIC_FIELD_PRIMITIVE(EduStanfordNlpInternationalArabicBuckwalter, SUPPRESS_DIGIT_MAPPING_IN_B2A, jboolean)

inline jboolean EduStanfordNlpInternationalArabicBuckwalter_get_SUPPRESS_PUNC_MAPPING_IN_B2A();
inline jboolean EduStanfordNlpInternationalArabicBuckwalter_set_SUPPRESS_PUNC_MAPPING_IN_B2A(jboolean value);
inline jboolean *EduStanfordNlpInternationalArabicBuckwalter_getRef_SUPPRESS_PUNC_MAPPING_IN_B2A();
static jboolean EduStanfordNlpInternationalArabicBuckwalter_SUPPRESS_PUNC_MAPPING_IN_B2A = true;
J2OBJC_STATIC_FIELD_PRIMITIVE(EduStanfordNlpInternationalArabicBuckwalter, SUPPRESS_PUNC_MAPPING_IN_B2A, jboolean)

inline JavaUtilRegexPattern *EduStanfordNlpInternationalArabicBuckwalter_get_latinPunc();
static JavaUtilRegexPattern *EduStanfordNlpInternationalArabicBuckwalter_latinPunc;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpInternationalArabicBuckwalter, latinPunc, JavaUtilRegexPattern *)

inline JavaLangStringBuilder *EduStanfordNlpInternationalArabicBuckwalter_get_usage();
static JavaLangStringBuilder *EduStanfordNlpInternationalArabicBuckwalter_usage;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpInternationalArabicBuckwalter, usage, JavaLangStringBuilder *)

__attribute__((unused)) static NSString *EduStanfordNlpInternationalArabicBuckwalter_convertWithNSString_withBoolean_(EduStanfordNlpInternationalArabicBuckwalter *self, NSString *inArg, jboolean unicodeToBuckwalter);

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpInternationalArabicBuckwalter)

@implementation EduStanfordNlpInternationalArabicBuckwalter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpInternationalArabicBuckwalter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithBoolean:(jboolean)unicodeToBuckwalter {
  EduStanfordNlpInternationalArabicBuckwalter_initWithBoolean_(self, unicodeToBuckwalter);
  return self;
}

- (void)suppressBuckDigitConversionWithBoolean:(jboolean)b {
  EduStanfordNlpInternationalArabicBuckwalter_SUPPRESS_DIGIT_MAPPING_IN_B2A = b;
}

- (void)suppressBuckPunctConversionWithBoolean:(jboolean)b {
  EduStanfordNlpInternationalArabicBuckwalter_SUPPRESS_PUNC_MAPPING_IN_B2A = b;
}

- (NSString *)applyWithId:(NSString *)inArg {
  return EduStanfordNlpInternationalArabicBuckwalter_convertWithNSString_withBoolean_(self, inArg, unicode2Buckwalter_);
}

- (NSString *)buckwalterToUnicodeWithNSString:(NSString *)inArg {
  return EduStanfordNlpInternationalArabicBuckwalter_convertWithNSString_withBoolean_(self, inArg, false);
}

- (NSString *)unicodeToBuckwalterWithNSString:(NSString *)inArg {
  return EduStanfordNlpInternationalArabicBuckwalter_convertWithNSString_withBoolean_(self, inArg, true);
}

- (NSString *)convertWithNSString:(NSString *)inArg
                      withBoolean:(jboolean)unicodeToBuckwalter {
  return EduStanfordNlpInternationalArabicBuckwalter_convertWithNSString_withBoolean_(self, inArg, unicodeToBuckwalter);
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduStanfordNlpInternationalArabicBuckwalter_mainWithNSStringArray_(args);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 9, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithBoolean:);
  methods[2].selector = @selector(suppressBuckDigitConversionWithBoolean:);
  methods[3].selector = @selector(suppressBuckPunctConversionWithBoolean:);
  methods[4].selector = @selector(applyWithId:);
  methods[5].selector = @selector(buckwalterToUnicodeWithNSString:);
  methods[6].selector = @selector(unicodeToBuckwalterWithNSString:);
  methods[7].selector = @selector(convertWithNSString:withBoolean:);
  methods[8].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpInternationalArabicBuckwalter_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "outputUnicodeValues_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "arabicChars", "[C", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "buckChars", "[C", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
    { "unicode2Buckwalter_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "u2bMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 13, -1 },
    { "b2uMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 13, -1 },
    { "unmappable_", "LEduStanfordNlpStatsClassicCounter;", .constantValue.asLong = 0, 0x2, -1, -1, 14, -1 },
    { "DEBUG", "Z", .constantValue.asLong = 0, 0xa, -1, 15, -1, -1 },
    { "PASS_ASCII_IN_UNICODE", "Z", .constantValue.asBOOL = EduStanfordNlpInternationalArabicBuckwalter_PASS_ASCII_IN_UNICODE, 0x1a, -1, -1, -1, -1 },
    { "SUPPRESS_DIGIT_MAPPING_IN_B2A", "Z", .constantValue.asLong = 0, 0xa, -1, 16, -1, -1 },
    { "SUPPRESS_PUNC_MAPPING_IN_B2A", "Z", .constantValue.asLong = 0, 0xa, -1, 17, -1, -1 },
    { "latinPunc", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 18, -1, -1 },
    { "usage", "LJavaLangStringBuilder;", .constantValue.asLong = 0, 0x1a, -1, 19, -1, -1 },
  };
  static const void *ptrTable[] = { "Z", "suppressBuckDigitConversion", "suppressBuckPunctConversion", "apply", "LNSString;", "buckwalterToUnicode", "unicodeToBuckwalter", "convert", "LNSString;Z", "main", "[LNSString;", &EduStanfordNlpInternationalArabicBuckwalter_arabicChars, &EduStanfordNlpInternationalArabicBuckwalter_buckChars, "Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;", "Ledu/stanford/nlp/stats/ClassicCounter<Ljava/lang/String;>;", &EduStanfordNlpInternationalArabicBuckwalter_DEBUG, &EduStanfordNlpInternationalArabicBuckwalter_SUPPRESS_DIGIT_MAPPING_IN_B2A, &EduStanfordNlpInternationalArabicBuckwalter_SUPPRESS_PUNC_MAPPING_IN_B2A, &EduStanfordNlpInternationalArabicBuckwalter_latinPunc, &EduStanfordNlpInternationalArabicBuckwalter_usage, "Ljava/lang/Object;Ledu/stanford/nlp/process/SerializableFunction<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpInternationalArabicBuckwalter = { "Buckwalter", "edu.stanford.nlp.international.arabic", ptrTable, methods, fields, 7, 0x1, 9, 14, -1, -1, -1, 20, -1 };
  return &_EduStanfordNlpInternationalArabicBuckwalter;
}

+ (void)initialize {
  if (self == [EduStanfordNlpInternationalArabicBuckwalter class]) {
    EduStanfordNlpInternationalArabicBuckwalter_arabicChars = [IOSCharArray newArrayWithChars:(jchar[]){ 0x0621, 0x0622, 0x0623, 0x0624, 0x0625, 0x0626, 0x0627, 0x0628, 0x0629, 0x062a, 0x062b, 0x062c, 0x062d, 0x062e, 0x062f, 0x0630, 0x0631, 0x0632, 0x0633, 0x0634, 0x0635, 0x0636, 0x0637, 0x0638, 0x0639, 0x063a, 0x0640, 0x0641, 0x0642, 0x0643, 0x0644, 0x0645, 0x0646, 0x0647, 0x0648, 0x0649, 0x064a, 0x064b, 0x064c, 0x064d, 0x064e, 0x064f, 0x0650, 0x0651, 0x0652, 0x0670, 0x0671, 0x067e, 0x0686, 0x0698, 0x06a4, 0x06af, 0x0625, 0x0623, 0x0624, 0x060c, 0x061b, 0x061f, 0x066a, 0x066b, 0x06f0, 0x06f1, 0x06f2, 0x06f3, 0x06f4, 0x06f5, 0x06f6, 0x06f7, 0x06f8, 0x06f9, 0x0660, 0x0661, 0x0662, 0x0663, 0x0664, 0x0665, 0x0666, 0x0667, 0x0668, 0x0669, 0x00ab, 0x00bb } count:82];
    EduStanfordNlpInternationalArabicBuckwalter_buckChars = [IOSCharArray newArrayWithChars:(jchar[]){ '\'', '|', '>', '&', '<', '}', 'A', 'b', 'p', 't', 'v', 'j', 'H', 'x', 'd', '*', 'r', 'z', 's', '$', 'S', 'D', 'T', 'Z', 'E', 'g', '_', 'f', 'q', 'k', 'l', 'm', 'n', 'h', 'w', 'Y', 'y', 'F', 'N', 'K', 'a', 'u', 'i', '~', 'o', '`', '{', 'P', 'J', 'R', 'V', 'G', 'I', 'O', 'W', ',', ';', '?', '%', '.', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '"', '"' } count:82];
    EduStanfordNlpInternationalArabicBuckwalter_latinPunc = JavaUtilRegexPattern_compileWithNSString_(@"[\"\\?%,-;\\._]+");
    EduStanfordNlpInternationalArabicBuckwalter_usage = new_JavaLangStringBuilder_init();
    {
      (void) [EduStanfordNlpInternationalArabicBuckwalter_usage appendWithNSString:@"Usage: java Buckwalter [OPTS] file   (or < file)\n"];
      (void) [EduStanfordNlpInternationalArabicBuckwalter_usage appendWithNSString:@"Options:\n"];
      (void) [EduStanfordNlpInternationalArabicBuckwalter_usage appendWithNSString:@"          -u2b : Unicode -> Buckwalter (default is Buckwalter -> Unicode).\n"];
      (void) [EduStanfordNlpInternationalArabicBuckwalter_usage appendWithNSString:@"          -d   : Debug mode.\n"];
      (void) [EduStanfordNlpInternationalArabicBuckwalter_usage appendWithNSString:@"          -o   : Output unicode values.\n"];
    }
    J2OBJC_SET_INITIALIZED(EduStanfordNlpInternationalArabicBuckwalter)
  }
}

@end

void EduStanfordNlpInternationalArabicBuckwalter_init(EduStanfordNlpInternationalArabicBuckwalter *self) {
  NSObject_init(self);
  self->outputUnicodeValues_ = false;
  self->unicode2Buckwalter_ = false;
  if (((IOSCharArray *) nil_chk(EduStanfordNlpInternationalArabicBuckwalter_arabicChars))->size_ != ((IOSCharArray *) nil_chk(EduStanfordNlpInternationalArabicBuckwalter_buckChars))->size_) @throw new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$", [[self getClass] getName], @": Inconsistent u2b/b2u arrays."));
  self->u2bMap_ = EduStanfordNlpUtilGenerics_newHashMapWithInt_(EduStanfordNlpInternationalArabicBuckwalter_arabicChars->size_);
  self->b2uMap_ = EduStanfordNlpUtilGenerics_newHashMapWithInt_(EduStanfordNlpInternationalArabicBuckwalter_buckChars->size_);
  for (jint i = 0; i < EduStanfordNlpInternationalArabicBuckwalter_arabicChars->size_; i++) {
    JavaLangCharacter *charU = JavaLangCharacter_valueOfWithChar_(IOSCharArray_Get(EduStanfordNlpInternationalArabicBuckwalter_arabicChars, i));
    JavaLangCharacter *charB = JavaLangCharacter_valueOfWithChar_(IOSCharArray_Get(EduStanfordNlpInternationalArabicBuckwalter_buckChars, i));
    (void) [((id<JavaUtilMap>) nil_chk(self->u2bMap_)) putWithId:charU withId:charB];
    (void) [((id<JavaUtilMap>) nil_chk(self->b2uMap_)) putWithId:charB withId:charU];
  }
  if (EduStanfordNlpInternationalArabicBuckwalter_DEBUG) self->unmappable_ = new_EduStanfordNlpStatsClassicCounter_init();
}

EduStanfordNlpInternationalArabicBuckwalter *new_EduStanfordNlpInternationalArabicBuckwalter_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpInternationalArabicBuckwalter, init)
}

EduStanfordNlpInternationalArabicBuckwalter *create_EduStanfordNlpInternationalArabicBuckwalter_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpInternationalArabicBuckwalter, init)
}

void EduStanfordNlpInternationalArabicBuckwalter_initWithBoolean_(EduStanfordNlpInternationalArabicBuckwalter *self, jboolean unicodeToBuckwalter) {
  EduStanfordNlpInternationalArabicBuckwalter_init(self);
  self->unicode2Buckwalter_ = unicodeToBuckwalter;
}

EduStanfordNlpInternationalArabicBuckwalter *new_EduStanfordNlpInternationalArabicBuckwalter_initWithBoolean_(jboolean unicodeToBuckwalter) {
  J2OBJC_NEW_IMPL(EduStanfordNlpInternationalArabicBuckwalter, initWithBoolean_, unicodeToBuckwalter)
}

EduStanfordNlpInternationalArabicBuckwalter *create_EduStanfordNlpInternationalArabicBuckwalter_initWithBoolean_(jboolean unicodeToBuckwalter) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpInternationalArabicBuckwalter, initWithBoolean_, unicodeToBuckwalter)
}

NSString *EduStanfordNlpInternationalArabicBuckwalter_convertWithNSString_withBoolean_(EduStanfordNlpInternationalArabicBuckwalter *self, NSString *inArg, jboolean unicodeToBuckwalter) {
  JavaUtilStringTokenizer *st = new_JavaUtilStringTokenizer_initWithNSString_(inArg);
  JavaLangStringBuilder *result = new_JavaLangStringBuilder_initWithInt_(((jint) [((NSString *) nil_chk(inArg)) length]));
  while ([st hasMoreTokens]) {
    NSString *token = [st nextToken];
    for (jint i = 0; i < ((jint) [((NSString *) nil_chk(token)) length]); i++) {
      if ([((id<JavaUtilSet>) nil_chk(JreLoadStatic(EduStanfordNlpTreesInternationalArabicATBTreeUtils, reservedWords))) containsWithId:token]) {
        (void) [result appendWithNSString:token];
        break;
      }
      JavaLangCharacter *inCh = JavaLangCharacter_valueOfWithChar_([token charAtWithInt:i]);
      JavaLangCharacter *outCh = nil;
      if (unicodeToBuckwalter) {
        outCh = ([inCh charValue] < 127) ? inCh : [((id<JavaUtilMap>) nil_chk(self->u2bMap_)) getWithId:inCh];
      }
      else if ((EduStanfordNlpInternationalArabicBuckwalter_SUPPRESS_DIGIT_MAPPING_IN_B2A && JavaLangCharacter_isDigitWithChar_([inCh charValue])) || (EduStanfordNlpInternationalArabicBuckwalter_SUPPRESS_PUNC_MAPPING_IN_B2A && [((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(EduStanfordNlpInternationalArabicBuckwalter_latinPunc)) matcherWithJavaLangCharSequence:[inCh description]])) matches])) {
        outCh = inCh;
      }
      else {
        outCh = [((id<JavaUtilMap>) nil_chk(self->b2uMap_)) getWithId:inCh];
      }
      if (outCh == nil) {
        if (EduStanfordNlpInternationalArabicBuckwalter_DEBUG) {
          NSString *key = JreStrcat("@$$C", inCh, @"[U+", EduStanfordNlpUtilStringUtils_padLeftWithNSString_withInt_withChar_([((NSString *) nil_chk(JavaLangInteger_toStringWithInt_withInt_([inCh charValue], 16))) uppercaseString], 4, '0'), ']');
          [((EduStanfordNlpStatsClassicCounter *) nil_chk(self->unmappable_)) incrementCountWithId:key];
        }
        (void) [result appendWithId:inCh];
      }
      else if (self->outputUnicodeValues_) {
        (void) [((JavaLangStringBuilder *) nil_chk([result appendWithNSString:@"\\u"])) appendWithNSString:EduStanfordNlpUtilStringUtils_padLeftWithNSString_withInt_withChar_([((NSString *) nil_chk(JavaLangInteger_toStringWithInt_withInt_([inCh charValue], 16))) uppercaseString], 4, '0')];
      }
      else {
        (void) [result appendWithId:outCh];
      }
    }
    (void) [result appendWithNSString:@" "];
  }
  return [((NSString *) nil_chk([result description])) trim];
}

void EduStanfordNlpInternationalArabicBuckwalter_mainWithNSStringArray_(IOSObjectArray *args) {
  EduStanfordNlpInternationalArabicBuckwalter_initialize();
  jboolean unicodeToBuck = false;
  jboolean outputUnicodeValues = false;
  JavaIoFile *inputFile = nil;
  {
    IOSObjectArray *a__ = args;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *arg = *b__++;
      if ([((NSString *) nil_chk(arg)) hasPrefix:@"-"]) {
        switch (JreIndexOfStr(arg, (id[]){ @"-u2b", @"-o", @"-d" }, 3)) {
          case 0:
          unicodeToBuck = true;
          break;
          case 1:
          outputUnicodeValues = true;
          break;
          case 2:
          EduStanfordNlpInternationalArabicBuckwalter_DEBUG = true;
          break;
          default:
          [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:[((JavaLangStringBuilder *) nil_chk(EduStanfordNlpInternationalArabicBuckwalter_usage)) description]];
          return;
        }
      }
      else {
        inputFile = new_JavaIoFile_initWithNSString_(arg);
        break;
      }
    }
  }
  EduStanfordNlpInternationalArabicBuckwalter *b = new_EduStanfordNlpInternationalArabicBuckwalter_initWithBoolean_(unicodeToBuck);
  b->outputUnicodeValues_ = outputUnicodeValues;
  jint j = (b->outputUnicodeValues_ ? 2 : JavaLangInteger_MAX_VALUE);
  if (j < ((IOSObjectArray *) nil_chk(args))->size_) {
    for (; j < args->size_; j++) EduStanfordNlpIoEncodingPrintWriter_out_printlnWithNSString_withNSString_(JreStrcat("$$$", IOSObjectArray_Get(args, j), @" -> ", [b applyWithId:IOSObjectArray_Get(args, j)]), @"utf-8");
  }
  else {
    jint numLines = 0;
    @try {
      JavaIoBufferedReader *br = (inputFile == nil) ? new_JavaIoBufferedReader_initWithJavaIoReader_(new_JavaIoInputStreamReader_initWithJavaIoInputStream_withNSString_(JreLoadStatic(JavaLangSystem, in), @"utf-8")) : new_JavaIoBufferedReader_initWithJavaIoReader_(new_JavaIoInputStreamReader_initWithJavaIoInputStream_withNSString_(new_JavaIoFileInputStream_initWithJavaIoFile_(inputFile), @"utf-8"));
      (void) [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printfWithNSString:@"Reading input..." withNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]];
      NSString *line;
      while ((line = [br readLine]) != nil) {
        EduStanfordNlpIoEncodingPrintWriter_out_printlnWithNSString_withNSString_([b applyWithId:line], @"utf-8");
        numLines++;
      }
      [br close];
      (void) [JreLoadStatic(JavaLangSystem, err) printfWithNSString:@"done.\nConverted %d lines from %s.\n" withNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(numLines), (unicodeToBuck ? @"UTF-8 to Buckwalter" : @"Buckwalter to UTF-8") } count:2 type:NSObject_class_()]];
    }
    @catch (JavaIoUnsupportedEncodingException *e) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"ERROR: File system does not support UTF-8 encoding."];
    }
    @catch (JavaIoFileNotFoundException *e) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$$", @"ERROR: File does not exist: ", [((JavaIoFile *) nil_chk(inputFile)) getPath])];
    }
    @catch (JavaIoIOException *e) {
      (void) [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printfWithNSString:@"ERROR: IO exception while reading file (line %d).\n" withNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(numLines) } count:1 type:NSObject_class_()]];
    }
  }
  if (EduStanfordNlpInternationalArabicBuckwalter_DEBUG) {
    if (![((id<JavaUtilSet>) nil_chk([((EduStanfordNlpStatsClassicCounter *) nil_chk(b->unmappable_)) keySet])) isEmpty]) {
      EduStanfordNlpIoEncodingPrintWriter_err_printlnWithNSString_withNSString_(@"Characters that could not be converted [passed through!]:", @"utf-8");
      EduStanfordNlpIoEncodingPrintWriter_err_printlnWithNSString_withNSString_([((EduStanfordNlpStatsClassicCounter *) nil_chk(b->unmappable_)) description], @"utf-8");
    }
    else {
      EduStanfordNlpIoEncodingPrintWriter_err_printlnWithNSString_withNSString_(@"All characters successfully converted!", @"utf-8");
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpInternationalArabicBuckwalter)
