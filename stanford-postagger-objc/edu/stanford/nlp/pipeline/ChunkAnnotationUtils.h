//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/pipeline/ChunkAnnotationUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpPipelineChunkAnnotationUtils")
#ifdef RESTRICT_EduStanfordNlpPipelineChunkAnnotationUtils
#define INCLUDE_ALL_EduStanfordNlpPipelineChunkAnnotationUtils 0
#else
#define INCLUDE_ALL_EduStanfordNlpPipelineChunkAnnotationUtils 1
#endif
#undef RESTRICT_EduStanfordNlpPipelineChunkAnnotationUtils

#if !defined (EduStanfordNlpPipelineChunkAnnotationUtils_) && (INCLUDE_ALL_EduStanfordNlpPipelineChunkAnnotationUtils || defined(INCLUDE_EduStanfordNlpPipelineChunkAnnotationUtils))
#define EduStanfordNlpPipelineChunkAnnotationUtils_

@class EduStanfordNlpPipelineAnnotation;
@class EduStanfordNlpPipelineCoreMapAttributeAggregator;
@class EduStanfordNlpProcessCoreLabelTokenFactory;
@class EduStanfordNlpUtilInterval;
@class IOSClass;
@class JavaLangCharacter;
@class JavaLangInteger;
@class JavaUtilRegexPattern;
@protocol EduStanfordNlpProcessCoreTokenFactory;
@protocol EduStanfordNlpUtilCoreMap;
@protocol JavaUtilList;
@protocol JavaUtilMap;

@interface EduStanfordNlpPipelineChunkAnnotationUtils : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)annotateChunkWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)annotation
                                      withIOSClass:(IOSClass *)newAnnotationKey
                                      withIOSClass:(IOSClass *)aggrKey
withEduStanfordNlpPipelineCoreMapAttributeAggregator:(EduStanfordNlpPipelineCoreMapAttributeAggregator *)aggregator;

+ (void)annotateChunkWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)chunk
                                  withJavaUtilList:(id<JavaUtilList>)tokens
                                           withInt:(jint)tokenStartIndex
                                           withInt:(jint)tokenEndIndex
                                           withInt:(jint)totalTokenOffset;

+ (void)annotateChunkWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)chunk
                                   withJavaUtilMap:(id<JavaUtilMap>)attributes;

+ (void)annotateChunksWithJavaUtilList:(id<JavaUtilList>)chunks
                               withInt:(jint)start
                               withInt:(jint)end
                       withJavaUtilMap:(id<JavaUtilMap>)attributes;

+ (void)annotateChunksWithJavaUtilList:(id<JavaUtilList>)chunks
                       withJavaUtilMap:(id<JavaUtilMap>)attributes;

+ (void)annotateChunkTextWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)chunk
                                          withIOSClass:(IOSClass *)tokenTextKey;

+ (jboolean)annotateChunkTextWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)chunk
                             withEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)origAnnotation;

+ (void)annotateChunkTokensWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)chunk
                                            withIOSClass:(IOSClass *)tokenChunkKey
                                            withIOSClass:(IOSClass *)tokenLabelKey;

+ (void)appendCoreMapWithJavaUtilList:(id<JavaUtilList>)res
        withEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)cm
                         withNSString:(NSString *)text
                              withInt:(jint)start
                              withInt:(jint)end
withEduStanfordNlpProcessCoreTokenFactory:(id<EduStanfordNlpProcessCoreTokenFactory>)factory;

+ (jboolean)checkOffsetsWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)docAnnotation;

+ (void)copyUnsetAnnotationsWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)src
                            withEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)dest OBJC_METHOD_FAMILY_NONE;

+ (id<EduStanfordNlpUtilCoreMap>)createCoreMapWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)cm
                                                               withNSString:(NSString *)text
                                                                    withInt:(jint)start
                                                                    withInt:(jint)end
                                  withEduStanfordNlpProcessCoreTokenFactory:(id<EduStanfordNlpProcessCoreTokenFactory>)factory;

+ (jboolean)fixChunkSentenceBoundariesWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)docAnnotation
                                                   withJavaUtilList:(id<JavaUtilList>)chunkCharOffsets;

+ (jboolean)fixChunkSentenceBoundariesWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)docAnnotation
                                                   withJavaUtilList:(id<JavaUtilList>)chunkCharOffsets
                                                        withBoolean:(jboolean)offsetsAreNotSorted
                                                        withBoolean:(jboolean)extendedFixSentence
                                                        withBoolean:(jboolean)moreExtendedFixSentence;

+ (jboolean)fixChunkTokenBoundariesWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)docAnnotation
                                                withJavaUtilList:(id<JavaUtilList>)chunkCharOffsets;

+ (jboolean)fixTokenOffsetsWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)docAnnotation;

+ (EduStanfordNlpPipelineAnnotation *)getAnnotatedChunkWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)annotation
                                                                             withInt:(jint)tokenStartIndex
                                                                             withInt:(jint)tokenEndIndex;

+ (EduStanfordNlpPipelineAnnotation *)getAnnotatedChunkWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)annotation
                                                                             withInt:(jint)tokenStartIndex
                                                                             withInt:(jint)tokenEndIndex
                                                                        withIOSClass:(IOSClass *)tokenChunkKey
                                                                        withIOSClass:(IOSClass *)tokenLabelKey;

+ (EduStanfordNlpPipelineAnnotation *)getAnnotatedChunkWithJavaUtilList:(id<JavaUtilList>)tokens
                                                                withInt:(jint)tokenStartIndex
                                                                withInt:(jint)tokenEndIndex
                                                                withInt:(jint)totalTokenOffset;

+ (EduStanfordNlpPipelineAnnotation *)getAnnotatedChunkWithJavaUtilList:(id<JavaUtilList>)tokens
                                                                withInt:(jint)tokenStartIndex
                                                                withInt:(jint)tokenEndIndex
                                                                withInt:(jint)totalTokenOffset
                                                           withIOSClass:(IOSClass *)tokenChunkKey
                                                           withIOSClass:(IOSClass *)tokenTextKey
                                                           withIOSClass:(IOSClass *)tokenLabelKey;

+ (id<JavaUtilList>)getAnnotatedChunksUsingSortedCharOffsetsWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)annotation
                                                                         withJavaUtilList:(id<JavaUtilList>)charOffsets;

+ (id<JavaUtilList>)getAnnotatedChunksUsingSortedCharOffsetsWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)annotation
                                                                         withJavaUtilList:(id<JavaUtilList>)charOffsets
                                                                              withBoolean:(jboolean)charOffsetIsRelative
                                                                             withIOSClass:(IOSClass *)tokenChunkKey
                                                                             withIOSClass:(IOSClass *)tokenLabelKey
                                                                              withBoolean:(jboolean)allowPartialTokens;

+ (id<EduStanfordNlpUtilCoreMap>)getAnnotatedChunkUsingCharOffsetsWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)annotation
                                                                                        withInt:(jint)charOffsetStart
                                                                                        withInt:(jint)charOffsetEnd;

+ (EduStanfordNlpUtilInterval *)getChunkOffsetsUsingCharOffsetsWithJavaUtilList:(id<JavaUtilList>)chunkList
                                                                        withInt:(jint)charStart
                                                                        withInt:(jint)charEnd;

+ (JavaLangCharacter *)getFirstNonWsCharWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)sent;

+ (JavaLangInteger *)getFirstNonWsCharOffsetWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)sent
                                                              withBoolean:(jboolean)relative;

+ (id<EduStanfordNlpUtilCoreMap>)getMergedChunkWithJavaUtilList:(id<JavaUtilList>)chunkList
                                                        withInt:(jint)chunkIndexStart
                                                        withInt:(jint)chunkIndexEnd
                                                withJavaUtilMap:(id<JavaUtilMap>)aggregators
                 withEduStanfordNlpProcessCoreLabelTokenFactory:(EduStanfordNlpProcessCoreLabelTokenFactory *)tokenFactory;

+ (id<EduStanfordNlpUtilCoreMap>)getMergedChunkWithJavaUtilList:(id<JavaUtilList>)chunkList
                                                   withNSString:(NSString *)origText
                                                        withInt:(jint)chunkIndexStart
                                                        withInt:(jint)chunkIndexEnd
                 withEduStanfordNlpProcessCoreLabelTokenFactory:(EduStanfordNlpProcessCoreLabelTokenFactory *)tokenFactory;

+ (NSString *)getTokenTextWithJavaUtilList:(id<JavaUtilList>)tokens
                              withIOSClass:(IOSClass *)tokenTextKey;

+ (NSString *)getTokenTextWithJavaUtilList:(id<JavaUtilList>)tokens
                              withIOSClass:(IOSClass *)tokenTextKey
                              withNSString:(NSString *)delimiter;

+ (NSString *)getTrimmedTextWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)sent;

+ (jboolean)hasCharacterOffsetsWithEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)chunk;

+ (void)mergeChunksWithJavaUtilList:(id<JavaUtilList>)chunkList
                       withNSString:(NSString *)origText
                            withInt:(jint)chunkIndexStart
                            withInt:(jint)chunkIndexEnd;

+ (id<JavaUtilList>)splitCoreMapWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)p
                                             withBoolean:(jboolean)includeMatched
                           withEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)cm
               withEduStanfordNlpProcessCoreTokenFactory:(id<EduStanfordNlpProcessCoreTokenFactory>)factory;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpPipelineChunkAnnotationUtils)

FOUNDATION_EXPORT jboolean EduStanfordNlpPipelineChunkAnnotationUtils_checkOffsetsWithEduStanfordNlpUtilCoreMap_(id<EduStanfordNlpUtilCoreMap> docAnnotation);

FOUNDATION_EXPORT jboolean EduStanfordNlpPipelineChunkAnnotationUtils_fixTokenOffsetsWithEduStanfordNlpUtilCoreMap_(id<EduStanfordNlpUtilCoreMap> docAnnotation);

FOUNDATION_EXPORT void EduStanfordNlpPipelineChunkAnnotationUtils_copyUnsetAnnotationsWithEduStanfordNlpUtilCoreMap_withEduStanfordNlpUtilCoreMap_(id<EduStanfordNlpUtilCoreMap> src, id<EduStanfordNlpUtilCoreMap> dest);

FOUNDATION_EXPORT jboolean EduStanfordNlpPipelineChunkAnnotationUtils_fixChunkTokenBoundariesWithEduStanfordNlpUtilCoreMap_withJavaUtilList_(id<EduStanfordNlpUtilCoreMap> docAnnotation, id<JavaUtilList> chunkCharOffsets);

FOUNDATION_EXPORT id<EduStanfordNlpUtilCoreMap> EduStanfordNlpPipelineChunkAnnotationUtils_getMergedChunkWithJavaUtilList_withNSString_withInt_withInt_withEduStanfordNlpProcessCoreLabelTokenFactory_(id<JavaUtilList> chunkList, NSString *origText, jint chunkIndexStart, jint chunkIndexEnd, EduStanfordNlpProcessCoreLabelTokenFactory *tokenFactory);

FOUNDATION_EXPORT id<EduStanfordNlpUtilCoreMap> EduStanfordNlpPipelineChunkAnnotationUtils_getMergedChunkWithJavaUtilList_withInt_withInt_withJavaUtilMap_withEduStanfordNlpProcessCoreLabelTokenFactory_(id<JavaUtilList> chunkList, jint chunkIndexStart, jint chunkIndexEnd, id<JavaUtilMap> aggregators, EduStanfordNlpProcessCoreLabelTokenFactory *tokenFactory);

FOUNDATION_EXPORT EduStanfordNlpUtilInterval *EduStanfordNlpPipelineChunkAnnotationUtils_getChunkOffsetsUsingCharOffsetsWithJavaUtilList_withInt_withInt_(id<JavaUtilList> chunkList, jint charStart, jint charEnd);

FOUNDATION_EXPORT void EduStanfordNlpPipelineChunkAnnotationUtils_mergeChunksWithJavaUtilList_withNSString_withInt_withInt_(id<JavaUtilList> chunkList, NSString *origText, jint chunkIndexStart, jint chunkIndexEnd);

FOUNDATION_EXPORT JavaLangCharacter *EduStanfordNlpPipelineChunkAnnotationUtils_getFirstNonWsCharWithEduStanfordNlpUtilCoreMap_(id<EduStanfordNlpUtilCoreMap> sent);

FOUNDATION_EXPORT JavaLangInteger *EduStanfordNlpPipelineChunkAnnotationUtils_getFirstNonWsCharOffsetWithEduStanfordNlpUtilCoreMap_withBoolean_(id<EduStanfordNlpUtilCoreMap> sent, jboolean relative);

FOUNDATION_EXPORT NSString *EduStanfordNlpPipelineChunkAnnotationUtils_getTrimmedTextWithEduStanfordNlpUtilCoreMap_(id<EduStanfordNlpUtilCoreMap> sent);

FOUNDATION_EXPORT jboolean EduStanfordNlpPipelineChunkAnnotationUtils_fixChunkSentenceBoundariesWithEduStanfordNlpUtilCoreMap_withJavaUtilList_(id<EduStanfordNlpUtilCoreMap> docAnnotation, id<JavaUtilList> chunkCharOffsets);

FOUNDATION_EXPORT jboolean EduStanfordNlpPipelineChunkAnnotationUtils_fixChunkSentenceBoundariesWithEduStanfordNlpUtilCoreMap_withJavaUtilList_withBoolean_withBoolean_withBoolean_(id<EduStanfordNlpUtilCoreMap> docAnnotation, id<JavaUtilList> chunkCharOffsets, jboolean offsetsAreNotSorted, jboolean extendedFixSentence, jboolean moreExtendedFixSentence);

FOUNDATION_EXPORT void EduStanfordNlpPipelineChunkAnnotationUtils_annotateChunkWithEduStanfordNlpUtilCoreMap_withJavaUtilList_withInt_withInt_withInt_(id<EduStanfordNlpUtilCoreMap> chunk, id<JavaUtilList> tokens, jint tokenStartIndex, jint tokenEndIndex, jint totalTokenOffset);

FOUNDATION_EXPORT NSString *EduStanfordNlpPipelineChunkAnnotationUtils_getTokenTextWithJavaUtilList_withIOSClass_(id<JavaUtilList> tokens, IOSClass *tokenTextKey);

FOUNDATION_EXPORT NSString *EduStanfordNlpPipelineChunkAnnotationUtils_getTokenTextWithJavaUtilList_withIOSClass_withNSString_(id<JavaUtilList> tokens, IOSClass *tokenTextKey, NSString *delimiter);

FOUNDATION_EXPORT void EduStanfordNlpPipelineChunkAnnotationUtils_annotateChunkTextWithEduStanfordNlpUtilCoreMap_withIOSClass_(id<EduStanfordNlpUtilCoreMap> chunk, IOSClass *tokenTextKey);

FOUNDATION_EXPORT jboolean EduStanfordNlpPipelineChunkAnnotationUtils_hasCharacterOffsetsWithEduStanfordNlpUtilCoreMap_(id<EduStanfordNlpUtilCoreMap> chunk);

FOUNDATION_EXPORT jboolean EduStanfordNlpPipelineChunkAnnotationUtils_annotateChunkTextWithEduStanfordNlpUtilCoreMap_withEduStanfordNlpUtilCoreMap_(id<EduStanfordNlpUtilCoreMap> chunk, id<EduStanfordNlpUtilCoreMap> origAnnotation);

FOUNDATION_EXPORT void EduStanfordNlpPipelineChunkAnnotationUtils_annotateChunkTokensWithEduStanfordNlpUtilCoreMap_withIOSClass_withIOSClass_(id<EduStanfordNlpUtilCoreMap> chunk, IOSClass *tokenChunkKey, IOSClass *tokenLabelKey);

FOUNDATION_EXPORT EduStanfordNlpPipelineAnnotation *EduStanfordNlpPipelineChunkAnnotationUtils_getAnnotatedChunkWithJavaUtilList_withInt_withInt_withInt_(id<JavaUtilList> tokens, jint tokenStartIndex, jint tokenEndIndex, jint totalTokenOffset);

FOUNDATION_EXPORT EduStanfordNlpPipelineAnnotation *EduStanfordNlpPipelineChunkAnnotationUtils_getAnnotatedChunkWithJavaUtilList_withInt_withInt_withInt_withIOSClass_withIOSClass_withIOSClass_(id<JavaUtilList> tokens, jint tokenStartIndex, jint tokenEndIndex, jint totalTokenOffset, IOSClass *tokenChunkKey, IOSClass *tokenTextKey, IOSClass *tokenLabelKey);

FOUNDATION_EXPORT EduStanfordNlpPipelineAnnotation *EduStanfordNlpPipelineChunkAnnotationUtils_getAnnotatedChunkWithEduStanfordNlpUtilCoreMap_withInt_withInt_(id<EduStanfordNlpUtilCoreMap> annotation, jint tokenStartIndex, jint tokenEndIndex);

FOUNDATION_EXPORT EduStanfordNlpPipelineAnnotation *EduStanfordNlpPipelineChunkAnnotationUtils_getAnnotatedChunkWithEduStanfordNlpUtilCoreMap_withInt_withInt_withIOSClass_withIOSClass_(id<EduStanfordNlpUtilCoreMap> annotation, jint tokenStartIndex, jint tokenEndIndex, IOSClass *tokenChunkKey, IOSClass *tokenLabelKey);

FOUNDATION_EXPORT id<EduStanfordNlpUtilCoreMap> EduStanfordNlpPipelineChunkAnnotationUtils_getAnnotatedChunkUsingCharOffsetsWithEduStanfordNlpUtilCoreMap_withInt_withInt_(id<EduStanfordNlpUtilCoreMap> annotation, jint charOffsetStart, jint charOffsetEnd);

FOUNDATION_EXPORT id<JavaUtilList> EduStanfordNlpPipelineChunkAnnotationUtils_getAnnotatedChunksUsingSortedCharOffsetsWithEduStanfordNlpUtilCoreMap_withJavaUtilList_(id<EduStanfordNlpUtilCoreMap> annotation, id<JavaUtilList> charOffsets);

FOUNDATION_EXPORT id<JavaUtilList> EduStanfordNlpPipelineChunkAnnotationUtils_getAnnotatedChunksUsingSortedCharOffsetsWithEduStanfordNlpUtilCoreMap_withJavaUtilList_withBoolean_withIOSClass_withIOSClass_withBoolean_(id<EduStanfordNlpUtilCoreMap> annotation, id<JavaUtilList> charOffsets, jboolean charOffsetIsRelative, IOSClass *tokenChunkKey, IOSClass *tokenLabelKey, jboolean allowPartialTokens);

FOUNDATION_EXPORT void EduStanfordNlpPipelineChunkAnnotationUtils_annotateChunkWithEduStanfordNlpUtilCoreMap_withIOSClass_withIOSClass_withEduStanfordNlpPipelineCoreMapAttributeAggregator_(id<EduStanfordNlpUtilCoreMap> annotation, IOSClass *newAnnotationKey, IOSClass *aggrKey, EduStanfordNlpPipelineCoreMapAttributeAggregator *aggregator);

FOUNDATION_EXPORT void EduStanfordNlpPipelineChunkAnnotationUtils_annotateChunkWithEduStanfordNlpUtilCoreMap_withJavaUtilMap_(id<EduStanfordNlpUtilCoreMap> chunk, id<JavaUtilMap> attributes);

FOUNDATION_EXPORT void EduStanfordNlpPipelineChunkAnnotationUtils_annotateChunksWithJavaUtilList_withInt_withInt_withJavaUtilMap_(id<JavaUtilList> chunks, jint start, jint end, id<JavaUtilMap> attributes);

FOUNDATION_EXPORT void EduStanfordNlpPipelineChunkAnnotationUtils_annotateChunksWithJavaUtilList_withJavaUtilMap_(id<JavaUtilList> chunks, id<JavaUtilMap> attributes);

FOUNDATION_EXPORT id<EduStanfordNlpUtilCoreMap> EduStanfordNlpPipelineChunkAnnotationUtils_createCoreMapWithEduStanfordNlpUtilCoreMap_withNSString_withInt_withInt_withEduStanfordNlpProcessCoreTokenFactory_(id<EduStanfordNlpUtilCoreMap> cm, NSString *text, jint start, jint end, id<EduStanfordNlpProcessCoreTokenFactory> factory);

FOUNDATION_EXPORT void EduStanfordNlpPipelineChunkAnnotationUtils_appendCoreMapWithJavaUtilList_withEduStanfordNlpUtilCoreMap_withNSString_withInt_withInt_withEduStanfordNlpProcessCoreTokenFactory_(id<JavaUtilList> res, id<EduStanfordNlpUtilCoreMap> cm, NSString *text, jint start, jint end, id<EduStanfordNlpProcessCoreTokenFactory> factory);

FOUNDATION_EXPORT id<JavaUtilList> EduStanfordNlpPipelineChunkAnnotationUtils_splitCoreMapWithJavaUtilRegexPattern_withBoolean_withEduStanfordNlpUtilCoreMap_withEduStanfordNlpProcessCoreTokenFactory_(JavaUtilRegexPattern *p, jboolean includeMatched, id<EduStanfordNlpUtilCoreMap> cm, id<EduStanfordNlpProcessCoreTokenFactory> factory);

FOUNDATION_EXPORT void EduStanfordNlpPipelineChunkAnnotationUtils_init(EduStanfordNlpPipelineChunkAnnotationUtils *self);

FOUNDATION_EXPORT EduStanfordNlpPipelineChunkAnnotationUtils *new_EduStanfordNlpPipelineChunkAnnotationUtils_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpPipelineChunkAnnotationUtils *create_EduStanfordNlpPipelineChunkAnnotationUtils_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpPipelineChunkAnnotationUtils)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpPipelineChunkAnnotationUtils")
