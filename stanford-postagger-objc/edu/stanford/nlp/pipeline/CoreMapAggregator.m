//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/pipeline/CoreMapAggregator.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/pipeline/ChunkAnnotationUtils.h"
#include "edu/stanford/nlp/pipeline/CoreMapAggregator.h"
#include "edu/stanford/nlp/pipeline/CoreMapAttributeAggregator.h"
#include "edu/stanford/nlp/process/CoreLabelTokenFactory.h"
#include "edu/stanford/nlp/util/CollectionUtils.h"
#include "edu/stanford/nlp/util/CoreMap.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/function/Function.h"

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpPipelineCoreMapAggregator)

EduStanfordNlpPipelineCoreMapAggregator *EduStanfordNlpPipelineCoreMapAggregator_DEFAULT_AGGREGATOR;
EduStanfordNlpPipelineCoreMapAggregator *EduStanfordNlpPipelineCoreMapAggregator_DEFAULT_NUMERIC_TOKENS_AGGREGATOR;

@implementation EduStanfordNlpPipelineCoreMapAggregator

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)aggregators {
  EduStanfordNlpPipelineCoreMapAggregator_initWithJavaUtilMap_(self, aggregators);
  return self;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)aggregators
                       withIOSClass:(IOSClass *)mergedKey
withEduStanfordNlpProcessCoreLabelTokenFactory:(EduStanfordNlpProcessCoreLabelTokenFactory *)tokenFactory {
  EduStanfordNlpPipelineCoreMapAggregator_initWithJavaUtilMap_withIOSClass_withEduStanfordNlpProcessCoreLabelTokenFactory_(self, aggregators, mergedKey, tokenFactory);
  return self;
}

- (id<EduStanfordNlpUtilCoreMap>)mergeWithJavaUtilList:(id<JavaUtilList>)inArg
                                               withInt:(jint)start
                                               withInt:(jint)end {
  id<EduStanfordNlpUtilCoreMap> merged = EduStanfordNlpPipelineChunkAnnotationUtils_getMergedChunkWithJavaUtilList_withInt_withInt_withJavaUtilMap_withEduStanfordNlpProcessCoreLabelTokenFactory_(inArg, start, end, aggregators_, tokenFactory_);
  if (mergedKey_ != nil) {
    (void) [((id<EduStanfordNlpUtilCoreMap>) nil_chk(merged)) setWithIOSClass:mergedKey_ withId:new_JavaUtilArrayList_initWithJavaUtilCollection_([((id<JavaUtilList>) nil_chk(inArg)) subListWithInt:start withInt:end])];
  }
  return merged;
}

- (id<EduStanfordNlpUtilCoreMap>)mergeWithJavaUtilList:(id<JavaUtilList>)inArg {
  return [self mergeWithJavaUtilList:inArg withInt:0 withInt:[((id<JavaUtilList>) nil_chk(inArg)) size]];
}

- (id<EduStanfordNlpUtilCoreMap>)applyWithId:(id<JavaUtilList>)inArg {
  return [self mergeWithJavaUtilList:inArg withInt:0 withInt:[((id<JavaUtilList>) nil_chk(inArg)) size]];
}

+ (EduStanfordNlpPipelineCoreMapAggregator *)getDefaultAggregator {
  return EduStanfordNlpPipelineCoreMapAggregator_getDefaultAggregator();
}

+ (EduStanfordNlpPipelineCoreMapAggregator *)getAggregatorWithJavaUtilMap:(id<JavaUtilMap>)aggregators {
  return EduStanfordNlpPipelineCoreMapAggregator_getAggregatorWithJavaUtilMap_(aggregators);
}

+ (EduStanfordNlpPipelineCoreMapAggregator *)getAggregatorWithJavaUtilMap:(id<JavaUtilMap>)aggregators
                                                             withIOSClass:(IOSClass *)key {
  return EduStanfordNlpPipelineCoreMapAggregator_getAggregatorWithJavaUtilMap_withIOSClass_(aggregators, key);
}

+ (EduStanfordNlpPipelineCoreMapAggregator *)getAggregatorWithJavaUtilMap:(id<JavaUtilMap>)aggregators
                                                             withIOSClass:(IOSClass *)key
                           withEduStanfordNlpProcessCoreLabelTokenFactory:(EduStanfordNlpProcessCoreLabelTokenFactory *)tokenFactory {
  return EduStanfordNlpPipelineCoreMapAggregator_getAggregatorWithJavaUtilMap_withIOSClass_withEduStanfordNlpProcessCoreLabelTokenFactory_(aggregators, key, tokenFactory);
}

- (id<JavaUtilList>)mergeWithJavaUtilList:(id<JavaUtilList>)list
                         withJavaUtilList:(id<JavaUtilList>)matched {
  return EduStanfordNlpUtilCollectionUtils_mergeListWithJavaUtilList_withJavaUtilList_withJavaUtilFunctionFunction_(list, matched, self);
}

- (id<JavaUtilList>)mergeWithJavaUtilList:(id<JavaUtilList>)list
                         withJavaUtilList:(id<JavaUtilList>)matched
             withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)toIntervalFunc {
  return EduStanfordNlpUtilCollectionUtils_mergeListWithJavaUtilList_withJavaUtilCollection_withJavaUtilFunctionFunction_withJavaUtilFunctionFunction_(list, matched, toIntervalFunc, self);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, 3, -1, -1 },
    { NULL, "LEduStanfordNlpUtilCoreMap;", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "LEduStanfordNlpUtilCoreMap;", 0x1, 4, 7, -1, 8, -1, -1 },
    { NULL, "LEduStanfordNlpUtilCoreMap;", 0x1, 9, 7, -1, 8, -1, -1 },
    { NULL, "LEduStanfordNlpPipelineCoreMapAggregator;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpPipelineCoreMapAggregator;", 0x9, 10, 0, -1, 11, -1, -1 },
    { NULL, "LEduStanfordNlpPipelineCoreMapAggregator;", 0x9, 10, 12, -1, 13, -1, -1 },
    { NULL, "LEduStanfordNlpPipelineCoreMapAggregator;", 0x9, 10, 2, -1, 14, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 4, 15, -1, 16, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 4, 17, -1, 18, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilMap:);
  methods[1].selector = @selector(initWithJavaUtilMap:withIOSClass:withEduStanfordNlpProcessCoreLabelTokenFactory:);
  methods[2].selector = @selector(mergeWithJavaUtilList:withInt:withInt:);
  methods[3].selector = @selector(mergeWithJavaUtilList:);
  methods[4].selector = @selector(applyWithId:);
  methods[5].selector = @selector(getDefaultAggregator);
  methods[6].selector = @selector(getAggregatorWithJavaUtilMap:);
  methods[7].selector = @selector(getAggregatorWithJavaUtilMap:withIOSClass:);
  methods[8].selector = @selector(getAggregatorWithJavaUtilMap:withIOSClass:withEduStanfordNlpProcessCoreLabelTokenFactory:);
  methods[9].selector = @selector(mergeWithJavaUtilList:withJavaUtilList:);
  methods[10].selector = @selector(mergeWithJavaUtilList:withJavaUtilList:withJavaUtilFunctionFunction:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_AGGREGATOR", "LEduStanfordNlpPipelineCoreMapAggregator;", .constantValue.asLong = 0, 0x19, -1, 19, -1, -1 },
    { "DEFAULT_NUMERIC_TOKENS_AGGREGATOR", "LEduStanfordNlpPipelineCoreMapAggregator;", .constantValue.asLong = 0, 0x19, -1, 20, -1, -1 },
    { "aggregators_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x0, -1, -1, 21, -1 },
    { "mergedKey_", "LIOSClass;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "tokenFactory_", "LEduStanfordNlpProcessCoreLabelTokenFactory;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/Class;Ledu/stanford/nlp/pipeline/CoreMapAttributeAggregator;>;)V", "LJavaUtilMap;LIOSClass;LEduStanfordNlpProcessCoreLabelTokenFactory;", "(Ljava/util/Map<Ljava/lang/Class;Ledu/stanford/nlp/pipeline/CoreMapAttributeAggregator;>;Ljava/lang/Class;Ledu/stanford/nlp/process/CoreLabelTokenFactory;)V", "merge", "LJavaUtilList;II", "(Ljava/util/List<+Ledu/stanford/nlp/util/CoreMap;>;II)Ledu/stanford/nlp/util/CoreMap;", "LJavaUtilList;", "(Ljava/util/List<+Ledu/stanford/nlp/util/CoreMap;>;)Ledu/stanford/nlp/util/CoreMap;", "apply", "getAggregator", "(Ljava/util/Map<Ljava/lang/Class;Ledu/stanford/nlp/pipeline/CoreMapAttributeAggregator;>;)Ledu/stanford/nlp/pipeline/CoreMapAggregator;", "LJavaUtilMap;LIOSClass;", "(Ljava/util/Map<Ljava/lang/Class;Ledu/stanford/nlp/pipeline/CoreMapAttributeAggregator;>;Ljava/lang/Class;)Ledu/stanford/nlp/pipeline/CoreMapAggregator;", "(Ljava/util/Map<Ljava/lang/Class;Ledu/stanford/nlp/pipeline/CoreMapAttributeAggregator;>;Ljava/lang/Class;Ledu/stanford/nlp/process/CoreLabelTokenFactory;)Ledu/stanford/nlp/pipeline/CoreMapAggregator;", "LJavaUtilList;LJavaUtilList;", "(Ljava/util/List<+Ledu/stanford/nlp/util/CoreMap;>;Ljava/util/List<+Ledu/stanford/nlp/util/HasInterval<Ljava/lang/Integer;>;>;)Ljava/util/List<Ledu/stanford/nlp/util/CoreMap;>;", "LJavaUtilList;LJavaUtilList;LJavaUtilFunctionFunction;", "<M:Ljava/lang/Object;>(Ljava/util/List<+Ledu/stanford/nlp/util/CoreMap;>;Ljava/util/List<TM;>;Ljava/util/function/Function<TM;Ledu/stanford/nlp/util/Interval<Ljava/lang/Integer;>;>;)Ljava/util/List<Ledu/stanford/nlp/util/CoreMap;>;", &EduStanfordNlpPipelineCoreMapAggregator_DEFAULT_AGGREGATOR, &EduStanfordNlpPipelineCoreMapAggregator_DEFAULT_NUMERIC_TOKENS_AGGREGATOR, "Ljava/util/Map<Ljava/lang/Class;Ledu/stanford/nlp/pipeline/CoreMapAttributeAggregator;>;", "Ljava/lang/Object;Ljava/util/function/Function<Ljava/util/List<+Ledu/stanford/nlp/util/CoreMap;>;Ledu/stanford/nlp/util/CoreMap;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineCoreMapAggregator = { "CoreMapAggregator", "edu.stanford.nlp.pipeline", ptrTable, methods, fields, 7, 0x1, 11, 5, -1, -1, -1, 22, -1 };
  return &_EduStanfordNlpPipelineCoreMapAggregator;
}

+ (void)initialize {
  if (self == [EduStanfordNlpPipelineCoreMapAggregator class]) {
    EduStanfordNlpPipelineCoreMapAggregator_DEFAULT_AGGREGATOR = EduStanfordNlpPipelineCoreMapAggregator_getAggregatorWithJavaUtilMap_(EduStanfordNlpPipelineCoreMapAttributeAggregator_getDefaultAggregators());
    EduStanfordNlpPipelineCoreMapAggregator_DEFAULT_NUMERIC_TOKENS_AGGREGATOR = EduStanfordNlpPipelineCoreMapAggregator_getAggregatorWithJavaUtilMap_(JreLoadStatic(EduStanfordNlpPipelineCoreMapAttributeAggregator, DEFAULT_NUMERIC_TOKENS_AGGREGATORS));
    J2OBJC_SET_INITIALIZED(EduStanfordNlpPipelineCoreMapAggregator)
  }
}

@end

void EduStanfordNlpPipelineCoreMapAggregator_initWithJavaUtilMap_(EduStanfordNlpPipelineCoreMapAggregator *self, id<JavaUtilMap> aggregators) {
  NSObject_init(self);
  self->mergedKey_ = nil;
  self->tokenFactory_ = nil;
  self->aggregators_ = aggregators;
}

EduStanfordNlpPipelineCoreMapAggregator *new_EduStanfordNlpPipelineCoreMapAggregator_initWithJavaUtilMap_(id<JavaUtilMap> aggregators) {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineCoreMapAggregator, initWithJavaUtilMap_, aggregators)
}

EduStanfordNlpPipelineCoreMapAggregator *create_EduStanfordNlpPipelineCoreMapAggregator_initWithJavaUtilMap_(id<JavaUtilMap> aggregators) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineCoreMapAggregator, initWithJavaUtilMap_, aggregators)
}

void EduStanfordNlpPipelineCoreMapAggregator_initWithJavaUtilMap_withIOSClass_withEduStanfordNlpProcessCoreLabelTokenFactory_(EduStanfordNlpPipelineCoreMapAggregator *self, id<JavaUtilMap> aggregators, IOSClass *mergedKey, EduStanfordNlpProcessCoreLabelTokenFactory *tokenFactory) {
  NSObject_init(self);
  self->mergedKey_ = nil;
  self->tokenFactory_ = nil;
  self->aggregators_ = aggregators;
  self->mergedKey_ = mergedKey;
  self->tokenFactory_ = tokenFactory;
}

EduStanfordNlpPipelineCoreMapAggregator *new_EduStanfordNlpPipelineCoreMapAggregator_initWithJavaUtilMap_withIOSClass_withEduStanfordNlpProcessCoreLabelTokenFactory_(id<JavaUtilMap> aggregators, IOSClass *mergedKey, EduStanfordNlpProcessCoreLabelTokenFactory *tokenFactory) {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineCoreMapAggregator, initWithJavaUtilMap_withIOSClass_withEduStanfordNlpProcessCoreLabelTokenFactory_, aggregators, mergedKey, tokenFactory)
}

EduStanfordNlpPipelineCoreMapAggregator *create_EduStanfordNlpPipelineCoreMapAggregator_initWithJavaUtilMap_withIOSClass_withEduStanfordNlpProcessCoreLabelTokenFactory_(id<JavaUtilMap> aggregators, IOSClass *mergedKey, EduStanfordNlpProcessCoreLabelTokenFactory *tokenFactory) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineCoreMapAggregator, initWithJavaUtilMap_withIOSClass_withEduStanfordNlpProcessCoreLabelTokenFactory_, aggregators, mergedKey, tokenFactory)
}

EduStanfordNlpPipelineCoreMapAggregator *EduStanfordNlpPipelineCoreMapAggregator_getDefaultAggregator() {
  EduStanfordNlpPipelineCoreMapAggregator_initialize();
  return EduStanfordNlpPipelineCoreMapAggregator_DEFAULT_AGGREGATOR;
}

EduStanfordNlpPipelineCoreMapAggregator *EduStanfordNlpPipelineCoreMapAggregator_getAggregatorWithJavaUtilMap_(id<JavaUtilMap> aggregators) {
  EduStanfordNlpPipelineCoreMapAggregator_initialize();
  return new_EduStanfordNlpPipelineCoreMapAggregator_initWithJavaUtilMap_(aggregators);
}

EduStanfordNlpPipelineCoreMapAggregator *EduStanfordNlpPipelineCoreMapAggregator_getAggregatorWithJavaUtilMap_withIOSClass_(id<JavaUtilMap> aggregators, IOSClass *key) {
  EduStanfordNlpPipelineCoreMapAggregator_initialize();
  return new_EduStanfordNlpPipelineCoreMapAggregator_initWithJavaUtilMap_withIOSClass_withEduStanfordNlpProcessCoreLabelTokenFactory_(aggregators, key, nil);
}

EduStanfordNlpPipelineCoreMapAggregator *EduStanfordNlpPipelineCoreMapAggregator_getAggregatorWithJavaUtilMap_withIOSClass_withEduStanfordNlpProcessCoreLabelTokenFactory_(id<JavaUtilMap> aggregators, IOSClass *key, EduStanfordNlpProcessCoreLabelTokenFactory *tokenFactory) {
  EduStanfordNlpPipelineCoreMapAggregator_initialize();
  return new_EduStanfordNlpPipelineCoreMapAggregator_initWithJavaUtilMap_withIOSClass_withEduStanfordNlpProcessCoreLabelTokenFactory_(aggregators, key, tokenFactory);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpPipelineCoreMapAggregator)
