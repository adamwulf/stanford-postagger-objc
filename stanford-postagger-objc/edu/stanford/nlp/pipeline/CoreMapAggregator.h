//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/pipeline/CoreMapAggregator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpPipelineCoreMapAggregator")
#ifdef RESTRICT_EduStanfordNlpPipelineCoreMapAggregator
#define INCLUDE_ALL_EduStanfordNlpPipelineCoreMapAggregator 0
#else
#define INCLUDE_ALL_EduStanfordNlpPipelineCoreMapAggregator 1
#endif
#undef RESTRICT_EduStanfordNlpPipelineCoreMapAggregator

#if !defined (EduStanfordNlpPipelineCoreMapAggregator_) && (INCLUDE_ALL_EduStanfordNlpPipelineCoreMapAggregator || defined(INCLUDE_EduStanfordNlpPipelineCoreMapAggregator))
#define EduStanfordNlpPipelineCoreMapAggregator_

#define RESTRICT_JavaUtilFunctionFunction 1
#define INCLUDE_JavaUtilFunctionFunction 1
#include "java/util/function/Function.h"

@class EduStanfordNlpProcessCoreLabelTokenFactory;
@class IOSClass;
@protocol EduStanfordNlpUtilCoreMap;
@protocol JavaUtilList;
@protocol JavaUtilMap;

@interface EduStanfordNlpPipelineCoreMapAggregator : NSObject < JavaUtilFunctionFunction > {
 @public
  id<JavaUtilMap> aggregators_;
  IOSClass *mergedKey_;
  EduStanfordNlpProcessCoreLabelTokenFactory *tokenFactory_;
}

#pragma mark Public

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)aggregators;

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)aggregators
                       withIOSClass:(IOSClass *)mergedKey
withEduStanfordNlpProcessCoreLabelTokenFactory:(EduStanfordNlpProcessCoreLabelTokenFactory *)tokenFactory;

- (id<EduStanfordNlpUtilCoreMap>)applyWithId:(id<JavaUtilList>)inArg;

+ (EduStanfordNlpPipelineCoreMapAggregator *)getAggregatorWithJavaUtilMap:(id<JavaUtilMap>)aggregators;

+ (EduStanfordNlpPipelineCoreMapAggregator *)getAggregatorWithJavaUtilMap:(id<JavaUtilMap>)aggregators
                                                             withIOSClass:(IOSClass *)key;

+ (EduStanfordNlpPipelineCoreMapAggregator *)getAggregatorWithJavaUtilMap:(id<JavaUtilMap>)aggregators
                                                             withIOSClass:(IOSClass *)key
                           withEduStanfordNlpProcessCoreLabelTokenFactory:(EduStanfordNlpProcessCoreLabelTokenFactory *)tokenFactory;

+ (EduStanfordNlpPipelineCoreMapAggregator *)getDefaultAggregator;

- (id<EduStanfordNlpUtilCoreMap>)mergeWithJavaUtilList:(id<JavaUtilList>)inArg;

- (id<EduStanfordNlpUtilCoreMap>)mergeWithJavaUtilList:(id<JavaUtilList>)inArg
                                               withInt:(jint)start
                                               withInt:(jint)end;

- (id<JavaUtilList>)mergeWithJavaUtilList:(id<JavaUtilList>)list
                         withJavaUtilList:(id<JavaUtilList>)matched;

- (id<JavaUtilList>)mergeWithJavaUtilList:(id<JavaUtilList>)list
                         withJavaUtilList:(id<JavaUtilList>)matched
             withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)toIntervalFunc;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpPipelineCoreMapAggregator)

J2OBJC_FIELD_SETTER(EduStanfordNlpPipelineCoreMapAggregator, aggregators_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduStanfordNlpPipelineCoreMapAggregator, mergedKey_, IOSClass *)
J2OBJC_FIELD_SETTER(EduStanfordNlpPipelineCoreMapAggregator, tokenFactory_, EduStanfordNlpProcessCoreLabelTokenFactory *)

inline EduStanfordNlpPipelineCoreMapAggregator *EduStanfordNlpPipelineCoreMapAggregator_get_DEFAULT_AGGREGATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpPipelineCoreMapAggregator *EduStanfordNlpPipelineCoreMapAggregator_DEFAULT_AGGREGATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpPipelineCoreMapAggregator, DEFAULT_AGGREGATOR, EduStanfordNlpPipelineCoreMapAggregator *)

inline EduStanfordNlpPipelineCoreMapAggregator *EduStanfordNlpPipelineCoreMapAggregator_get_DEFAULT_NUMERIC_TOKENS_AGGREGATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpPipelineCoreMapAggregator *EduStanfordNlpPipelineCoreMapAggregator_DEFAULT_NUMERIC_TOKENS_AGGREGATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpPipelineCoreMapAggregator, DEFAULT_NUMERIC_TOKENS_AGGREGATOR, EduStanfordNlpPipelineCoreMapAggregator *)

FOUNDATION_EXPORT void EduStanfordNlpPipelineCoreMapAggregator_initWithJavaUtilMap_(EduStanfordNlpPipelineCoreMapAggregator *self, id<JavaUtilMap> aggregators);

FOUNDATION_EXPORT EduStanfordNlpPipelineCoreMapAggregator *new_EduStanfordNlpPipelineCoreMapAggregator_initWithJavaUtilMap_(id<JavaUtilMap> aggregators) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpPipelineCoreMapAggregator *create_EduStanfordNlpPipelineCoreMapAggregator_initWithJavaUtilMap_(id<JavaUtilMap> aggregators);

FOUNDATION_EXPORT void EduStanfordNlpPipelineCoreMapAggregator_initWithJavaUtilMap_withIOSClass_withEduStanfordNlpProcessCoreLabelTokenFactory_(EduStanfordNlpPipelineCoreMapAggregator *self, id<JavaUtilMap> aggregators, IOSClass *mergedKey, EduStanfordNlpProcessCoreLabelTokenFactory *tokenFactory);

FOUNDATION_EXPORT EduStanfordNlpPipelineCoreMapAggregator *new_EduStanfordNlpPipelineCoreMapAggregator_initWithJavaUtilMap_withIOSClass_withEduStanfordNlpProcessCoreLabelTokenFactory_(id<JavaUtilMap> aggregators, IOSClass *mergedKey, EduStanfordNlpProcessCoreLabelTokenFactory *tokenFactory) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpPipelineCoreMapAggregator *create_EduStanfordNlpPipelineCoreMapAggregator_initWithJavaUtilMap_withIOSClass_withEduStanfordNlpProcessCoreLabelTokenFactory_(id<JavaUtilMap> aggregators, IOSClass *mergedKey, EduStanfordNlpProcessCoreLabelTokenFactory *tokenFactory);

FOUNDATION_EXPORT EduStanfordNlpPipelineCoreMapAggregator *EduStanfordNlpPipelineCoreMapAggregator_getDefaultAggregator();

FOUNDATION_EXPORT EduStanfordNlpPipelineCoreMapAggregator *EduStanfordNlpPipelineCoreMapAggregator_getAggregatorWithJavaUtilMap_(id<JavaUtilMap> aggregators);

FOUNDATION_EXPORT EduStanfordNlpPipelineCoreMapAggregator *EduStanfordNlpPipelineCoreMapAggregator_getAggregatorWithJavaUtilMap_withIOSClass_(id<JavaUtilMap> aggregators, IOSClass *key);

FOUNDATION_EXPORT EduStanfordNlpPipelineCoreMapAggregator *EduStanfordNlpPipelineCoreMapAggregator_getAggregatorWithJavaUtilMap_withIOSClass_withEduStanfordNlpProcessCoreLabelTokenFactory_(id<JavaUtilMap> aggregators, IOSClass *key, EduStanfordNlpProcessCoreLabelTokenFactory *tokenFactory);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpPipelineCoreMapAggregator)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpPipelineCoreMapAggregator")
