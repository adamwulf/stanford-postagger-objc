//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/pipeline/Annotator.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/pipeline/Annotator.h"
#include "edu/stanford/nlp/util/ArraySet.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@interface EduStanfordNlpPipelineAnnotator_$1 : JavaUtilHashMap

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpPipelineAnnotator_$1)

__attribute__((unused)) static void EduStanfordNlpPipelineAnnotator_$1_init(EduStanfordNlpPipelineAnnotator_$1 *self);

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1 *new_EduStanfordNlpPipelineAnnotator_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1 *create_EduStanfordNlpPipelineAnnotator_$1_init();

@interface EduStanfordNlpPipelineAnnotator_$1_$1 : JavaUtilHashSet

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpPipelineAnnotator_$1_$1)

__attribute__((unused)) static void EduStanfordNlpPipelineAnnotator_$1_$1_init(EduStanfordNlpPipelineAnnotator_$1_$1 *self);

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$1 *new_EduStanfordNlpPipelineAnnotator_$1_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$1 *create_EduStanfordNlpPipelineAnnotator_$1_$1_init();

@interface EduStanfordNlpPipelineAnnotator_$1_$2 : JavaUtilHashSet

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpPipelineAnnotator_$1_$2)

__attribute__((unused)) static void EduStanfordNlpPipelineAnnotator_$1_$2_init(EduStanfordNlpPipelineAnnotator_$1_$2 *self);

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$2 *new_EduStanfordNlpPipelineAnnotator_$1_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$2 *create_EduStanfordNlpPipelineAnnotator_$1_$2_init();

@interface EduStanfordNlpPipelineAnnotator_$1_$3 : JavaUtilHashSet

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpPipelineAnnotator_$1_$3)

__attribute__((unused)) static void EduStanfordNlpPipelineAnnotator_$1_$3_init(EduStanfordNlpPipelineAnnotator_$1_$3 *self);

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$3 *new_EduStanfordNlpPipelineAnnotator_$1_$3_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$3 *create_EduStanfordNlpPipelineAnnotator_$1_$3_init();

@interface EduStanfordNlpPipelineAnnotator_$1_$4 : JavaUtilHashSet

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpPipelineAnnotator_$1_$4)

__attribute__((unused)) static void EduStanfordNlpPipelineAnnotator_$1_$4_init(EduStanfordNlpPipelineAnnotator_$1_$4 *self);

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$4 *new_EduStanfordNlpPipelineAnnotator_$1_$4_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$4 *create_EduStanfordNlpPipelineAnnotator_$1_$4_init();

@interface EduStanfordNlpPipelineAnnotator_$1_$5 : JavaUtilHashSet

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpPipelineAnnotator_$1_$5)

__attribute__((unused)) static void EduStanfordNlpPipelineAnnotator_$1_$5_init(EduStanfordNlpPipelineAnnotator_$1_$5 *self);

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$5 *new_EduStanfordNlpPipelineAnnotator_$1_$5_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$5 *create_EduStanfordNlpPipelineAnnotator_$1_$5_init();

@interface EduStanfordNlpPipelineAnnotator_$1_$6 : JavaUtilHashSet

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpPipelineAnnotator_$1_$6)

__attribute__((unused)) static void EduStanfordNlpPipelineAnnotator_$1_$6_init(EduStanfordNlpPipelineAnnotator_$1_$6 *self);

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$6 *new_EduStanfordNlpPipelineAnnotator_$1_$6_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$6 *create_EduStanfordNlpPipelineAnnotator_$1_$6_init();

@interface EduStanfordNlpPipelineAnnotator_$1_$7 : JavaUtilHashSet

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpPipelineAnnotator_$1_$7)

__attribute__((unused)) static void EduStanfordNlpPipelineAnnotator_$1_$7_init(EduStanfordNlpPipelineAnnotator_$1_$7 *self);

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$7 *new_EduStanfordNlpPipelineAnnotator_$1_$7_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$7 *create_EduStanfordNlpPipelineAnnotator_$1_$7_init();

@interface EduStanfordNlpPipelineAnnotator_$1_$8 : JavaUtilHashSet

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpPipelineAnnotator_$1_$8)

__attribute__((unused)) static void EduStanfordNlpPipelineAnnotator_$1_$8_init(EduStanfordNlpPipelineAnnotator_$1_$8 *self);

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$8 *new_EduStanfordNlpPipelineAnnotator_$1_$8_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$8 *create_EduStanfordNlpPipelineAnnotator_$1_$8_init();

@interface EduStanfordNlpPipelineAnnotator_$1_$9 : JavaUtilHashSet

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpPipelineAnnotator_$1_$9)

__attribute__((unused)) static void EduStanfordNlpPipelineAnnotator_$1_$9_init(EduStanfordNlpPipelineAnnotator_$1_$9 *self);

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$9 *new_EduStanfordNlpPipelineAnnotator_$1_$9_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$9 *create_EduStanfordNlpPipelineAnnotator_$1_$9_init();

@interface EduStanfordNlpPipelineAnnotator_$1_$10 : JavaUtilHashSet

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpPipelineAnnotator_$1_$10)

__attribute__((unused)) static void EduStanfordNlpPipelineAnnotator_$1_$10_init(EduStanfordNlpPipelineAnnotator_$1_$10 *self);

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$10 *new_EduStanfordNlpPipelineAnnotator_$1_$10_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$10 *create_EduStanfordNlpPipelineAnnotator_$1_$10_init();

@interface EduStanfordNlpPipelineAnnotator_$1_$11 : JavaUtilHashSet

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpPipelineAnnotator_$1_$11)

__attribute__((unused)) static void EduStanfordNlpPipelineAnnotator_$1_$11_init(EduStanfordNlpPipelineAnnotator_$1_$11 *self);

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$11 *new_EduStanfordNlpPipelineAnnotator_$1_$11_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$11 *create_EduStanfordNlpPipelineAnnotator_$1_$11_init();

@interface EduStanfordNlpPipelineAnnotator_$1_$12 : JavaUtilHashSet

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpPipelineAnnotator_$1_$12)

__attribute__((unused)) static void EduStanfordNlpPipelineAnnotator_$1_$12_init(EduStanfordNlpPipelineAnnotator_$1_$12 *self);

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$12 *new_EduStanfordNlpPipelineAnnotator_$1_$12_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$12 *create_EduStanfordNlpPipelineAnnotator_$1_$12_init();

@interface EduStanfordNlpPipelineAnnotator_$1_$13 : JavaUtilHashSet

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpPipelineAnnotator_$1_$13)

__attribute__((unused)) static void EduStanfordNlpPipelineAnnotator_$1_$13_init(EduStanfordNlpPipelineAnnotator_$1_$13 *self);

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$13 *new_EduStanfordNlpPipelineAnnotator_$1_$13_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$13 *create_EduStanfordNlpPipelineAnnotator_$1_$13_init();

@interface EduStanfordNlpPipelineAnnotator_$1_$14 : JavaUtilHashSet

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpPipelineAnnotator_$1_$14)

__attribute__((unused)) static void EduStanfordNlpPipelineAnnotator_$1_$14_init(EduStanfordNlpPipelineAnnotator_$1_$14 *self);

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$14 *new_EduStanfordNlpPipelineAnnotator_$1_$14_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$14 *create_EduStanfordNlpPipelineAnnotator_$1_$14_init();

@interface EduStanfordNlpPipelineAnnotator_$1_$15 : JavaUtilHashSet

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpPipelineAnnotator_$1_$15)

__attribute__((unused)) static void EduStanfordNlpPipelineAnnotator_$1_$15_init(EduStanfordNlpPipelineAnnotator_$1_$15 *self);

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$15 *new_EduStanfordNlpPipelineAnnotator_$1_$15_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$15 *create_EduStanfordNlpPipelineAnnotator_$1_$15_init();

@interface EduStanfordNlpPipelineAnnotator_$1_$16 : JavaUtilHashSet

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpPipelineAnnotator_$1_$16)

__attribute__((unused)) static void EduStanfordNlpPipelineAnnotator_$1_$16_init(EduStanfordNlpPipelineAnnotator_$1_$16 *self);

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$16 *new_EduStanfordNlpPipelineAnnotator_$1_$16_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$16 *create_EduStanfordNlpPipelineAnnotator_$1_$16_init();

@interface EduStanfordNlpPipelineAnnotator_$1_$17 : JavaUtilHashSet

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpPipelineAnnotator_$1_$17)

__attribute__((unused)) static void EduStanfordNlpPipelineAnnotator_$1_$17_init(EduStanfordNlpPipelineAnnotator_$1_$17 *self);

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$17 *new_EduStanfordNlpPipelineAnnotator_$1_$17_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$17 *create_EduStanfordNlpPipelineAnnotator_$1_$17_init();

@interface EduStanfordNlpPipelineAnnotator_$1_$18 : JavaUtilHashSet

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpPipelineAnnotator_$1_$18)

__attribute__((unused)) static void EduStanfordNlpPipelineAnnotator_$1_$18_init(EduStanfordNlpPipelineAnnotator_$1_$18 *self);

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$18 *new_EduStanfordNlpPipelineAnnotator_$1_$18_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$18 *create_EduStanfordNlpPipelineAnnotator_$1_$18_init();

@interface EduStanfordNlpPipelineAnnotator_$1_$19 : JavaUtilHashSet

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpPipelineAnnotator_$1_$19)

__attribute__((unused)) static void EduStanfordNlpPipelineAnnotator_$1_$19_init(EduStanfordNlpPipelineAnnotator_$1_$19 *self);

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$19 *new_EduStanfordNlpPipelineAnnotator_$1_$19_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpPipelineAnnotator_$1_$19 *create_EduStanfordNlpPipelineAnnotator_$1_$19_init();

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpPipelineAnnotator)

NSString *EduStanfordNlpPipelineAnnotator_STANFORD_TOKENIZE = @"tokenize";
NSString *EduStanfordNlpPipelineAnnotator_STANFORD_CLEAN_XML = @"cleanxml";
NSString *EduStanfordNlpPipelineAnnotator_STANFORD_SSPLIT = @"ssplit";
NSString *EduStanfordNlpPipelineAnnotator_STANFORD_POS = @"pos";
NSString *EduStanfordNlpPipelineAnnotator_STANFORD_LEMMA = @"lemma";
NSString *EduStanfordNlpPipelineAnnotator_STANFORD_NER = @"ner";
NSString *EduStanfordNlpPipelineAnnotator_STANFORD_REGEXNER = @"regexner";
NSString *EduStanfordNlpPipelineAnnotator_STANFORD_ENTITY_MENTIONS = @"entitymentions";
NSString *EduStanfordNlpPipelineAnnotator_STANFORD_GENDER = @"gender";
NSString *EduStanfordNlpPipelineAnnotator_STANFORD_TRUECASE = @"truecase";
NSString *EduStanfordNlpPipelineAnnotator_STANFORD_PARSE = @"parse";
NSString *EduStanfordNlpPipelineAnnotator_STANFORD_DETERMINISTIC_COREF = @"dcoref";
NSString *EduStanfordNlpPipelineAnnotator_STANFORD_COREF = @"coref";
NSString *EduStanfordNlpPipelineAnnotator_STANFORD_MENTION = @"mention";
NSString *EduStanfordNlpPipelineAnnotator_STANFORD_RELATION = @"relation";
NSString *EduStanfordNlpPipelineAnnotator_STANFORD_SENTIMENT = @"sentiment";
NSString *EduStanfordNlpPipelineAnnotator_STANFORD_COLUMN_DATA_CLASSIFIER = @"cdc";
NSString *EduStanfordNlpPipelineAnnotator_STANFORD_DEPENDENCIES = @"depparse";
NSString *EduStanfordNlpPipelineAnnotator_STANFORD_NATLOG = @"natlog";
NSString *EduStanfordNlpPipelineAnnotator_STANFORD_OPENIE = @"openie";
NSString *EduStanfordNlpPipelineAnnotator_STANFORD_QUOTE = @"quote";
NSString *EduStanfordNlpPipelineAnnotator_STANFORD_UD_FEATURES = @"udfeats";
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_TOKENIZE_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_CLEAN_XML_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_SSPLIT_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_POS_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_LEMMA_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_NER_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_GENDER_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_TRUECASE_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_PARSE_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_DEPENDENCY_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_MENTION_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_ENTITY_MENTIONS_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_DETERMINISTIC_COREF_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_COREF_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_RELATION_EXTRACTOR_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_NATLOG_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_OPENIE_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_QUOTE_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_UD_FEATURES_REQUIREMENT;
id<JavaUtilMap> EduStanfordNlpPipelineAnnotator_REQUIREMENTS;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_GUTIME_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_SUTIME_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_HEIDELTIME_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_STEM_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_NUMBER_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_TIME_WORDS_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_QUANTIFIABLE_ENTITY_NORMALIZATION_REQUIREMENT;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_COLUMN_DATA_CLASSIFIER;
EduStanfordNlpPipelineAnnotator_Requirement *EduStanfordNlpPipelineAnnotator_BINARIZED_TREES_REQUIREMENT;
id<JavaUtilSet> EduStanfordNlpPipelineAnnotator_TOKENIZE_AND_SSPLIT;
id<JavaUtilSet> EduStanfordNlpPipelineAnnotator_TOKENIZE_SSPLIT_POS;
id<JavaUtilSet> EduStanfordNlpPipelineAnnotator_TOKENIZE_SSPLIT_NER;
id<JavaUtilSet> EduStanfordNlpPipelineAnnotator_TOKENIZE_SSPLIT_PARSE;
id<JavaUtilSet> EduStanfordNlpPipelineAnnotator_TOKENIZE_SSPLIT_PARSE_NER;
id<JavaUtilSet> EduStanfordNlpPipelineAnnotator_TOKENIZE_SSPLIT_POS_LEMMA;
id<JavaUtilSet> EduStanfordNlpPipelineAnnotator_TOKENIZE_SSPLIT_POS_DEPPARSE;
id<JavaUtilSet> EduStanfordNlpPipelineAnnotator_PARSE_AND_TAG;
id<JavaUtilSet> EduStanfordNlpPipelineAnnotator_PARSE_TAG_BINARIZED_TREES;
id<JavaUtilSet> EduStanfordNlpPipelineAnnotator_PARSE_TAG_DEPPARSE_BINARIZED_TREES;
id<JavaUtilSet> EduStanfordNlpPipelineAnnotator_PARSE_TAG_DEPPARSE;

@implementation EduStanfordNlpPipelineAnnotator

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x401, -1, -1, -1, 2, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x401, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(annotateWithEduStanfordNlpPipelineAnnotation:);
  methods[1].selector = @selector(requirementsSatisfied);
  methods[2].selector = @selector(requires);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "STANFORD_TOKENIZE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
    { "STANFORD_CLEAN_XML", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "STANFORD_SSPLIT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
    { "STANFORD_POS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
    { "STANFORD_LEMMA", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "STANFORD_NER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "STANFORD_REGEXNER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "STANFORD_ENTITY_MENTIONS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "STANFORD_GENDER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
    { "STANFORD_TRUECASE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 12, -1, -1 },
    { "STANFORD_PARSE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "STANFORD_DETERMINISTIC_COREF", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
    { "STANFORD_COREF", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 15, -1, -1 },
    { "STANFORD_MENTION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 16, -1, -1 },
    { "STANFORD_RELATION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 17, -1, -1 },
    { "STANFORD_SENTIMENT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 18, -1, -1 },
    { "STANFORD_COLUMN_DATA_CLASSIFIER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 19, -1, -1 },
    { "STANFORD_DEPENDENCIES", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 20, -1, -1 },
    { "STANFORD_NATLOG", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 21, -1, -1 },
    { "STANFORD_OPENIE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 22, -1, -1 },
    { "STANFORD_QUOTE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 23, -1, -1 },
    { "STANFORD_UD_FEATURES", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 24, -1, -1 },
    { "TOKENIZE_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 25, -1, -1 },
    { "CLEAN_XML_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 26, -1, -1 },
    { "SSPLIT_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 27, -1, -1 },
    { "POS_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 28, -1, -1 },
    { "LEMMA_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 29, -1, -1 },
    { "NER_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 30, -1, -1 },
    { "GENDER_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 31, -1, -1 },
    { "TRUECASE_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 32, -1, -1 },
    { "PARSE_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 33, -1, -1 },
    { "DEPENDENCY_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 34, -1, -1 },
    { "MENTION_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 35, -1, -1 },
    { "ENTITY_MENTIONS_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 36, -1, -1 },
    { "DETERMINISTIC_COREF_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 37, -1, -1 },
    { "COREF_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 38, -1, -1 },
    { "RELATION_EXTRACTOR_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 39, -1, -1 },
    { "NATLOG_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 40, -1, -1 },
    { "OPENIE_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 41, -1, -1 },
    { "QUOTE_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 42, -1, -1 },
    { "UD_FEATURES_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 43, -1, -1 },
    { "REQUIREMENTS", "LJavaUtilMap;", .constantValue.asLong = 0, 0x19, -1, 44, 45, -1 },
    { "GUTIME_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 46, -1, -1 },
    { "SUTIME_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 47, -1, -1 },
    { "HEIDELTIME_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 48, -1, -1 },
    { "STEM_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 49, -1, -1 },
    { "NUMBER_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 50, -1, -1 },
    { "TIME_WORDS_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 51, -1, -1 },
    { "QUANTIFIABLE_ENTITY_NORMALIZATION_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 52, -1, -1 },
    { "COLUMN_DATA_CLASSIFIER", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 53, -1, -1 },
    { "BINARIZED_TREES_REQUIREMENT", "LEduStanfordNlpPipelineAnnotator_Requirement;", .constantValue.asLong = 0, 0x19, -1, 54, -1, -1 },
    { "TOKENIZE_AND_SSPLIT", "LJavaUtilSet;", .constantValue.asLong = 0, 0x19, -1, 55, 56, -1 },
    { "TOKENIZE_SSPLIT_POS", "LJavaUtilSet;", .constantValue.asLong = 0, 0x19, -1, 57, 56, -1 },
    { "TOKENIZE_SSPLIT_NER", "LJavaUtilSet;", .constantValue.asLong = 0, 0x19, -1, 58, 56, -1 },
    { "TOKENIZE_SSPLIT_PARSE", "LJavaUtilSet;", .constantValue.asLong = 0, 0x19, -1, 59, 56, -1 },
    { "TOKENIZE_SSPLIT_PARSE_NER", "LJavaUtilSet;", .constantValue.asLong = 0, 0x19, -1, 60, 56, -1 },
    { "TOKENIZE_SSPLIT_POS_LEMMA", "LJavaUtilSet;", .constantValue.asLong = 0, 0x19, -1, 61, 56, -1 },
    { "TOKENIZE_SSPLIT_POS_DEPPARSE", "LJavaUtilSet;", .constantValue.asLong = 0, 0x19, -1, 62, 56, -1 },
    { "PARSE_AND_TAG", "LJavaUtilSet;", .constantValue.asLong = 0, 0x19, -1, 63, 56, -1 },
    { "PARSE_TAG_BINARIZED_TREES", "LJavaUtilSet;", .constantValue.asLong = 0, 0x19, -1, 64, 56, -1 },
    { "PARSE_TAG_DEPPARSE_BINARIZED_TREES", "LJavaUtilSet;", .constantValue.asLong = 0, 0x19, -1, 65, 56, -1 },
    { "PARSE_TAG_DEPPARSE", "LJavaUtilSet;", .constantValue.asLong = 0, 0x19, -1, 66, 56, -1 },
  };
  static const void *ptrTable[] = { "annotate", "LEduStanfordNlpPipelineAnnotation;", "()Ljava/util/Set<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;", &EduStanfordNlpPipelineAnnotator_STANFORD_TOKENIZE, &EduStanfordNlpPipelineAnnotator_STANFORD_CLEAN_XML, &EduStanfordNlpPipelineAnnotator_STANFORD_SSPLIT, &EduStanfordNlpPipelineAnnotator_STANFORD_POS, &EduStanfordNlpPipelineAnnotator_STANFORD_LEMMA, &EduStanfordNlpPipelineAnnotator_STANFORD_NER, &EduStanfordNlpPipelineAnnotator_STANFORD_REGEXNER, &EduStanfordNlpPipelineAnnotator_STANFORD_ENTITY_MENTIONS, &EduStanfordNlpPipelineAnnotator_STANFORD_GENDER, &EduStanfordNlpPipelineAnnotator_STANFORD_TRUECASE, &EduStanfordNlpPipelineAnnotator_STANFORD_PARSE, &EduStanfordNlpPipelineAnnotator_STANFORD_DETERMINISTIC_COREF, &EduStanfordNlpPipelineAnnotator_STANFORD_COREF, &EduStanfordNlpPipelineAnnotator_STANFORD_MENTION, &EduStanfordNlpPipelineAnnotator_STANFORD_RELATION, &EduStanfordNlpPipelineAnnotator_STANFORD_SENTIMENT, &EduStanfordNlpPipelineAnnotator_STANFORD_COLUMN_DATA_CLASSIFIER, &EduStanfordNlpPipelineAnnotator_STANFORD_DEPENDENCIES, &EduStanfordNlpPipelineAnnotator_STANFORD_NATLOG, &EduStanfordNlpPipelineAnnotator_STANFORD_OPENIE, &EduStanfordNlpPipelineAnnotator_STANFORD_QUOTE, &EduStanfordNlpPipelineAnnotator_STANFORD_UD_FEATURES, &EduStanfordNlpPipelineAnnotator_TOKENIZE_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_CLEAN_XML_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_SSPLIT_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_POS_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_LEMMA_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_NER_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_GENDER_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_TRUECASE_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_PARSE_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_DEPENDENCY_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_MENTION_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_ENTITY_MENTIONS_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_DETERMINISTIC_COREF_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_COREF_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_RELATION_EXTRACTOR_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_NATLOG_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_OPENIE_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_QUOTE_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_UD_FEATURES_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_REQUIREMENTS, "Ljava/util/Map<Ljava/lang/String;Ljava/util/Set<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;>;", &EduStanfordNlpPipelineAnnotator_GUTIME_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_SUTIME_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_HEIDELTIME_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_STEM_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_NUMBER_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_TIME_WORDS_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_QUANTIFIABLE_ENTITY_NORMALIZATION_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_COLUMN_DATA_CLASSIFIER, &EduStanfordNlpPipelineAnnotator_BINARIZED_TREES_REQUIREMENT, &EduStanfordNlpPipelineAnnotator_TOKENIZE_AND_SSPLIT, "Ljava/util/Set<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;", &EduStanfordNlpPipelineAnnotator_TOKENIZE_SSPLIT_POS, &EduStanfordNlpPipelineAnnotator_TOKENIZE_SSPLIT_NER, &EduStanfordNlpPipelineAnnotator_TOKENIZE_SSPLIT_PARSE, &EduStanfordNlpPipelineAnnotator_TOKENIZE_SSPLIT_PARSE_NER, &EduStanfordNlpPipelineAnnotator_TOKENIZE_SSPLIT_POS_LEMMA, &EduStanfordNlpPipelineAnnotator_TOKENIZE_SSPLIT_POS_DEPPARSE, &EduStanfordNlpPipelineAnnotator_PARSE_AND_TAG, &EduStanfordNlpPipelineAnnotator_PARSE_TAG_BINARIZED_TREES, &EduStanfordNlpPipelineAnnotator_PARSE_TAG_DEPPARSE_BINARIZED_TREES, &EduStanfordNlpPipelineAnnotator_PARSE_TAG_DEPPARSE, "LEduStanfordNlpPipelineAnnotator_Requirement;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator = { "Annotator", "edu.stanford.nlp.pipeline", ptrTable, methods, fields, 7, 0x609, 3, 62, -1, 67, -1, -1, -1 };
  return &_EduStanfordNlpPipelineAnnotator;
}

+ (void)initialize {
  if (self == [EduStanfordNlpPipelineAnnotator class]) {
    EduStanfordNlpPipelineAnnotator_TOKENIZE_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(EduStanfordNlpPipelineAnnotator_STANFORD_TOKENIZE);
    EduStanfordNlpPipelineAnnotator_CLEAN_XML_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(EduStanfordNlpPipelineAnnotator_STANFORD_CLEAN_XML);
    EduStanfordNlpPipelineAnnotator_SSPLIT_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(EduStanfordNlpPipelineAnnotator_STANFORD_SSPLIT);
    EduStanfordNlpPipelineAnnotator_POS_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(EduStanfordNlpPipelineAnnotator_STANFORD_POS);
    EduStanfordNlpPipelineAnnotator_LEMMA_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(EduStanfordNlpPipelineAnnotator_STANFORD_LEMMA);
    EduStanfordNlpPipelineAnnotator_NER_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(EduStanfordNlpPipelineAnnotator_STANFORD_NER);
    EduStanfordNlpPipelineAnnotator_GENDER_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(EduStanfordNlpPipelineAnnotator_STANFORD_GENDER);
    EduStanfordNlpPipelineAnnotator_TRUECASE_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(EduStanfordNlpPipelineAnnotator_STANFORD_TRUECASE);
    EduStanfordNlpPipelineAnnotator_PARSE_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(EduStanfordNlpPipelineAnnotator_STANFORD_PARSE);
    EduStanfordNlpPipelineAnnotator_DEPENDENCY_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(EduStanfordNlpPipelineAnnotator_STANFORD_DEPENDENCIES);
    EduStanfordNlpPipelineAnnotator_MENTION_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(EduStanfordNlpPipelineAnnotator_STANFORD_MENTION);
    EduStanfordNlpPipelineAnnotator_ENTITY_MENTIONS_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(EduStanfordNlpPipelineAnnotator_STANFORD_ENTITY_MENTIONS);
    EduStanfordNlpPipelineAnnotator_DETERMINISTIC_COREF_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(EduStanfordNlpPipelineAnnotator_STANFORD_DETERMINISTIC_COREF);
    EduStanfordNlpPipelineAnnotator_COREF_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(EduStanfordNlpPipelineAnnotator_STANFORD_COREF);
    EduStanfordNlpPipelineAnnotator_RELATION_EXTRACTOR_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(EduStanfordNlpPipelineAnnotator_STANFORD_RELATION);
    EduStanfordNlpPipelineAnnotator_NATLOG_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(EduStanfordNlpPipelineAnnotator_STANFORD_NATLOG);
    EduStanfordNlpPipelineAnnotator_OPENIE_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(EduStanfordNlpPipelineAnnotator_STANFORD_OPENIE);
    EduStanfordNlpPipelineAnnotator_QUOTE_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(EduStanfordNlpPipelineAnnotator_STANFORD_QUOTE);
    EduStanfordNlpPipelineAnnotator_UD_FEATURES_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(EduStanfordNlpPipelineAnnotator_STANFORD_UD_FEATURES);
    EduStanfordNlpPipelineAnnotator_REQUIREMENTS = JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(new_EduStanfordNlpPipelineAnnotator_$1_init());
    EduStanfordNlpPipelineAnnotator_GUTIME_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(@"gutime");
    EduStanfordNlpPipelineAnnotator_SUTIME_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(@"sutime");
    EduStanfordNlpPipelineAnnotator_HEIDELTIME_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(@"heideltime");
    EduStanfordNlpPipelineAnnotator_STEM_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(@"stem");
    EduStanfordNlpPipelineAnnotator_NUMBER_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(@"number");
    EduStanfordNlpPipelineAnnotator_TIME_WORDS_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(@"timewords");
    EduStanfordNlpPipelineAnnotator_QUANTIFIABLE_ENTITY_NORMALIZATION_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(@"quantifiable_entity_normalization");
    EduStanfordNlpPipelineAnnotator_COLUMN_DATA_CLASSIFIER = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(@"column_data_classifer");
    EduStanfordNlpPipelineAnnotator_BINARIZED_TREES_REQUIREMENT = new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(@"binarized_trees");
    EduStanfordNlpPipelineAnnotator_TOKENIZE_AND_SSPLIT = JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpUtilArraySet_initWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpPipelineAnnotator_TOKENIZE_REQUIREMENT, EduStanfordNlpPipelineAnnotator_SSPLIT_REQUIREMENT } count:2 type:NSObject_class_()]));
    EduStanfordNlpPipelineAnnotator_TOKENIZE_SSPLIT_POS = JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpUtilArraySet_initWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpPipelineAnnotator_TOKENIZE_REQUIREMENT, EduStanfordNlpPipelineAnnotator_SSPLIT_REQUIREMENT, EduStanfordNlpPipelineAnnotator_POS_REQUIREMENT } count:3 type:NSObject_class_()]));
    EduStanfordNlpPipelineAnnotator_TOKENIZE_SSPLIT_NER = JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpUtilArraySet_initWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpPipelineAnnotator_TOKENIZE_REQUIREMENT, EduStanfordNlpPipelineAnnotator_SSPLIT_REQUIREMENT, EduStanfordNlpPipelineAnnotator_NER_REQUIREMENT } count:3 type:NSObject_class_()]));
    EduStanfordNlpPipelineAnnotator_TOKENIZE_SSPLIT_PARSE = JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpUtilArraySet_initWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpPipelineAnnotator_TOKENIZE_REQUIREMENT, EduStanfordNlpPipelineAnnotator_SSPLIT_REQUIREMENT, EduStanfordNlpPipelineAnnotator_PARSE_REQUIREMENT } count:3 type:NSObject_class_()]));
    EduStanfordNlpPipelineAnnotator_TOKENIZE_SSPLIT_PARSE_NER = JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpUtilArraySet_initWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpPipelineAnnotator_TOKENIZE_REQUIREMENT, EduStanfordNlpPipelineAnnotator_SSPLIT_REQUIREMENT, EduStanfordNlpPipelineAnnotator_PARSE_REQUIREMENT, EduStanfordNlpPipelineAnnotator_NER_REQUIREMENT } count:4 type:NSObject_class_()]));
    EduStanfordNlpPipelineAnnotator_TOKENIZE_SSPLIT_POS_LEMMA = JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpUtilArraySet_initWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpPipelineAnnotator_TOKENIZE_REQUIREMENT, EduStanfordNlpPipelineAnnotator_SSPLIT_REQUIREMENT, EduStanfordNlpPipelineAnnotator_POS_REQUIREMENT, EduStanfordNlpPipelineAnnotator_LEMMA_REQUIREMENT } count:4 type:NSObject_class_()]));
    EduStanfordNlpPipelineAnnotator_TOKENIZE_SSPLIT_POS_DEPPARSE = JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpUtilArraySet_initWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpPipelineAnnotator_TOKENIZE_REQUIREMENT, EduStanfordNlpPipelineAnnotator_SSPLIT_REQUIREMENT, EduStanfordNlpPipelineAnnotator_POS_REQUIREMENT, EduStanfordNlpPipelineAnnotator_DEPENDENCY_REQUIREMENT } count:4 type:NSObject_class_()]));
    EduStanfordNlpPipelineAnnotator_PARSE_AND_TAG = JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpUtilArraySet_initWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpPipelineAnnotator_POS_REQUIREMENT, EduStanfordNlpPipelineAnnotator_PARSE_REQUIREMENT } count:2 type:NSObject_class_()]));
    EduStanfordNlpPipelineAnnotator_PARSE_TAG_BINARIZED_TREES = JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpUtilArraySet_initWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpPipelineAnnotator_POS_REQUIREMENT, EduStanfordNlpPipelineAnnotator_PARSE_REQUIREMENT, EduStanfordNlpPipelineAnnotator_BINARIZED_TREES_REQUIREMENT } count:3 type:NSObject_class_()]));
    EduStanfordNlpPipelineAnnotator_PARSE_TAG_DEPPARSE_BINARIZED_TREES = JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpUtilArraySet_initWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpPipelineAnnotator_POS_REQUIREMENT, EduStanfordNlpPipelineAnnotator_PARSE_REQUIREMENT, EduStanfordNlpPipelineAnnotator_DEPENDENCY_REQUIREMENT, EduStanfordNlpPipelineAnnotator_BINARIZED_TREES_REQUIREMENT } count:4 type:NSObject_class_()]));
    EduStanfordNlpPipelineAnnotator_PARSE_TAG_DEPPARSE = JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpUtilArraySet_initWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpPipelineAnnotator_POS_REQUIREMENT, EduStanfordNlpPipelineAnnotator_PARSE_REQUIREMENT, EduStanfordNlpPipelineAnnotator_DEPENDENCY_REQUIREMENT } count:3 type:NSObject_class_()]));
    J2OBJC_SET_INITIALIZED(EduStanfordNlpPipelineAnnotator)
  }
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(EduStanfordNlpPipelineAnnotator)

@implementation EduStanfordNlpPipelineAnnotator_Requirement

- (instancetype)initWithNSString:(NSString *)name {
  EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(self, name);
  return self;
}

- (NSString *)description {
  return name_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "toString", "LEduStanfordNlpPipelineAnnotator;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator_Requirement = { "Requirement", "edu.stanford.nlp.pipeline", ptrTable, methods, fields, 7, 0x9, 2, 1, 2, -1, -1, -1, -1 };
  return &_EduStanfordNlpPipelineAnnotator_Requirement;
}

@end

void EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(EduStanfordNlpPipelineAnnotator_Requirement *self, NSString *name) {
  NSObject_init(self);
  self->name_ = name;
}

EduStanfordNlpPipelineAnnotator_Requirement *new_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(NSString *name) {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineAnnotator_Requirement, initWithNSString_, name)
}

EduStanfordNlpPipelineAnnotator_Requirement *create_EduStanfordNlpPipelineAnnotator_Requirement_initWithNSString_(NSString *name) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineAnnotator_Requirement, initWithNSString_, name)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpPipelineAnnotator_Requirement)

@implementation EduStanfordNlpPipelineAnnotator_$1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpPipelineAnnotator_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpPipelineAnnotator;", "Ljava/util/HashMap<Ljava/lang/String;Ljava/util/Set<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator_$1 = { "", "edu.stanford.nlp.pipeline", ptrTable, methods, NULL, 7, 0x8008, 1, 0, 0, -1, -1, 1, -1 };
  return &_EduStanfordNlpPipelineAnnotator_$1;
}

@end

void EduStanfordNlpPipelineAnnotator_$1_init(EduStanfordNlpPipelineAnnotator_$1 *self) {
  JavaUtilHashMap_init(self);
  {
    (void) [self putWithId:EduStanfordNlpPipelineAnnotator_STANFORD_TOKENIZE withId:JreLoadStatic(JavaUtilCollections, EMPTY_SET)];
    (void) [self putWithId:EduStanfordNlpPipelineAnnotator_STANFORD_CLEAN_XML withId:JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpPipelineAnnotator_$1_$1_init())];
    (void) [self putWithId:EduStanfordNlpPipelineAnnotator_STANFORD_SSPLIT withId:JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpPipelineAnnotator_$1_$2_init())];
    (void) [self putWithId:EduStanfordNlpPipelineAnnotator_STANFORD_POS withId:JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpPipelineAnnotator_$1_$3_init())];
    (void) [self putWithId:EduStanfordNlpPipelineAnnotator_STANFORD_LEMMA withId:JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpPipelineAnnotator_$1_$4_init())];
    (void) [self putWithId:EduStanfordNlpPipelineAnnotator_STANFORD_NER withId:JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpPipelineAnnotator_$1_$5_init())];
    (void) [self putWithId:EduStanfordNlpPipelineAnnotator_STANFORD_REGEXNER withId:JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpPipelineAnnotator_$1_$6_init())];
    (void) [self putWithId:EduStanfordNlpPipelineAnnotator_STANFORD_GENDER withId:JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpPipelineAnnotator_$1_$7_init())];
    (void) [self putWithId:EduStanfordNlpPipelineAnnotator_STANFORD_TRUECASE withId:JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpPipelineAnnotator_$1_$8_init())];
    (void) [self putWithId:EduStanfordNlpPipelineAnnotator_STANFORD_PARSE withId:JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpPipelineAnnotator_$1_$9_init())];
    (void) [self putWithId:EduStanfordNlpPipelineAnnotator_STANFORD_DEPENDENCIES withId:JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpPipelineAnnotator_$1_$10_init())];
    (void) [self putWithId:EduStanfordNlpPipelineAnnotator_STANFORD_MENTION withId:JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpPipelineAnnotator_$1_$11_init())];
    (void) [self putWithId:EduStanfordNlpPipelineAnnotator_STANFORD_ENTITY_MENTIONS withId:JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpPipelineAnnotator_$1_$12_init())];
    (void) [self putWithId:EduStanfordNlpPipelineAnnotator_STANFORD_DETERMINISTIC_COREF withId:JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpPipelineAnnotator_$1_$13_init())];
    (void) [self putWithId:EduStanfordNlpPipelineAnnotator_STANFORD_COREF withId:JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpPipelineAnnotator_$1_$14_init())];
    (void) [self putWithId:EduStanfordNlpPipelineAnnotator_STANFORD_RELATION withId:JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpPipelineAnnotator_$1_$15_init())];
    (void) [self putWithId:EduStanfordNlpPipelineAnnotator_STANFORD_NATLOG withId:JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpPipelineAnnotator_$1_$16_init())];
    (void) [self putWithId:EduStanfordNlpPipelineAnnotator_STANFORD_OPENIE withId:JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpPipelineAnnotator_$1_$17_init())];
    (void) [self putWithId:EduStanfordNlpPipelineAnnotator_STANFORD_QUOTE withId:JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpPipelineAnnotator_$1_$18_init())];
    (void) [self putWithId:EduStanfordNlpPipelineAnnotator_STANFORD_UD_FEATURES withId:JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_EduStanfordNlpPipelineAnnotator_$1_$19_init())];
  }
}

EduStanfordNlpPipelineAnnotator_$1 *new_EduStanfordNlpPipelineAnnotator_$1_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineAnnotator_$1, init)
}

EduStanfordNlpPipelineAnnotator_$1 *create_EduStanfordNlpPipelineAnnotator_$1_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineAnnotator_$1, init)
}

@implementation EduStanfordNlpPipelineAnnotator_$1_$1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpPipelineAnnotator_$1_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpPipelineAnnotator_$1;", "Ljava/util/HashSet<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator_$1_$1 = { "", "edu.stanford.nlp.pipeline", ptrTable, methods, NULL, 7, 0x8008, 1, 0, 0, -1, -1, 1, -1 };
  return &_EduStanfordNlpPipelineAnnotator_$1_$1;
}

@end

void EduStanfordNlpPipelineAnnotator_$1_$1_init(EduStanfordNlpPipelineAnnotator_$1_$1 *self) {
  JavaUtilHashSet_init(self);
  {
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, TOKENIZE_REQUIREMENT)];
  }
}

EduStanfordNlpPipelineAnnotator_$1_$1 *new_EduStanfordNlpPipelineAnnotator_$1_$1_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineAnnotator_$1_$1, init)
}

EduStanfordNlpPipelineAnnotator_$1_$1 *create_EduStanfordNlpPipelineAnnotator_$1_$1_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineAnnotator_$1_$1, init)
}

@implementation EduStanfordNlpPipelineAnnotator_$1_$2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpPipelineAnnotator_$1_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpPipelineAnnotator_$1;", "Ljava/util/HashSet<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator_$1_$2 = { "", "edu.stanford.nlp.pipeline", ptrTable, methods, NULL, 7, 0x8008, 1, 0, 0, -1, -1, 1, -1 };
  return &_EduStanfordNlpPipelineAnnotator_$1_$2;
}

@end

void EduStanfordNlpPipelineAnnotator_$1_$2_init(EduStanfordNlpPipelineAnnotator_$1_$2 *self) {
  JavaUtilHashSet_init(self);
  {
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, TOKENIZE_REQUIREMENT)];
  }
}

EduStanfordNlpPipelineAnnotator_$1_$2 *new_EduStanfordNlpPipelineAnnotator_$1_$2_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineAnnotator_$1_$2, init)
}

EduStanfordNlpPipelineAnnotator_$1_$2 *create_EduStanfordNlpPipelineAnnotator_$1_$2_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineAnnotator_$1_$2, init)
}

@implementation EduStanfordNlpPipelineAnnotator_$1_$3

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpPipelineAnnotator_$1_$3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpPipelineAnnotator_$1;", "Ljava/util/HashSet<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator_$1_$3 = { "", "edu.stanford.nlp.pipeline", ptrTable, methods, NULL, 7, 0x8008, 1, 0, 0, -1, -1, 1, -1 };
  return &_EduStanfordNlpPipelineAnnotator_$1_$3;
}

@end

void EduStanfordNlpPipelineAnnotator_$1_$3_init(EduStanfordNlpPipelineAnnotator_$1_$3 *self) {
  JavaUtilHashSet_init(self);
  {
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, TOKENIZE_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, SSPLIT_REQUIREMENT)];
  }
}

EduStanfordNlpPipelineAnnotator_$1_$3 *new_EduStanfordNlpPipelineAnnotator_$1_$3_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineAnnotator_$1_$3, init)
}

EduStanfordNlpPipelineAnnotator_$1_$3 *create_EduStanfordNlpPipelineAnnotator_$1_$3_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineAnnotator_$1_$3, init)
}

@implementation EduStanfordNlpPipelineAnnotator_$1_$4

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpPipelineAnnotator_$1_$4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpPipelineAnnotator_$1;", "Ljava/util/HashSet<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator_$1_$4 = { "", "edu.stanford.nlp.pipeline", ptrTable, methods, NULL, 7, 0x8008, 1, 0, 0, -1, -1, 1, -1 };
  return &_EduStanfordNlpPipelineAnnotator_$1_$4;
}

@end

void EduStanfordNlpPipelineAnnotator_$1_$4_init(EduStanfordNlpPipelineAnnotator_$1_$4 *self) {
  JavaUtilHashSet_init(self);
  {
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, TOKENIZE_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, SSPLIT_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, POS_REQUIREMENT)];
  }
}

EduStanfordNlpPipelineAnnotator_$1_$4 *new_EduStanfordNlpPipelineAnnotator_$1_$4_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineAnnotator_$1_$4, init)
}

EduStanfordNlpPipelineAnnotator_$1_$4 *create_EduStanfordNlpPipelineAnnotator_$1_$4_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineAnnotator_$1_$4, init)
}

@implementation EduStanfordNlpPipelineAnnotator_$1_$5

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpPipelineAnnotator_$1_$5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpPipelineAnnotator_$1;", "Ljava/util/HashSet<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator_$1_$5 = { "", "edu.stanford.nlp.pipeline", ptrTable, methods, NULL, 7, 0x8008, 1, 0, 0, -1, -1, 1, -1 };
  return &_EduStanfordNlpPipelineAnnotator_$1_$5;
}

@end

void EduStanfordNlpPipelineAnnotator_$1_$5_init(EduStanfordNlpPipelineAnnotator_$1_$5 *self) {
  JavaUtilHashSet_init(self);
  {
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, TOKENIZE_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, SSPLIT_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, POS_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, LEMMA_REQUIREMENT)];
  }
}

EduStanfordNlpPipelineAnnotator_$1_$5 *new_EduStanfordNlpPipelineAnnotator_$1_$5_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineAnnotator_$1_$5, init)
}

EduStanfordNlpPipelineAnnotator_$1_$5 *create_EduStanfordNlpPipelineAnnotator_$1_$5_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineAnnotator_$1_$5, init)
}

@implementation EduStanfordNlpPipelineAnnotator_$1_$6

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpPipelineAnnotator_$1_$6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpPipelineAnnotator_$1;", "Ljava/util/HashSet<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator_$1_$6 = { "", "edu.stanford.nlp.pipeline", ptrTable, methods, NULL, 7, 0x8008, 1, 0, 0, -1, -1, 1, -1 };
  return &_EduStanfordNlpPipelineAnnotator_$1_$6;
}

@end

void EduStanfordNlpPipelineAnnotator_$1_$6_init(EduStanfordNlpPipelineAnnotator_$1_$6 *self) {
  JavaUtilHashSet_init(self);
  {
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, TOKENIZE_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, SSPLIT_REQUIREMENT)];
  }
}

EduStanfordNlpPipelineAnnotator_$1_$6 *new_EduStanfordNlpPipelineAnnotator_$1_$6_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineAnnotator_$1_$6, init)
}

EduStanfordNlpPipelineAnnotator_$1_$6 *create_EduStanfordNlpPipelineAnnotator_$1_$6_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineAnnotator_$1_$6, init)
}

@implementation EduStanfordNlpPipelineAnnotator_$1_$7

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpPipelineAnnotator_$1_$7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpPipelineAnnotator_$1;", "Ljava/util/HashSet<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator_$1_$7 = { "", "edu.stanford.nlp.pipeline", ptrTable, methods, NULL, 7, 0x8008, 1, 0, 0, -1, -1, 1, -1 };
  return &_EduStanfordNlpPipelineAnnotator_$1_$7;
}

@end

void EduStanfordNlpPipelineAnnotator_$1_$7_init(EduStanfordNlpPipelineAnnotator_$1_$7 *self) {
  JavaUtilHashSet_init(self);
  {
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, TOKENIZE_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, SSPLIT_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, POS_REQUIREMENT)];
  }
}

EduStanfordNlpPipelineAnnotator_$1_$7 *new_EduStanfordNlpPipelineAnnotator_$1_$7_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineAnnotator_$1_$7, init)
}

EduStanfordNlpPipelineAnnotator_$1_$7 *create_EduStanfordNlpPipelineAnnotator_$1_$7_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineAnnotator_$1_$7, init)
}

@implementation EduStanfordNlpPipelineAnnotator_$1_$8

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpPipelineAnnotator_$1_$8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpPipelineAnnotator_$1;", "Ljava/util/HashSet<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator_$1_$8 = { "", "edu.stanford.nlp.pipeline", ptrTable, methods, NULL, 7, 0x8008, 1, 0, 0, -1, -1, 1, -1 };
  return &_EduStanfordNlpPipelineAnnotator_$1_$8;
}

@end

void EduStanfordNlpPipelineAnnotator_$1_$8_init(EduStanfordNlpPipelineAnnotator_$1_$8 *self) {
  JavaUtilHashSet_init(self);
  {
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, TOKENIZE_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, SSPLIT_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, POS_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, LEMMA_REQUIREMENT)];
  }
}

EduStanfordNlpPipelineAnnotator_$1_$8 *new_EduStanfordNlpPipelineAnnotator_$1_$8_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineAnnotator_$1_$8, init)
}

EduStanfordNlpPipelineAnnotator_$1_$8 *create_EduStanfordNlpPipelineAnnotator_$1_$8_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineAnnotator_$1_$8, init)
}

@implementation EduStanfordNlpPipelineAnnotator_$1_$9

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpPipelineAnnotator_$1_$9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpPipelineAnnotator_$1;", "Ljava/util/HashSet<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator_$1_$9 = { "", "edu.stanford.nlp.pipeline", ptrTable, methods, NULL, 7, 0x8008, 1, 0, 0, -1, -1, 1, -1 };
  return &_EduStanfordNlpPipelineAnnotator_$1_$9;
}

@end

void EduStanfordNlpPipelineAnnotator_$1_$9_init(EduStanfordNlpPipelineAnnotator_$1_$9 *self) {
  JavaUtilHashSet_init(self);
  {
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, TOKENIZE_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, SSPLIT_REQUIREMENT)];
  }
}

EduStanfordNlpPipelineAnnotator_$1_$9 *new_EduStanfordNlpPipelineAnnotator_$1_$9_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineAnnotator_$1_$9, init)
}

EduStanfordNlpPipelineAnnotator_$1_$9 *create_EduStanfordNlpPipelineAnnotator_$1_$9_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineAnnotator_$1_$9, init)
}

@implementation EduStanfordNlpPipelineAnnotator_$1_$10

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpPipelineAnnotator_$1_$10_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpPipelineAnnotator_$1;", "Ljava/util/HashSet<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator_$1_$10 = { "", "edu.stanford.nlp.pipeline", ptrTable, methods, NULL, 7, 0x8008, 1, 0, 0, -1, -1, 1, -1 };
  return &_EduStanfordNlpPipelineAnnotator_$1_$10;
}

@end

void EduStanfordNlpPipelineAnnotator_$1_$10_init(EduStanfordNlpPipelineAnnotator_$1_$10 *self) {
  JavaUtilHashSet_init(self);
  {
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, TOKENIZE_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, SSPLIT_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, POS_REQUIREMENT)];
  }
}

EduStanfordNlpPipelineAnnotator_$1_$10 *new_EduStanfordNlpPipelineAnnotator_$1_$10_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineAnnotator_$1_$10, init)
}

EduStanfordNlpPipelineAnnotator_$1_$10 *create_EduStanfordNlpPipelineAnnotator_$1_$10_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineAnnotator_$1_$10, init)
}

@implementation EduStanfordNlpPipelineAnnotator_$1_$11

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpPipelineAnnotator_$1_$11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpPipelineAnnotator_$1;", "Ljava/util/HashSet<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator_$1_$11 = { "", "edu.stanford.nlp.pipeline", ptrTable, methods, NULL, 7, 0x8008, 1, 0, 0, -1, -1, 1, -1 };
  return &_EduStanfordNlpPipelineAnnotator_$1_$11;
}

@end

void EduStanfordNlpPipelineAnnotator_$1_$11_init(EduStanfordNlpPipelineAnnotator_$1_$11 *self) {
  JavaUtilHashSet_init(self);
  {
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, TOKENIZE_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, SSPLIT_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, POS_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, NER_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, DEPENDENCY_REQUIREMENT)];
  }
}

EduStanfordNlpPipelineAnnotator_$1_$11 *new_EduStanfordNlpPipelineAnnotator_$1_$11_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineAnnotator_$1_$11, init)
}

EduStanfordNlpPipelineAnnotator_$1_$11 *create_EduStanfordNlpPipelineAnnotator_$1_$11_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineAnnotator_$1_$11, init)
}

@implementation EduStanfordNlpPipelineAnnotator_$1_$12

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpPipelineAnnotator_$1_$12_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpPipelineAnnotator_$1;", "Ljava/util/HashSet<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator_$1_$12 = { "", "edu.stanford.nlp.pipeline", ptrTable, methods, NULL, 7, 0x8008, 1, 0, 0, -1, -1, 1, -1 };
  return &_EduStanfordNlpPipelineAnnotator_$1_$12;
}

@end

void EduStanfordNlpPipelineAnnotator_$1_$12_init(EduStanfordNlpPipelineAnnotator_$1_$12 *self) {
  JavaUtilHashSet_init(self);
  {
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, TOKENIZE_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, SSPLIT_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, POS_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, LEMMA_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, DEPENDENCY_REQUIREMENT)];
  }
}

EduStanfordNlpPipelineAnnotator_$1_$12 *new_EduStanfordNlpPipelineAnnotator_$1_$12_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineAnnotator_$1_$12, init)
}

EduStanfordNlpPipelineAnnotator_$1_$12 *create_EduStanfordNlpPipelineAnnotator_$1_$12_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineAnnotator_$1_$12, init)
}

@implementation EduStanfordNlpPipelineAnnotator_$1_$13

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpPipelineAnnotator_$1_$13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpPipelineAnnotator_$1;", "Ljava/util/HashSet<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator_$1_$13 = { "", "edu.stanford.nlp.pipeline", ptrTable, methods, NULL, 7, 0x8008, 1, 0, 0, -1, -1, 1, -1 };
  return &_EduStanfordNlpPipelineAnnotator_$1_$13;
}

@end

void EduStanfordNlpPipelineAnnotator_$1_$13_init(EduStanfordNlpPipelineAnnotator_$1_$13 *self) {
  JavaUtilHashSet_init(self);
  {
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, TOKENIZE_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, SSPLIT_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, POS_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, LEMMA_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, NER_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, PARSE_REQUIREMENT)];
  }
}

EduStanfordNlpPipelineAnnotator_$1_$13 *new_EduStanfordNlpPipelineAnnotator_$1_$13_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineAnnotator_$1_$13, init)
}

EduStanfordNlpPipelineAnnotator_$1_$13 *create_EduStanfordNlpPipelineAnnotator_$1_$13_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineAnnotator_$1_$13, init)
}

@implementation EduStanfordNlpPipelineAnnotator_$1_$14

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpPipelineAnnotator_$1_$14_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpPipelineAnnotator_$1;", "Ljava/util/HashSet<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator_$1_$14 = { "", "edu.stanford.nlp.pipeline", ptrTable, methods, NULL, 7, 0x8008, 1, 0, 0, -1, -1, 1, -1 };
  return &_EduStanfordNlpPipelineAnnotator_$1_$14;
}

@end

void EduStanfordNlpPipelineAnnotator_$1_$14_init(EduStanfordNlpPipelineAnnotator_$1_$14 *self) {
  JavaUtilHashSet_init(self);
  {
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, TOKENIZE_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, SSPLIT_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, POS_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, LEMMA_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, NER_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, DEPENDENCY_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, MENTION_REQUIREMENT)];
  }
}

EduStanfordNlpPipelineAnnotator_$1_$14 *new_EduStanfordNlpPipelineAnnotator_$1_$14_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineAnnotator_$1_$14, init)
}

EduStanfordNlpPipelineAnnotator_$1_$14 *create_EduStanfordNlpPipelineAnnotator_$1_$14_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineAnnotator_$1_$14, init)
}

@implementation EduStanfordNlpPipelineAnnotator_$1_$15

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpPipelineAnnotator_$1_$15_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpPipelineAnnotator_$1;", "Ljava/util/HashSet<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator_$1_$15 = { "", "edu.stanford.nlp.pipeline", ptrTable, methods, NULL, 7, 0x8008, 1, 0, 0, -1, -1, 1, -1 };
  return &_EduStanfordNlpPipelineAnnotator_$1_$15;
}

@end

void EduStanfordNlpPipelineAnnotator_$1_$15_init(EduStanfordNlpPipelineAnnotator_$1_$15 *self) {
  JavaUtilHashSet_init(self);
  {
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, TOKENIZE_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, SSPLIT_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, POS_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, LEMMA_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, NER_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, DEPENDENCY_REQUIREMENT)];
  }
}

EduStanfordNlpPipelineAnnotator_$1_$15 *new_EduStanfordNlpPipelineAnnotator_$1_$15_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineAnnotator_$1_$15, init)
}

EduStanfordNlpPipelineAnnotator_$1_$15 *create_EduStanfordNlpPipelineAnnotator_$1_$15_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineAnnotator_$1_$15, init)
}

@implementation EduStanfordNlpPipelineAnnotator_$1_$16

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpPipelineAnnotator_$1_$16_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpPipelineAnnotator_$1;", "Ljava/util/HashSet<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator_$1_$16 = { "", "edu.stanford.nlp.pipeline", ptrTable, methods, NULL, 7, 0x8008, 1, 0, 0, -1, -1, 1, -1 };
  return &_EduStanfordNlpPipelineAnnotator_$1_$16;
}

@end

void EduStanfordNlpPipelineAnnotator_$1_$16_init(EduStanfordNlpPipelineAnnotator_$1_$16 *self) {
  JavaUtilHashSet_init(self);
  {
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, TOKENIZE_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, SSPLIT_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, POS_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, LEMMA_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, DEPENDENCY_REQUIREMENT)];
  }
}

EduStanfordNlpPipelineAnnotator_$1_$16 *new_EduStanfordNlpPipelineAnnotator_$1_$16_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineAnnotator_$1_$16, init)
}

EduStanfordNlpPipelineAnnotator_$1_$16 *create_EduStanfordNlpPipelineAnnotator_$1_$16_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineAnnotator_$1_$16, init)
}

@implementation EduStanfordNlpPipelineAnnotator_$1_$17

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpPipelineAnnotator_$1_$17_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpPipelineAnnotator_$1;", "Ljava/util/HashSet<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator_$1_$17 = { "", "edu.stanford.nlp.pipeline", ptrTable, methods, NULL, 7, 0x8008, 1, 0, 0, -1, -1, 1, -1 };
  return &_EduStanfordNlpPipelineAnnotator_$1_$17;
}

@end

void EduStanfordNlpPipelineAnnotator_$1_$17_init(EduStanfordNlpPipelineAnnotator_$1_$17 *self) {
  JavaUtilHashSet_init(self);
  {
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, TOKENIZE_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, SSPLIT_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, POS_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, DEPENDENCY_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, NATLOG_REQUIREMENT)];
  }
}

EduStanfordNlpPipelineAnnotator_$1_$17 *new_EduStanfordNlpPipelineAnnotator_$1_$17_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineAnnotator_$1_$17, init)
}

EduStanfordNlpPipelineAnnotator_$1_$17 *create_EduStanfordNlpPipelineAnnotator_$1_$17_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineAnnotator_$1_$17, init)
}

@implementation EduStanfordNlpPipelineAnnotator_$1_$18

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpPipelineAnnotator_$1_$18_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpPipelineAnnotator_$1;", "Ljava/util/HashSet<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator_$1_$18 = { "", "edu.stanford.nlp.pipeline", ptrTable, methods, NULL, 7, 0x8008, 1, 0, 0, -1, -1, 1, -1 };
  return &_EduStanfordNlpPipelineAnnotator_$1_$18;
}

@end

void EduStanfordNlpPipelineAnnotator_$1_$18_init(EduStanfordNlpPipelineAnnotator_$1_$18 *self) {
  JavaUtilHashSet_init(self);
  {
  }
}

EduStanfordNlpPipelineAnnotator_$1_$18 *new_EduStanfordNlpPipelineAnnotator_$1_$18_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineAnnotator_$1_$18, init)
}

EduStanfordNlpPipelineAnnotator_$1_$18 *create_EduStanfordNlpPipelineAnnotator_$1_$18_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineAnnotator_$1_$18, init)
}

@implementation EduStanfordNlpPipelineAnnotator_$1_$19

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpPipelineAnnotator_$1_$19_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpPipelineAnnotator_$1;", "Ljava/util/HashSet<Ledu/stanford/nlp/pipeline/Annotator$Requirement;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpPipelineAnnotator_$1_$19 = { "", "edu.stanford.nlp.pipeline", ptrTable, methods, NULL, 7, 0x8008, 1, 0, 0, -1, -1, 1, -1 };
  return &_EduStanfordNlpPipelineAnnotator_$1_$19;
}

@end

void EduStanfordNlpPipelineAnnotator_$1_$19_init(EduStanfordNlpPipelineAnnotator_$1_$19 *self) {
  JavaUtilHashSet_init(self);
  {
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, TOKENIZE_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, SSPLIT_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, POS_REQUIREMENT)];
    [self addWithId:JreLoadStatic(EduStanfordNlpPipelineAnnotator, DEPENDENCY_REQUIREMENT)];
  }
}

EduStanfordNlpPipelineAnnotator_$1_$19 *new_EduStanfordNlpPipelineAnnotator_$1_$19_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpPipelineAnnotator_$1_$19, init)
}

EduStanfordNlpPipelineAnnotator_$1_$19 *create_EduStanfordNlpPipelineAnnotator_$1_$19_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpPipelineAnnotator_$1_$19, init)
}
