//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/process/TokenizerFactory.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/process/TokenizerFactory.h"

@interface EduStanfordNlpProcessTokenizerFactory : NSObject

@end

@implementation EduStanfordNlpProcessTokenizerFactory

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEduStanfordNlpProcessTokenizer;", 0x401, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpProcessTokenizer;", 0x401, 0, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x401, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getTokenizerWithJavaIoReader:);
  methods[1].selector = @selector(getTokenizerWithJavaIoReader:withNSString:);
  methods[2].selector = @selector(setOptionsWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getTokenizer", "LJavaIoReader;", "(Ljava/io/Reader;)Ledu/stanford/nlp/process/Tokenizer<TT;>;", "LJavaIoReader;LNSString;", "(Ljava/io/Reader;Ljava/lang/String;)Ledu/stanford/nlp/process/Tokenizer<TT;>;", "setOptions", "LNSString;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Ledu/stanford/nlp/objectbank/IteratorFromReaderFactory<TT;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpProcessTokenizerFactory = { "TokenizerFactory", "edu.stanford.nlp.process", ptrTable, methods, NULL, 7, 0x609, 3, 0, -1, -1, -1, 7, -1 };
  return &_EduStanfordNlpProcessTokenizerFactory;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(EduStanfordNlpProcessTokenizerFactory)
