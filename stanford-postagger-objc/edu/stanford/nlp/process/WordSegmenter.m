//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/process/WordSegmenter.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/process/WordSegmenter.h"

@interface EduStanfordNlpProcessWordSegmenter : NSObject

@end

@implementation EduStanfordNlpProcessWordSegmenter

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x401, 2, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 6, -1, 7, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 8, 9, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x401, 10, 9, -1, 11, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initializeTrainingWithDouble:);
  methods[1].selector = @selector(trainWithJavaUtilCollection:);
  methods[2].selector = @selector(trainWithEduStanfordNlpTreesTree:);
  methods[3].selector = @selector(trainWithJavaUtilList:);
  methods[4].selector = @selector(finishTraining);
  methods[5].selector = @selector(loadSegmenterWithNSString:);
  methods[6].selector = @selector(segmentWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "initializeTraining", "D", "train", "LJavaUtilCollection;", "(Ljava/util/Collection<Ledu/stanford/nlp/trees/Tree;>;)V", "LEduStanfordNlpTreesTree;", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/TaggedWord;>;)V", "loadSegmenter", "LNSString;", "segment", "(Ljava/lang/String;)Ljava/util/List<Ledu/stanford/nlp/ling/HasWord;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpProcessWordSegmenter = { "WordSegmenter", "edu.stanford.nlp.process", ptrTable, methods, NULL, 7, 0x609, 7, 0, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpProcessWordSegmenter;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(EduStanfordNlpProcessWordSegmenter)
