//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/process/Americanize.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/HasWord.h"
#include "edu/stanford/nlp/process/Americanize.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "edu/stanford/nlp/util/StringUtils.h"
#include "java/io/BufferedReader.h"
#include "java/io/InputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/io/PrintStream.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/util/Map.h"
#include "java/util/function/Function.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

@interface EduStanfordNlpProcessAmericanize () {
 @public
  jboolean capitalizeTimex_;
}

@end

inline jint EduStanfordNlpProcessAmericanize_get_MINIMUM_LENGTH_CHANGED();
#define EduStanfordNlpProcessAmericanize_MINIMUM_LENGTH_CHANGED 4
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpProcessAmericanize, MINIMUM_LENGTH_CHANGED, jint)

inline jint EduStanfordNlpProcessAmericanize_get_MINIMUM_LENGTH_PATTERN_MATCH();
#define EduStanfordNlpProcessAmericanize_MINIMUM_LENGTH_PATTERN_MATCH 6
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpProcessAmericanize, MINIMUM_LENGTH_PATTERN_MATCH, jint)

inline IOSObjectArray *EduStanfordNlpProcessAmericanize_get_patStrings();
static IOSObjectArray *EduStanfordNlpProcessAmericanize_patStrings;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpProcessAmericanize, patStrings, IOSObjectArray *)

inline IOSObjectArray *EduStanfordNlpProcessAmericanize_get_pats();
static IOSObjectArray *EduStanfordNlpProcessAmericanize_pats;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpProcessAmericanize, pats, IOSObjectArray *)

inline JavaUtilRegexPattern *EduStanfordNlpProcessAmericanize_get_disjunctivePattern();
static JavaUtilRegexPattern *EduStanfordNlpProcessAmericanize_disjunctivePattern;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpProcessAmericanize, disjunctivePattern, JavaUtilRegexPattern *)

inline IOSObjectArray *EduStanfordNlpProcessAmericanize_get_OUR_EXCEPTIONS();
static IOSObjectArray *EduStanfordNlpProcessAmericanize_OUR_EXCEPTIONS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpProcessAmericanize, OUR_EXCEPTIONS, IOSObjectArray *)

inline IOSObjectArray *EduStanfordNlpProcessAmericanize_get_excepts();
static IOSObjectArray *EduStanfordNlpProcessAmericanize_excepts;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpProcessAmericanize, excepts, IOSObjectArray *)

inline IOSObjectArray *EduStanfordNlpProcessAmericanize_get_reps();
static IOSObjectArray *EduStanfordNlpProcessAmericanize_reps;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpProcessAmericanize, reps, IOSObjectArray *)

inline IOSObjectArray *EduStanfordNlpProcessAmericanize_get_converters();
static IOSObjectArray *EduStanfordNlpProcessAmericanize_converters;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpProcessAmericanize, converters, IOSObjectArray *)

inline IOSObjectArray *EduStanfordNlpProcessAmericanize_get_converted();
static IOSObjectArray *EduStanfordNlpProcessAmericanize_converted;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpProcessAmericanize, converted, IOSObjectArray *)

inline IOSObjectArray *EduStanfordNlpProcessAmericanize_get_timexConverters();
static IOSObjectArray *EduStanfordNlpProcessAmericanize_timexConverters;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpProcessAmericanize, timexConverters, IOSObjectArray *)

inline IOSObjectArray *EduStanfordNlpProcessAmericanize_get_timexConverted();
static IOSObjectArray *EduStanfordNlpProcessAmericanize_timexConverted;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpProcessAmericanize, timexConverted, IOSObjectArray *)

inline id<JavaUtilMap> EduStanfordNlpProcessAmericanize_get_mapping();
static id<JavaUtilMap> EduStanfordNlpProcessAmericanize_mapping;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpProcessAmericanize, mapping, id<JavaUtilMap>)

inline id<JavaUtilMap> EduStanfordNlpProcessAmericanize_get_timexMapping();
static id<JavaUtilMap> EduStanfordNlpProcessAmericanize_timexMapping;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpProcessAmericanize, timexMapping, id<JavaUtilMap>)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpProcessAmericanize)

@implementation EduStanfordNlpProcessAmericanize

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpProcessAmericanize_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)flags {
  EduStanfordNlpProcessAmericanize_initWithInt_(self, flags);
  return self;
}

- (id<EduStanfordNlpLingHasWord>)applyWithId:(id<EduStanfordNlpLingHasWord>)w {
  NSString *str = [((id<EduStanfordNlpLingHasWord>) nil_chk(w)) word];
  NSString *outStr = EduStanfordNlpProcessAmericanize_americanizeWithNSString_withBoolean_(str, capitalizeTimex_);
  if (![((NSString *) nil_chk(outStr)) isEqual:str]) {
    [w setWordWithNSString:outStr];
  }
  return w;
}

+ (NSString *)americanizeWithNSString:(NSString *)str {
  return EduStanfordNlpProcessAmericanize_americanizeWithNSString_(str);
}

+ (NSString *)americanizeWithNSString:(NSString *)str
                          withBoolean:(jboolean)capitalizeTimex {
  return EduStanfordNlpProcessAmericanize_americanizeWithNSString_withBoolean_(str, capitalizeTimex);
}

- (NSString *)description {
  return (JreStrcat("$Z$I$I$", @"Americanize[capitalizeTimex is ", capitalizeTimex_, @"; mapping has ", [((id<JavaUtilMap>) nil_chk(EduStanfordNlpProcessAmericanize_mapping)) size], @" mappings; timexMapping has ", [((id<JavaUtilMap>) nil_chk(EduStanfordNlpProcessAmericanize_timexMapping)) size], @" mappings]"));
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduStanfordNlpProcessAmericanize_mainWithNSStringArray_(args);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingHasWord;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 3, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 7, 8, 9, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithInt:);
  methods[2].selector = @selector(applyWithId:);
  methods[3].selector = @selector(americanizeWithNSString:);
  methods[4].selector = @selector(americanizeWithNSString:withBoolean:);
  methods[5].selector = @selector(description);
  methods[6].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "capitalizeTimex_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "DONT_CAPITALIZE_TIMEX", "I", .constantValue.asInt = EduStanfordNlpProcessAmericanize_DONT_CAPITALIZE_TIMEX, 0x19, -1, -1, -1, -1 },
    { "MINIMUM_LENGTH_CHANGED", "I", .constantValue.asInt = EduStanfordNlpProcessAmericanize_MINIMUM_LENGTH_CHANGED, 0x1a, -1, -1, -1, -1 },
    { "MINIMUM_LENGTH_PATTERN_MATCH", "I", .constantValue.asInt = EduStanfordNlpProcessAmericanize_MINIMUM_LENGTH_PATTERN_MATCH, 0x1a, -1, -1, -1, -1 },
    { "patStrings", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 10, -1, -1 },
    { "pats", "[LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "disjunctivePattern", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
    { "OUR_EXCEPTIONS", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 13, -1, -1 },
    { "excepts", "[LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 14, -1, -1 },
    { "reps", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 15, -1, -1 },
    { "converters", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 16, -1, -1 },
    { "converted", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 17, -1, -1 },
    { "timexConverters", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 18, -1, -1 },
    { "timexConverted", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 19, -1, -1 },
    { "mapping", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 20, 21, -1 },
    { "timexMapping", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 22, 21, -1 },
  };
  static const void *ptrTable[] = { "I", "apply", "LEduStanfordNlpLingHasWord;", "americanize", "LNSString;", "LNSString;Z", "toString", "main", "[LNSString;", "LJavaIoIOException;", &EduStanfordNlpProcessAmericanize_patStrings, &EduStanfordNlpProcessAmericanize_pats, &EduStanfordNlpProcessAmericanize_disjunctivePattern, &EduStanfordNlpProcessAmericanize_OUR_EXCEPTIONS, &EduStanfordNlpProcessAmericanize_excepts, &EduStanfordNlpProcessAmericanize_reps, &EduStanfordNlpProcessAmericanize_converters, &EduStanfordNlpProcessAmericanize_converted, &EduStanfordNlpProcessAmericanize_timexConverters, &EduStanfordNlpProcessAmericanize_timexConverted, &EduStanfordNlpProcessAmericanize_mapping, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", &EduStanfordNlpProcessAmericanize_timexMapping, "Ljava/lang/Object;Ljava/util/function/Function<Ledu/stanford/nlp/ling/HasWord;Ledu/stanford/nlp/ling/HasWord;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpProcessAmericanize = { "Americanize", "edu.stanford.nlp.process", ptrTable, methods, fields, 7, 0x1, 7, 16, -1, -1, -1, 23, -1 };
  return &_EduStanfordNlpProcessAmericanize;
}

+ (void)initialize {
  if (self == [EduStanfordNlpProcessAmericanize class]) {
    EduStanfordNlpProcessAmericanize_patStrings = [IOSObjectArray newArrayWithObjects:(id[]){ @"haem(at)?o", @"aemia$", @"([lL])eukaem", @"programme(s?)$", @"^([a-z]{3,})our(s?)$" } count:5 type:NSString_class_()];
    EduStanfordNlpProcessAmericanize_pats = [IOSObjectArray newArrayWithLength:EduStanfordNlpProcessAmericanize_patStrings->size_ type:JavaUtilRegexPattern_class_()];
    {
      JavaLangStringBuilder *foo = new_JavaLangStringBuilder_init();
      for (jint i = 0, len = EduStanfordNlpProcessAmericanize_pats->size_; i < len; i++) {
        (void) IOSObjectArray_Set(EduStanfordNlpProcessAmericanize_pats, i, JavaUtilRegexPattern_compileWithNSString_(IOSObjectArray_Get(EduStanfordNlpProcessAmericanize_patStrings, i)));
        if (i > 0) {
          (void) [foo appendWithChar:'|'];
        }
        (void) [foo appendWithNSString:@"(?:"];
        (void) [foo appendWithNSString:[((NSString *) nil_chk(IOSObjectArray_Get(EduStanfordNlpProcessAmericanize_patStrings, i))) replaceAll:@"[()]" withReplacement:@""]];
        (void) [foo appendWithChar:')'];
      }
      EduStanfordNlpProcessAmericanize_disjunctivePattern = JavaUtilRegexPattern_compileWithNSString_([foo description]);
    }
    EduStanfordNlpProcessAmericanize_OUR_EXCEPTIONS = [IOSObjectArray newArrayWithObjects:(id[]){ @"abatjour", @"beflour", @"bonjour", @"calambour", @"carrefour", @"cornflour", @"contour", @"de[tv]our", @"dortour", @"dyvour", @"downpour", @"giaour", @"glamour", @"holour", @"inpour", @"outpour", @"pandour", @"paramour", @"pompadour", @"recontour", @"repour", @"ryeflour", @"sompnour", @"tambour", @"troubadour", @"tregetour", @"velour" } count:27 type:NSString_class_()];
    EduStanfordNlpProcessAmericanize_excepts = [IOSObjectArray newArrayWithObjects:(id[]){ nil, nil, nil, nil, JavaUtilRegexPattern_compileWithNSString_(EduStanfordNlpUtilStringUtils_joinWithNSObjectArray_withNSString_(EduStanfordNlpProcessAmericanize_OUR_EXCEPTIONS, @"|")) } count:5 type:JavaUtilRegexPattern_class_()];
    EduStanfordNlpProcessAmericanize_reps = [IOSObjectArray newArrayWithObjects:(id[]){ @"hem$1o", @"emia", @"$1eukem", @"program$1", @"$1or$2" } count:5 type:NSString_class_()];
    EduStanfordNlpProcessAmericanize_converters = [IOSObjectArray newArrayWithObjects:(id[]){ @"anaesthetic", @"analogue", @"analogues", @"analyse", @"analysed", @"analysing", @"armoured", @"cancelled", @"cancelling", @"candour", @"capitalise", @"capitalised", @"capitalisation", @"centre", @"chimaeric", @"clamour", @"coloured", @"colouring", @"colourful", @"defence", @"Defence", @"discolour", @"discolours", @"discoloured", @"discolouring", @"encyclopaedia", @"endeavour", @"endeavours", @"endeavoured", @"endeavouring", @"fervour", @"favour", @"favours", @"favoured", @"favouring", @"favourite", @"favourites", @"fibre", @"fibres", @"finalise", @"finalised", @"finalising", @"flavour", @"flavours", @"flavoured", @"flavouring", @"glamour", @"grey", @"harbour", @"harbours", @"homologue", @"homologues", @"honour", @"honours", @"honoured", @"honouring", @"honourable", @"humour", @"humours", @"humoured", @"humouring", @"kerb", @"labelled", @"labelling", @"labour", @"Labour", @"labours", @"laboured", @"labouring", @"leant", @"learnt", @"localise", @"localised", @"manoeuvre", @"manoeuvres", @"maximise", @"maximised", @"maximising", @"meagre", @"minimise", @"minimised", @"minimising", @"modernise", @"modernised", @"modernising", @"misdemeanour", @"misdemeanours", @"neighbour", @"neighbours", @"neighbourhood", @"neighbourhoods", @"oestrogen", @"oestrogens", @"organisation", @"organisations", @"penalise", @"penalised", @"popularise", @"popularised", @"popularises", @"popularising", @"practise", @"practised", @"pressurise", @"pressurised", @"pressurises", @"pressurising", @"realise", @"realised", @"realising", @"realises", @"recognise", @"recognised", @"recognising", @"recognises", @"rumoured", @"rumouring", @"savour", @"savours", @"savoured", @"savouring", @"splendour", @"splendours", @"theatre", @"theatres", @"titre", @"titres", @"travelled", @"travelling" } count:129 type:NSString_class_()];
    EduStanfordNlpProcessAmericanize_converted = [IOSObjectArray newArrayWithObjects:(id[]){ @"anesthetic", @"analog", @"analogs", @"analyze", @"analyzed", @"analyzing", @"armored", @"canceled", @"canceling", @"candor", @"capitalize", @"capitalized", @"capitalization", @"center", @"chimeric", @"clamor", @"colored", @"coloring", @"colorful", @"defense", @"Defense", @"discolor", @"discolors", @"discolored", @"discoloring", @"encyclopedia", @"endeavor", @"endeavors", @"endeavored", @"endeavoring", @"fervor", @"favor", @"favors", @"favored", @"favoring", @"favorite", @"favorites", @"fiber", @"fibers", @"finalize", @"finalized", @"finalizing", @"flavor", @"flavors", @"flavored", @"flavoring", @"glamour", @"gray", @"harbor", @"harbors", @"homolog", @"homologs", @"honor", @"honors", @"honored", @"honoring", @"honorable", @"humor", @"humors", @"humored", @"humoring", @"curb", @"labeled", @"labeling", @"labor", @"Labor", @"labors", @"labored", @"laboring", @"leaned", @"learned", @"localize", @"localized", @"maneuver", @"maneuvers", @"maximize", @"maximized", @"maximizing", @"meager", @"minimize", @"minimized", @"minimizing", @"modernize", @"modernized", @"modernizing", @"misdemeanor", @"misdemeanors", @"neighbor", @"neighbors", @"neighborhood", @"neighborhoods", @"estrogen", @"estrogens", @"organization", @"organizations", @"penalize", @"penalized", @"popularize", @"popularized", @"popularizes", @"popularizing", @"practice", @"practiced", @"pressurize", @"pressurized", @"pressurizes", @"pressurizing", @"realize", @"realized", @"realizing", @"realizes", @"recognize", @"recognized", @"recognizing", @"recognizes", @"rumored", @"rumoring", @"savor", @"savors", @"savored", @"savoring", @"splendor", @"splendors", @"theater", @"theaters", @"titer", @"titers", @"traveled", @"traveling" } count:129 type:NSString_class_()];
    EduStanfordNlpProcessAmericanize_timexConverters = [IOSObjectArray newArrayWithObjects:(id[]){ @"january", @"february", @"april", @"june", @"july", @"august", @"september", @"october", @"november", @"december", @"monday", @"tuesday", @"wednesday", @"thursday", @"friday", @"saturday", @"sunday" } count:17 type:NSString_class_()];
    EduStanfordNlpProcessAmericanize_timexConverted = [IOSObjectArray newArrayWithObjects:(id[]){ @"January", @"February", @"April", @"June", @"July", @"August", @"September", @"October", @"November", @"December", @"Monday", @"Tuesday", @"Wednesday", @"Thursday", @"Friday", @"Saturday", @"Sunday" } count:17 type:NSString_class_()];
    EduStanfordNlpProcessAmericanize_mapping = EduStanfordNlpUtilGenerics_newHashMap();
    EduStanfordNlpProcessAmericanize_timexMapping = EduStanfordNlpUtilGenerics_newHashMap();
    {
      if (EduStanfordNlpProcessAmericanize_converters->size_ != EduStanfordNlpProcessAmericanize_converted->size_ || EduStanfordNlpProcessAmericanize_timexConverters->size_ != EduStanfordNlpProcessAmericanize_timexConverted->size_ || EduStanfordNlpProcessAmericanize_pats->size_ != EduStanfordNlpProcessAmericanize_reps->size_ || EduStanfordNlpProcessAmericanize_pats->size_ != EduStanfordNlpProcessAmericanize_excepts->size_) {
        @throw new_JavaLangRuntimeException_initWithNSString_(@"Americanize: Bad initialization data");
      }
      for (jint i = 0; i < EduStanfordNlpProcessAmericanize_converters->size_; i++) {
        (void) [((id<JavaUtilMap>) nil_chk(EduStanfordNlpProcessAmericanize_mapping)) putWithId:IOSObjectArray_Get(EduStanfordNlpProcessAmericanize_converters, i) withId:IOSObjectArray_Get(EduStanfordNlpProcessAmericanize_converted, i)];
      }
      for (jint i = 0; i < EduStanfordNlpProcessAmericanize_timexConverters->size_; i++) {
        (void) [((id<JavaUtilMap>) nil_chk(EduStanfordNlpProcessAmericanize_timexMapping)) putWithId:IOSObjectArray_Get(EduStanfordNlpProcessAmericanize_timexConverters, i) withId:IOSObjectArray_Get(EduStanfordNlpProcessAmericanize_timexConverted, i)];
      }
    }
    J2OBJC_SET_INITIALIZED(EduStanfordNlpProcessAmericanize)
  }
}

@end

void EduStanfordNlpProcessAmericanize_init(EduStanfordNlpProcessAmericanize *self) {
  EduStanfordNlpProcessAmericanize_initWithInt_(self, 0);
}

EduStanfordNlpProcessAmericanize *new_EduStanfordNlpProcessAmericanize_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpProcessAmericanize, init)
}

EduStanfordNlpProcessAmericanize *create_EduStanfordNlpProcessAmericanize_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpProcessAmericanize, init)
}

void EduStanfordNlpProcessAmericanize_initWithInt_(EduStanfordNlpProcessAmericanize *self, jint flags) {
  NSObject_init(self);
  self->capitalizeTimex_ = ((flags & EduStanfordNlpProcessAmericanize_DONT_CAPITALIZE_TIMEX) == 0);
}

EduStanfordNlpProcessAmericanize *new_EduStanfordNlpProcessAmericanize_initWithInt_(jint flags) {
  J2OBJC_NEW_IMPL(EduStanfordNlpProcessAmericanize, initWithInt_, flags)
}

EduStanfordNlpProcessAmericanize *create_EduStanfordNlpProcessAmericanize_initWithInt_(jint flags) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpProcessAmericanize, initWithInt_, flags)
}

NSString *EduStanfordNlpProcessAmericanize_americanizeWithNSString_(NSString *str) {
  EduStanfordNlpProcessAmericanize_initialize();
  return EduStanfordNlpProcessAmericanize_americanizeWithNSString_withBoolean_(str, true);
}

NSString *EduStanfordNlpProcessAmericanize_americanizeWithNSString_withBoolean_(NSString *str, jboolean capitalizeTimex) {
  EduStanfordNlpProcessAmericanize_initialize();
  jint length = ((jint) [((NSString *) nil_chk(str)) length]);
  if (length < EduStanfordNlpProcessAmericanize_MINIMUM_LENGTH_CHANGED) {
    return str;
  }
  NSString *result;
  if (capitalizeTimex) {
    result = [((id<JavaUtilMap>) nil_chk(EduStanfordNlpProcessAmericanize_timexMapping)) getWithId:str];
    if (result != nil) {
      return result;
    }
  }
  result = [((id<JavaUtilMap>) nil_chk(EduStanfordNlpProcessAmericanize_mapping)) getWithId:str];
  if (result != nil) {
    return result;
  }
  if (length < EduStanfordNlpProcessAmericanize_MINIMUM_LENGTH_PATTERN_MATCH) {
    return str;
  }
  if (![((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(EduStanfordNlpProcessAmericanize_disjunctivePattern)) matcherWithJavaLangCharSequence:str])) find]) {
    return str;
  }
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(EduStanfordNlpProcessAmericanize_pats))->size_; i++) {
    JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(IOSObjectArray_Get(EduStanfordNlpProcessAmericanize_pats, i))) matcherWithJavaLangCharSequence:str];
    if ([((JavaUtilRegexMatcher *) nil_chk(m)) find]) {
      JavaUtilRegexPattern *ex = IOSObjectArray_Get(nil_chk(EduStanfordNlpProcessAmericanize_excepts), i);
      if (ex != nil) {
        JavaUtilRegexMatcher *me = [ex matcherWithJavaLangCharSequence:str];
        if ([((JavaUtilRegexMatcher *) nil_chk(me)) find]) {
          continue;
        }
      }
      return [m replaceAllWithNSString:IOSObjectArray_Get(nil_chk(EduStanfordNlpProcessAmericanize_reps), i)];
    }
  }
  return str;
}

void EduStanfordNlpProcessAmericanize_mainWithNSStringArray_(IOSObjectArray *args) {
  EduStanfordNlpProcessAmericanize_initialize();
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithId:new_EduStanfordNlpProcessAmericanize_init()];
  [JreLoadStatic(JavaLangSystem, err) println];
  if (((IOSObjectArray *) nil_chk(args))->size_ == 0) {
    JavaIoBufferedReader *buf = new_JavaIoBufferedReader_initWithJavaIoReader_(new_JavaIoInputStreamReader_initWithJavaIoInputStream_(JreLoadStatic(JavaLangSystem, in)));
    NSString *line;
    while ((line = [buf readLine]) != nil) {
      {
        IOSObjectArray *a__ = [((NSString *) nil_chk(line)) split:@"\\s+"];
        NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
        NSString * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          NSString *w = *b__++;
          [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printWithNSString:EduStanfordNlpProcessAmericanize_americanizeWithNSString_(w)];
          [JreLoadStatic(JavaLangSystem, out) printWithChar:' '];
        }
      }
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) println];
    }
    [buf close];
  }
  {
    IOSObjectArray *a__ = args;
    NSString * const *b__ = a__->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *arg = *b__++;
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printWithNSString:arg];
      [JreLoadStatic(JavaLangSystem, out) printWithNSString:@" --> "];
      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:EduStanfordNlpProcessAmericanize_americanizeWithNSString_(arg)];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpProcessAmericanize)
