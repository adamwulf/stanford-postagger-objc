//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/process/WordToSentenceProcessor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpProcessWordToSentenceProcessor")
#ifdef RESTRICT_EduStanfordNlpProcessWordToSentenceProcessor
#define INCLUDE_ALL_EduStanfordNlpProcessWordToSentenceProcessor 0
#else
#define INCLUDE_ALL_EduStanfordNlpProcessWordToSentenceProcessor 1
#endif
#undef RESTRICT_EduStanfordNlpProcessWordToSentenceProcessor

#if !defined (EduStanfordNlpProcessWordToSentenceProcessor_) && (INCLUDE_ALL_EduStanfordNlpProcessWordToSentenceProcessor || defined(INCLUDE_EduStanfordNlpProcessWordToSentenceProcessor))
#define EduStanfordNlpProcessWordToSentenceProcessor_

#define RESTRICT_EduStanfordNlpProcessListProcessor 1
#define INCLUDE_EduStanfordNlpProcessListProcessor 1
#include "edu/stanford/nlp/process/ListProcessor.h"

@class EduStanfordNlpLingTokensregexSequencePattern;
@class EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak;
@protocol EduStanfordNlpLingDocument;
@protocol JavaUtilList;
@protocol JavaUtilSet;

@interface EduStanfordNlpProcessWordToSentenceProcessor : NSObject < EduStanfordNlpProcessListProcessor >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithBoolean:(jboolean)isOneSentence;

- (instancetype)initWithEduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak:(EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *)newlineIsSentenceBreak;

- (instancetype)initWithJavaUtilSet:(id<JavaUtilSet>)boundaryToDiscard;

- (instancetype)initWithNSString:(NSString *)boundaryTokenRegex
                 withJavaUtilSet:(id<JavaUtilSet>)boundaryToDiscard
                 withJavaUtilSet:(id<JavaUtilSet>)xmlBreakElementsToDiscard
withEduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak:(EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *)newlineIsSentenceBreak;

- (instancetype)initWithNSString:(NSString *)boundaryTokenRegex
                 withJavaUtilSet:(id<JavaUtilSet>)boundaryToDiscard
                 withJavaUtilSet:(id<JavaUtilSet>)xmlBreakElementsToDiscard
withEduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak:(EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *)newlineIsSentenceBreak
withEduStanfordNlpLingTokensregexSequencePattern:(EduStanfordNlpLingTokensregexSequencePattern *)sentenceBoundaryMultiTokenPattern
                 withJavaUtilSet:(id<JavaUtilSet>)tokenRegexesToDiscard;

- (instancetype)initWithNSString:(NSString *)boundaryTokenRegex
                 withJavaUtilSet:(id<JavaUtilSet>)boundaryFollowers
                 withJavaUtilSet:(id<JavaUtilSet>)boundariesToDiscard
                 withJavaUtilSet:(id<JavaUtilSet>)xmlBreakElementsToDiscard
                    withNSString:(NSString *)regionElementRegex
withEduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak:(EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *)newlineIsSentenceBreak
withEduStanfordNlpLingTokensregexSequencePattern:(EduStanfordNlpLingTokensregexSequencePattern *)sentenceBoundaryMultiTokenPattern
                 withJavaUtilSet:(id<JavaUtilSet>)tokenRegexesToDiscard
                     withBoolean:(jboolean)isOneSentence
                     withBoolean:(jboolean)allowEmptySentences;

- (id<JavaUtilList>)processWithJavaUtilList:(id<JavaUtilList>)words;

- (id<EduStanfordNlpLingDocument>)processDocumentWithEduStanfordNlpLingDocument:(id<EduStanfordNlpLingDocument>)inArg;

+ (EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *)stringToNewlineIsSentenceBreakWithNSString:(NSString *)name;

- (id<JavaUtilList>)wordsToSentencesWithJavaUtilList:(id<JavaUtilList>)words;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpProcessWordToSentenceProcessor)

inline NSString *EduStanfordNlpProcessWordToSentenceProcessor_get_DEFAULT_BOUNDARY_REGEX();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpProcessWordToSentenceProcessor_DEFAULT_BOUNDARY_REGEX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpProcessWordToSentenceProcessor, DEFAULT_BOUNDARY_REGEX, NSString *)

inline id<JavaUtilSet> EduStanfordNlpProcessWordToSentenceProcessor_get_DEFAULT_BOUNDARY_FOLLOWERS();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilSet> EduStanfordNlpProcessWordToSentenceProcessor_DEFAULT_BOUNDARY_FOLLOWERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpProcessWordToSentenceProcessor, DEFAULT_BOUNDARY_FOLLOWERS, id<JavaUtilSet>)

inline id<JavaUtilSet> EduStanfordNlpProcessWordToSentenceProcessor_get_DEFAULT_SENTENCE_BOUNDARIES_TO_DISCARD();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilSet> EduStanfordNlpProcessWordToSentenceProcessor_DEFAULT_SENTENCE_BOUNDARIES_TO_DISCARD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpProcessWordToSentenceProcessor, DEFAULT_SENTENCE_BOUNDARIES_TO_DISCARD, id<JavaUtilSet>)

FOUNDATION_EXPORT EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *EduStanfordNlpProcessWordToSentenceProcessor_stringToNewlineIsSentenceBreakWithNSString_(NSString *name);

FOUNDATION_EXPORT void EduStanfordNlpProcessWordToSentenceProcessor_init(EduStanfordNlpProcessWordToSentenceProcessor *self);

FOUNDATION_EXPORT EduStanfordNlpProcessWordToSentenceProcessor *new_EduStanfordNlpProcessWordToSentenceProcessor_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpProcessWordToSentenceProcessor *create_EduStanfordNlpProcessWordToSentenceProcessor_init();

FOUNDATION_EXPORT void EduStanfordNlpProcessWordToSentenceProcessor_initWithEduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_(EduStanfordNlpProcessWordToSentenceProcessor *self, EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *newlineIsSentenceBreak);

FOUNDATION_EXPORT EduStanfordNlpProcessWordToSentenceProcessor *new_EduStanfordNlpProcessWordToSentenceProcessor_initWithEduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_(EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *newlineIsSentenceBreak) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpProcessWordToSentenceProcessor *create_EduStanfordNlpProcessWordToSentenceProcessor_initWithEduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_(EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *newlineIsSentenceBreak);

FOUNDATION_EXPORT void EduStanfordNlpProcessWordToSentenceProcessor_initWithBoolean_(EduStanfordNlpProcessWordToSentenceProcessor *self, jboolean isOneSentence);

FOUNDATION_EXPORT EduStanfordNlpProcessWordToSentenceProcessor *new_EduStanfordNlpProcessWordToSentenceProcessor_initWithBoolean_(jboolean isOneSentence) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpProcessWordToSentenceProcessor *create_EduStanfordNlpProcessWordToSentenceProcessor_initWithBoolean_(jboolean isOneSentence);

FOUNDATION_EXPORT void EduStanfordNlpProcessWordToSentenceProcessor_initWithNSString_withJavaUtilSet_withJavaUtilSet_withEduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_(EduStanfordNlpProcessWordToSentenceProcessor *self, NSString *boundaryTokenRegex, id<JavaUtilSet> boundaryToDiscard, id<JavaUtilSet> xmlBreakElementsToDiscard, EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *newlineIsSentenceBreak);

FOUNDATION_EXPORT EduStanfordNlpProcessWordToSentenceProcessor *new_EduStanfordNlpProcessWordToSentenceProcessor_initWithNSString_withJavaUtilSet_withJavaUtilSet_withEduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_(NSString *boundaryTokenRegex, id<JavaUtilSet> boundaryToDiscard, id<JavaUtilSet> xmlBreakElementsToDiscard, EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *newlineIsSentenceBreak) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpProcessWordToSentenceProcessor *create_EduStanfordNlpProcessWordToSentenceProcessor_initWithNSString_withJavaUtilSet_withJavaUtilSet_withEduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_(NSString *boundaryTokenRegex, id<JavaUtilSet> boundaryToDiscard, id<JavaUtilSet> xmlBreakElementsToDiscard, EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *newlineIsSentenceBreak);

FOUNDATION_EXPORT void EduStanfordNlpProcessWordToSentenceProcessor_initWithNSString_withJavaUtilSet_withJavaUtilSet_withEduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_withEduStanfordNlpLingTokensregexSequencePattern_withJavaUtilSet_(EduStanfordNlpProcessWordToSentenceProcessor *self, NSString *boundaryTokenRegex, id<JavaUtilSet> boundaryToDiscard, id<JavaUtilSet> xmlBreakElementsToDiscard, EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *newlineIsSentenceBreak, EduStanfordNlpLingTokensregexSequencePattern *sentenceBoundaryMultiTokenPattern, id<JavaUtilSet> tokenRegexesToDiscard);

FOUNDATION_EXPORT EduStanfordNlpProcessWordToSentenceProcessor *new_EduStanfordNlpProcessWordToSentenceProcessor_initWithNSString_withJavaUtilSet_withJavaUtilSet_withEduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_withEduStanfordNlpLingTokensregexSequencePattern_withJavaUtilSet_(NSString *boundaryTokenRegex, id<JavaUtilSet> boundaryToDiscard, id<JavaUtilSet> xmlBreakElementsToDiscard, EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *newlineIsSentenceBreak, EduStanfordNlpLingTokensregexSequencePattern *sentenceBoundaryMultiTokenPattern, id<JavaUtilSet> tokenRegexesToDiscard) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpProcessWordToSentenceProcessor *create_EduStanfordNlpProcessWordToSentenceProcessor_initWithNSString_withJavaUtilSet_withJavaUtilSet_withEduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_withEduStanfordNlpLingTokensregexSequencePattern_withJavaUtilSet_(NSString *boundaryTokenRegex, id<JavaUtilSet> boundaryToDiscard, id<JavaUtilSet> xmlBreakElementsToDiscard, EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *newlineIsSentenceBreak, EduStanfordNlpLingTokensregexSequencePattern *sentenceBoundaryMultiTokenPattern, id<JavaUtilSet> tokenRegexesToDiscard);

FOUNDATION_EXPORT void EduStanfordNlpProcessWordToSentenceProcessor_initWithJavaUtilSet_(EduStanfordNlpProcessWordToSentenceProcessor *self, id<JavaUtilSet> boundaryToDiscard);

FOUNDATION_EXPORT EduStanfordNlpProcessWordToSentenceProcessor *new_EduStanfordNlpProcessWordToSentenceProcessor_initWithJavaUtilSet_(id<JavaUtilSet> boundaryToDiscard) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpProcessWordToSentenceProcessor *create_EduStanfordNlpProcessWordToSentenceProcessor_initWithJavaUtilSet_(id<JavaUtilSet> boundaryToDiscard);

FOUNDATION_EXPORT void EduStanfordNlpProcessWordToSentenceProcessor_initWithNSString_withJavaUtilSet_withJavaUtilSet_withJavaUtilSet_withNSString_withEduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_withEduStanfordNlpLingTokensregexSequencePattern_withJavaUtilSet_withBoolean_withBoolean_(EduStanfordNlpProcessWordToSentenceProcessor *self, NSString *boundaryTokenRegex, id<JavaUtilSet> boundaryFollowers, id<JavaUtilSet> boundariesToDiscard, id<JavaUtilSet> xmlBreakElementsToDiscard, NSString *regionElementRegex, EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *newlineIsSentenceBreak, EduStanfordNlpLingTokensregexSequencePattern *sentenceBoundaryMultiTokenPattern, id<JavaUtilSet> tokenRegexesToDiscard, jboolean isOneSentence, jboolean allowEmptySentences);

FOUNDATION_EXPORT EduStanfordNlpProcessWordToSentenceProcessor *new_EduStanfordNlpProcessWordToSentenceProcessor_initWithNSString_withJavaUtilSet_withJavaUtilSet_withJavaUtilSet_withNSString_withEduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_withEduStanfordNlpLingTokensregexSequencePattern_withJavaUtilSet_withBoolean_withBoolean_(NSString *boundaryTokenRegex, id<JavaUtilSet> boundaryFollowers, id<JavaUtilSet> boundariesToDiscard, id<JavaUtilSet> xmlBreakElementsToDiscard, NSString *regionElementRegex, EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *newlineIsSentenceBreak, EduStanfordNlpLingTokensregexSequencePattern *sentenceBoundaryMultiTokenPattern, id<JavaUtilSet> tokenRegexesToDiscard, jboolean isOneSentence, jboolean allowEmptySentences) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpProcessWordToSentenceProcessor *create_EduStanfordNlpProcessWordToSentenceProcessor_initWithNSString_withJavaUtilSet_withJavaUtilSet_withJavaUtilSet_withNSString_withEduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_withEduStanfordNlpLingTokensregexSequencePattern_withJavaUtilSet_withBoolean_withBoolean_(NSString *boundaryTokenRegex, id<JavaUtilSet> boundaryFollowers, id<JavaUtilSet> boundariesToDiscard, id<JavaUtilSet> xmlBreakElementsToDiscard, NSString *regionElementRegex, EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *newlineIsSentenceBreak, EduStanfordNlpLingTokensregexSequencePattern *sentenceBoundaryMultiTokenPattern, id<JavaUtilSet> tokenRegexesToDiscard, jboolean isOneSentence, jboolean allowEmptySentences);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpProcessWordToSentenceProcessor)

#endif

#if !defined (EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_) && (INCLUDE_ALL_EduStanfordNlpProcessWordToSentenceProcessor || defined(INCLUDE_EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak))
#define EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_Enum) {
  EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_Enum_NEVER = 0,
  EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_Enum_ALWAYS = 1,
  EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_Enum_TWO_CONSECUTIVE = 2,
};

@interface EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak : JavaLangEnum < NSCopying >

#pragma mark Public

+ (EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_values_[];

inline EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_get_NEVER();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak, NEVER)

inline EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_get_ALWAYS();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak, ALWAYS)

inline EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_get_TWO_CONSECUTIVE();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak, TWO_CONSECUTIVE)

FOUNDATION_EXPORT IOSObjectArray *EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_values();

FOUNDATION_EXPORT EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak *EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpProcessWordToSentenceProcessor_NewlineIsSentenceBreak)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpProcessWordToSentenceProcessor")
