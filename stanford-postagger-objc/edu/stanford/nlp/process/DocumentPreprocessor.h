//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/process/DocumentPreprocessor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpProcessDocumentPreprocessor")
#ifdef RESTRICT_EduStanfordNlpProcessDocumentPreprocessor
#define INCLUDE_ALL_EduStanfordNlpProcessDocumentPreprocessor 0
#else
#define INCLUDE_ALL_EduStanfordNlpProcessDocumentPreprocessor 1
#endif
#undef RESTRICT_EduStanfordNlpProcessDocumentPreprocessor

#if !defined (EduStanfordNlpProcessDocumentPreprocessor_) && (INCLUDE_ALL_EduStanfordNlpProcessDocumentPreprocessor || defined(INCLUDE_EduStanfordNlpProcessDocumentPreprocessor))
#define EduStanfordNlpProcessDocumentPreprocessor_

#define RESTRICT_JavaLangIterable 1
#define INCLUDE_JavaLangIterable 1
#include "java/lang/Iterable.h"

@class EduStanfordNlpProcessDocumentPreprocessor_DocType;
@class IOSObjectArray;
@class JavaIoReader;
@protocol EduStanfordNlpProcessTokenizerFactory;
@protocol JavaUtilFunctionConsumer;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilIterator;
@protocol JavaUtilSpliterator;

@interface EduStanfordNlpProcessDocumentPreprocessor : NSObject < JavaLangIterable >

#pragma mark Public

- (instancetype)initWithJavaIoReader:(JavaIoReader *)input;

- (instancetype)initWithJavaIoReader:(JavaIoReader *)input
withEduStanfordNlpProcessDocumentPreprocessor_DocType:(EduStanfordNlpProcessDocumentPreprocessor_DocType *)t;

- (instancetype)initWithNSString:(NSString *)docPath;

- (instancetype)initWithNSString:(NSString *)docPath
withEduStanfordNlpProcessDocumentPreprocessor_DocType:(EduStanfordNlpProcessDocumentPreprocessor_DocType *)t;

- (instancetype)initWithNSString:(NSString *)docPath
withEduStanfordNlpProcessDocumentPreprocessor_DocType:(EduStanfordNlpProcessDocumentPreprocessor_DocType *)t
                    withNSString:(NSString *)encoding;

- (id<JavaUtilIterator>)iterator;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (void)setElementDelimiterWithNSString:(NSString *)s;

- (void)setEscaperWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)e;

- (void)setKeepEmptySentencesWithBoolean:(jboolean)keepEmptySentences;

- (void)setSentenceDelimiterWithNSString:(NSString *)s;

- (void)setSentenceFinalPuncWordsWithNSStringArray:(IOSObjectArray *)sentenceFinalPuncWords;

- (void)setTagDelimiterWithNSString:(NSString *)s;

- (void)setTokenizerFactoryWithEduStanfordNlpProcessTokenizerFactory:(id<EduStanfordNlpProcessTokenizerFactory>)newTokenizerFactory;

#pragma mark Package-Private

@end

J2OBJC_STATIC_INIT(EduStanfordNlpProcessDocumentPreprocessor)

inline IOSObjectArray *EduStanfordNlpProcessDocumentPreprocessor_get_DEFAULT_SENTENCE_DELIMS();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *EduStanfordNlpProcessDocumentPreprocessor_DEFAULT_SENTENCE_DELIMS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpProcessDocumentPreprocessor, DEFAULT_SENTENCE_DELIMS, IOSObjectArray *)

FOUNDATION_EXPORT void EduStanfordNlpProcessDocumentPreprocessor_initWithJavaIoReader_(EduStanfordNlpProcessDocumentPreprocessor *self, JavaIoReader *input);

FOUNDATION_EXPORT EduStanfordNlpProcessDocumentPreprocessor *new_EduStanfordNlpProcessDocumentPreprocessor_initWithJavaIoReader_(JavaIoReader *input) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpProcessDocumentPreprocessor *create_EduStanfordNlpProcessDocumentPreprocessor_initWithJavaIoReader_(JavaIoReader *input);

FOUNDATION_EXPORT void EduStanfordNlpProcessDocumentPreprocessor_initWithJavaIoReader_withEduStanfordNlpProcessDocumentPreprocessor_DocType_(EduStanfordNlpProcessDocumentPreprocessor *self, JavaIoReader *input, EduStanfordNlpProcessDocumentPreprocessor_DocType *t);

FOUNDATION_EXPORT EduStanfordNlpProcessDocumentPreprocessor *new_EduStanfordNlpProcessDocumentPreprocessor_initWithJavaIoReader_withEduStanfordNlpProcessDocumentPreprocessor_DocType_(JavaIoReader *input, EduStanfordNlpProcessDocumentPreprocessor_DocType *t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpProcessDocumentPreprocessor *create_EduStanfordNlpProcessDocumentPreprocessor_initWithJavaIoReader_withEduStanfordNlpProcessDocumentPreprocessor_DocType_(JavaIoReader *input, EduStanfordNlpProcessDocumentPreprocessor_DocType *t);

FOUNDATION_EXPORT void EduStanfordNlpProcessDocumentPreprocessor_initWithNSString_(EduStanfordNlpProcessDocumentPreprocessor *self, NSString *docPath);

FOUNDATION_EXPORT EduStanfordNlpProcessDocumentPreprocessor *new_EduStanfordNlpProcessDocumentPreprocessor_initWithNSString_(NSString *docPath) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpProcessDocumentPreprocessor *create_EduStanfordNlpProcessDocumentPreprocessor_initWithNSString_(NSString *docPath);

FOUNDATION_EXPORT void EduStanfordNlpProcessDocumentPreprocessor_initWithNSString_withEduStanfordNlpProcessDocumentPreprocessor_DocType_(EduStanfordNlpProcessDocumentPreprocessor *self, NSString *docPath, EduStanfordNlpProcessDocumentPreprocessor_DocType *t);

FOUNDATION_EXPORT EduStanfordNlpProcessDocumentPreprocessor *new_EduStanfordNlpProcessDocumentPreprocessor_initWithNSString_withEduStanfordNlpProcessDocumentPreprocessor_DocType_(NSString *docPath, EduStanfordNlpProcessDocumentPreprocessor_DocType *t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpProcessDocumentPreprocessor *create_EduStanfordNlpProcessDocumentPreprocessor_initWithNSString_withEduStanfordNlpProcessDocumentPreprocessor_DocType_(NSString *docPath, EduStanfordNlpProcessDocumentPreprocessor_DocType *t);

FOUNDATION_EXPORT void EduStanfordNlpProcessDocumentPreprocessor_initWithNSString_withEduStanfordNlpProcessDocumentPreprocessor_DocType_withNSString_(EduStanfordNlpProcessDocumentPreprocessor *self, NSString *docPath, EduStanfordNlpProcessDocumentPreprocessor_DocType *t, NSString *encoding);

FOUNDATION_EXPORT EduStanfordNlpProcessDocumentPreprocessor *new_EduStanfordNlpProcessDocumentPreprocessor_initWithNSString_withEduStanfordNlpProcessDocumentPreprocessor_DocType_withNSString_(NSString *docPath, EduStanfordNlpProcessDocumentPreprocessor_DocType *t, NSString *encoding) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpProcessDocumentPreprocessor *create_EduStanfordNlpProcessDocumentPreprocessor_initWithNSString_withEduStanfordNlpProcessDocumentPreprocessor_DocType_withNSString_(NSString *docPath, EduStanfordNlpProcessDocumentPreprocessor_DocType *t, NSString *encoding);

FOUNDATION_EXPORT void EduStanfordNlpProcessDocumentPreprocessor_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpProcessDocumentPreprocessor)

#endif

#if !defined (EduStanfordNlpProcessDocumentPreprocessor_DocType_) && (INCLUDE_ALL_EduStanfordNlpProcessDocumentPreprocessor || defined(INCLUDE_EduStanfordNlpProcessDocumentPreprocessor_DocType))
#define EduStanfordNlpProcessDocumentPreprocessor_DocType_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, EduStanfordNlpProcessDocumentPreprocessor_DocType_Enum) {
  EduStanfordNlpProcessDocumentPreprocessor_DocType_Enum_Plain = 0,
  EduStanfordNlpProcessDocumentPreprocessor_DocType_Enum_XML = 1,
};

@interface EduStanfordNlpProcessDocumentPreprocessor_DocType : JavaLangEnum < NSCopying >

#pragma mark Public

+ (EduStanfordNlpProcessDocumentPreprocessor_DocType *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpProcessDocumentPreprocessor_DocType)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT EduStanfordNlpProcessDocumentPreprocessor_DocType *EduStanfordNlpProcessDocumentPreprocessor_DocType_values_[];

inline EduStanfordNlpProcessDocumentPreprocessor_DocType *EduStanfordNlpProcessDocumentPreprocessor_DocType_get_Plain();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpProcessDocumentPreprocessor_DocType, Plain)

inline EduStanfordNlpProcessDocumentPreprocessor_DocType *EduStanfordNlpProcessDocumentPreprocessor_DocType_get_XML();
J2OBJC_ENUM_CONSTANT(EduStanfordNlpProcessDocumentPreprocessor_DocType, XML)

FOUNDATION_EXPORT IOSObjectArray *EduStanfordNlpProcessDocumentPreprocessor_DocType_values();

FOUNDATION_EXPORT EduStanfordNlpProcessDocumentPreprocessor_DocType *EduStanfordNlpProcessDocumentPreprocessor_DocType_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT EduStanfordNlpProcessDocumentPreprocessor_DocType *EduStanfordNlpProcessDocumentPreprocessor_DocType_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpProcessDocumentPreprocessor_DocType)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpProcessDocumentPreprocessor")
