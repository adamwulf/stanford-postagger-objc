//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/CollocationFinder.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/ling/TaggedWord.h"
#include "edu/stanford/nlp/ling/WordTag.h"
#include "edu/stanford/nlp/process/Morphology.h"
#include "edu/stanford/nlp/trees/CollinsHeadFinder.h"
#include "edu/stanford/nlp/trees/CollocationFinder.h"
#include "edu/stanford/nlp/trees/CoordinationTransformer.h"
#include "edu/stanford/nlp/trees/HeadFinder.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeFactory.h"
#include "edu/stanford/nlp/trees/Trees.h"
#include "edu/stanford/nlp/trees/WordNetConnection.h"
#include "edu/stanford/nlp/util/ArrayUtils.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "edu/stanford/nlp/util/Pair.h"
#include "edu/stanford/nlp/util/StringUtils.h"
#include "java/io/PrintStream.h"
#include "java/io/PrintWriter.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/List.h"

@interface EduStanfordNlpTreesCollocationFinder () {
 @public
  EduStanfordNlpTreesTree *qTree_;
  id<EduStanfordNlpTreesHeadFinder> hf_;
  id<JavaUtilList> collocationCollector_;
  id<EduStanfordNlpTreesWordNetConnection> wnConnect_;
}

- (EduStanfordNlpTreesTree *)getMangledTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

- (void)getCollocationsList;

- (void)getCollocationsListWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

+ (NSString *)treeAsStemmedCollocationWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

+ (NSString *)treeAsNonStemmedCollocationWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

+ (NSString *)mergeLeavesIntoCollocatedStringWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

+ (NSString *)mergeLeavesIntoCollocatedStringWithEduStanfordNlpTreesTreeArray:(IOSObjectArray *)trees;

+ (id<JavaUtilList>)getStemmedWordTagsFromTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

+ (id<JavaUtilList>)getNonStemmedWordTagsFromTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

- (jboolean)wordNetContainsWithNSString:(NSString *)s;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesCollocationFinder, qTree_, EduStanfordNlpTreesTree *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesCollocationFinder, hf_, id<EduStanfordNlpTreesHeadFinder>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesCollocationFinder, collocationCollector_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesCollocationFinder, wnConnect_, id<EduStanfordNlpTreesWordNetConnection>)

inline jboolean EduStanfordNlpTreesCollocationFinder_get_DEBUG();
inline jboolean EduStanfordNlpTreesCollocationFinder_set_DEBUG(jboolean value);
inline jboolean *EduStanfordNlpTreesCollocationFinder_getRef_DEBUG();
static jboolean EduStanfordNlpTreesCollocationFinder_DEBUG = false;
J2OBJC_STATIC_FIELD_PRIMITIVE(EduStanfordNlpTreesCollocationFinder, DEBUG, jboolean)

__attribute__((unused)) static EduStanfordNlpTreesTree *EduStanfordNlpTreesCollocationFinder_getMangledTreeWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesCollocationFinder *self, EduStanfordNlpTreesTree *t);

__attribute__((unused)) static void EduStanfordNlpTreesCollocationFinder_getCollocationsList(EduStanfordNlpTreesCollocationFinder *self);

__attribute__((unused)) static void EduStanfordNlpTreesCollocationFinder_getCollocationsListWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesCollocationFinder *self, EduStanfordNlpTreesTree *t);

__attribute__((unused)) static NSString *EduStanfordNlpTreesCollocationFinder_treeAsStemmedCollocationWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t);

__attribute__((unused)) static NSString *EduStanfordNlpTreesCollocationFinder_treeAsNonStemmedCollocationWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t);

__attribute__((unused)) static NSString *EduStanfordNlpTreesCollocationFinder_mergeLeavesIntoCollocatedStringWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t);

__attribute__((unused)) static NSString *EduStanfordNlpTreesCollocationFinder_mergeLeavesIntoCollocatedStringWithEduStanfordNlpTreesTreeArray_(IOSObjectArray *trees);

__attribute__((unused)) static id<JavaUtilList> EduStanfordNlpTreesCollocationFinder_getStemmedWordTagsFromTreeWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t);

__attribute__((unused)) static id<JavaUtilList> EduStanfordNlpTreesCollocationFinder_getNonStemmedWordTagsFromTreeWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t);

__attribute__((unused)) static jboolean EduStanfordNlpTreesCollocationFinder_wordNetContainsWithNSString_(EduStanfordNlpTreesCollocationFinder *self, NSString *s);

@interface EduStanfordNlpTreesCollocationFinder_Collocation : NSObject {
 @public
  EduStanfordNlpUtilPair *span_;
  EduStanfordNlpTreesTree *parentNode_;
  id<EduStanfordNlpLingLabel> headLabel_;
  id<JavaUtilList> indicesOfConstituentChildren_;
  NSString *collocationString_;
}

- (instancetype)initWithEduStanfordNlpUtilPair:(EduStanfordNlpUtilPair *)span
                   withEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)parentNode
                         withJavaUtilArrayList:(JavaUtilArrayList *)indicesOfConstituentChildren
                                  withNSString:(NSString *)collocationString
                   withEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)headLabel;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesCollocationFinder_Collocation)

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesCollocationFinder_Collocation, span_, EduStanfordNlpUtilPair *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesCollocationFinder_Collocation, parentNode_, EduStanfordNlpTreesTree *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesCollocationFinder_Collocation, headLabel_, id<EduStanfordNlpLingLabel>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesCollocationFinder_Collocation, indicesOfConstituentChildren_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesCollocationFinder_Collocation, collocationString_, NSString *)

__attribute__((unused)) static void EduStanfordNlpTreesCollocationFinder_Collocation_initWithEduStanfordNlpUtilPair_withEduStanfordNlpTreesTree_withJavaUtilArrayList_withNSString_withEduStanfordNlpLingLabel_(EduStanfordNlpTreesCollocationFinder_Collocation *self, EduStanfordNlpUtilPair *span, EduStanfordNlpTreesTree *parentNode, JavaUtilArrayList *indicesOfConstituentChildren, NSString *collocationString, id<EduStanfordNlpLingLabel> headLabel);

__attribute__((unused)) static EduStanfordNlpTreesCollocationFinder_Collocation *new_EduStanfordNlpTreesCollocationFinder_Collocation_initWithEduStanfordNlpUtilPair_withEduStanfordNlpTreesTree_withJavaUtilArrayList_withNSString_withEduStanfordNlpLingLabel_(EduStanfordNlpUtilPair *span, EduStanfordNlpTreesTree *parentNode, JavaUtilArrayList *indicesOfConstituentChildren, NSString *collocationString, id<EduStanfordNlpLingLabel> headLabel) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesCollocationFinder_Collocation *create_EduStanfordNlpTreesCollocationFinder_Collocation_initWithEduStanfordNlpUtilPair_withEduStanfordNlpTreesTree_withJavaUtilArrayList_withNSString_withEduStanfordNlpLingLabel_(EduStanfordNlpUtilPair *span, EduStanfordNlpTreesTree *parentNode, JavaUtilArrayList *indicesOfConstituentChildren, NSString *collocationString, id<EduStanfordNlpLingLabel> headLabel);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesCollocationFinder_Collocation)

@implementation EduStanfordNlpTreesCollocationFinder

- (instancetype)initWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
       withEduStanfordNlpTreesWordNetConnection:(id<EduStanfordNlpTreesWordNetConnection>)w {
  EduStanfordNlpTreesCollocationFinder_initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesWordNetConnection_(self, t, w);
  return self;
}

- (instancetype)initWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
       withEduStanfordNlpTreesWordNetConnection:(id<EduStanfordNlpTreesWordNetConnection>)w
              withEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)hf {
  EduStanfordNlpTreesCollocationFinder_initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesWordNetConnection_withEduStanfordNlpTreesHeadFinder_(self, t, w, hf);
  return self;
}

- (EduStanfordNlpTreesTree *)getMangledTree {
  return EduStanfordNlpTreesCollocationFinder_getMangledTreeWithEduStanfordNlpTreesTree_(self, qTree_);
}

- (EduStanfordNlpTreesTree *)getMangledTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  return EduStanfordNlpTreesCollocationFinder_getMangledTreeWithEduStanfordNlpTreesTree_(self, t);
}

- (void)getCollocationsList {
  EduStanfordNlpTreesCollocationFinder_getCollocationsList(self);
}

- (void)printCollocationStringsWithJavaIoPrintWriter:(JavaIoPrintWriter *)pw {
  for (EduStanfordNlpTreesCollocationFinder_Collocation * __strong c in nil_chk(collocationCollector_)) {
    NSString *cs = ((EduStanfordNlpTreesCollocationFinder_Collocation *) nil_chk(c))->collocationString_;
    [((JavaIoPrintWriter *) nil_chk(pw)) printlnWithNSString:JreStrcat("$$ICIC", cs, @" (", ([((JavaLangInteger *) nil_chk([((EduStanfordNlpUtilPair *) nil_chk(c->span_)) first])) intValue] + 1), ',', ([((JavaLangInteger *) nil_chk([c->span_ second])) intValue] + 1), ')')];
  }
}

- (void)getCollocationsListWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  EduStanfordNlpTreesCollocationFinder_getCollocationsListWithEduStanfordNlpTreesTree_(self, t);
}

+ (NSString *)treeAsStemmedCollocationWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  return EduStanfordNlpTreesCollocationFinder_treeAsStemmedCollocationWithEduStanfordNlpTreesTree_(t);
}

+ (NSString *)treeAsNonStemmedCollocationWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  return EduStanfordNlpTreesCollocationFinder_treeAsNonStemmedCollocationWithEduStanfordNlpTreesTree_(t);
}

+ (NSString *)mergeLeavesIntoCollocatedStringWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  return EduStanfordNlpTreesCollocationFinder_mergeLeavesIntoCollocatedStringWithEduStanfordNlpTreesTree_(t);
}

+ (NSString *)mergeLeavesIntoCollocatedStringWithEduStanfordNlpTreesTreeArray:(IOSObjectArray *)trees {
  return EduStanfordNlpTreesCollocationFinder_mergeLeavesIntoCollocatedStringWithEduStanfordNlpTreesTreeArray_(trees);
}

+ (id<JavaUtilList>)getStemmedWordTagsFromTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  return EduStanfordNlpTreesCollocationFinder_getStemmedWordTagsFromTreeWithEduStanfordNlpTreesTree_(t);
}

+ (id<JavaUtilList>)getNonStemmedWordTagsFromTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  return EduStanfordNlpTreesCollocationFinder_getNonStemmedWordTagsFromTreeWithEduStanfordNlpTreesTree_(t);
}

- (jboolean)wordNetContainsWithNSString:(NSString *)s {
  return EduStanfordNlpTreesCollocationFinder_wordNetContainsWithNSString_(self, s);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x2, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 6, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 7, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 8, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 9, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 9, 10, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0xa, 11, 3, -1, 12, -1, -1 },
    { NULL, "LJavaUtilList;", 0xa, 13, 3, -1, 12, -1, -1 },
    { NULL, "Z", 0x2, 14, 15, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesTree:withEduStanfordNlpTreesWordNetConnection:);
  methods[1].selector = @selector(initWithEduStanfordNlpTreesTree:withEduStanfordNlpTreesWordNetConnection:withEduStanfordNlpTreesHeadFinder:);
  methods[2].selector = @selector(getMangledTree);
  methods[3].selector = @selector(getMangledTreeWithEduStanfordNlpTreesTree:);
  methods[4].selector = @selector(getCollocationsList);
  methods[5].selector = @selector(printCollocationStringsWithJavaIoPrintWriter:);
  methods[6].selector = @selector(getCollocationsListWithEduStanfordNlpTreesTree:);
  methods[7].selector = @selector(treeAsStemmedCollocationWithEduStanfordNlpTreesTree:);
  methods[8].selector = @selector(treeAsNonStemmedCollocationWithEduStanfordNlpTreesTree:);
  methods[9].selector = @selector(mergeLeavesIntoCollocatedStringWithEduStanfordNlpTreesTree:);
  methods[10].selector = @selector(mergeLeavesIntoCollocatedStringWithEduStanfordNlpTreesTreeArray:);
  methods[11].selector = @selector(getStemmedWordTagsFromTreeWithEduStanfordNlpTreesTree:);
  methods[12].selector = @selector(getNonStemmedWordTagsFromTreeWithEduStanfordNlpTreesTree:);
  methods[13].selector = @selector(wordNetContainsWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEBUG", "Z", .constantValue.asLong = 0, 0xa, -1, 16, -1, -1 },
    { "qTree_", "LEduStanfordNlpTreesTree;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "hf_", "LEduStanfordNlpTreesHeadFinder;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "collocationCollector_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 17, -1 },
    { "wnConnect_", "LEduStanfordNlpTreesWordNetConnection;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTreesTree;LEduStanfordNlpTreesWordNetConnection;", "LEduStanfordNlpTreesTree;LEduStanfordNlpTreesWordNetConnection;LEduStanfordNlpTreesHeadFinder;", "getMangledTree", "LEduStanfordNlpTreesTree;", "printCollocationStrings", "LJavaIoPrintWriter;", "getCollocationsList", "treeAsStemmedCollocation", "treeAsNonStemmedCollocation", "mergeLeavesIntoCollocatedString", "[LEduStanfordNlpTreesTree;", "getStemmedWordTagsFromTree", "(Ledu/stanford/nlp/trees/Tree;)Ljava/util/List<Ledu/stanford/nlp/ling/WordTag;>;", "getNonStemmedWordTagsFromTree", "wordNetContains", "LNSString;", &EduStanfordNlpTreesCollocationFinder_DEBUG, "Ljava/util/List<Ledu/stanford/nlp/trees/CollocationFinder$Collocation;>;", "LEduStanfordNlpTreesCollocationFinder_Collocation;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesCollocationFinder = { "CollocationFinder", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0x1, 14, 5, -1, 18, -1, -1, -1 };
  return &_EduStanfordNlpTreesCollocationFinder;
}

@end

void EduStanfordNlpTreesCollocationFinder_initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesWordNetConnection_(EduStanfordNlpTreesCollocationFinder *self, EduStanfordNlpTreesTree *t, id<EduStanfordNlpTreesWordNetConnection> w) {
  EduStanfordNlpTreesCollocationFinder_initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesWordNetConnection_withEduStanfordNlpTreesHeadFinder_(self, t, w, new_EduStanfordNlpTreesCollinsHeadFinder_init());
}

EduStanfordNlpTreesCollocationFinder *new_EduStanfordNlpTreesCollocationFinder_initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesWordNetConnection_(EduStanfordNlpTreesTree *t, id<EduStanfordNlpTreesWordNetConnection> w) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesCollocationFinder, initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesWordNetConnection_, t, w)
}

EduStanfordNlpTreesCollocationFinder *create_EduStanfordNlpTreesCollocationFinder_initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesWordNetConnection_(EduStanfordNlpTreesTree *t, id<EduStanfordNlpTreesWordNetConnection> w) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesCollocationFinder, initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesWordNetConnection_, t, w)
}

void EduStanfordNlpTreesCollocationFinder_initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesWordNetConnection_withEduStanfordNlpTreesHeadFinder_(EduStanfordNlpTreesCollocationFinder *self, EduStanfordNlpTreesTree *t, id<EduStanfordNlpTreesWordNetConnection> w, id<EduStanfordNlpTreesHeadFinder> hf) {
  NSObject_init(self);
  EduStanfordNlpTreesCoordinationTransformer *transformer = new_EduStanfordNlpTreesCoordinationTransformer_initWithEduStanfordNlpTreesHeadFinder_(hf);
  self->wnConnect_ = w;
  self->qTree_ = [transformer transformTreeWithEduStanfordNlpTreesTree:t];
  self->collocationCollector_ = EduStanfordNlpUtilGenerics_newArrayList();
  self->hf_ = hf;
  EduStanfordNlpTreesCollocationFinder_getCollocationsList(self);
  if (EduStanfordNlpTreesCollocationFinder_DEBUG) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"Collected collocations: ", self->collocationCollector_)];
  }
}

EduStanfordNlpTreesCollocationFinder *new_EduStanfordNlpTreesCollocationFinder_initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesWordNetConnection_withEduStanfordNlpTreesHeadFinder_(EduStanfordNlpTreesTree *t, id<EduStanfordNlpTreesWordNetConnection> w, id<EduStanfordNlpTreesHeadFinder> hf) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesCollocationFinder, initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesWordNetConnection_withEduStanfordNlpTreesHeadFinder_, t, w, hf)
}

EduStanfordNlpTreesCollocationFinder *create_EduStanfordNlpTreesCollocationFinder_initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesWordNetConnection_withEduStanfordNlpTreesHeadFinder_(EduStanfordNlpTreesTree *t, id<EduStanfordNlpTreesWordNetConnection> w, id<EduStanfordNlpTreesHeadFinder> hf) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesCollocationFinder, initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesWordNetConnection_withEduStanfordNlpTreesHeadFinder_, t, w, hf)
}

EduStanfordNlpTreesTree *EduStanfordNlpTreesCollocationFinder_getMangledTreeWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesCollocationFinder *self, EduStanfordNlpTreesTree *t) {
  EduStanfordNlpTreesCollocationFinder_Collocation *matchingColl = nil;
  {
    IOSObjectArray *a__ = [((EduStanfordNlpTreesTree *) nil_chk(t)) children];
    EduStanfordNlpTreesTree * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    EduStanfordNlpTreesTree * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      EduStanfordNlpTreesTree *child = *b__++;
      child = EduStanfordNlpTreesCollocationFinder_getMangledTreeWithEduStanfordNlpTreesTree_(self, child);
    }
  }
  for (EduStanfordNlpTreesCollocationFinder_Collocation * __strong c in nil_chk(self->collocationCollector_)) {
    if ([t isEqual:((EduStanfordNlpTreesCollocationFinder_Collocation *) nil_chk(c))->parentNode_]) {
      if (matchingColl == nil || ([((JavaLangInteger *) nil_chk([((EduStanfordNlpUtilPair *) nil_chk(c->span_)) first])) intValue] <= [((JavaLangInteger *) nil_chk([matchingColl->span_ first])) intValue] && [((JavaLangInteger *) nil_chk([c->span_ second])) intValue] >= [((JavaLangInteger *) nil_chk([matchingColl->span_ second])) intValue])) {
        matchingColl = c;
        if (EduStanfordNlpTreesCollocationFinder_DEBUG) {
          [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"Found matching collocation for tree:"];
          [t pennPrint];
          [JreLoadStatic(JavaLangSystem, err) printWithNSString:JreStrcat("$@", @"  head label: ", c->headLabel_)];
          [JreLoadStatic(JavaLangSystem, err) printlnWithNSString:JreStrcat("$$", @"; collocation string: ", c->collocationString_)];
          [JreLoadStatic(JavaLangSystem, err) printlnWithNSString:JreStrcat("$@", @"  Constituents: ", c->indicesOfConstituentChildren_)];
        }
      }
    }
  }
  if (matchingColl == nil) {
    return t;
  }
  else {
    if (EduStanfordNlpTreesCollocationFinder_DEBUG) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"Collapsing ", matchingColl)];
    }
    IOSObjectArray *allChildren = [t children];
    JavaLangStringBuilder *mutatedString = new_JavaLangStringBuilder_initWithInt_(160);
    for (JavaLangInteger *boxed__ in nil_chk(matchingColl->indicesOfConstituentChildren_)) {
      jint i = [((JavaLangInteger *) nil_chk(boxed__)) intValue];
      NSString *strToAppend = EduStanfordNlpTreesCollocationFinder_mergeLeavesIntoCollocatedStringWithEduStanfordNlpTreesTree_(IOSObjectArray_Get(nil_chk(allChildren), i));
      (void) [mutatedString appendWithNSString:strToAppend];
      (void) [mutatedString appendWithNSString:@"_"];
    }
    mutatedString = [mutatedString deleteCharAtWithInt:[mutatedString length] - 1];
    if (EduStanfordNlpTreesCollocationFinder_DEBUG) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$$", @"allChildren is: ", JavaUtilArrays_toStringWithNSObjectArray_(allChildren))];
    }
    for (jint index = [matchingColl->indicesOfConstituentChildren_ size] - 1; index > 0; index--) {
      jint thisConstituent = [((JavaLangInteger *) nil_chk([matchingColl->indicesOfConstituentChildren_ getWithInt:index])) intValue];
      allChildren = (IOSObjectArray *) cast_check(EduStanfordNlpUtilArrayUtils_removeAtWithNSObjectArray_withInt_(allChildren, thisConstituent), IOSClass_arrayType(EduStanfordNlpTreesTree_class_(), 1));
      if (EduStanfordNlpTreesCollocationFinder_DEBUG) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$I$$", @" deleted ", thisConstituent, @"; allChildren is: ", JavaUtilArrays_toStringWithNSObjectArray_(allChildren))];
      }
    }
    NSString *newNodeString = [((JavaLangStringBuilder *) nil_chk(mutatedString)) description];
    jint firstChildIndex = [((JavaLangInteger *) nil_chk([matchingColl->indicesOfConstituentChildren_ getWithInt:0])) intValue];
    EduStanfordNlpTreesTree *newCollocationChild = IOSObjectArray_Get(nil_chk(allChildren), firstChildIndex);
    if (EduStanfordNlpTreesCollocationFinder_DEBUG) [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"Manipulating: ", newCollocationChild)];
    [((EduStanfordNlpTreesTree *) nil_chk(newCollocationChild)) setValueWithNSString:[((id<EduStanfordNlpLingLabel>) nil_chk(matchingColl->headLabel_)) value]];
    EduStanfordNlpTreesTree *newCollocationLeaf = [((id<EduStanfordNlpTreesTreeFactory>) nil_chk([newCollocationChild treeFactory])) newLeafWithNSString:newNodeString];
    [newCollocationChild setChildrenWithJavaUtilList:JavaUtilCollections_singletonListWithId_(newCollocationLeaf)];
    if (EduStanfordNlpTreesCollocationFinder_DEBUG) [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"  changed to: ", newCollocationChild)];
    (void) IOSObjectArray_Set(allChildren, firstChildIndex, newCollocationChild);
    [t setChildrenWithEduStanfordNlpTreesTreeArray:allChildren];
    if (EduStanfordNlpTreesCollocationFinder_DEBUG) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"Restructured tree is:"];
      [t pennPrint];
      [JreLoadStatic(JavaLangSystem, err) println];
    }
    return t;
  }
}

void EduStanfordNlpTreesCollocationFinder_getCollocationsList(EduStanfordNlpTreesCollocationFinder *self) {
  EduStanfordNlpTreesCollocationFinder_getCollocationsListWithEduStanfordNlpTreesTree_(self, self->qTree_);
}

void EduStanfordNlpTreesCollocationFinder_getCollocationsListWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesCollocationFinder *self, EduStanfordNlpTreesTree *t) {
  jint leftMostLeaf = EduStanfordNlpTreesTrees_leftEdgeWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTree_(t, self->qTree_);
  if ([((EduStanfordNlpTreesTree *) nil_chk(t)) isPreTerminal]) return;
  id<JavaUtilList> children = [t getChildrenAsList];
  if ([((id<JavaUtilList>) nil_chk(children)) isEmpty]) return;
  id<EduStanfordNlpLingLabel> headLabel = [((EduStanfordNlpTreesTree *) nil_chk([((id<EduStanfordNlpTreesHeadFinder>) nil_chk(self->hf_)) determineHeadWithEduStanfordNlpTreesTree:t])) label];
  jint leftSistersBuffer = 0;
  for (jint i = 0; i < [children size]; i++) {
    JavaUtilArrayList *childConstituents = new_JavaUtilArrayList_init();
    [childConstituents addWithId:JavaLangInteger_valueOfWithInt_(i)];
    EduStanfordNlpTreesTree *subtree = [children getWithInt:i];
    jint currWindowLength = 0;
    EduStanfordNlpTreesCollocationFinder_getCollocationsListWithEduStanfordNlpTreesTree_(self, subtree);
    JavaLangStringBuilder *testString = new_JavaLangStringBuilder_initWithInt_(160);
    (void) [testString appendWithNSString:EduStanfordNlpTreesCollocationFinder_treeAsStemmedCollocationWithEduStanfordNlpTreesTree_(subtree)];
    (void) [testString appendWithChar:'_'];
    JavaLangInteger *thisSubtreeLength = JavaLangInteger_valueOfWithInt_([((JavaUtilArrayList *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(subtree)) yield])) size]);
    currWindowLength += [thisSubtreeLength intValue];
    JavaLangStringBuilder *testStringNonStemmed = new_JavaLangStringBuilder_initWithInt_(160);
    (void) [testStringNonStemmed appendWithNSString:EduStanfordNlpTreesCollocationFinder_treeAsNonStemmedCollocationWithEduStanfordNlpTreesTree_(subtree)];
    (void) [testStringNonStemmed appendWithChar:'_'];
    for (jint j = i + 1; j < [children size]; j++) {
      EduStanfordNlpTreesTree *sisterNode = [children getWithInt:j];
      [childConstituents addWithId:JavaLangInteger_valueOfWithInt_(j)];
      (void) [testString appendWithNSString:EduStanfordNlpTreesCollocationFinder_treeAsStemmedCollocationWithEduStanfordNlpTreesTree_(sisterNode)];
      (void) [testStringNonStemmed appendWithNSString:EduStanfordNlpTreesCollocationFinder_treeAsNonStemmedCollocationWithEduStanfordNlpTreesTree_(sisterNode)];
      currWindowLength += [((JavaUtilArrayList *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(sisterNode)) yield])) size];
      if (EduStanfordNlpTreesCollocationFinder_DEBUG) {
      }
      if (EduStanfordNlpUtilStringUtils_lookingAtWithNSString_withNSString_([testString description], @"(?:[Tt]he|THE|[Aa][Nn]?)[ _]")) {
      }
      else if (EduStanfordNlpTreesCollocationFinder_wordNetContainsWithNSString_(self, [testString description])) {
        EduStanfordNlpUtilPair *c = new_EduStanfordNlpUtilPair_initWithId_withId_(JavaLangInteger_valueOfWithInt_(leftMostLeaf + leftSistersBuffer), JavaLangInteger_valueOfWithInt_(leftMostLeaf + leftSistersBuffer + currWindowLength - 1));
        JavaUtilArrayList *childConstituentsClone = new_JavaUtilArrayList_initWithJavaUtilCollection_(childConstituents);
        EduStanfordNlpTreesCollocationFinder_Collocation *col = new_EduStanfordNlpTreesCollocationFinder_Collocation_initWithEduStanfordNlpUtilPair_withEduStanfordNlpTreesTree_withJavaUtilArrayList_withNSString_withEduStanfordNlpLingLabel_(c, t, childConstituentsClone, [testString description], headLabel);
        [((id<JavaUtilList>) nil_chk(self->collocationCollector_)) addWithId:col];
        if (EduStanfordNlpTreesCollocationFinder_DEBUG) {
          [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"Found collocation in wordnet: ", testString)];
          [JreLoadStatic(JavaLangSystem, err) printlnWithNSString:JreStrcat("$@$@", @"  Span of collocation is: ", c, @"; childConstituents is: ", c)];
        }
      }
      (void) [testString appendWithChar:'_'];
      if (EduStanfordNlpUtilStringUtils_lookingAtWithNSString_withNSString_([testStringNonStemmed description], @"(?:[Tt]he|THE|[Aa][Nn]?)[ _]")) {
      }
      else if (EduStanfordNlpTreesCollocationFinder_wordNetContainsWithNSString_(self, [testStringNonStemmed description])) {
        EduStanfordNlpUtilPair *c = new_EduStanfordNlpUtilPair_initWithId_withId_(JavaLangInteger_valueOfWithInt_(leftMostLeaf + leftSistersBuffer), JavaLangInteger_valueOfWithInt_(leftMostLeaf + leftSistersBuffer + currWindowLength - 1));
        JavaUtilArrayList *childConstituentsClone = new_JavaUtilArrayList_initWithJavaUtilCollection_(childConstituents);
        EduStanfordNlpTreesCollocationFinder_Collocation *col = new_EduStanfordNlpTreesCollocationFinder_Collocation_initWithEduStanfordNlpUtilPair_withEduStanfordNlpTreesTree_withJavaUtilArrayList_withNSString_withEduStanfordNlpLingLabel_(c, t, childConstituentsClone, [testStringNonStemmed description], headLabel);
        [((id<JavaUtilList>) nil_chk(self->collocationCollector_)) addWithId:col];
        if (EduStanfordNlpTreesCollocationFinder_DEBUG) {
          [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"Found collocation in wordnet: ", testStringNonStemmed)];
          [JreLoadStatic(JavaLangSystem, err) printlnWithNSString:JreStrcat("$@$@", @"  Span of collocation is: ", c, @"; childConstituents is: ", c)];
        }
      }
      (void) [testStringNonStemmed appendWithNSString:@"_"];
    }
    leftSistersBuffer += [thisSubtreeLength intValue];
  }
}

NSString *EduStanfordNlpTreesCollocationFinder_treeAsStemmedCollocationWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t) {
  EduStanfordNlpTreesCollocationFinder_initialize();
  id<JavaUtilList> list = EduStanfordNlpTreesCollocationFinder_getStemmedWordTagsFromTreeWithEduStanfordNlpTreesTree_(t);
  JavaLangStringBuilder *s = new_JavaLangStringBuilder_initWithInt_(160);
  EduStanfordNlpLingWordTag *firstWord = [((id<JavaUtilList>) nil_chk(list)) removeWithInt:0];
  (void) [s appendWithNSString:[((EduStanfordNlpLingWordTag *) nil_chk(firstWord)) word]];
  for (EduStanfordNlpLingWordTag * __strong wt in list) {
    (void) [s appendWithNSString:@"_"];
    (void) [s appendWithNSString:[((EduStanfordNlpLingWordTag *) nil_chk(wt)) word]];
  }
  return [s description];
}

NSString *EduStanfordNlpTreesCollocationFinder_treeAsNonStemmedCollocationWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t) {
  EduStanfordNlpTreesCollocationFinder_initialize();
  id<JavaUtilList> list = EduStanfordNlpTreesCollocationFinder_getNonStemmedWordTagsFromTreeWithEduStanfordNlpTreesTree_(t);
  JavaLangStringBuilder *s = new_JavaLangStringBuilder_initWithInt_(160);
  EduStanfordNlpLingWordTag *firstWord = [((id<JavaUtilList>) nil_chk(list)) removeWithInt:0];
  (void) [s appendWithNSString:[((EduStanfordNlpLingWordTag *) nil_chk(firstWord)) word]];
  for (EduStanfordNlpLingWordTag * __strong wt in list) {
    (void) [s appendWithChar:'_'];
    (void) [s appendWithNSString:[((EduStanfordNlpLingWordTag *) nil_chk(wt)) word]];
  }
  return [s description];
}

NSString *EduStanfordNlpTreesCollocationFinder_mergeLeavesIntoCollocatedStringWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t) {
  EduStanfordNlpTreesCollocationFinder_initialize();
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_initWithInt_(160);
  JavaUtilArrayList *sent = [((EduStanfordNlpTreesTree *) nil_chk(t)) taggedYield];
  for (EduStanfordNlpLingTaggedWord * __strong aSent in nil_chk(sent)) {
    (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:[((EduStanfordNlpLingTaggedWord *) nil_chk(aSent)) word]])) appendWithChar:'_'];
  }
  return [sb substringWithInt:0 withInt:[sb length] - 1];
}

NSString *EduStanfordNlpTreesCollocationFinder_mergeLeavesIntoCollocatedStringWithEduStanfordNlpTreesTreeArray_(IOSObjectArray *trees) {
  EduStanfordNlpTreesCollocationFinder_initialize();
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_initWithInt_(160);
  {
    IOSObjectArray *a__ = trees;
    EduStanfordNlpTreesTree * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    EduStanfordNlpTreesTree * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      EduStanfordNlpTreesTree *t = *b__++;
      JavaUtilArrayList *sent = [((EduStanfordNlpTreesTree *) nil_chk(t)) taggedYield];
      for (EduStanfordNlpLingTaggedWord * __strong aSent in nil_chk(sent)) {
        (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:[((EduStanfordNlpLingTaggedWord *) nil_chk(aSent)) word]])) appendWithChar:'_'];
      }
    }
  }
  return [sb substringWithInt:0 withInt:[sb length] - 1];
}

id<JavaUtilList> EduStanfordNlpTreesCollocationFinder_getStemmedWordTagsFromTreeWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t) {
  EduStanfordNlpTreesCollocationFinder_initialize();
  id<JavaUtilList> stemmedWordTags = EduStanfordNlpUtilGenerics_newArrayList();
  JavaUtilArrayList *s = [((EduStanfordNlpTreesTree *) nil_chk(t)) taggedYield];
  for (EduStanfordNlpLingTaggedWord * __strong w in nil_chk(s)) {
    EduStanfordNlpLingWordTag *wt = EduStanfordNlpProcessMorphology_stemStaticWithNSString_withNSString_([((EduStanfordNlpLingTaggedWord *) nil_chk(w)) word], [w tag]);
    [((id<JavaUtilList>) nil_chk(stemmedWordTags)) addWithId:wt];
  }
  return stemmedWordTags;
}

id<JavaUtilList> EduStanfordNlpTreesCollocationFinder_getNonStemmedWordTagsFromTreeWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t) {
  EduStanfordNlpTreesCollocationFinder_initialize();
  id<JavaUtilList> wordTags = EduStanfordNlpUtilGenerics_newArrayList();
  JavaUtilArrayList *s = [((EduStanfordNlpTreesTree *) nil_chk(t)) taggedYield];
  for (EduStanfordNlpLingTaggedWord * __strong w in nil_chk(s)) {
    EduStanfordNlpLingWordTag *wt = new_EduStanfordNlpLingWordTag_initWithNSString_withNSString_([((EduStanfordNlpLingTaggedWord *) nil_chk(w)) word], [w tag]);
    [((id<JavaUtilList>) nil_chk(wordTags)) addWithId:wt];
  }
  return wordTags;
}

jboolean EduStanfordNlpTreesCollocationFinder_wordNetContainsWithNSString_(EduStanfordNlpTreesCollocationFinder *self, NSString *s) {
  return [((id<EduStanfordNlpTreesWordNetConnection>) nil_chk(self->wnConnect_)) wordNetContainsWithNSString:s];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesCollocationFinder)

@implementation EduStanfordNlpTreesCollocationFinder_Collocation

- (instancetype)initWithEduStanfordNlpUtilPair:(EduStanfordNlpUtilPair *)span
                   withEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)parentNode
                         withJavaUtilArrayList:(JavaUtilArrayList *)indicesOfConstituentChildren
                                  withNSString:(NSString *)collocationString
                   withEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)headLabel {
  EduStanfordNlpTreesCollocationFinder_Collocation_initWithEduStanfordNlpUtilPair_withEduStanfordNlpTreesTree_withJavaUtilArrayList_withNSString_withEduStanfordNlpLingLabel_(self, span, parentNode, indicesOfConstituentChildren, collocationString, headLabel);
  return self;
}

- (NSString *)description {
  return JreStrcat("$@C@", collocationString_, indicesOfConstituentChildren_, '/', headLabel_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpUtilPair:withEduStanfordNlpTreesTree:withJavaUtilArrayList:withNSString:withEduStanfordNlpLingLabel:);
  methods[1].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "span_", "LEduStanfordNlpUtilPair;", .constantValue.asLong = 0, 0x10, -1, -1, 3, -1 },
    { "parentNode_", "LEduStanfordNlpTreesTree;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "headLabel_", "LEduStanfordNlpLingLabel;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "indicesOfConstituentChildren_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 4, -1 },
    { "collocationString_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpUtilPair;LEduStanfordNlpTreesTree;LJavaUtilArrayList;LNSString;LEduStanfordNlpLingLabel;", "(Ledu/stanford/nlp/util/Pair<Ljava/lang/Integer;Ljava/lang/Integer;>;Ledu/stanford/nlp/trees/Tree;Ljava/util/ArrayList<Ljava/lang/Integer;>;Ljava/lang/String;Ledu/stanford/nlp/ling/Label;)V", "toString", "Ledu/stanford/nlp/util/Pair<Ljava/lang/Integer;Ljava/lang/Integer;>;", "Ljava/util/List<Ljava/lang/Integer;>;", "LEduStanfordNlpTreesCollocationFinder;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesCollocationFinder_Collocation = { "Collocation", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0xa, 2, 5, 5, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesCollocationFinder_Collocation;
}

@end

void EduStanfordNlpTreesCollocationFinder_Collocation_initWithEduStanfordNlpUtilPair_withEduStanfordNlpTreesTree_withJavaUtilArrayList_withNSString_withEduStanfordNlpLingLabel_(EduStanfordNlpTreesCollocationFinder_Collocation *self, EduStanfordNlpUtilPair *span, EduStanfordNlpTreesTree *parentNode, JavaUtilArrayList *indicesOfConstituentChildren, NSString *collocationString, id<EduStanfordNlpLingLabel> headLabel) {
  NSObject_init(self);
  self->span_ = span;
  self->parentNode_ = parentNode;
  self->collocationString_ = collocationString;
  self->indicesOfConstituentChildren_ = indicesOfConstituentChildren;
  self->headLabel_ = headLabel;
}

EduStanfordNlpTreesCollocationFinder_Collocation *new_EduStanfordNlpTreesCollocationFinder_Collocation_initWithEduStanfordNlpUtilPair_withEduStanfordNlpTreesTree_withJavaUtilArrayList_withNSString_withEduStanfordNlpLingLabel_(EduStanfordNlpUtilPair *span, EduStanfordNlpTreesTree *parentNode, JavaUtilArrayList *indicesOfConstituentChildren, NSString *collocationString, id<EduStanfordNlpLingLabel> headLabel) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesCollocationFinder_Collocation, initWithEduStanfordNlpUtilPair_withEduStanfordNlpTreesTree_withJavaUtilArrayList_withNSString_withEduStanfordNlpLingLabel_, span, parentNode, indicesOfConstituentChildren, collocationString, headLabel)
}

EduStanfordNlpTreesCollocationFinder_Collocation *create_EduStanfordNlpTreesCollocationFinder_Collocation_initWithEduStanfordNlpUtilPair_withEduStanfordNlpTreesTree_withJavaUtilArrayList_withNSString_withEduStanfordNlpLingLabel_(EduStanfordNlpUtilPair *span, EduStanfordNlpTreesTree *parentNode, JavaUtilArrayList *indicesOfConstituentChildren, NSString *collocationString, id<EduStanfordNlpLingLabel> headLabel) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesCollocationFinder_Collocation, initWithEduStanfordNlpUtilPair_withEduStanfordNlpTreesTree_withJavaUtilArrayList_withNSString_withEduStanfordNlpLingLabel_, span, parentNode, indicesOfConstituentChildren, collocationString, headLabel)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesCollocationFinder_Collocation)
