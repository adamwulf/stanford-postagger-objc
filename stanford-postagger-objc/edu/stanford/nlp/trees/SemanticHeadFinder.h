//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/SemanticHeadFinder.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpTreesSemanticHeadFinder")
#ifdef RESTRICT_EduStanfordNlpTreesSemanticHeadFinder
#define INCLUDE_ALL_EduStanfordNlpTreesSemanticHeadFinder 0
#else
#define INCLUDE_ALL_EduStanfordNlpTreesSemanticHeadFinder 1
#endif
#undef RESTRICT_EduStanfordNlpTreesSemanticHeadFinder

#if !defined (EduStanfordNlpTreesSemanticHeadFinder_) && (INCLUDE_ALL_EduStanfordNlpTreesSemanticHeadFinder || defined(INCLUDE_EduStanfordNlpTreesSemanticHeadFinder))
#define EduStanfordNlpTreesSemanticHeadFinder_

#define RESTRICT_EduStanfordNlpTreesModCollinsHeadFinder 1
#define INCLUDE_EduStanfordNlpTreesModCollinsHeadFinder 1
#include "edu/stanford/nlp/trees/ModCollinsHeadFinder.h"

@class EduStanfordNlpTreesTree;
@class EduStanfordNlpTreesTregexTregexPattern;
@class IOSObjectArray;
@protocol EduStanfordNlpTreesTreebankLanguagePack;
@protocol JavaUtilFunctionPredicate;

@interface EduStanfordNlpTreesSemanticHeadFinder : EduStanfordNlpTreesModCollinsHeadFinder

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithBoolean:(jboolean)noCopulaHead;

- (instancetype)initWithEduStanfordNlpTreesTreebankLanguagePack:(id<EduStanfordNlpTreesTreebankLanguagePack>)tlp
                                                    withBoolean:(jboolean)noCopulaHead;

- (jboolean)isVerbalAuxiliaryWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

- (jboolean)makesCopulaHead;

#pragma mark Protected

- (EduStanfordNlpTreesTree *)determineNonTrivialHeadWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                                    withEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)parent;

- (jint)postOperationFixWithInt:(jint)headIdx
withEduStanfordNlpTreesTreeArray:(IOSObjectArray *)daughterTrees;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpTreesSemanticHeadFinder)

inline IOSObjectArray *EduStanfordNlpTreesSemanticHeadFinder_get_headOfCopulaTregex();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *EduStanfordNlpTreesSemanticHeadFinder_headOfCopulaTregex;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesSemanticHeadFinder, headOfCopulaTregex, IOSObjectArray *)

inline IOSObjectArray *EduStanfordNlpTreesSemanticHeadFinder_get_headOfConjpTregex();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *EduStanfordNlpTreesSemanticHeadFinder_headOfConjpTregex;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesSemanticHeadFinder, headOfConjpTregex, IOSObjectArray *)

inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesSemanticHeadFinder_get_noVerbOverTempTregex();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesSemanticHeadFinder_noVerbOverTempTregex;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesSemanticHeadFinder, noVerbOverTempTregex, EduStanfordNlpTreesTregexTregexPattern *)

inline id<JavaUtilFunctionPredicate> EduStanfordNlpTreesSemanticHeadFinder_get_REMOVE_TMP_AND_ADV();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilFunctionPredicate> EduStanfordNlpTreesSemanticHeadFinder_REMOVE_TMP_AND_ADV;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesSemanticHeadFinder, REMOVE_TMP_AND_ADV, id<JavaUtilFunctionPredicate>)

FOUNDATION_EXPORT void EduStanfordNlpTreesSemanticHeadFinder_init(EduStanfordNlpTreesSemanticHeadFinder *self);

FOUNDATION_EXPORT EduStanfordNlpTreesSemanticHeadFinder *new_EduStanfordNlpTreesSemanticHeadFinder_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTreesSemanticHeadFinder *create_EduStanfordNlpTreesSemanticHeadFinder_init();

FOUNDATION_EXPORT void EduStanfordNlpTreesSemanticHeadFinder_initWithBoolean_(EduStanfordNlpTreesSemanticHeadFinder *self, jboolean noCopulaHead);

FOUNDATION_EXPORT EduStanfordNlpTreesSemanticHeadFinder *new_EduStanfordNlpTreesSemanticHeadFinder_initWithBoolean_(jboolean noCopulaHead) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTreesSemanticHeadFinder *create_EduStanfordNlpTreesSemanticHeadFinder_initWithBoolean_(jboolean noCopulaHead);

FOUNDATION_EXPORT void EduStanfordNlpTreesSemanticHeadFinder_initWithEduStanfordNlpTreesTreebankLanguagePack_withBoolean_(EduStanfordNlpTreesSemanticHeadFinder *self, id<EduStanfordNlpTreesTreebankLanguagePack> tlp, jboolean noCopulaHead);

FOUNDATION_EXPORT EduStanfordNlpTreesSemanticHeadFinder *new_EduStanfordNlpTreesSemanticHeadFinder_initWithEduStanfordNlpTreesTreebankLanguagePack_withBoolean_(id<EduStanfordNlpTreesTreebankLanguagePack> tlp, jboolean noCopulaHead) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTreesSemanticHeadFinder *create_EduStanfordNlpTreesSemanticHeadFinder_initWithEduStanfordNlpTreesTreebankLanguagePack_withBoolean_(id<EduStanfordNlpTreesTreebankLanguagePack> tlp, jboolean noCopulaHead);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesSemanticHeadFinder)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpTreesSemanticHeadFinder")
