//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/WordStemmer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/process/Morphology.h"
#include "edu/stanford/nlp/trees/DiskTreebank.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/Treebank.h"
#include "edu/stanford/nlp/trees/WordStemmer.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"

@interface EduStanfordNlpTreesWordStemmer ()

- (void)processTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                  withNSString:(NSString *)tag
           withEduStanfordNlpProcessMorphology:(EduStanfordNlpProcessMorphology *)morpha;

@end

__attribute__((unused)) static void EduStanfordNlpTreesWordStemmer_processTreeWithEduStanfordNlpTreesTree_withNSString_withEduStanfordNlpProcessMorphology_(EduStanfordNlpTreesWordStemmer *self, EduStanfordNlpTreesTree *t, NSString *tag, EduStanfordNlpProcessMorphology *morpha);

@implementation EduStanfordNlpTreesWordStemmer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesWordStemmer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)visitTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  EduStanfordNlpTreesWordStemmer_processTreeWithEduStanfordNlpTreesTree_withNSString_withEduStanfordNlpProcessMorphology_(self, t, nil, new_EduStanfordNlpProcessMorphology_init());
}

- (void)processTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                  withNSString:(NSString *)tag
           withEduStanfordNlpProcessMorphology:(EduStanfordNlpProcessMorphology *)morpha {
  EduStanfordNlpTreesWordStemmer_processTreeWithEduStanfordNlpTreesTree_withNSString_withEduStanfordNlpProcessMorphology_(self, t, tag, morpha);
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduStanfordNlpTreesWordStemmer_mainWithNSStringArray_(args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(visitTreeWithEduStanfordNlpTreesTree:);
  methods[2].selector = @selector(processTreeWithEduStanfordNlpTreesTree:withNSString:withEduStanfordNlpProcessMorphology:);
  methods[3].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "visitTree", "LEduStanfordNlpTreesTree;", "processTree", "LEduStanfordNlpTreesTree;LNSString;LEduStanfordNlpProcessMorphology;", "main", "[LNSString;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesWordStemmer = { "WordStemmer", "edu.stanford.nlp.trees", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesWordStemmer;
}

@end

void EduStanfordNlpTreesWordStemmer_init(EduStanfordNlpTreesWordStemmer *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesWordStemmer *new_EduStanfordNlpTreesWordStemmer_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesWordStemmer, init)
}

EduStanfordNlpTreesWordStemmer *create_EduStanfordNlpTreesWordStemmer_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesWordStemmer, init)
}

void EduStanfordNlpTreesWordStemmer_processTreeWithEduStanfordNlpTreesTree_withNSString_withEduStanfordNlpProcessMorphology_(EduStanfordNlpTreesWordStemmer *self, EduStanfordNlpTreesTree *t, NSString *tag, EduStanfordNlpProcessMorphology *morpha) {
  if ([((EduStanfordNlpTreesTree *) nil_chk(t)) isPreTerminal]) {
    tag = [((id<EduStanfordNlpLingLabel>) nil_chk([t label])) value];
  }
  if ([t isLeaf]) {
    [((id<EduStanfordNlpLingLabel>) nil_chk([t label])) setValueWithNSString:[((EduStanfordNlpProcessMorphology *) nil_chk(morpha)) lemmaWithNSString:[((id<EduStanfordNlpLingLabel>) nil_chk([t label])) value] withNSString:tag]];
  }
  else {
    {
      IOSObjectArray *a__ = [t children];
      EduStanfordNlpTreesTree * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      EduStanfordNlpTreesTree * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        EduStanfordNlpTreesTree *kid = *b__++;
        EduStanfordNlpTreesWordStemmer_processTreeWithEduStanfordNlpTreesTree_withNSString_withEduStanfordNlpProcessMorphology_(self, kid, tag, morpha);
      }
    }
  }
}

void EduStanfordNlpTreesWordStemmer_mainWithNSStringArray_(IOSObjectArray *args) {
  EduStanfordNlpTreesWordStemmer_initialize();
  EduStanfordNlpTreesTreebank *treebank = new_EduStanfordNlpTreesDiskTreebank_init();
  [treebank loadPathWithNSString:IOSObjectArray_Get(nil_chk(args), 0)];
  EduStanfordNlpTreesWordStemmer *ls = new_EduStanfordNlpTreesWordStemmer_init();
  for (EduStanfordNlpTreesTree * __strong tree in treebank) {
    [ls visitTreeWithEduStanfordNlpTreesTree:tree];
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithId:tree];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesWordStemmer)
