//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/UnnamedConcreteDependency.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/HasIndex.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/trees/Dependency.h"
#include "edu/stanford/nlp/trees/DependencyFactory.h"
#include "edu/stanford/nlp/trees/UnnamedConcreteDependency.h"
#include "edu/stanford/nlp/trees/UnnamedDependency.h"
#include "edu/stanford/nlp/util/XMLUtils.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"

@interface EduStanfordNlpTreesUnnamedConcreteDependency () {
 @public
  jint headIndex_;
  jint depIndex_;
}

@end

inline jlong EduStanfordNlpTreesUnnamedConcreteDependency_get_serialVersionUID();
#define EduStanfordNlpTreesUnnamedConcreteDependency_serialVersionUID -8836949694741145222LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTreesUnnamedConcreteDependency, serialVersionUID, jlong)

@interface EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder : NSObject

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder)

inline id<EduStanfordNlpTreesDependencyFactory> EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder_get_df();
static id<EduStanfordNlpTreesDependencyFactory> EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder_df;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder, df, id<EduStanfordNlpTreesDependencyFactory>)

__attribute__((unused)) static void EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder_init(EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder *self);

__attribute__((unused)) static EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder *new_EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder *create_EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder)

@interface EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory : NSObject < EduStanfordNlpTreesDependencyFactory >

- (id<EduStanfordNlpTreesDependency>)newDependencyWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)regent
                                                  withEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)dependent OBJC_METHOD_FAMILY_NONE;

- (id<EduStanfordNlpTreesDependency>)newDependencyWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)regent
                                                  withEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)dependent
                                                                       withId:(id)name OBJC_METHOD_FAMILY_NONE;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory)

__attribute__((unused)) static void EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory_init(EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory *self);

__attribute__((unused)) static EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory *new_EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory *create_EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory)

@implementation EduStanfordNlpTreesUnnamedConcreteDependency

- (instancetype)initWithNSString:(NSString *)regent
                         withInt:(jint)regentIndex
                    withNSString:(NSString *)dependent
                         withInt:(jint)dependentIndex {
  EduStanfordNlpTreesUnnamedConcreteDependency_initWithNSString_withInt_withNSString_withInt_(self, regent, regentIndex, dependent, dependentIndex);
  return self;
}

- (instancetype)initWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)regent
                                        withInt:(jint)regentIndex
                    withEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)dependent
                                        withInt:(jint)dependentIndex {
  EduStanfordNlpTreesUnnamedConcreteDependency_initWithEduStanfordNlpLingLabel_withInt_withEduStanfordNlpLingLabel_withInt_(self, regent, regentIndex, dependent, dependentIndex);
  return self;
}

- (instancetype)initWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)regent
                    withEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)dependent {
  EduStanfordNlpTreesUnnamedConcreteDependency_initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_(self, regent, dependent);
  return self;
}

- (jint)getGovernorIndex {
  return headIndex_;
}

- (jint)getDependentIndex {
  return depIndex_;
}

- (NSUInteger)hash {
  return headIndex_ * (JreLShift32(depIndex_, 16));
}

- (jboolean)isEqual:(id)o {
  if (self == o) {
    return true;
  }
  else if (!([o isKindOfClass:[EduStanfordNlpTreesUnnamedConcreteDependency class]])) {
    return false;
  }
  EduStanfordNlpTreesUnnamedConcreteDependency *d = (EduStanfordNlpTreesUnnamedConcreteDependency *) cast_chk(o, [EduStanfordNlpTreesUnnamedConcreteDependency class]);
  return headIndex_ == ((EduStanfordNlpTreesUnnamedConcreteDependency *) nil_chk(d))->headIndex_ && depIndex_ == d->depIndex_;
}

- (NSString *)description {
  NSString *headWord = [self getTextWithEduStanfordNlpLingLabel:[self governor]];
  NSString *depWord = [self getTextWithEduStanfordNlpLingLabel:[self dependent]];
  return NSString_formatWithNSString_withNSObjectArray_(@"%s [%d] --> %s [%d]", [IOSObjectArray newArrayWithObjects:(id[]){ headWord, JavaLangInteger_valueOfWithInt_(headIndex_), depWord, JavaLangInteger_valueOfWithInt_(depIndex_) } count:4 type:NSObject_class_()]);
}

- (NSString *)toStringWithNSString:(NSString *)format {
  {
    NSString *govIdxStr;
    NSString *depIdxStr;
    switch (JreIndexOfStr(format, (id[]){ @"xml", @"predicate" }, 2)) {
      case 0:
      govIdxStr = JreStrcat("$IC", @" idx=\"", headIndex_, '"');
      depIdxStr = JreStrcat("$IC", @" idx=\"", depIndex_, '"');
      return JreStrcat("$$C$$$C$$", @"  <dep>\n    <governor", govIdxStr, '>', EduStanfordNlpUtilXMLUtils_escapeXMLWithNSString_([((id<EduStanfordNlpLingLabel>) nil_chk([self governor])) value]), @"</governor>\n    <dependent", depIdxStr, '>', EduStanfordNlpUtilXMLUtils_escapeXMLWithNSString_([((id<EduStanfordNlpLingLabel>) nil_chk([self dependent])) value]), @"</dependent>\n  </dep>");
      case 1:
      return JreStrcat("$@C@C", @"dep(", [self governor], ',', [self dependent], ')');
      default:
      return [self description];
    }
  }
}

- (id<EduStanfordNlpTreesDependencyFactory>)dependencyFactory {
  return JreLoadStatic(EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder, df);
}

+ (id<EduStanfordNlpTreesDependencyFactory>)factory {
  return EduStanfordNlpTreesUnnamedConcreteDependency_factory();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesDependencyFactory;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesDependencyFactory;", 0x9, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withInt:withNSString:withInt:);
  methods[1].selector = @selector(initWithEduStanfordNlpLingLabel:withInt:withEduStanfordNlpLingLabel:withInt:);
  methods[2].selector = @selector(initWithEduStanfordNlpLingLabel:withEduStanfordNlpLingLabel:);
  methods[3].selector = @selector(getGovernorIndex);
  methods[4].selector = @selector(getDependentIndex);
  methods[5].selector = @selector(hash);
  methods[6].selector = @selector(isEqual:);
  methods[7].selector = @selector(description);
  methods[8].selector = @selector(toStringWithNSString:);
  methods[9].selector = @selector(dependencyFactory);
  methods[10].selector = @selector(factory);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTreesUnnamedConcreteDependency_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "headIndex_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "depIndex_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;ILNSString;I", "LEduStanfordNlpLingLabel;ILEduStanfordNlpLingLabel;I", "LEduStanfordNlpLingLabel;LEduStanfordNlpLingLabel;", "hashCode", "equals", "LNSObject;", "toString", "LNSString;", "LEduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder;LEduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesUnnamedConcreteDependency = { "UnnamedConcreteDependency", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0x1, 11, 3, -1, 8, -1, -1, -1 };
  return &_EduStanfordNlpTreesUnnamedConcreteDependency;
}

@end

void EduStanfordNlpTreesUnnamedConcreteDependency_initWithNSString_withInt_withNSString_withInt_(EduStanfordNlpTreesUnnamedConcreteDependency *self, NSString *regent, jint regentIndex, NSString *dependent, jint dependentIndex) {
  EduStanfordNlpTreesUnnamedDependency_initWithNSString_withNSString_(self, regent, dependent);
  self->headIndex_ = regentIndex;
  self->depIndex_ = dependentIndex;
}

EduStanfordNlpTreesUnnamedConcreteDependency *new_EduStanfordNlpTreesUnnamedConcreteDependency_initWithNSString_withInt_withNSString_withInt_(NSString *regent, jint regentIndex, NSString *dependent, jint dependentIndex) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesUnnamedConcreteDependency, initWithNSString_withInt_withNSString_withInt_, regent, regentIndex, dependent, dependentIndex)
}

EduStanfordNlpTreesUnnamedConcreteDependency *create_EduStanfordNlpTreesUnnamedConcreteDependency_initWithNSString_withInt_withNSString_withInt_(NSString *regent, jint regentIndex, NSString *dependent, jint dependentIndex) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesUnnamedConcreteDependency, initWithNSString_withInt_withNSString_withInt_, regent, regentIndex, dependent, dependentIndex)
}

void EduStanfordNlpTreesUnnamedConcreteDependency_initWithEduStanfordNlpLingLabel_withInt_withEduStanfordNlpLingLabel_withInt_(EduStanfordNlpTreesUnnamedConcreteDependency *self, id<EduStanfordNlpLingLabel> regent, jint regentIndex, id<EduStanfordNlpLingLabel> dependent, jint dependentIndex) {
  EduStanfordNlpTreesUnnamedDependency_initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_(self, regent, dependent);
  self->headIndex_ = regentIndex;
  self->depIndex_ = dependentIndex;
}

EduStanfordNlpTreesUnnamedConcreteDependency *new_EduStanfordNlpTreesUnnamedConcreteDependency_initWithEduStanfordNlpLingLabel_withInt_withEduStanfordNlpLingLabel_withInt_(id<EduStanfordNlpLingLabel> regent, jint regentIndex, id<EduStanfordNlpLingLabel> dependent, jint dependentIndex) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesUnnamedConcreteDependency, initWithEduStanfordNlpLingLabel_withInt_withEduStanfordNlpLingLabel_withInt_, regent, regentIndex, dependent, dependentIndex)
}

EduStanfordNlpTreesUnnamedConcreteDependency *create_EduStanfordNlpTreesUnnamedConcreteDependency_initWithEduStanfordNlpLingLabel_withInt_withEduStanfordNlpLingLabel_withInt_(id<EduStanfordNlpLingLabel> regent, jint regentIndex, id<EduStanfordNlpLingLabel> dependent, jint dependentIndex) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesUnnamedConcreteDependency, initWithEduStanfordNlpLingLabel_withInt_withEduStanfordNlpLingLabel_withInt_, regent, regentIndex, dependent, dependentIndex)
}

void EduStanfordNlpTreesUnnamedConcreteDependency_initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_(EduStanfordNlpTreesUnnamedConcreteDependency *self, id<EduStanfordNlpLingLabel> regent, id<EduStanfordNlpLingLabel> dependent) {
  EduStanfordNlpTreesUnnamedDependency_initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_(self, regent, dependent);
  if ([EduStanfordNlpLingHasIndex_class_() isInstance:[self governor]]) {
    self->headIndex_ = [((id<EduStanfordNlpLingHasIndex>) nil_chk(((id<EduStanfordNlpLingHasIndex>) cast_check([self governor], EduStanfordNlpLingHasIndex_class_())))) index];
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Label argument lacks IndexAnnotation.");
  }
  if ([EduStanfordNlpLingHasIndex_class_() isInstance:[self dependent]]) {
    self->depIndex_ = [((id<EduStanfordNlpLingHasIndex>) nil_chk(((id<EduStanfordNlpLingHasIndex>) cast_check([self dependent], EduStanfordNlpLingHasIndex_class_())))) index];
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Label argument lacks IndexAnnotation.");
  }
}

EduStanfordNlpTreesUnnamedConcreteDependency *new_EduStanfordNlpTreesUnnamedConcreteDependency_initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_(id<EduStanfordNlpLingLabel> regent, id<EduStanfordNlpLingLabel> dependent) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesUnnamedConcreteDependency, initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_, regent, dependent)
}

EduStanfordNlpTreesUnnamedConcreteDependency *create_EduStanfordNlpTreesUnnamedConcreteDependency_initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_(id<EduStanfordNlpLingLabel> regent, id<EduStanfordNlpLingLabel> dependent) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesUnnamedConcreteDependency, initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_, regent, dependent)
}

id<EduStanfordNlpTreesDependencyFactory> EduStanfordNlpTreesUnnamedConcreteDependency_factory() {
  EduStanfordNlpTreesUnnamedConcreteDependency_initialize();
  return JreLoadStatic(EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder, df);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesUnnamedConcreteDependency)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder)

@implementation EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "df", "LEduStanfordNlpTreesDependencyFactory;", .constantValue.asLong = 0, 0x1a, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder_df, "LEduStanfordNlpTreesUnnamedConcreteDependency;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder = { "DependencyFactoryHolder", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder class]) {
    EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder_df = new_EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder)
  }
}

@end

void EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder_init(EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder *new_EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder, init)
}

EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder *create_EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesUnnamedConcreteDependency_DependencyFactoryHolder)

@implementation EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory

- (id<EduStanfordNlpTreesDependency>)newDependencyWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)regent
                                                  withEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)dependent {
  return [self newDependencyWithEduStanfordNlpLingLabel:regent withEduStanfordNlpLingLabel:dependent withId:nil];
}

- (id<EduStanfordNlpTreesDependency>)newDependencyWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)regent
                                                  withEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)dependent
                                                                       withId:(id)name {
  return new_EduStanfordNlpTreesUnnamedConcreteDependency_initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_(regent, dependent);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEduStanfordNlpTreesDependency;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpTreesDependency;", 0x1, 0, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(newDependencyWithEduStanfordNlpLingLabel:withEduStanfordNlpLingLabel:);
  methods[1].selector = @selector(newDependencyWithEduStanfordNlpLingLabel:withEduStanfordNlpLingLabel:withId:);
  methods[2].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "newDependency", "LEduStanfordNlpLingLabel;LEduStanfordNlpLingLabel;", "(Ledu/stanford/nlp/ling/Label;Ledu/stanford/nlp/ling/Label;)Ledu/stanford/nlp/trees/Dependency<Ledu/stanford/nlp/ling/Label;Ledu/stanford/nlp/ling/Label;Ljava/lang/Object;>;", "LEduStanfordNlpLingLabel;LEduStanfordNlpLingLabel;LNSObject;", "(Ledu/stanford/nlp/ling/Label;Ledu/stanford/nlp/ling/Label;Ljava/lang/Object;)Ledu/stanford/nlp/trees/Dependency<Ledu/stanford/nlp/ling/Label;Ledu/stanford/nlp/ling/Label;Ljava/lang/Object;>;", "LEduStanfordNlpTreesUnnamedConcreteDependency;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory = { "UnnamedConcreteDependencyFactory", "edu.stanford.nlp.trees", ptrTable, methods, NULL, 7, 0xa, 3, 0, 5, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory;
}

@end

void EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory_init(EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory *new_EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory, init)
}

EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory *create_EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesUnnamedConcreteDependency_UnnamedConcreteDependencyFactory)
