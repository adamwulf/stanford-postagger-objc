//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/PennTreebankLanguagePack.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/process/PTBTokenizer.h"
#include "edu/stanford/nlp/process/TokenizerFactory.h"
#include "edu/stanford/nlp/trees/AbstractTreebankLanguagePack.h"
#include "edu/stanford/nlp/trees/EnglishGrammaticalStructureFactory.h"
#include "edu/stanford/nlp/trees/GrammaticalStructureFactory.h"
#include "edu/stanford/nlp/trees/HeadFinder.h"
#include "edu/stanford/nlp/trees/ModCollinsHeadFinder.h"
#include "edu/stanford/nlp/trees/PennTreebankLanguagePack.h"
#include "edu/stanford/nlp/trees/SemanticHeadFinder.h"
#include "edu/stanford/nlp/trees/TreebankLanguagePack.h"
#include "edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructureFactory.h"
#include "edu/stanford/nlp/trees/UniversalSemanticHeadFinder.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/util/function/Predicate.h"

inline IOSObjectArray *EduStanfordNlpTreesPennTreebankLanguagePack_get_pennPunctTags();
static IOSObjectArray *EduStanfordNlpTreesPennTreebankLanguagePack_pennPunctTags;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesPennTreebankLanguagePack, pennPunctTags, IOSObjectArray *)

inline IOSObjectArray *EduStanfordNlpTreesPennTreebankLanguagePack_get_pennSFPunctTags();
static IOSObjectArray *EduStanfordNlpTreesPennTreebankLanguagePack_pennSFPunctTags;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesPennTreebankLanguagePack, pennSFPunctTags, IOSObjectArray *)

inline IOSObjectArray *EduStanfordNlpTreesPennTreebankLanguagePack_get_collinsPunctTags();
static IOSObjectArray *EduStanfordNlpTreesPennTreebankLanguagePack_collinsPunctTags;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesPennTreebankLanguagePack, collinsPunctTags, IOSObjectArray *)

inline IOSObjectArray *EduStanfordNlpTreesPennTreebankLanguagePack_get_pennPunctWords();
static IOSObjectArray *EduStanfordNlpTreesPennTreebankLanguagePack_pennPunctWords;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesPennTreebankLanguagePack, pennPunctWords, IOSObjectArray *)

inline IOSObjectArray *EduStanfordNlpTreesPennTreebankLanguagePack_get_pennSFPunctWords();
static IOSObjectArray *EduStanfordNlpTreesPennTreebankLanguagePack_pennSFPunctWords;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesPennTreebankLanguagePack, pennSFPunctWords, IOSObjectArray *)

inline IOSCharArray *EduStanfordNlpTreesPennTreebankLanguagePack_get_annotationIntroducingChars();
static IOSCharArray *EduStanfordNlpTreesPennTreebankLanguagePack_annotationIntroducingChars;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesPennTreebankLanguagePack, annotationIntroducingChars, IOSCharArray *)

inline IOSObjectArray *EduStanfordNlpTreesPennTreebankLanguagePack_get_pennStartSymbols();
static IOSObjectArray *EduStanfordNlpTreesPennTreebankLanguagePack_pennStartSymbols;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesPennTreebankLanguagePack, pennStartSymbols, IOSObjectArray *)

inline jlong EduStanfordNlpTreesPennTreebankLanguagePack_get_serialVersionUID();
#define EduStanfordNlpTreesPennTreebankLanguagePack_serialVersionUID 9081305982861675328LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTreesPennTreebankLanguagePack, serialVersionUID, jlong)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesPennTreebankLanguagePack)

@implementation EduStanfordNlpTreesPennTreebankLanguagePack

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesPennTreebankLanguagePack_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (IOSObjectArray *)punctuationTags {
  return EduStanfordNlpTreesPennTreebankLanguagePack_pennPunctTags;
}

- (IOSObjectArray *)punctuationWords {
  return EduStanfordNlpTreesPennTreebankLanguagePack_pennPunctWords;
}

- (IOSObjectArray *)sentenceFinalPunctuationTags {
  return EduStanfordNlpTreesPennTreebankLanguagePack_pennSFPunctTags;
}

- (IOSObjectArray *)sentenceFinalPunctuationWords {
  return EduStanfordNlpTreesPennTreebankLanguagePack_pennSFPunctWords;
}

- (IOSObjectArray *)evalBIgnoredPunctuationTags {
  return EduStanfordNlpTreesPennTreebankLanguagePack_collinsPunctTags;
}

- (IOSCharArray *)labelAnnotationIntroducingCharacters {
  return EduStanfordNlpTreesPennTreebankLanguagePack_annotationIntroducingChars;
}

- (IOSObjectArray *)startSymbols {
  return EduStanfordNlpTreesPennTreebankLanguagePack_pennStartSymbols;
}

- (id<EduStanfordNlpProcessTokenizerFactory>)getTokenizerFactory {
  return EduStanfordNlpProcessPTBTokenizer_coreLabelFactory();
}

- (NSString *)treebankFileExtension {
  return @"mrg";
}

- (id<EduStanfordNlpTreesGrammaticalStructureFactory>)grammaticalStructureFactory {
  if (generateOriginalDependencies_) {
    return new_EduStanfordNlpTreesEnglishGrammaticalStructureFactory_init();
  }
  else {
    return new_EduStanfordNlpTreesUniversalEnglishGrammaticalStructureFactory_init();
  }
}

- (id<EduStanfordNlpTreesGrammaticalStructureFactory>)grammaticalStructureFactoryWithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)puncFilter {
  if (generateOriginalDependencies_) {
    return new_EduStanfordNlpTreesEnglishGrammaticalStructureFactory_initWithJavaUtilFunctionPredicate_(puncFilter);
  }
  else {
    return new_EduStanfordNlpTreesUniversalEnglishGrammaticalStructureFactory_initWithJavaUtilFunctionPredicate_(puncFilter);
  }
}

- (id<EduStanfordNlpTreesGrammaticalStructureFactory>)grammaticalStructureFactoryWithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)puncFilter
                                                                             withEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)hf {
  if (generateOriginalDependencies_) {
    return new_EduStanfordNlpTreesEnglishGrammaticalStructureFactory_initWithJavaUtilFunctionPredicate_withEduStanfordNlpTreesHeadFinder_(puncFilter, hf);
  }
  else {
    return new_EduStanfordNlpTreesUniversalEnglishGrammaticalStructureFactory_initWithJavaUtilFunctionPredicate_withEduStanfordNlpTreesHeadFinder_(puncFilter, hf);
  }
}

- (jboolean)supportsGrammaticalStructures {
  return true;
}

- (id<EduStanfordNlpTreesHeadFinder>)headFinder {
  return new_EduStanfordNlpTreesModCollinsHeadFinder_initWithEduStanfordNlpTreesTreebankLanguagePack_(self);
}

- (id<EduStanfordNlpTreesHeadFinder>)typedDependencyHeadFinder {
  if (generateOriginalDependencies_) {
    return new_EduStanfordNlpTreesSemanticHeadFinder_initWithEduStanfordNlpTreesTreebankLanguagePack_withBoolean_(self, true);
  }
  else {
    return new_EduStanfordNlpTreesUniversalSemanticHeadFinder_initWithEduStanfordNlpTreesTreebankLanguagePack_withBoolean_(self, true);
  }
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduStanfordNlpTreesPennTreebankLanguagePack_mainWithNSStringArray_(args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[C", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpProcessTokenizerFactory;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesGrammaticalStructureFactory;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesGrammaticalStructureFactory;", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "LEduStanfordNlpTreesGrammaticalStructureFactory;", 0x1, 1, 4, -1, 5, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesHeadFinder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesHeadFinder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(punctuationTags);
  methods[2].selector = @selector(punctuationWords);
  methods[3].selector = @selector(sentenceFinalPunctuationTags);
  methods[4].selector = @selector(sentenceFinalPunctuationWords);
  methods[5].selector = @selector(evalBIgnoredPunctuationTags);
  methods[6].selector = @selector(labelAnnotationIntroducingCharacters);
  methods[7].selector = @selector(startSymbols);
  methods[8].selector = @selector(getTokenizerFactory);
  methods[9].selector = @selector(treebankFileExtension);
  methods[10].selector = @selector(grammaticalStructureFactory);
  methods[11].selector = @selector(grammaticalStructureFactoryWithJavaUtilFunctionPredicate:);
  methods[12].selector = @selector(grammaticalStructureFactoryWithJavaUtilFunctionPredicate:withEduStanfordNlpTreesHeadFinder:);
  methods[13].selector = @selector(supportsGrammaticalStructures);
  methods[14].selector = @selector(headFinder);
  methods[15].selector = @selector(typedDependencyHeadFinder);
  methods[16].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "pennPunctTags", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "pennSFPunctTags", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
    { "collinsPunctTags", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 10, -1, -1 },
    { "pennPunctWords", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "pennSFPunctWords", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
    { "annotationIntroducingChars", "[C", .constantValue.asLong = 0, 0x1a, -1, 13, -1, -1 },
    { "pennStartSymbols", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 14, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTreesPennTreebankLanguagePack_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ledu/stanford/nlp/process/TokenizerFactory<Ledu/stanford/nlp/ling/CoreLabel;>;", "grammaticalStructureFactory", "LJavaUtilFunctionPredicate;", "(Ljava/util/function/Predicate<Ljava/lang/String;>;)Ledu/stanford/nlp/trees/GrammaticalStructureFactory;", "LJavaUtilFunctionPredicate;LEduStanfordNlpTreesHeadFinder;", "(Ljava/util/function/Predicate<Ljava/lang/String;>;Ledu/stanford/nlp/trees/HeadFinder;)Ledu/stanford/nlp/trees/GrammaticalStructureFactory;", "main", "[LNSString;", &EduStanfordNlpTreesPennTreebankLanguagePack_pennPunctTags, &EduStanfordNlpTreesPennTreebankLanguagePack_pennSFPunctTags, &EduStanfordNlpTreesPennTreebankLanguagePack_collinsPunctTags, &EduStanfordNlpTreesPennTreebankLanguagePack_pennPunctWords, &EduStanfordNlpTreesPennTreebankLanguagePack_pennSFPunctWords, &EduStanfordNlpTreesPennTreebankLanguagePack_annotationIntroducingChars, &EduStanfordNlpTreesPennTreebankLanguagePack_pennStartSymbols };
  static const J2ObjcClassInfo _EduStanfordNlpTreesPennTreebankLanguagePack = { "PennTreebankLanguagePack", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0x1, 17, 8, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesPennTreebankLanguagePack;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesPennTreebankLanguagePack class]) {
    EduStanfordNlpTreesPennTreebankLanguagePack_pennPunctTags = [IOSObjectArray newArrayWithObjects:(id[]){ @"''", @"``", @"-LRB-", @"-RRB-", @".", @":", @"," } count:7 type:NSString_class_()];
    EduStanfordNlpTreesPennTreebankLanguagePack_pennSFPunctTags = [IOSObjectArray newArrayWithObjects:(id[]){ @"." } count:1 type:NSString_class_()];
    EduStanfordNlpTreesPennTreebankLanguagePack_collinsPunctTags = [IOSObjectArray newArrayWithObjects:(id[]){ @"''", @"``", @".", @":", @"," } count:5 type:NSString_class_()];
    EduStanfordNlpTreesPennTreebankLanguagePack_pennPunctWords = [IOSObjectArray newArrayWithObjects:(id[]){ @"''", @"'", @"``", @"`", @"-LRB-", @"-RRB-", @"-LCB-", @"-RCB-", @".", @"?", @"!", @",", @":", @"-", @"--", @"...", @";" } count:17 type:NSString_class_()];
    EduStanfordNlpTreesPennTreebankLanguagePack_pennSFPunctWords = [IOSObjectArray newArrayWithObjects:(id[]){ @".", @"!", @"?" } count:3 type:NSString_class_()];
    EduStanfordNlpTreesPennTreebankLanguagePack_annotationIntroducingChars = [IOSCharArray newArrayWithChars:(jchar[]){ '-', '=', '|', '#', '^', '~', '_', '[' } count:8];
    EduStanfordNlpTreesPennTreebankLanguagePack_pennStartSymbols = [IOSObjectArray newArrayWithObjects:(id[]){ @"ROOT", @"TOP" } count:2 type:NSString_class_()];
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesPennTreebankLanguagePack)
  }
}

@end

void EduStanfordNlpTreesPennTreebankLanguagePack_init(EduStanfordNlpTreesPennTreebankLanguagePack *self) {
  EduStanfordNlpTreesAbstractTreebankLanguagePack_init(self);
}

EduStanfordNlpTreesPennTreebankLanguagePack *new_EduStanfordNlpTreesPennTreebankLanguagePack_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesPennTreebankLanguagePack, init)
}

EduStanfordNlpTreesPennTreebankLanguagePack *create_EduStanfordNlpTreesPennTreebankLanguagePack_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesPennTreebankLanguagePack, init)
}

void EduStanfordNlpTreesPennTreebankLanguagePack_mainWithNSStringArray_(IOSObjectArray *args) {
  EduStanfordNlpTreesPennTreebankLanguagePack_initialize();
  id<EduStanfordNlpTreesTreebankLanguagePack> tlp = new_EduStanfordNlpTreesPennTreebankLanguagePack_init();
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:JreStrcat("$$", @"Start symbol: ", [tlp startSymbol])];
  NSString *start = [tlp startSymbol];
  [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$Z", @"Should be true: ", ([tlp isStartSymbolWithNSString:start]))];
  IOSObjectArray *strs = [IOSObjectArray newArrayWithObjects:(id[]){ @"-", @"-LLB-", @"NP-2", @"NP=3", @"NP-LGS", @"NP-TMP=3" } count:6 type:NSString_class_()];
  {
    IOSObjectArray *a__ = strs;
    NSString * const *b__ = a__->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *str = *b__++;
      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$$$$$$", @"String: ", str, @" basic: ", [tlp basicCategoryWithNSString:str], @" basicAndFunc: ", [tlp categoryAndFunctionWithNSString:str])];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesPennTreebankLanguagePack)
