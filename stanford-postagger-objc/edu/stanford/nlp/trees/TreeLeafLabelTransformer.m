//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/TreeLeafLabelTransformer.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeLeafLabelTransformer.h"
#include "java/util/List.h"
#include "java/util/function/Function.h"

@implementation EduStanfordNlpTreesTreeLeafLabelTransformer

- (instancetype)initWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)transform {
  EduStanfordNlpTreesTreeLeafLabelTransformer_initWithJavaUtilFunctionFunction_(self, transform);
  return self;
}

- (EduStanfordNlpTreesTree *)transformTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree {
  for (EduStanfordNlpTreesTree * __strong leaf in nil_chk([((EduStanfordNlpTreesTree *) nil_chk(tree)) getLeaves])) {
    id<EduStanfordNlpLingLabel> label = [((EduStanfordNlpTreesTree *) nil_chk(leaf)) label];
    [((id<EduStanfordNlpLingLabel>) nil_chk(label)) setValueWithNSString:[((id<JavaUtilFunctionFunction>) nil_chk(transform_)) applyWithId:[label value]]];
  }
  return tree;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilFunctionFunction:);
  methods[1].selector = @selector(transformTreeWithEduStanfordNlpTreesTree:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "transform_", "LJavaUtilFunctionFunction;", .constantValue.asLong = 0, 0x0, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilFunctionFunction;", "(Ljava/util/function/Function<Ljava/lang/String;Ljava/lang/String;>;)V", "transformTree", "LEduStanfordNlpTreesTree;", "Ljava/util/function/Function<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTreeLeafLabelTransformer = { "TreeLeafLabelTransformer", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesTreeLeafLabelTransformer;
}

@end

void EduStanfordNlpTreesTreeLeafLabelTransformer_initWithJavaUtilFunctionFunction_(EduStanfordNlpTreesTreeLeafLabelTransformer *self, id<JavaUtilFunctionFunction> transform) {
  NSObject_init(self);
  self->transform_ = transform;
}

EduStanfordNlpTreesTreeLeafLabelTransformer *new_EduStanfordNlpTreesTreeLeafLabelTransformer_initWithJavaUtilFunctionFunction_(id<JavaUtilFunctionFunction> transform) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTreeLeafLabelTransformer, initWithJavaUtilFunctionFunction_, transform)
}

EduStanfordNlpTreesTreeLeafLabelTransformer *create_EduStanfordNlpTreesTreeLeafLabelTransformer_initWithJavaUtilFunctionFunction_(id<JavaUtilFunctionFunction> transform) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTreeLeafLabelTransformer, initWithJavaUtilFunctionFunction_, transform)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTreeLeafLabelTransformer)
