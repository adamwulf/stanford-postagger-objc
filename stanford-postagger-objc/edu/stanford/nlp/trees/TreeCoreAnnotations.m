//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/TreeCoreAnnotations.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/CoreLabel.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeCoreAnnotations.h"
#include "edu/stanford/nlp/util/ErasureUtils.h"
#include "java/util/List.h"

@interface EduStanfordNlpTreesTreeCoreAnnotations ()

- (instancetype)init;

@end

__attribute__((unused)) static void EduStanfordNlpTreesTreeCoreAnnotations_init(EduStanfordNlpTreesTreeCoreAnnotations *self);

__attribute__((unused)) static EduStanfordNlpTreesTreeCoreAnnotations *new_EduStanfordNlpTreesTreeCoreAnnotations_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesTreeCoreAnnotations *create_EduStanfordNlpTreesTreeCoreAnnotations_init();

@implementation EduStanfordNlpTreesTreeCoreAnnotations

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesTreeCoreAnnotations_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpTreesTreeCoreAnnotations_TreeAnnotation;LEduStanfordNlpTreesTreeCoreAnnotations_BinarizedTreeAnnotation;LEduStanfordNlpTreesTreeCoreAnnotations_HeadWordLabelAnnotation;LEduStanfordNlpTreesTreeCoreAnnotations_HeadTagLabelAnnotation;LEduStanfordNlpTreesTreeCoreAnnotations_KBestTreesAnnotation;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTreeCoreAnnotations = { "TreeCoreAnnotations", "edu.stanford.nlp.trees", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 0, -1, -1, -1 };
  return &_EduStanfordNlpTreesTreeCoreAnnotations;
}

@end

void EduStanfordNlpTreesTreeCoreAnnotations_init(EduStanfordNlpTreesTreeCoreAnnotations *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesTreeCoreAnnotations *new_EduStanfordNlpTreesTreeCoreAnnotations_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTreeCoreAnnotations, init)
}

EduStanfordNlpTreesTreeCoreAnnotations *create_EduStanfordNlpTreesTreeCoreAnnotations_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTreeCoreAnnotations, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTreeCoreAnnotations)

@implementation EduStanfordNlpTreesTreeCoreAnnotations_TreeAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpTreesTree_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesTreeCoreAnnotations_TreeAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ledu/stanford/nlp/trees/Tree;>;", "LEduStanfordNlpTreesTreeCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ledu/stanford/nlp/trees/Tree;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTreeCoreAnnotations_TreeAnnotation = { "TreeAnnotation", "edu.stanford.nlp.trees", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpTreesTreeCoreAnnotations_TreeAnnotation;
}

@end

void EduStanfordNlpTreesTreeCoreAnnotations_TreeAnnotation_init(EduStanfordNlpTreesTreeCoreAnnotations_TreeAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesTreeCoreAnnotations_TreeAnnotation *new_EduStanfordNlpTreesTreeCoreAnnotations_TreeAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTreeCoreAnnotations_TreeAnnotation, init)
}

EduStanfordNlpTreesTreeCoreAnnotations_TreeAnnotation *create_EduStanfordNlpTreesTreeCoreAnnotations_TreeAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTreeCoreAnnotations_TreeAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTreeCoreAnnotations_TreeAnnotation)

@implementation EduStanfordNlpTreesTreeCoreAnnotations_BinarizedTreeAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpTreesTree_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesTreeCoreAnnotations_BinarizedTreeAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ledu/stanford/nlp/trees/Tree;>;", "LEduStanfordNlpTreesTreeCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ledu/stanford/nlp/trees/Tree;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTreeCoreAnnotations_BinarizedTreeAnnotation = { "BinarizedTreeAnnotation", "edu.stanford.nlp.trees", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpTreesTreeCoreAnnotations_BinarizedTreeAnnotation;
}

@end

void EduStanfordNlpTreesTreeCoreAnnotations_BinarizedTreeAnnotation_init(EduStanfordNlpTreesTreeCoreAnnotations_BinarizedTreeAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesTreeCoreAnnotations_BinarizedTreeAnnotation *new_EduStanfordNlpTreesTreeCoreAnnotations_BinarizedTreeAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTreeCoreAnnotations_BinarizedTreeAnnotation, init)
}

EduStanfordNlpTreesTreeCoreAnnotations_BinarizedTreeAnnotation *create_EduStanfordNlpTreesTreeCoreAnnotations_BinarizedTreeAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTreeCoreAnnotations_BinarizedTreeAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTreeCoreAnnotations_BinarizedTreeAnnotation)

@implementation EduStanfordNlpTreesTreeCoreAnnotations_HeadWordLabelAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpLingCoreLabel_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesTreeCoreAnnotations_HeadWordLabelAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ledu/stanford/nlp/ling/CoreLabel;>;", "LEduStanfordNlpTreesTreeCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ledu/stanford/nlp/ling/CoreLabel;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTreeCoreAnnotations_HeadWordLabelAnnotation = { "HeadWordLabelAnnotation", "edu.stanford.nlp.trees", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpTreesTreeCoreAnnotations_HeadWordLabelAnnotation;
}

@end

void EduStanfordNlpTreesTreeCoreAnnotations_HeadWordLabelAnnotation_init(EduStanfordNlpTreesTreeCoreAnnotations_HeadWordLabelAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesTreeCoreAnnotations_HeadWordLabelAnnotation *new_EduStanfordNlpTreesTreeCoreAnnotations_HeadWordLabelAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTreeCoreAnnotations_HeadWordLabelAnnotation, init)
}

EduStanfordNlpTreesTreeCoreAnnotations_HeadWordLabelAnnotation *create_EduStanfordNlpTreesTreeCoreAnnotations_HeadWordLabelAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTreeCoreAnnotations_HeadWordLabelAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTreeCoreAnnotations_HeadWordLabelAnnotation)

@implementation EduStanfordNlpTreesTreeCoreAnnotations_HeadTagLabelAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpLingCoreLabel_class_();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesTreeCoreAnnotations_HeadTagLabelAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ledu/stanford/nlp/ling/CoreLabel;>;", "LEduStanfordNlpTreesTreeCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ledu/stanford/nlp/ling/CoreLabel;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTreeCoreAnnotations_HeadTagLabelAnnotation = { "HeadTagLabelAnnotation", "edu.stanford.nlp.trees", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpTreesTreeCoreAnnotations_HeadTagLabelAnnotation;
}

@end

void EduStanfordNlpTreesTreeCoreAnnotations_HeadTagLabelAnnotation_init(EduStanfordNlpTreesTreeCoreAnnotations_HeadTagLabelAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesTreeCoreAnnotations_HeadTagLabelAnnotation *new_EduStanfordNlpTreesTreeCoreAnnotations_HeadTagLabelAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTreeCoreAnnotations_HeadTagLabelAnnotation, init)
}

EduStanfordNlpTreesTreeCoreAnnotations_HeadTagLabelAnnotation *create_EduStanfordNlpTreesTreeCoreAnnotations_HeadTagLabelAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTreeCoreAnnotations_HeadTagLabelAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTreeCoreAnnotations_HeadTagLabelAnnotation)

@implementation EduStanfordNlpTreesTreeCoreAnnotations_KBestTreesAnnotation

- (IOSClass *)getType {
  return EduStanfordNlpUtilErasureUtils_uncheckedCastWithId_(JavaUtilList_class_());
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesTreeCoreAnnotations_KBestTreesAnnotation_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getType);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()Ljava/lang/Class<Ljava/util/List<Ledu/stanford/nlp/trees/Tree;>;>;", "LEduStanfordNlpTreesTreeCoreAnnotations;", "Ljava/lang/Object;Ledu/stanford/nlp/ling/CoreAnnotation<Ljava/util/List<Ledu/stanford/nlp/trees/Tree;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTreeCoreAnnotations_KBestTreesAnnotation = { "KBestTreesAnnotation", "edu.stanford.nlp.trees", ptrTable, methods, NULL, 7, 0x9, 2, 0, 1, -1, -1, 2, -1 };
  return &_EduStanfordNlpTreesTreeCoreAnnotations_KBestTreesAnnotation;
}

@end

void EduStanfordNlpTreesTreeCoreAnnotations_KBestTreesAnnotation_init(EduStanfordNlpTreesTreeCoreAnnotations_KBestTreesAnnotation *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesTreeCoreAnnotations_KBestTreesAnnotation *new_EduStanfordNlpTreesTreeCoreAnnotations_KBestTreesAnnotation_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTreeCoreAnnotations_KBestTreesAnnotation, init)
}

EduStanfordNlpTreesTreeCoreAnnotations_KBestTreesAnnotation *create_EduStanfordNlpTreesTreeCoreAnnotations_KBestTreesAnnotation_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTreeCoreAnnotations_KBestTreesAnnotation, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTreeCoreAnnotations_KBestTreesAnnotation)
