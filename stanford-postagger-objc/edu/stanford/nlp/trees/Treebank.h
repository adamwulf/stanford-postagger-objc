//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/Treebank.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpTreesTreebank")
#ifdef RESTRICT_EduStanfordNlpTreesTreebank
#define INCLUDE_ALL_EduStanfordNlpTreesTreebank 0
#else
#define INCLUDE_ALL_EduStanfordNlpTreesTreebank 1
#endif
#undef RESTRICT_EduStanfordNlpTreesTreebank

#if !defined (EduStanfordNlpTreesTreebank_) && (INCLUDE_ALL_EduStanfordNlpTreesTreebank || defined(INCLUDE_EduStanfordNlpTreesTreebank))
#define EduStanfordNlpTreesTreebank_

#define RESTRICT_JavaUtilAbstractCollection 1
#define INCLUDE_JavaUtilAbstractCollection 1
#include "java/util/AbstractCollection.h"

@class JavaIoFile;
@class JavaIoWriter;
@protocol EduStanfordNlpTreesTreeReaderFactory;
@protocol EduStanfordNlpTreesTreeTransformer;
@protocol EduStanfordNlpTreesTreeVisitor;
@protocol EduStanfordNlpTreesTreebankLanguagePack;
@protocol JavaIoFileFilter;

@interface EduStanfordNlpTreesTreebank : JavaUtilAbstractCollection

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)initialCapacity;

- (instancetype)initWithInt:(jint)initialCapacity
withEduStanfordNlpTreesTreeReaderFactory:(id<EduStanfordNlpTreesTreeReaderFactory>)trf;

- (instancetype)initWithEduStanfordNlpTreesTreeReaderFactory:(id<EduStanfordNlpTreesTreeReaderFactory>)trf;

- (instancetype)initWithEduStanfordNlpTreesTreeReaderFactory:(id<EduStanfordNlpTreesTreeReaderFactory>)trf
                                                withNSString:(NSString *)encoding;

- (void)applyWithEduStanfordNlpTreesTreeVisitor:(id<EduStanfordNlpTreesTreeVisitor>)tp;

- (void)clear;

- (void)decimateWithJavaIoWriter:(JavaIoWriter *)trainW
                withJavaIoWriter:(JavaIoWriter *)devW
                withJavaIoWriter:(JavaIoWriter *)testW;

- (NSString *)encoding;

- (void)loadPathWithJavaIoFile:(JavaIoFile *)path;

- (void)loadPathWithJavaIoFile:(JavaIoFile *)path
          withJavaIoFileFilter:(id<JavaIoFileFilter>)filt;

- (void)loadPathWithJavaIoFile:(JavaIoFile *)path
                  withNSString:(NSString *)suffix
                   withBoolean:(jboolean)recursively;

- (void)loadPathWithNSString:(NSString *)pathName;

- (void)loadPathWithNSString:(NSString *)pathName
        withJavaIoFileFilter:(id<JavaIoFileFilter>)filt;

- (void)loadPathWithNSString:(NSString *)pathName
                withNSString:(NSString *)suffix
                 withBoolean:(jboolean)recursively;

- (jboolean)removeWithId:(id)o;

- (jint)size;

- (NSString *)textualSummary;

- (NSString *)textualSummaryWithEduStanfordNlpTreesTreebankLanguagePack:(id<EduStanfordNlpTreesTreebankLanguagePack>)tlp;

- (NSString *)description;

- (EduStanfordNlpTreesTreebank *)transformWithEduStanfordNlpTreesTreeTransformer:(id<EduStanfordNlpTreesTreeTransformer>)treeTrans;

#pragma mark Protected

- (id<EduStanfordNlpTreesTreeReaderFactory>)treeReaderFactory;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesTreebank)

inline NSString *EduStanfordNlpTreesTreebank_get_DEFAULT_TREE_FILE_SUFFIX();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpTreesTreebank_DEFAULT_TREE_FILE_SUFFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesTreebank, DEFAULT_TREE_FILE_SUFFIX, NSString *)

FOUNDATION_EXPORT void EduStanfordNlpTreesTreebank_init(EduStanfordNlpTreesTreebank *self);

FOUNDATION_EXPORT void EduStanfordNlpTreesTreebank_initWithEduStanfordNlpTreesTreeReaderFactory_(EduStanfordNlpTreesTreebank *self, id<EduStanfordNlpTreesTreeReaderFactory> trf);

FOUNDATION_EXPORT void EduStanfordNlpTreesTreebank_initWithEduStanfordNlpTreesTreeReaderFactory_withNSString_(EduStanfordNlpTreesTreebank *self, id<EduStanfordNlpTreesTreeReaderFactory> trf, NSString *encoding);

FOUNDATION_EXPORT void EduStanfordNlpTreesTreebank_initWithInt_(EduStanfordNlpTreesTreebank *self, jint initialCapacity);

FOUNDATION_EXPORT void EduStanfordNlpTreesTreebank_initWithInt_withEduStanfordNlpTreesTreeReaderFactory_(EduStanfordNlpTreesTreebank *self, jint initialCapacity, id<EduStanfordNlpTreesTreeReaderFactory> trf);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesTreebank)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpTreesTreebank")
