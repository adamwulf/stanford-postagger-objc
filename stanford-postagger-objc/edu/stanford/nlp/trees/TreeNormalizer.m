//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/TreeNormalizer.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeFactory.h"
#include "edu/stanford/nlp/trees/TreeNormalizer.h"

inline jlong EduStanfordNlpTreesTreeNormalizer_get_serialVersionUID();
#define EduStanfordNlpTreesTreeNormalizer_serialVersionUID 1540681875853883387LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTreesTreeNormalizer, serialVersionUID, jlong)

@implementation EduStanfordNlpTreesTreeNormalizer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesTreeNormalizer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)normalizeTerminalWithNSString:(NSString *)leaf {
  return leaf;
}

- (NSString *)normalizeNonterminalWithNSString:(NSString *)category {
  return category;
}

- (EduStanfordNlpTreesTree *)normalizeWholeTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                                        withEduStanfordNlpTreesTreeFactory:(id<EduStanfordNlpTreesTreeFactory>)tf {
  return tree;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(normalizeTerminalWithNSString:);
  methods[2].selector = @selector(normalizeNonterminalWithNSString:);
  methods[3].selector = @selector(normalizeWholeTreeWithEduStanfordNlpTreesTree:withEduStanfordNlpTreesTreeFactory:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTreesTreeNormalizer_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "normalizeTerminal", "LNSString;", "normalizeNonterminal", "normalizeWholeTree", "LEduStanfordNlpTreesTree;LEduStanfordNlpTreesTreeFactory;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTreeNormalizer = { "TreeNormalizer", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesTreeNormalizer;
}

@end

void EduStanfordNlpTreesTreeNormalizer_init(EduStanfordNlpTreesTreeNormalizer *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesTreeNormalizer *new_EduStanfordNlpTreesTreeNormalizer_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTreeNormalizer, init)
}

EduStanfordNlpTreesTreeNormalizer *create_EduStanfordNlpTreesTreeNormalizer_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTreeNormalizer, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTreeNormalizer)
