//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/graph/DirectedMultiGraph.h"
#include "edu/stanford/nlp/ling/IndexedWord.h"
#include "edu/stanford/nlp/process/Morphology.h"
#include "edu/stanford/nlp/semgraph/SemanticGraph.h"
#include "edu/stanford/nlp/semgraph/SemanticGraphEdge.h"
#include "edu/stanford/nlp/semgraph/semgrex/SemgrexMatcher.h"
#include "edu/stanford/nlp/semgraph/semgrex/SemgrexPattern.h"
#include "edu/stanford/nlp/trees/CoordinationTransformer.h"
#include "edu/stanford/nlp/trees/EnglishPatterns.h"
#include "edu/stanford/nlp/trees/GrammaticalRelation.h"
#include "edu/stanford/nlp/trees/GrammaticalStructure.h"
#include "edu/stanford/nlp/trees/HeadFinder.h"
#include "edu/stanford/nlp/trees/PennTreebankLanguagePack.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeGraphNode.h"
#include "edu/stanford/nlp/trees/TypedDependency.h"
#include "edu/stanford/nlp/trees/UniversalEnglishGrammaticalRelations.h"
#include "edu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure.h"
#include "edu/stanford/nlp/trees/UniversalSemanticHeadFinder.h"
#include "edu/stanford/nlp/util/Filters.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "java/io/PrintStream.h"
#include "java/io/Serializable.h"
#include "java/lang/Double.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/TreeSet.h"
#include "java/util/concurrent/locks/Lock.h"
#include "java/util/function/Predicate.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

@interface EduStanfordNlpTreesUniversalEnglishGrammaticalStructure ()

+ (void)printListSortedWithNSString:(NSString *)title
             withJavaUtilCollection:(id<JavaUtilCollection>)list;

+ (void)addCaseMarkerInformationWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

+ (void)addPassiveAgentToRelnWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                   withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)gov
                                   withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)mod
                                   withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)caseMarker;

+ (void)addCaseMarkersToRelnWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                  withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)gov
                                  withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)mod
                                                   withJavaUtilList:(id<JavaUtilList>)caseMarkers;

+ (void)expandPrepConjunctionsWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

+ (void)expandPrepConjunctionWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                   withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)gov
                                                    withJavaUtilList:(id<JavaUtilList>)conjDeps
                                   withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)ccDep;

+ (void)expandPPConjunctionsWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

+ (void)expandPPConjunctionWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                 withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)gov
                                                  withJavaUtilList:(id<JavaUtilList>)conjDeps
                                 withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)ccDep;

+ (EduStanfordNlpTreesGrammaticalRelation *)getCaseMarkedRelationWithEduStanfordNlpTreesGrammaticalRelation:(EduStanfordNlpTreesGrammaticalRelation *)reln
                                                                                               withNSString:(NSString *)relationName;

+ (void)addConjInformationWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

+ (void)addConjToRelnWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                           withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)gov
                                            withJavaUtilList:(id<JavaUtilList>)conjDeps
                           withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)ccDep;

+ (void)correctWHAttachmentWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

+ (void)convertRelWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

+ (EduStanfordNlpTreesGrammaticalRelation *)conjValueWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)cc
                                               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

+ (void)treatCCWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

+ (jboolean)isDefinitelyActiveWithNSString:(NSString *)tag;

+ (void)collapseReferentWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

+ (void)addRefWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

+ (void)addExtraNSubjWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

+ (void)correctSubjPassWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

+ (void)processMultiwordPrepsWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

+ (void)processSimple2WPWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                            withJavaUtilHashMap:(JavaUtilHashMap *)bigrams;

+ (void)processComplex2WPWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                             withJavaUtilHashMap:(JavaUtilHashMap *)bigrams;

+ (void)process3WPWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                      withJavaUtilHashMap:(JavaUtilHashMap *)trigrams;

+ (void)createMultiWordExpressionWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                       withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)gov
                              withEduStanfordNlpTreesGrammaticalRelation:(EduStanfordNlpTreesGrammaticalRelation *)reln
                                  withEduStanfordNlpLingIndexedWordArray:(IOSObjectArray *)words;

+ (void)removeExactDuplicatesWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg;

@end

inline jlong EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_get_serialVersionUID();
#define EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, serialVersionUID, jlong)

inline jboolean EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_get_DEBUG();
static jboolean EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, DEBUG, jboolean)

inline id<JavaUtilFunctionPredicate> EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_get_extraTreeDepFilter_();
static id<JavaUtilFunctionPredicate> EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_extraTreeDepFilter_;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, extraTreeDepFilter_, id<JavaUtilFunctionPredicate>)

inline EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_get_PASSIVE_AGENT_PATTERN();
inline EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_set_PASSIVE_AGENT_PATTERN(EduStanfordNlpSemgraphSemgrexSemgrexPattern *value);
static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PASSIVE_AGENT_PATTERN;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, PASSIVE_AGENT_PATTERN, EduStanfordNlpSemgraphSemgrexSemgrexPattern *)

inline EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_get_PREP_MW3_PATTERN();
inline EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_set_PREP_MW3_PATTERN(EduStanfordNlpSemgraphSemgrexSemgrexPattern *value);
static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PREP_MW3_PATTERN;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, PREP_MW3_PATTERN, EduStanfordNlpSemgraphSemgrexSemgrexPattern *)

inline EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_get_PREP_MW2_PATTERN();
inline EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_set_PREP_MW2_PATTERN(EduStanfordNlpSemgraphSemgrexSemgrexPattern *value);
static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PREP_MW2_PATTERN;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, PREP_MW2_PATTERN, EduStanfordNlpSemgraphSemgrexSemgrexPattern *)

inline EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_get_PREP_PATTERN();
inline EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_set_PREP_PATTERN(EduStanfordNlpSemgraphSemgrexSemgrexPattern *value);
static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PREP_PATTERN;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, PREP_PATTERN, EduStanfordNlpSemgraphSemgrexSemgrexPattern *)

inline EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_get_PREP_CONJP_PATTERN();
static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PREP_CONJP_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, PREP_CONJP_PATTERN, EduStanfordNlpSemgraphSemgrexSemgrexPattern *)

inline EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_get_PP_CONJP_PATTERN();
inline EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_set_PP_CONJP_PATTERN(EduStanfordNlpSemgraphSemgrexSemgrexPattern *value);
static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PP_CONJP_PATTERN;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, PP_CONJP_PATTERN, EduStanfordNlpSemgraphSemgrexSemgrexPattern *)

inline EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_get_CONJUNCTION_PATTERN();
static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_CONJUNCTION_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, CONJUNCTION_PATTERN, EduStanfordNlpSemgraphSemgrexSemgrexPattern *)

inline EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_get_XCOMP_PATTERN();
static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_XCOMP_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, XCOMP_PATTERN, EduStanfordNlpSemgraphSemgrexSemgrexPattern *)

inline EduStanfordNlpProcessMorphology *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_get_morphology();
static EduStanfordNlpProcessMorphology *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_morphology;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, morphology, EduStanfordNlpProcessMorphology *)

inline EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_get_CORRECT_SUBJPASS_PATTERN();
inline EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_set_CORRECT_SUBJPASS_PATTERN(EduStanfordNlpSemgraphSemgrexSemgrexPattern *value);
static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_CORRECT_SUBJPASS_PATTERN;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, CORRECT_SUBJPASS_PATTERN, EduStanfordNlpSemgraphSemgrexSemgrexPattern *)

inline IOSObjectArray *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_get_TWO_WORD_PREPS_REGULAR();
static IOSObjectArray *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_TWO_WORD_PREPS_REGULAR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, TWO_WORD_PREPS_REGULAR, IOSObjectArray *)

inline IOSObjectArray *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_get_TWO_WORD_PREPS_COMPLEX();
static IOSObjectArray *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_TWO_WORD_PREPS_COMPLEX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, TWO_WORD_PREPS_COMPLEX, IOSObjectArray *)

inline IOSObjectArray *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_get_THREE_WORD_PREPS();
static IOSObjectArray *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_THREE_WORD_PREPS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, THREE_WORD_PREPS, IOSObjectArray *)

inline EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_get_TWO_WORD_PREPS_REGULAR_PATTERN();
static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_TWO_WORD_PREPS_REGULAR_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, TWO_WORD_PREPS_REGULAR_PATTERN, EduStanfordNlpSemgraphSemgrexSemgrexPattern *)

inline EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_get_TWO_WORD_PREPS_COMPLEX_PATTERN();
static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_TWO_WORD_PREPS_COMPLEX_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, TWO_WORD_PREPS_COMPLEX_PATTERN, EduStanfordNlpSemgraphSemgrexSemgrexPattern *)

inline EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_get_THREE_WORD_PREPS_PATTERN();
static EduStanfordNlpSemgraphSemgrexSemgrexPattern *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_THREE_WORD_PREPS_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, THREE_WORD_PREPS_PATTERN, EduStanfordNlpSemgraphSemgrexSemgrexPattern *)

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(NSString *title, id<JavaUtilCollection> list);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addCaseMarkerInformationWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addPassiveAgentToRelnWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_(EduStanfordNlpSemgraphSemanticGraph *sg, EduStanfordNlpLingIndexedWord *gov, EduStanfordNlpLingIndexedWord *mod, EduStanfordNlpLingIndexedWord *caseMarker);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addCaseMarkersToRelnWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withJavaUtilList_(EduStanfordNlpSemgraphSemanticGraph *sg, EduStanfordNlpLingIndexedWord *gov, EduStanfordNlpLingIndexedWord *mod, id<JavaUtilList> caseMarkers);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_expandPrepConjunctionsWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_expandPrepConjunctionWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withJavaUtilList_withEduStanfordNlpLingIndexedWord_(EduStanfordNlpSemgraphSemanticGraph *sg, EduStanfordNlpLingIndexedWord *gov, id<JavaUtilList> conjDeps, EduStanfordNlpLingIndexedWord *ccDep);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_expandPPConjunctionsWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_expandPPConjunctionWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withJavaUtilList_withEduStanfordNlpLingIndexedWord_(EduStanfordNlpSemgraphSemanticGraph *sg, EduStanfordNlpLingIndexedWord *gov, id<JavaUtilList> conjDeps, EduStanfordNlpLingIndexedWord *ccDep);

__attribute__((unused)) static EduStanfordNlpTreesGrammaticalRelation *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_getCaseMarkedRelationWithEduStanfordNlpTreesGrammaticalRelation_withNSString_(EduStanfordNlpTreesGrammaticalRelation *reln, NSString *relationName);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addConjInformationWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addConjToRelnWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withJavaUtilList_withEduStanfordNlpLingIndexedWord_(EduStanfordNlpSemgraphSemanticGraph *sg, EduStanfordNlpLingIndexedWord *gov, id<JavaUtilList> conjDeps, EduStanfordNlpLingIndexedWord *ccDep);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_correctWHAttachmentWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_convertRelWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg);

__attribute__((unused)) static EduStanfordNlpTreesGrammaticalRelation *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_conjValueWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpLingIndexedWord *cc, EduStanfordNlpSemgraphSemanticGraph *sg);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_treatCCWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg);

__attribute__((unused)) static jboolean EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_isDefinitelyActiveWithNSString_(NSString *tag);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_collapseReferentWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addRefWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addExtraNSubjWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_correctSubjPassWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_processMultiwordPrepsWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_processSimple2WPWithEduStanfordNlpSemgraphSemanticGraph_withJavaUtilHashMap_(EduStanfordNlpSemgraphSemanticGraph *sg, JavaUtilHashMap *bigrams);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_processComplex2WPWithEduStanfordNlpSemgraphSemanticGraph_withJavaUtilHashMap_(EduStanfordNlpSemgraphSemanticGraph *sg, JavaUtilHashMap *bigrams);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_process3WPWithEduStanfordNlpSemgraphSemanticGraph_withJavaUtilHashMap_(EduStanfordNlpSemgraphSemanticGraph *sg, JavaUtilHashMap *trigrams);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_createMultiWordExpressionWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpTreesGrammaticalRelation_withEduStanfordNlpLingIndexedWordArray_(EduStanfordNlpSemgraphSemanticGraph *sg, EduStanfordNlpLingIndexedWord *gov, EduStanfordNlpTreesGrammaticalRelation *reln, IOSObjectArray *words);

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_removeExactDuplicatesWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg);

@interface EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter : NSObject < JavaUtilFunctionPredicate, JavaIoSerializable >

- (jboolean)testWithId:(EduStanfordNlpTreesTypedDependency *)d;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter)

inline jlong EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter_get_serialVersionUID();
#define EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter_init(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter *self);

__attribute__((unused)) static EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter *new_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter *create_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure)

@implementation EduStanfordNlpTreesUniversalEnglishGrammaticalStructure

- (instancetype)initWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_(self, t);
  return self;
}

- (instancetype)initWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                  withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)tagFilter {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_(self, t, tagFilter);
  return self;
}

- (instancetype)initWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                  withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)tagFilter
              withEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)hf {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_withEduStanfordNlpTreesHeadFinder_(self, t, tagFilter, hf);
  return self;
}

- (instancetype)initWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                  withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)tagFilter
              withEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)hf
                                    withBoolean:(jboolean)threadSafe {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_withEduStanfordNlpTreesHeadFinder_withBoolean_(self, t, tagFilter, hf, threadSafe);
  return self;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)projectiveDependencies
withEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)root {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithJavaUtilList_withEduStanfordNlpTreesTreeGraphNode_(self, projectiveDependencies, root);
  return self;
}

- (id<JavaUtilFunctionPredicate>)extraTreeDepFilter {
  return EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_extraTreeDepFilter_;
}

- (void)getTreeDepsWithJavaUtilList:(id<JavaUtilList>)deps
withEduStanfordNlpGraphDirectedMultiGraph:(EduStanfordNlpGraphDirectedMultiGraph *)completeGraph
      withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)puncTypedDepFilter
      withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)extraTreeDepFilter {
}

- (void)correctDependenciesWithJavaUtilList:(id<JavaUtilList>)list {
  EduStanfordNlpSemgraphSemanticGraph *sg = new_EduStanfordNlpSemgraphSemanticGraph_initWithJavaUtilCollection_(list);
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_correctDependenciesWithEduStanfordNlpSemgraphSemanticGraph_(sg);
  [((id<JavaUtilList>) nil_chk(list)) clear];
  [list addAllWithJavaUtilCollection:[sg typedDependencies]];
  JavaUtilCollections_sortWithJavaUtilList_(list);
}

+ (void)correctDependenciesWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_correctDependenciesWithEduStanfordNlpSemgraphSemanticGraph_(sg);
}

+ (void)printListSortedWithNSString:(NSString *)title
             withJavaUtilCollection:(id<JavaUtilCollection>)list {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(title, list);
}

- (void)postProcessDependenciesWithJavaUtilList:(id<JavaUtilList>)list {
  EduStanfordNlpSemgraphSemanticGraph *sg = new_EduStanfordNlpSemgraphSemanticGraph_initWithJavaUtilCollection_(list);
  if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(@"At postProcessDependencies:", [sg typedDependencies]);
  }
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_correctWHAttachmentWithEduStanfordNlpSemgraphSemanticGraph_(sg);
  if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(@"After corrrecting WH attachment:", [sg typedDependencies]);
  }
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_convertRelWithEduStanfordNlpSemgraphSemanticGraph_(sg);
  if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(@"After converting rel:", [sg typedDependencies]);
  }
  [((id<JavaUtilList>) nil_chk(list)) clear];
  [list addAllWithJavaUtilCollection:[sg typedDependencies]];
}

- (void)getExtrasWithJavaUtilList:(id<JavaUtilList>)list {
  EduStanfordNlpSemgraphSemanticGraph *sg = new_EduStanfordNlpSemgraphSemanticGraph_initWithJavaUtilCollection_(list);
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addRefWithEduStanfordNlpSemgraphSemanticGraph_(sg);
  if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(@"After adding ref:", [sg typedDependencies]);
  }
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addExtraNSubjWithEduStanfordNlpSemgraphSemanticGraph_(sg);
  if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(@"After adding extra nsubj:", [sg typedDependencies]);
  }
  [((id<JavaUtilList>) nil_chk(list)) clear];
  [list addAllWithJavaUtilCollection:[sg typedDependencies]];
}

+ (void)addCaseMarkerInformationWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addCaseMarkerInformationWithEduStanfordNlpSemgraphSemanticGraph_(sg);
}

+ (void)addPassiveAgentToRelnWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                   withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)gov
                                   withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)mod
                                   withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)caseMarker {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addPassiveAgentToRelnWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_(sg, gov, mod, caseMarker);
}

+ (void)addCaseMarkersToRelnWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                  withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)gov
                                  withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)mod
                                                   withJavaUtilList:(id<JavaUtilList>)caseMarkers {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addCaseMarkersToRelnWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withJavaUtilList_(sg, gov, mod, caseMarkers);
}

+ (void)expandPrepConjunctionsWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_expandPrepConjunctionsWithEduStanfordNlpSemgraphSemanticGraph_(sg);
}

+ (void)expandPrepConjunctionWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                   withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)gov
                                                    withJavaUtilList:(id<JavaUtilList>)conjDeps
                                   withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)ccDep {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_expandPrepConjunctionWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withJavaUtilList_withEduStanfordNlpLingIndexedWord_(sg, gov, conjDeps, ccDep);
}

+ (void)expandPPConjunctionsWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_expandPPConjunctionsWithEduStanfordNlpSemgraphSemanticGraph_(sg);
}

+ (void)expandPPConjunctionWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                 withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)gov
                                                  withJavaUtilList:(id<JavaUtilList>)conjDeps
                                 withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)ccDep {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_expandPPConjunctionWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withJavaUtilList_withEduStanfordNlpLingIndexedWord_(sg, gov, conjDeps, ccDep);
}

+ (EduStanfordNlpTreesGrammaticalRelation *)getCaseMarkedRelationWithEduStanfordNlpTreesGrammaticalRelation:(EduStanfordNlpTreesGrammaticalRelation *)reln
                                                                                               withNSString:(NSString *)relationName {
  return EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_getCaseMarkedRelationWithEduStanfordNlpTreesGrammaticalRelation_withNSString_(reln, relationName);
}

+ (void)addConjInformationWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addConjInformationWithEduStanfordNlpSemgraphSemanticGraph_(sg);
}

+ (void)addConjToRelnWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                           withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)gov
                                            withJavaUtilList:(id<JavaUtilList>)conjDeps
                           withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)ccDep {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addConjToRelnWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withJavaUtilList_withEduStanfordNlpLingIndexedWord_(sg, gov, conjDeps, ccDep);
}

+ (void)correctWHAttachmentWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_correctWHAttachmentWithEduStanfordNlpSemgraphSemanticGraph_(sg);
}

+ (void)convertRelWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_convertRelWithEduStanfordNlpSemgraphSemanticGraph_(sg);
}

- (void)collapseDependenciesWithJavaUtilList:(id<JavaUtilList>)list
                                 withBoolean:(jboolean)CCprocess
withEduStanfordNlpTreesGrammaticalStructure_Extras:(EduStanfordNlpTreesGrammaticalStructure_Extras *)includeExtras {
  EduStanfordNlpSemgraphSemanticGraph *sg = new_EduStanfordNlpSemgraphSemanticGraph_initWithJavaUtilCollection_(list);
  if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(JreStrcat("$Z$@", @"collapseDependencies: CCproc: ", CCprocess, @" includeExtras: ", includeExtras), [sg typedDependencies]);
  }
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_correctDependenciesWithEduStanfordNlpSemgraphSemanticGraph_(sg);
  if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(@"After correctDependencies:", [sg typedDependencies]);
  }
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_processMultiwordPrepsWithEduStanfordNlpSemgraphSemanticGraph_(sg);
  if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(@"After processMultiwordPreps:", [sg typedDependencies]);
  }
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_expandPPConjunctionsWithEduStanfordNlpSemgraphSemanticGraph_(sg);
  if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(@"After expandPPConjunctions:", [sg typedDependencies]);
  }
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_expandPrepConjunctionsWithEduStanfordNlpSemgraphSemanticGraph_(sg);
  if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(@"After expandPrepConjunctions:", [sg typedDependencies]);
  }
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addCaseMarkerInformationWithEduStanfordNlpSemgraphSemanticGraph_(sg);
  if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(@"After addCaseMarkerInformation:", [sg typedDependencies]);
  }
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addConjInformationWithEduStanfordNlpSemgraphSemanticGraph_(sg);
  if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(@"After addConjInformation:", [sg typedDependencies]);
  }
  if (((EduStanfordNlpTreesGrammaticalStructure_Extras *) nil_chk(includeExtras))->doRef_) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addRefWithEduStanfordNlpSemgraphSemanticGraph_(sg);
    if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
      EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(@"After adding ref:", [sg typedDependencies]);
    }
    if (includeExtras->collapseRef_) {
      EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_collapseReferentWithEduStanfordNlpSemgraphSemanticGraph_(sg);
      if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
        EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(@"After collapse referent:", [sg typedDependencies]);
      }
    }
  }
  if (CCprocess) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_treatCCWithEduStanfordNlpSemgraphSemanticGraph_(sg);
    if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
      EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(@"After treatCC:", [sg typedDependencies]);
    }
  }
  if (includeExtras->doSubj_) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addExtraNSubjWithEduStanfordNlpSemgraphSemanticGraph_(sg);
    if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
      EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(@"After adding extra nsubj:", [sg typedDependencies]);
    }
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_correctSubjPassWithEduStanfordNlpSemgraphSemanticGraph_(sg);
    if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
      EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(@"After correctSubjPass:", [sg typedDependencies]);
    }
  }
  [((id<JavaUtilList>) nil_chk(list)) clear];
  [list addAllWithJavaUtilCollection:[sg typedDependencies]];
  JavaUtilCollections_sortWithJavaUtilList_(list);
  if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(@"After all collapse:", list);
  }
}

- (void)collapseDependenciesTreeWithJavaUtilList:(id<JavaUtilList>)list {
  [self collapseDependenciesWithJavaUtilList:list withBoolean:false withEduStanfordNlpTreesGrammaticalStructure_Extras:JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE)];
}

+ (EduStanfordNlpTreesGrammaticalRelation *)conjValueWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)cc
                                               withEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  return EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_conjValueWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(cc, sg);
}

+ (void)treatCCWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_treatCCWithEduStanfordNlpSemgraphSemanticGraph_(sg);
}

+ (jboolean)isDefinitelyActiveWithNSString:(NSString *)tag {
  return EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_isDefinitelyActiveWithNSString_(tag);
}

+ (void)collapseReferentWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_collapseReferentWithEduStanfordNlpSemgraphSemanticGraph_(sg);
}

+ (void)addRefWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addRefWithEduStanfordNlpSemgraphSemanticGraph_(sg);
}

+ (void)addExtraNSubjWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addExtraNSubjWithEduStanfordNlpSemgraphSemanticGraph_(sg);
}

+ (void)correctSubjPassWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_correctSubjPassWithEduStanfordNlpSemgraphSemanticGraph_(sg);
}

+ (void)processMultiwordPrepsWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_processMultiwordPrepsWithEduStanfordNlpSemgraphSemanticGraph_(sg);
}

+ (void)processSimple2WPWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                            withJavaUtilHashMap:(JavaUtilHashMap *)bigrams {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_processSimple2WPWithEduStanfordNlpSemgraphSemanticGraph_withJavaUtilHashMap_(sg, bigrams);
}

+ (void)processComplex2WPWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                             withJavaUtilHashMap:(JavaUtilHashMap *)bigrams {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_processComplex2WPWithEduStanfordNlpSemgraphSemanticGraph_withJavaUtilHashMap_(sg, bigrams);
}

+ (void)process3WPWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                      withJavaUtilHashMap:(JavaUtilHashMap *)trigrams {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_process3WPWithEduStanfordNlpSemgraphSemanticGraph_withJavaUtilHashMap_(sg, trigrams);
}

+ (void)createMultiWordExpressionWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg
                                       withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)gov
                              withEduStanfordNlpTreesGrammaticalRelation:(EduStanfordNlpTreesGrammaticalRelation *)reln
                                  withEduStanfordNlpLingIndexedWordArray:(IOSObjectArray *)words {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_createMultiWordExpressionWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpTreesGrammaticalRelation_withEduStanfordNlpLingIndexedWordArray_(sg, gov, reln, words);
}

+ (void)removeExactDuplicatesWithEduStanfordNlpSemgraphSemanticGraph:(EduStanfordNlpSemgraphSemanticGraph *)sg {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_removeExactDuplicatesWithEduStanfordNlpSemgraphSemanticGraph_(sg);
}

+ (id<JavaUtilList>)readCoNLLXGrammaticalStructureCollectionWithNSString:(NSString *)fileName {
  return EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_readCoNLLXGrammaticalStructureCollectionWithNSString_(fileName);
}

+ (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure *)buildCoNLLXGrammaticalStructureWithJavaUtilList:(id<JavaUtilList>)tokenFields {
  return EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_buildCoNLLXGrammaticalStructureWithJavaUtilList_(tokenFields);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, 6, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, 8, -1, -1 },
    { NULL, "LJavaUtilFunctionPredicate;", 0x4, -1, -1, -1, 9, -1, -1 },
    { NULL, "V", 0x4, 10, 11, -1, 12, -1, -1 },
    { NULL, "V", 0x4, 13, 14, -1, 15, -1, -1 },
    { NULL, "V", 0xc, 13, 16, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 17, 18, -1, 19, -1, -1 },
    { NULL, "V", 0x4, 20, 14, -1, 15, -1, -1 },
    { NULL, "V", 0x4, 21, 14, -1, 15, -1, -1 },
    { NULL, "V", 0xa, 22, 16, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 23, 24, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 25, 26, -1, 27, -1, -1 },
    { NULL, "V", 0xa, 28, 16, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 29, 30, -1, 31, -1, -1 },
    { NULL, "V", 0xa, 32, 16, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 33, 30, -1, 31, -1, -1 },
    { NULL, "LEduStanfordNlpTreesGrammaticalRelation;", 0xa, 34, 35, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 36, 16, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 37, 30, -1, 31, -1, -1 },
    { NULL, "V", 0xa, 38, 16, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 39, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 40, 41, -1, 42, -1, -1 },
    { NULL, "V", 0x4, 43, 14, -1, 15, -1, -1 },
    { NULL, "LEduStanfordNlpTreesGrammaticalRelation;", 0xa, 44, 45, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 46, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 47, 48, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 49, 16, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 50, 16, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 51, 16, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 52, 16, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 53, 16, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 54, 55, -1, 56, -1, -1 },
    { NULL, "V", 0xa, 57, 55, -1, 56, -1, -1 },
    { NULL, "V", 0xa, 58, 55, -1, 56, -1, -1 },
    { NULL, "V", 0x8a, 59, 60, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 61, 16, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 62, 48, 63, 64, -1, -1 },
    { NULL, "LEduStanfordNlpTreesUniversalEnglishGrammaticalStructure;", 0x9, 65, 14, -1, 66, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesTree:);
  methods[1].selector = @selector(initWithEduStanfordNlpTreesTree:withJavaUtilFunctionPredicate:);
  methods[2].selector = @selector(initWithEduStanfordNlpTreesTree:withJavaUtilFunctionPredicate:withEduStanfordNlpTreesHeadFinder:);
  methods[3].selector = @selector(initWithEduStanfordNlpTreesTree:withJavaUtilFunctionPredicate:withEduStanfordNlpTreesHeadFinder:withBoolean:);
  methods[4].selector = @selector(initWithJavaUtilList:withEduStanfordNlpTreesTreeGraphNode:);
  methods[5].selector = @selector(extraTreeDepFilter);
  methods[6].selector = @selector(getTreeDepsWithJavaUtilList:withEduStanfordNlpGraphDirectedMultiGraph:withJavaUtilFunctionPredicate:withJavaUtilFunctionPredicate:);
  methods[7].selector = @selector(correctDependenciesWithJavaUtilList:);
  methods[8].selector = @selector(correctDependenciesWithEduStanfordNlpSemgraphSemanticGraph:);
  methods[9].selector = @selector(printListSortedWithNSString:withJavaUtilCollection:);
  methods[10].selector = @selector(postProcessDependenciesWithJavaUtilList:);
  methods[11].selector = @selector(getExtrasWithJavaUtilList:);
  methods[12].selector = @selector(addCaseMarkerInformationWithEduStanfordNlpSemgraphSemanticGraph:);
  methods[13].selector = @selector(addPassiveAgentToRelnWithEduStanfordNlpSemgraphSemanticGraph:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:);
  methods[14].selector = @selector(addCaseMarkersToRelnWithEduStanfordNlpSemgraphSemanticGraph:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:withJavaUtilList:);
  methods[15].selector = @selector(expandPrepConjunctionsWithEduStanfordNlpSemgraphSemanticGraph:);
  methods[16].selector = @selector(expandPrepConjunctionWithEduStanfordNlpSemgraphSemanticGraph:withEduStanfordNlpLingIndexedWord:withJavaUtilList:withEduStanfordNlpLingIndexedWord:);
  methods[17].selector = @selector(expandPPConjunctionsWithEduStanfordNlpSemgraphSemanticGraph:);
  methods[18].selector = @selector(expandPPConjunctionWithEduStanfordNlpSemgraphSemanticGraph:withEduStanfordNlpLingIndexedWord:withJavaUtilList:withEduStanfordNlpLingIndexedWord:);
  methods[19].selector = @selector(getCaseMarkedRelationWithEduStanfordNlpTreesGrammaticalRelation:withNSString:);
  methods[20].selector = @selector(addConjInformationWithEduStanfordNlpSemgraphSemanticGraph:);
  methods[21].selector = @selector(addConjToRelnWithEduStanfordNlpSemgraphSemanticGraph:withEduStanfordNlpLingIndexedWord:withJavaUtilList:withEduStanfordNlpLingIndexedWord:);
  methods[22].selector = @selector(correctWHAttachmentWithEduStanfordNlpSemgraphSemanticGraph:);
  methods[23].selector = @selector(convertRelWithEduStanfordNlpSemgraphSemanticGraph:);
  methods[24].selector = @selector(collapseDependenciesWithJavaUtilList:withBoolean:withEduStanfordNlpTreesGrammaticalStructure_Extras:);
  methods[25].selector = @selector(collapseDependenciesTreeWithJavaUtilList:);
  methods[26].selector = @selector(conjValueWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpSemgraphSemanticGraph:);
  methods[27].selector = @selector(treatCCWithEduStanfordNlpSemgraphSemanticGraph:);
  methods[28].selector = @selector(isDefinitelyActiveWithNSString:);
  methods[29].selector = @selector(collapseReferentWithEduStanfordNlpSemgraphSemanticGraph:);
  methods[30].selector = @selector(addRefWithEduStanfordNlpSemgraphSemanticGraph:);
  methods[31].selector = @selector(addExtraNSubjWithEduStanfordNlpSemgraphSemanticGraph:);
  methods[32].selector = @selector(correctSubjPassWithEduStanfordNlpSemgraphSemanticGraph:);
  methods[33].selector = @selector(processMultiwordPrepsWithEduStanfordNlpSemgraphSemanticGraph:);
  methods[34].selector = @selector(processSimple2WPWithEduStanfordNlpSemgraphSemanticGraph:withJavaUtilHashMap:);
  methods[35].selector = @selector(processComplex2WPWithEduStanfordNlpSemgraphSemanticGraph:withJavaUtilHashMap:);
  methods[36].selector = @selector(process3WPWithEduStanfordNlpSemgraphSemanticGraph:withJavaUtilHashMap:);
  methods[37].selector = @selector(createMultiWordExpressionWithEduStanfordNlpSemgraphSemanticGraph:withEduStanfordNlpLingIndexedWord:withEduStanfordNlpTreesGrammaticalRelation:withEduStanfordNlpLingIndexedWordArray:);
  methods[38].selector = @selector(removeExactDuplicatesWithEduStanfordNlpSemgraphSemanticGraph:);
  methods[39].selector = @selector(readCoNLLXGrammaticalStructureCollectionWithNSString:);
  methods[40].selector = @selector(buildCoNLLXGrammaticalStructureWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "DEBUG", "Z", .constantValue.asLong = 0, 0x1a, -1, 67, -1, -1 },
    { "extraTreeDepFilter_", "LJavaUtilFunctionPredicate;", .constantValue.asLong = 0, 0x1a, 68, 69, 70, -1 },
    { "PASSIVE_AGENT_PATTERN", "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", .constantValue.asLong = 0, 0xa, -1, 71, -1, -1 },
    { "PREP_MW3_PATTERN", "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", .constantValue.asLong = 0, 0xa, -1, 72, -1, -1 },
    { "PREP_MW2_PATTERN", "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", .constantValue.asLong = 0, 0xa, -1, 73, -1, -1 },
    { "PREP_PATTERN", "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", .constantValue.asLong = 0, 0xa, -1, 74, -1, -1 },
    { "PREP_CONJP_PATTERN", "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", .constantValue.asLong = 0, 0x1a, -1, 75, -1, -1 },
    { "PP_CONJP_PATTERN", "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", .constantValue.asLong = 0, 0xa, -1, 76, -1, -1 },
    { "CONJUNCTION_PATTERN", "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", .constantValue.asLong = 0, 0x1a, -1, 77, -1, -1 },
    { "XCOMP_PATTERN", "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", .constantValue.asLong = 0, 0x1a, -1, 78, -1, -1 },
    { "morphology", "LEduStanfordNlpProcessMorphology;", .constantValue.asLong = 0, 0x1a, -1, 79, -1, -1 },
    { "CORRECT_SUBJPASS_PATTERN", "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", .constantValue.asLong = 0, 0xa, -1, 80, -1, -1 },
    { "TWO_WORD_PREPS_REGULAR", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 81, -1, -1 },
    { "TWO_WORD_PREPS_COMPLEX", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 82, -1, -1 },
    { "THREE_WORD_PREPS", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 83, -1, -1 },
    { "TWO_WORD_PREPS_REGULAR_PATTERN", "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", .constantValue.asLong = 0, 0x1a, -1, 84, -1, -1 },
    { "TWO_WORD_PREPS_COMPLEX_PATTERN", "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", .constantValue.asLong = 0, 0x1a, -1, 85, -1, -1 },
    { "THREE_WORD_PREPS_PATTERN", "LEduStanfordNlpSemgraphSemgrexSemgrexPattern;", .constantValue.asLong = 0, 0x1a, -1, 86, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTreesTree;", "LEduStanfordNlpTreesTree;LJavaUtilFunctionPredicate;", "(Ledu/stanford/nlp/trees/Tree;Ljava/util/function/Predicate<Ljava/lang/String;>;)V", "LEduStanfordNlpTreesTree;LJavaUtilFunctionPredicate;LEduStanfordNlpTreesHeadFinder;", "(Ledu/stanford/nlp/trees/Tree;Ljava/util/function/Predicate<Ljava/lang/String;>;Ledu/stanford/nlp/trees/HeadFinder;)V", "LEduStanfordNlpTreesTree;LJavaUtilFunctionPredicate;LEduStanfordNlpTreesHeadFinder;Z", "(Ledu/stanford/nlp/trees/Tree;Ljava/util/function/Predicate<Ljava/lang/String;>;Ledu/stanford/nlp/trees/HeadFinder;Z)V", "LJavaUtilList;LEduStanfordNlpTreesTreeGraphNode;", "(Ljava/util/List<Ledu/stanford/nlp/trees/TypedDependency;>;Ledu/stanford/nlp/trees/TreeGraphNode;)V", "()Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/TypedDependency;>;", "getTreeDeps", "LJavaUtilList;LEduStanfordNlpGraphDirectedMultiGraph;LJavaUtilFunctionPredicate;LJavaUtilFunctionPredicate;", "(Ljava/util/List<Ledu/stanford/nlp/trees/TypedDependency;>;Ledu/stanford/nlp/graph/DirectedMultiGraph<Ledu/stanford/nlp/trees/TreeGraphNode;Ledu/stanford/nlp/trees/GrammaticalRelation;>;Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/TypedDependency;>;Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/TypedDependency;>;)V", "correctDependencies", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/trees/TypedDependency;>;)V", "LEduStanfordNlpSemgraphSemanticGraph;", "printListSorted", "LNSString;LJavaUtilCollection;", "(Ljava/lang/String;Ljava/util/Collection<Ledu/stanford/nlp/trees/TypedDependency;>;)V", "postProcessDependencies", "getExtras", "addCaseMarkerInformation", "addPassiveAgentToReln", "LEduStanfordNlpSemgraphSemanticGraph;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;", "addCaseMarkersToReln", "LEduStanfordNlpSemgraphSemanticGraph;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;LJavaUtilList;", "(Ledu/stanford/nlp/semgraph/SemanticGraph;Ledu/stanford/nlp/ling/IndexedWord;Ledu/stanford/nlp/ling/IndexedWord;Ljava/util/List<Ledu/stanford/nlp/ling/IndexedWord;>;)V", "expandPrepConjunctions", "expandPrepConjunction", "LEduStanfordNlpSemgraphSemanticGraph;LEduStanfordNlpLingIndexedWord;LJavaUtilList;LEduStanfordNlpLingIndexedWord;", "(Ledu/stanford/nlp/semgraph/SemanticGraph;Ledu/stanford/nlp/ling/IndexedWord;Ljava/util/List<Ledu/stanford/nlp/ling/IndexedWord;>;Ledu/stanford/nlp/ling/IndexedWord;)V", "expandPPConjunctions", "expandPPConjunction", "getCaseMarkedRelation", "LEduStanfordNlpTreesGrammaticalRelation;LNSString;", "addConjInformation", "addConjToReln", "correctWHAttachment", "convertRel", "collapseDependencies", "LJavaUtilList;ZLEduStanfordNlpTreesGrammaticalStructure_Extras;", "(Ljava/util/List<Ledu/stanford/nlp/trees/TypedDependency;>;ZLedu/stanford/nlp/trees/GrammaticalStructure$Extras;)V", "collapseDependenciesTree", "conjValue", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpSemgraphSemanticGraph;", "treatCC", "isDefinitelyActive", "LNSString;", "collapseReferent", "addRef", "addExtraNSubj", "correctSubjPass", "processMultiwordPreps", "processSimple2WP", "LEduStanfordNlpSemgraphSemanticGraph;LJavaUtilHashMap;", "(Ledu/stanford/nlp/semgraph/SemanticGraph;Ljava/util/HashMap<Ljava/lang/String;Ljava/util/HashSet<Ljava/lang/Integer;>;>;)V", "processComplex2WP", "process3WP", "createMultiWordExpression", "LEduStanfordNlpSemgraphSemanticGraph;LEduStanfordNlpLingIndexedWord;LEduStanfordNlpTreesGrammaticalRelation;[LEduStanfordNlpLingIndexedWord;", "removeExactDuplicates", "readCoNLLXGrammaticalStructureCollection", "LJavaIoIOException;", "(Ljava/lang/String;)Ljava/util/List<Ledu/stanford/nlp/trees/GrammaticalStructure;>;", "buildCoNLLXGrammaticalStructure", "(Ljava/util/List<Ljava/util/List<Ljava/lang/String;>;>;)Ledu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure;", &EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG, "extraTreeDepFilter", &EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_extraTreeDepFilter_, "Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/TypedDependency;>;", &EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PASSIVE_AGENT_PATTERN, &EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PREP_MW3_PATTERN, &EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PREP_MW2_PATTERN, &EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PREP_PATTERN, &EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PREP_CONJP_PATTERN, &EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PP_CONJP_PATTERN, &EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_CONJUNCTION_PATTERN, &EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_XCOMP_PATTERN, &EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_morphology, &EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_CORRECT_SUBJPASS_PATTERN, &EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_TWO_WORD_PREPS_REGULAR, &EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_TWO_WORD_PREPS_COMPLEX, &EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_THREE_WORD_PREPS, &EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_TWO_WORD_PREPS_REGULAR_PATTERN, &EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_TWO_WORD_PREPS_COMPLEX_PATTERN, &EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_THREE_WORD_PREPS_PATTERN, "LEduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter;LEduStanfordNlpTreesUniversalEnglishGrammaticalStructure_FromDependenciesFactory;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesUniversalEnglishGrammaticalStructure = { "UniversalEnglishGrammaticalStructure", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0x1, 41, 19, -1, 87, -1, -1, -1 };
  return &_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesUniversalEnglishGrammaticalStructure class]) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG = (JavaLangSystem_getPropertyWithNSString_withNSString_(@"UniversalEnglishGrammaticalStructure", nil) != nil);
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_extraTreeDepFilter_ = new_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter_init();
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PASSIVE_AGENT_PATTERN = EduStanfordNlpSemgraphSemgrexSemgrexPattern_compileWithNSString_(@"{}=gov >nmod=reln ({}=mod >case {word:/^(?i:by)$/}=c1) >auxpass {}");
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PREP_MW3_PATTERN = EduStanfordNlpSemgraphSemgrexSemgrexPattern_compileWithNSString_(@"{}=gov   [>/^(nmod|advcl|acl)$/=reln ({}=mod >case ({}=c1 >mwe {}=c2 >mwe ({}=c3 !== {}=c2) ))]");
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PREP_MW2_PATTERN = EduStanfordNlpSemgraphSemgrexSemgrexPattern_compileWithNSString_(@"{}=gov >/^(nmod|advcl|acl)$/=reln ({}=mod >case ({}=c1 >mwe {}=c2))");
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PREP_PATTERN = EduStanfordNlpSemgraphSemgrexSemgrexPattern_compileWithNSString_(@"{}=gov   >/^(nmod|advcl|acl)$/=reln ({}=mod >case {}=c1)");
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PREP_CONJP_PATTERN = EduStanfordNlpSemgraphSemgrexSemgrexPattern_compileWithNSString_(@"{} >case ({}=gov >cc {}=cc >conj {}=conj)");
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PP_CONJP_PATTERN = EduStanfordNlpSemgraphSemgrexSemgrexPattern_compileWithNSString_(@"{} >/^(nmod|acl|advcl)$/ (({}=gov >case {}) >cc {}=cc >conj ({}=conj >case {}))");
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_CONJUNCTION_PATTERN = EduStanfordNlpSemgraphSemgrexSemgrexPattern_compileWithNSString_(@"{}=gov >cc {}=cc >conj {}=conj");
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_XCOMP_PATTERN = EduStanfordNlpSemgraphSemgrexSemgrexPattern_compileWithNSString_(@"{}=root >xcomp {}=embedded >/^(dep|dobj)$/ {}=wh ?>/([di]obj)/ {}=obj");
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_morphology = new_EduStanfordNlpProcessMorphology_init();
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_CORRECT_SUBJPASS_PATTERN = EduStanfordNlpSemgraphSemgrexSemgrexPattern_compileWithNSString_(@"{}=gov >auxpass {} >/^(nsubj|csubj)$/ {}=subj");
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_TWO_WORD_PREPS_REGULAR = [IOSObjectArray newArrayWithObjects:(id[]){ @"across_from", @"along_with", @"alongside_of", @"apart_from", @"as_for", @"as_from", @"as_of", @"as_per", @"as_to", @"aside_from", @"based_on", @"close_by", @"close_to", @"contrary_to", @"compared_to", @"compared_with", @" depending_on", @"except_for", @"exclusive_of", @"far_from", @"followed_by", @"inside_of", @"irrespective_of", @"next_to", @"near_to", @"off_of", @"out_of", @"outside_of", @"owing_to", @"preliminary_to", @"preparatory_to", @"previous_to", @" prior_to", @"pursuant_to", @"regardless_of", @"subsequent_to", @"thanks_to", @"together_with" } count:38 type:NSString_class_()];
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_TWO_WORD_PREPS_COMPLEX = [IOSObjectArray newArrayWithObjects:(id[]){ @"apart_from", @"as_from", @"aside_from", @"away_from", @"close_by", @"close_to", @"contrary_to", @"far_from", @"next_to", @"near_to", @"out_of", @"outside_of", @"pursuant_to", @"regardless_of", @"together_with" } count:15 type:NSString_class_()];
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_THREE_WORD_PREPS = [IOSObjectArray newArrayWithObjects:(id[]){ @"by_means_of", @"in_accordance_with", @"in_addition_to", @"in_case_of", @"in_front_of", @"in_lieu_of", @"in_place_of", @"in_spite_of", @"on_account_of", @"on_behalf_of", @"on_top_of", @"with_regard_to", @"with_respect_to" } count:13 type:NSString_class_()];
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_TWO_WORD_PREPS_REGULAR_PATTERN = EduStanfordNlpSemgraphSemgrexSemgrexPattern_compileWithNSString_(@"{}=gov >/(case|advmod)/ ({}=w1 !> {}) >case ({}=w2 !== {}=w1 !> {})");
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_TWO_WORD_PREPS_COMPLEX_PATTERN = EduStanfordNlpSemgraphSemgrexSemgrexPattern_compileWithNSString_(@"({}=w1 >nmod ({}=gov2 >case ({}=w2 !> {}))) [ == {$} | < {}=gov ]");
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_THREE_WORD_PREPS_PATTERN = EduStanfordNlpSemgraphSemgrexSemgrexPattern_compileWithNSString_(@"({}=w2 >/(nmod|acl|advcl)/ ({}=gov2 >/(case|mark)/ ({}=w3 !> {}))) >case ({}=w1 !> {}) [ < {}=gov | == {$} ]");
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure)
  }
}

@end

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure *self, EduStanfordNlpTreesTree *t) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_(self, t, [new_EduStanfordNlpTreesPennTreebankLanguagePack_init() punctuationWordRejectFilter]);
}

EduStanfordNlpTreesUniversalEnglishGrammaticalStructure *new_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, initWithEduStanfordNlpTreesTree_, t)
}

EduStanfordNlpTreesUniversalEnglishGrammaticalStructure *create_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, initWithEduStanfordNlpTreesTree_, t)
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure *self, EduStanfordNlpTreesTree *t, id<JavaUtilFunctionPredicate> tagFilter) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_withEduStanfordNlpTreesHeadFinder_withBoolean_(self, t, tagFilter, new_EduStanfordNlpTreesUniversalSemanticHeadFinder_initWithBoolean_(true), true);
}

EduStanfordNlpTreesUniversalEnglishGrammaticalStructure *new_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_(EduStanfordNlpTreesTree *t, id<JavaUtilFunctionPredicate> tagFilter) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_, t, tagFilter)
}

EduStanfordNlpTreesUniversalEnglishGrammaticalStructure *create_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_(EduStanfordNlpTreesTree *t, id<JavaUtilFunctionPredicate> tagFilter) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_, t, tagFilter)
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_withEduStanfordNlpTreesHeadFinder_(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure *self, EduStanfordNlpTreesTree *t, id<JavaUtilFunctionPredicate> tagFilter, id<EduStanfordNlpTreesHeadFinder> hf) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_withEduStanfordNlpTreesHeadFinder_withBoolean_(self, t, tagFilter, hf, true);
}

EduStanfordNlpTreesUniversalEnglishGrammaticalStructure *new_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_withEduStanfordNlpTreesHeadFinder_(EduStanfordNlpTreesTree *t, id<JavaUtilFunctionPredicate> tagFilter, id<EduStanfordNlpTreesHeadFinder> hf) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_withEduStanfordNlpTreesHeadFinder_, t, tagFilter, hf)
}

EduStanfordNlpTreesUniversalEnglishGrammaticalStructure *create_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_withEduStanfordNlpTreesHeadFinder_(EduStanfordNlpTreesTree *t, id<JavaUtilFunctionPredicate> tagFilter, id<EduStanfordNlpTreesHeadFinder> hf) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_withEduStanfordNlpTreesHeadFinder_, t, tagFilter, hf)
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_withEduStanfordNlpTreesHeadFinder_withBoolean_(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure *self, EduStanfordNlpTreesTree *t, id<JavaUtilFunctionPredicate> tagFilter, id<EduStanfordNlpTreesHeadFinder> hf, jboolean threadSafe) {
  EduStanfordNlpTreesGrammaticalStructure_initWithEduStanfordNlpTreesTree_withJavaUtilCollection_withJavaUtilConcurrentLocksLock_withEduStanfordNlpTreesTreeTransformer_withEduStanfordNlpTreesHeadFinder_withJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_(self, t, EduStanfordNlpTreesUniversalEnglishGrammaticalRelations_values(), EduStanfordNlpTreesUniversalEnglishGrammaticalRelations_valuesLock(), new_EduStanfordNlpTreesCoordinationTransformer_initWithEduStanfordNlpTreesHeadFinder_withBoolean_(hf, true), hf, EduStanfordNlpUtilFilters_acceptFilter(), tagFilter);
}

EduStanfordNlpTreesUniversalEnglishGrammaticalStructure *new_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_withEduStanfordNlpTreesHeadFinder_withBoolean_(EduStanfordNlpTreesTree *t, id<JavaUtilFunctionPredicate> tagFilter, id<EduStanfordNlpTreesHeadFinder> hf, jboolean threadSafe) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_withEduStanfordNlpTreesHeadFinder_withBoolean_, t, tagFilter, hf, threadSafe)
}

EduStanfordNlpTreesUniversalEnglishGrammaticalStructure *create_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_withEduStanfordNlpTreesHeadFinder_withBoolean_(EduStanfordNlpTreesTree *t, id<JavaUtilFunctionPredicate> tagFilter, id<EduStanfordNlpTreesHeadFinder> hf, jboolean threadSafe) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, initWithEduStanfordNlpTreesTree_withJavaUtilFunctionPredicate_withEduStanfordNlpTreesHeadFinder_withBoolean_, t, tagFilter, hf, threadSafe)
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithJavaUtilList_withEduStanfordNlpTreesTreeGraphNode_(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure *self, id<JavaUtilList> projectiveDependencies, EduStanfordNlpTreesTreeGraphNode *root) {
  EduStanfordNlpTreesGrammaticalStructure_initWithJavaUtilList_withEduStanfordNlpTreesTreeGraphNode_(self, projectiveDependencies, root);
}

EduStanfordNlpTreesUniversalEnglishGrammaticalStructure *new_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithJavaUtilList_withEduStanfordNlpTreesTreeGraphNode_(id<JavaUtilList> projectiveDependencies, EduStanfordNlpTreesTreeGraphNode *root) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, initWithJavaUtilList_withEduStanfordNlpTreesTreeGraphNode_, projectiveDependencies, root)
}

EduStanfordNlpTreesUniversalEnglishGrammaticalStructure *create_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithJavaUtilList_withEduStanfordNlpTreesTreeGraphNode_(id<JavaUtilList> projectiveDependencies, EduStanfordNlpTreesTreeGraphNode *root) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure, initWithJavaUtilList_withEduStanfordNlpTreesTreeGraphNode_, projectiveDependencies, root)
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_correctDependenciesWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(@"At correctDependencies:", [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) typedDependencies]);
  }
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_correctSubjPassWithEduStanfordNlpSemgraphSemanticGraph_(sg);
  if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(@"After correctSubjPass:", [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) typedDependencies]);
  }
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_removeExactDuplicatesWithEduStanfordNlpSemgraphSemanticGraph_(sg);
  if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(@"After removeExactDuplicates:", [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) typedDependencies]);
  }
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_printListSortedWithNSString_withJavaUtilCollection_(NSString *title, id<JavaUtilCollection> list) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  id<JavaUtilList> lis = new_JavaUtilArrayList_initWithJavaUtilCollection_(list);
  JavaUtilCollections_sortWithJavaUtilList_(lis);
  if (title != nil) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:title];
  }
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithId:lis];
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addCaseMarkerInformationWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  if ([((id<JavaUtilCollection>) nil_chk([((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) getRoots])) isEmpty]) return;
  EduStanfordNlpSemgraphSemanticGraph *sgCopy = [sg makeSoftCopy];
  EduStanfordNlpSemgraphSemgrexSemgrexMatcher *matcher = [((EduStanfordNlpSemgraphSemgrexSemgrexPattern *) nil_chk(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PASSIVE_AGENT_PATTERN)) matcherWithEduStanfordNlpSemgraphSemanticGraph:sgCopy];
  while ([((EduStanfordNlpSemgraphSemgrexSemgrexMatcher *) nil_chk(matcher)) find]) {
    EduStanfordNlpLingIndexedWord *caseMarker = [matcher getNodeWithNSString:@"c1"];
    EduStanfordNlpLingIndexedWord *gov = [matcher getNodeWithNSString:@"gov"];
    EduStanfordNlpLingIndexedWord *mod = [matcher getNodeWithNSString:@"mod"];
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addPassiveAgentToRelnWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_(sg, gov, mod, caseMarker);
  }
  id<JavaUtilList> oldCaseMarkers = EduStanfordNlpUtilGenerics_newArrayList();
  sgCopy = [sg makeSoftCopy];
  matcher = [((EduStanfordNlpSemgraphSemgrexSemgrexPattern *) nil_chk(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PREP_MW3_PATTERN)) matcherWithEduStanfordNlpSemgraphSemanticGraph:sgCopy];
  while ([((EduStanfordNlpSemgraphSemgrexSemgrexMatcher *) nil_chk(matcher)) find]) {
    id<JavaUtilList> caseMarkers = EduStanfordNlpUtilGenerics_newArrayListWithInt_(3);
    [((id<JavaUtilList>) nil_chk(caseMarkers)) addWithId:[matcher getNodeWithNSString:@"c1"]];
    [caseMarkers addWithId:[matcher getNodeWithNSString:@"c2"]];
    [caseMarkers addWithId:[matcher getNodeWithNSString:@"c3"]];
    JavaUtilCollections_sortWithJavaUtilList_(caseMarkers);
    if ([caseMarkers isEqual:oldCaseMarkers]) continue;
    EduStanfordNlpLingIndexedWord *gov = [matcher getNodeWithNSString:@"gov"];
    EduStanfordNlpLingIndexedWord *mod = [matcher getNodeWithNSString:@"mod"];
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addCaseMarkersToRelnWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withJavaUtilList_(sg, gov, mod, caseMarkers);
    oldCaseMarkers = caseMarkers;
  }
  sgCopy = [sg makeSoftCopy];
  matcher = [((EduStanfordNlpSemgraphSemgrexSemgrexPattern *) nil_chk(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PREP_MW2_PATTERN)) matcherWithEduStanfordNlpSemgraphSemanticGraph:sgCopy];
  while ([((EduStanfordNlpSemgraphSemgrexSemgrexMatcher *) nil_chk(matcher)) find]) {
    id<JavaUtilList> caseMarkers = EduStanfordNlpUtilGenerics_newArrayListWithInt_(2);
    [((id<JavaUtilList>) nil_chk(caseMarkers)) addWithId:[matcher getNodeWithNSString:@"c1"]];
    [caseMarkers addWithId:[matcher getNodeWithNSString:@"c2"]];
    JavaUtilCollections_sortWithJavaUtilList_(caseMarkers);
    if ([caseMarkers isEqual:oldCaseMarkers]) continue;
    EduStanfordNlpLingIndexedWord *gov = [matcher getNodeWithNSString:@"gov"];
    EduStanfordNlpLingIndexedWord *mod = [matcher getNodeWithNSString:@"mod"];
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addCaseMarkersToRelnWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withJavaUtilList_(sg, gov, mod, caseMarkers);
    oldCaseMarkers = caseMarkers;
  }
  sgCopy = [sg makeSoftCopy];
  matcher = [((EduStanfordNlpSemgraphSemgrexSemgrexPattern *) nil_chk(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PREP_PATTERN)) matcherWithEduStanfordNlpSemgraphSemanticGraph:sgCopy];
  while ([((EduStanfordNlpSemgraphSemgrexSemgrexMatcher *) nil_chk(matcher)) find]) {
    id<JavaUtilList> caseMarkers = EduStanfordNlpUtilGenerics_newArrayListWithInt_(1);
    [((id<JavaUtilList>) nil_chk(caseMarkers)) addWithId:[matcher getNodeWithNSString:@"c1"]];
    if ([caseMarkers isEqual:oldCaseMarkers]) continue;
    EduStanfordNlpLingIndexedWord *gov = [matcher getNodeWithNSString:@"gov"];
    EduStanfordNlpLingIndexedWord *mod = [matcher getNodeWithNSString:@"mod"];
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addCaseMarkersToRelnWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withJavaUtilList_(sg, gov, mod, caseMarkers);
    oldCaseMarkers = caseMarkers;
  }
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addPassiveAgentToRelnWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_(EduStanfordNlpSemgraphSemanticGraph *sg, EduStanfordNlpLingIndexedWord *gov, EduStanfordNlpLingIndexedWord *mod, EduStanfordNlpLingIndexedWord *caseMarker) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  EduStanfordNlpSemgraphSemanticGraphEdge *edge = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) getEdgeWithEduStanfordNlpLingIndexedWord:gov withEduStanfordNlpLingIndexedWord:mod];
  EduStanfordNlpTreesGrammaticalRelation *reln = EduStanfordNlpTreesUniversalEnglishGrammaticalRelations_getNmodWithNSString_(@"agent");
  [((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge)) setRelationWithEduStanfordNlpTreesGrammaticalRelation:reln];
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addCaseMarkersToRelnWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withJavaUtilList_(EduStanfordNlpSemgraphSemanticGraph *sg, EduStanfordNlpLingIndexedWord *gov, EduStanfordNlpLingIndexedWord *mod, id<JavaUtilList> caseMarkers) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  EduStanfordNlpSemgraphSemanticGraphEdge *edge = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) getEdgeWithEduStanfordNlpLingIndexedWord:gov withEduStanfordNlpLingIndexedWord:mod];
  jint lastCaseMarkerIndex = 0;
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  jboolean firstWord = true;
  for (EduStanfordNlpLingIndexedWord * __strong cm in nil_chk(caseMarkers)) {
    if (lastCaseMarkerIndex == 0 || [((EduStanfordNlpLingIndexedWord *) nil_chk(cm)) index] == (lastCaseMarkerIndex + 1)) {
      if (!firstWord) {
        (void) [sb appendWithNSString:@"_"];
      }
      (void) [sb appendWithNSString:[((EduStanfordNlpLingIndexedWord *) nil_chk(cm)) value]];
      firstWord = false;
    }
    else {
      EduStanfordNlpTreesGrammaticalRelation *reln = EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_getCaseMarkedRelationWithEduStanfordNlpTreesGrammaticalRelation_withNSString_([((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge)) getRelation], [((NSString *) nil_chk([sb description])) lowercaseString]);
      (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:gov withEduStanfordNlpLingIndexedWord:mod withEduStanfordNlpTreesGrammaticalRelation:reln withDouble:JavaLangDouble_NEGATIVE_INFINITY withBoolean:true];
      sb = new_JavaLangStringBuilder_initWithNSString_([((EduStanfordNlpLingIndexedWord *) nil_chk(cm)) value]);
      firstWord = true;
    }
    lastCaseMarkerIndex = [cm index];
  }
  EduStanfordNlpTreesGrammaticalRelation *reln = EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_getCaseMarkedRelationWithEduStanfordNlpTreesGrammaticalRelation_withNSString_([((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge)) getRelation], [((NSString *) nil_chk([sb description])) lowercaseString]);
  [edge setRelationWithEduStanfordNlpTreesGrammaticalRelation:reln];
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_expandPrepConjunctionsWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  if ([((id<JavaUtilCollection>) nil_chk([((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) getRoots])) isEmpty]) return;
  EduStanfordNlpSemgraphSemanticGraph *sgCopy = [sg makeSoftCopy];
  EduStanfordNlpSemgraphSemgrexSemgrexMatcher *matcher = [((EduStanfordNlpSemgraphSemgrexSemgrexPattern *) nil_chk(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PREP_CONJP_PATTERN)) matcherWithEduStanfordNlpSemgraphSemanticGraph:sgCopy];
  EduStanfordNlpLingIndexedWord *oldGov = nil;
  EduStanfordNlpLingIndexedWord *oldCcDep = nil;
  id<JavaUtilList> conjDeps = EduStanfordNlpUtilGenerics_newLinkedList();
  while ([((EduStanfordNlpSemgraphSemgrexSemgrexMatcher *) nil_chk(matcher)) find]) {
    EduStanfordNlpLingIndexedWord *ccDep = [matcher getNodeWithNSString:@"cc"];
    EduStanfordNlpLingIndexedWord *conjDep = [matcher getNodeWithNSString:@"conj"];
    EduStanfordNlpLingIndexedWord *gov = [matcher getNodeWithNSString:@"gov"];
    if (oldGov != nil && (![((EduStanfordNlpLingIndexedWord *) nil_chk(gov)) isEqual:oldGov] || ![((EduStanfordNlpLingIndexedWord *) nil_chk(ccDep)) isEqual:oldCcDep])) {
      EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_expandPrepConjunctionWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withJavaUtilList_withEduStanfordNlpLingIndexedWord_(sg, oldGov, conjDeps, oldCcDep);
      conjDeps = EduStanfordNlpUtilGenerics_newLinkedList();
    }
    oldCcDep = ccDep;
    oldGov = gov;
    [((id<JavaUtilList>) nil_chk(conjDeps)) addWithId:conjDep];
  }
  if (oldGov != nil) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_expandPrepConjunctionWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withJavaUtilList_withEduStanfordNlpLingIndexedWord_(sg, oldGov, conjDeps, oldCcDep);
  }
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_expandPrepConjunctionWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withJavaUtilList_withEduStanfordNlpLingIndexedWord_(EduStanfordNlpSemgraphSemanticGraph *sg, EduStanfordNlpLingIndexedWord *gov, id<JavaUtilList> conjDeps, EduStanfordNlpLingIndexedWord *ccDep) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  EduStanfordNlpLingIndexedWord *caseGov = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) getParentWithEduStanfordNlpLingIndexedWord:gov];
  if (caseGov == nil) return;
  EduStanfordNlpLingIndexedWord *caseGovGov = [sg getParentWithEduStanfordNlpLingIndexedWord:caseGov];
  if (caseGovGov == nil) return;
  EduStanfordNlpLingIndexedWord *conjGov = [caseGovGov getOriginal] != nil ? [caseGovGov getOriginal] : caseGovGov;
  EduStanfordNlpTreesGrammaticalRelation *rel = [sg relnWithEduStanfordNlpLingIndexedWord:caseGovGov withEduStanfordNlpLingIndexedWord:caseGov];
  id<JavaUtilList> newConjDeps = EduStanfordNlpUtilGenerics_newLinkedList();
  for (EduStanfordNlpLingIndexedWord * __strong conjDep in nil_chk(conjDeps)) {
    EduStanfordNlpLingIndexedWord *caseGovGovCopy = [caseGovGov makeSoftCopy];
    (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:conjGov withEduStanfordNlpLingIndexedWord:caseGovGovCopy withEduStanfordNlpTreesGrammaticalRelation:JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, CONJUNCT) withDouble:JavaLangDouble_NEGATIVE_INFINITY withBoolean:false];
    [((id<JavaUtilList>) nil_chk(newConjDeps)) addWithId:caseGovGovCopy];
    (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:caseGovGovCopy withEduStanfordNlpLingIndexedWord:caseGov withEduStanfordNlpTreesGrammaticalRelation:rel withDouble:JavaLangDouble_NEGATIVE_INFINITY withBoolean:true];
    id<JavaUtilList> caseMarkers = EduStanfordNlpUtilGenerics_newArrayList();
    [((id<JavaUtilList>) nil_chk(caseMarkers)) addWithId:conjDep];
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addCaseMarkersToRelnWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_withJavaUtilList_(sg, caseGovGovCopy, caseGov, caseMarkers);
  }
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addConjToRelnWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withJavaUtilList_withEduStanfordNlpLingIndexedWord_(sg, conjGov, newConjDeps, ccDep);
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_expandPPConjunctionsWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  if ([((id<JavaUtilCollection>) nil_chk([((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) getRoots])) isEmpty]) return;
  EduStanfordNlpSemgraphSemanticGraph *sgCopy = [sg makeSoftCopy];
  EduStanfordNlpSemgraphSemgrexSemgrexMatcher *matcher = [((EduStanfordNlpSemgraphSemgrexSemgrexPattern *) nil_chk(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_PP_CONJP_PATTERN)) matcherWithEduStanfordNlpSemgraphSemanticGraph:sgCopy];
  EduStanfordNlpLingIndexedWord *oldGov = nil;
  EduStanfordNlpLingIndexedWord *oldCcDep = nil;
  id<JavaUtilList> conjDeps = EduStanfordNlpUtilGenerics_newLinkedList();
  while ([((EduStanfordNlpSemgraphSemgrexSemgrexMatcher *) nil_chk(matcher)) find]) {
    EduStanfordNlpLingIndexedWord *conjDep = [matcher getNodeWithNSString:@"conj"];
    EduStanfordNlpLingIndexedWord *gov = [matcher getNodeWithNSString:@"gov"];
    EduStanfordNlpLingIndexedWord *ccDep = [matcher getNodeWithNSString:@"cc"];
    if (oldGov != nil && (![((EduStanfordNlpLingIndexedWord *) nil_chk(gov)) isEqual:oldGov] || ![((EduStanfordNlpLingIndexedWord *) nil_chk(ccDep)) isEqual:oldCcDep])) {
      EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_expandPPConjunctionWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withJavaUtilList_withEduStanfordNlpLingIndexedWord_(sg, oldGov, conjDeps, oldCcDep);
      conjDeps = EduStanfordNlpUtilGenerics_newLinkedList();
    }
    oldCcDep = ccDep;
    oldGov = gov;
    [((id<JavaUtilList>) nil_chk(conjDeps)) addWithId:conjDep];
  }
  if (oldGov != nil) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_expandPPConjunctionWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withJavaUtilList_withEduStanfordNlpLingIndexedWord_(sg, oldGov, conjDeps, oldCcDep);
  }
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_expandPPConjunctionWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withJavaUtilList_withEduStanfordNlpLingIndexedWord_(EduStanfordNlpSemgraphSemanticGraph *sg, EduStanfordNlpLingIndexedWord *gov, id<JavaUtilList> conjDeps, EduStanfordNlpLingIndexedWord *ccDep) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  EduStanfordNlpLingIndexedWord *nmodGov = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) getParentWithEduStanfordNlpLingIndexedWord:gov];
  if (nmodGov == nil) return;
  EduStanfordNlpLingIndexedWord *conjGov = [nmodGov getOriginal] != nil ? [nmodGov getOriginal] : nmodGov;
  EduStanfordNlpTreesGrammaticalRelation *rel = [sg relnWithEduStanfordNlpLingIndexedWord:nmodGov withEduStanfordNlpLingIndexedWord:gov];
  id<JavaUtilList> newConjDeps = EduStanfordNlpUtilGenerics_newLinkedList();
  for (EduStanfordNlpLingIndexedWord * __strong conjDep in nil_chk(conjDeps)) {
    EduStanfordNlpLingIndexedWord *nmodGovCopy = [nmodGov makeSoftCopy];
    EduStanfordNlpSemgraphSemanticGraphEdge *edge = [sg getEdgeWithEduStanfordNlpLingIndexedWord:gov withEduStanfordNlpLingIndexedWord:conjDep];
    if (edge != nil) {
      [sg removeEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:edge];
      (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:nmodGovCopy withEduStanfordNlpLingIndexedWord:conjDep withEduStanfordNlpTreesGrammaticalRelation:rel withDouble:JavaLangDouble_NEGATIVE_INFINITY withBoolean:false];
    }
    (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:conjGov withEduStanfordNlpLingIndexedWord:nmodGovCopy withEduStanfordNlpTreesGrammaticalRelation:JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, CONJUNCT) withDouble:JavaLangDouble_NEGATIVE_INFINITY withBoolean:false];
    [((id<JavaUtilList>) nil_chk(newConjDeps)) addWithId:nmodGovCopy];
  }
  EduStanfordNlpSemgraphSemanticGraphEdge *edge = [sg getEdgeWithEduStanfordNlpLingIndexedWord:gov withEduStanfordNlpLingIndexedWord:ccDep];
  if (edge != nil) {
    [sg removeEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:edge];
    (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:conjGov withEduStanfordNlpLingIndexedWord:ccDep withEduStanfordNlpTreesGrammaticalRelation:JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, COORDINATION) withDouble:JavaLangDouble_NEGATIVE_INFINITY withBoolean:false];
  }
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addConjToRelnWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withJavaUtilList_withEduStanfordNlpLingIndexedWord_(sg, conjGov, newConjDeps, ccDep);
}

EduStanfordNlpTreesGrammaticalRelation *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_getCaseMarkedRelationWithEduStanfordNlpTreesGrammaticalRelation_withNSString_(EduStanfordNlpTreesGrammaticalRelation *reln, NSString *relationName) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  EduStanfordNlpTreesGrammaticalRelation *newReln = reln;
  if ([((EduStanfordNlpTreesGrammaticalRelation *) nil_chk(reln)) getSpecific] != nil) {
    reln = [reln getParent];
  }
  if (reln == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, NOMINAL_MODIFIER)) {
    newReln = EduStanfordNlpTreesUniversalEnglishGrammaticalRelations_getNmodWithNSString_(relationName);
  }
  else if (reln == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, ADV_CLAUSE_MODIFIER)) {
    newReln = EduStanfordNlpTreesUniversalEnglishGrammaticalRelations_getAdvclWithNSString_(relationName);
  }
  else if (reln == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, CLAUSAL_MODIFIER)) {
    newReln = EduStanfordNlpTreesUniversalEnglishGrammaticalRelations_getAclWithNSString_(relationName);
  }
  return newReln;
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addConjInformationWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  if ([((id<JavaUtilCollection>) nil_chk([((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) getRoots])) isEmpty]) return;
  EduStanfordNlpSemgraphSemanticGraph *sgCopy = [sg makeSoftCopy];
  EduStanfordNlpSemgraphSemgrexSemgrexMatcher *matcher = [((EduStanfordNlpSemgraphSemgrexSemgrexPattern *) nil_chk(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_CONJUNCTION_PATTERN)) matcherWithEduStanfordNlpSemgraphSemanticGraph:sgCopy];
  EduStanfordNlpLingIndexedWord *oldGov = nil;
  EduStanfordNlpLingIndexedWord *oldCcDep = nil;
  id<JavaUtilList> conjDeps = EduStanfordNlpUtilGenerics_newLinkedList();
  while ([((EduStanfordNlpSemgraphSemgrexSemgrexMatcher *) nil_chk(matcher)) find]) {
    EduStanfordNlpLingIndexedWord *conjDep = [matcher getNodeWithNSString:@"conj"];
    EduStanfordNlpLingIndexedWord *gov = [matcher getNodeWithNSString:@"gov"];
    EduStanfordNlpLingIndexedWord *ccDep = [matcher getNodeWithNSString:@"cc"];
    if (oldGov != nil && (![((EduStanfordNlpLingIndexedWord *) nil_chk(gov)) isEqual:oldGov] || ![((EduStanfordNlpLingIndexedWord *) nil_chk(ccDep)) isEqual:oldCcDep])) {
      EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addConjToRelnWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withJavaUtilList_withEduStanfordNlpLingIndexedWord_(sg, oldGov, conjDeps, oldCcDep);
      conjDeps = EduStanfordNlpUtilGenerics_newLinkedList();
    }
    oldCcDep = ccDep;
    [((id<JavaUtilList>) nil_chk(conjDeps)) addWithId:conjDep];
    oldGov = gov;
  }
  if (oldGov != nil) {
    EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addConjToRelnWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withJavaUtilList_withEduStanfordNlpLingIndexedWord_(sg, oldGov, conjDeps, oldCcDep);
  }
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addConjToRelnWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withJavaUtilList_withEduStanfordNlpLingIndexedWord_(EduStanfordNlpSemgraphSemanticGraph *sg, EduStanfordNlpLingIndexedWord *gov, id<JavaUtilList> conjDeps, EduStanfordNlpLingIndexedWord *ccDep) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  for (EduStanfordNlpLingIndexedWord * __strong conjDep in nil_chk(conjDeps)) {
    EduStanfordNlpSemgraphSemanticGraphEdge *edge = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) getEdgeWithEduStanfordNlpLingIndexedWord:gov withEduStanfordNlpLingIndexedWord:conjDep];
    if ([((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge)) getRelation] == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, CONJUNCT) || [((EduStanfordNlpLingIndexedWord *) nil_chk(conjDep)) index] > [((EduStanfordNlpLingIndexedWord *) nil_chk(ccDep)) index]) {
      [edge setRelationWithEduStanfordNlpTreesGrammaticalRelation:EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_conjValueWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(ccDep, sg)];
    }
  }
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_correctWHAttachmentWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  if ([((id<JavaUtilCollection>) nil_chk([((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) getRoots])) isEmpty]) return;
  EduStanfordNlpSemgraphSemanticGraph *sgCopy = [sg makeSoftCopy];
  EduStanfordNlpSemgraphSemgrexSemgrexMatcher *matcher = [((EduStanfordNlpSemgraphSemgrexSemgrexPattern *) nil_chk(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_XCOMP_PATTERN)) matcherWithEduStanfordNlpSemgraphSemanticGraph:sgCopy];
  while ([((EduStanfordNlpSemgraphSemgrexSemgrexMatcher *) nil_chk(matcher)) findNextMatchingNode]) {
    EduStanfordNlpLingIndexedWord *root = [matcher getNodeWithNSString:@"root"];
    EduStanfordNlpLingIndexedWord *embeddedVerb = [matcher getNodeWithNSString:@"embedded"];
    EduStanfordNlpLingIndexedWord *wh = [matcher getNodeWithNSString:@"wh"];
    EduStanfordNlpLingIndexedWord *dobj = [matcher getNodeWithNSString:@"obj"];
    if ([((NSString *) nil_chk([((EduStanfordNlpLingIndexedWord *) nil_chk(wh)) tag])) hasPrefix:@"W"]) {
      jboolean reattach = false;
      if (dobj != nil) {
        reattach = true;
      }
      else {
        NSString *lemma = [((EduStanfordNlpProcessMorphology *) nil_chk(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_morphology)) lemmaWithNSString:[((EduStanfordNlpLingIndexedWord *) nil_chk(root)) value] withNSString:[root tag]];
        if ([((NSString *) nil_chk(lemma)) matches:EduStanfordNlpTreesEnglishPatterns_NP_V_S_INF_VERBS_REGEX]) {
          reattach = true;
        }
      }
      if (reattach) {
        EduStanfordNlpSemgraphSemanticGraphEdge *edge = [sg getEdgeWithEduStanfordNlpLingIndexedWord:root withEduStanfordNlpLingIndexedWord:wh];
        if (edge != nil) {
          [sg removeEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:edge];
          (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:embeddedVerb withEduStanfordNlpLingIndexedWord:wh withEduStanfordNlpTreesGrammaticalRelation:JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, DIRECT_OBJECT) withDouble:JavaLangDouble_NEGATIVE_INFINITY withBoolean:false];
        }
      }
    }
  }
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_convertRelWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong prep in nil_chk([((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) findAllRelnsWithEduStanfordNlpTreesGrammaticalRelation:JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, PREPOSITION)])) {
    jboolean changedPrep = false;
    for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong nmod in nil_chk([sg outgoingEdgeIterableWithEduStanfordNlpLingIndexedWord:[((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(prep)) getGovernor]])) {
      if ([((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(nmod)) getRelation] != JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, NOMINAL_MODIFIER) && [nmod getRelation] != JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, RELATIVE)) {
        continue;
      }
      if ([((EduStanfordNlpLingIndexedWord *) nil_chk([prep getDependent])) index] < [((EduStanfordNlpLingIndexedWord *) nil_chk([nmod getDependent])) index]) {
        continue;
      }
      [sg removeEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:prep];
      (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:[nmod getDependent] withEduStanfordNlpLingIndexedWord:[prep getDependent] withEduStanfordNlpTreesGrammaticalRelation:JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, CASE_MARKER) withDouble:JavaLangDouble_NEGATIVE_INFINITY withBoolean:false];
      changedPrep = true;
      if ([nmod getRelation] == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, RELATIVE)) {
        [nmod setRelationWithEduStanfordNlpTreesGrammaticalRelation:JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, NOMINAL_MODIFIER)];
      }
      break;
    }
    if (!changedPrep) {
      [prep setRelationWithEduStanfordNlpTreesGrammaticalRelation:JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, NOMINAL_MODIFIER)];
    }
  }
  for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong edge in nil_chk([sg findAllRelnsWithEduStanfordNlpTreesGrammaticalRelation:JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, RELATIVE)])) {
    [((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge)) setRelationWithEduStanfordNlpTreesGrammaticalRelation:JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, DIRECT_OBJECT)];
  }
}

EduStanfordNlpTreesGrammaticalRelation *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_conjValueWithEduStanfordNlpLingIndexedWord_withEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpLingIndexedWord *cc, EduStanfordNlpSemgraphSemanticGraph *sg) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  jint pos = [((EduStanfordNlpLingIndexedWord *) nil_chk(cc)) index];
  NSString *newConj = [((NSString *) nil_chk([cc value])) lowercaseString];
  if ([((NSString *) nil_chk(newConj)) isEqual:@"not"]) {
    EduStanfordNlpLingIndexedWord *prevWord = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) getNodeByIndexSafeWithInt:pos - 1];
    if (prevWord != nil && [((NSString *) nil_chk([((NSString *) nil_chk([prevWord value])) lowercaseString])) isEqual:@"but"]) {
      return EduStanfordNlpTreesUniversalEnglishGrammaticalRelations_getConjWithNSString_(@"negcc");
    }
  }
  EduStanfordNlpLingIndexedWord *secondIWord = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) getNodeByIndexSafeWithInt:pos + 1];
  if (secondIWord == nil) {
    return EduStanfordNlpTreesUniversalEnglishGrammaticalRelations_getConjWithNSString_([cc value]);
  }
  NSString *secondWord = [((NSString *) nil_chk([secondIWord value])) lowercaseString];
  if ([newConj isEqual:@"but"]) {
    if ([((NSString *) nil_chk(secondWord)) isEqual:@"rather"]) {
      newConj = @"negcc";
    }
    else if ([secondWord isEqual:@"also"]) {
      newConj = @"and";
    }
  }
  else if ([newConj isEqual:@"if"] && [((NSString *) nil_chk(secondWord)) isEqual:@"not"]) {
    newConj = @"negcc";
  }
  else if ([newConj isEqual:@"instead"] && [((NSString *) nil_chk(secondWord)) isEqual:@"of"]) {
    newConj = @"negcc";
  }
  else if ([newConj isEqual:@"rather"] && [((NSString *) nil_chk(secondWord)) isEqual:@"than"]) {
    newConj = @"negcc";
  }
  else if ([newConj isEqual:@"as"] && [((NSString *) nil_chk(secondWord)) isEqual:@"well"]) {
    newConj = @"and";
  }
  else if ([newConj isEqual:@"not"] && [((NSString *) nil_chk(secondWord)) isEqual:@"to"]) {
    EduStanfordNlpLingIndexedWord *thirdIWord = [sg getNodeByIndexSafeWithInt:pos + 2];
    NSString *thirdWord = thirdIWord != nil ? [((NSString *) nil_chk([thirdIWord value])) lowercaseString] : nil;
    if (thirdWord != nil && [thirdWord isEqual:@"mention"]) {
      newConj = @"and";
    }
  }
  return EduStanfordNlpTreesUniversalEnglishGrammaticalRelations_getConjWithNSString_(newConj);
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_treatCCWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  id<JavaUtilMap> map = EduStanfordNlpUtilGenerics_newHashMap();
  id<JavaUtilMap> subjectMap = EduStanfordNlpUtilGenerics_newHashMap();
  id<JavaUtilSet> withPassiveAuxiliary = EduStanfordNlpUtilGenerics_newHashSet();
  id<JavaUtilList> rcmodHeads = EduStanfordNlpUtilGenerics_newArrayList();
  id<JavaUtilList> prepcDep = EduStanfordNlpUtilGenerics_newArrayList();
  for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong edge in nil_chk([((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) edgeIterable])) {
    if (![((id<JavaUtilMap>) nil_chk(map)) containsKeyWithId:[((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge)) getDependent]]) {
      (void) [map putWithId:[edge getDependent] withId:new_JavaUtilTreeSet_init()];
    }
    [((id<JavaUtilSet>) nil_chk([map getWithId:[edge getDependent]])) addWithId:edge];
    if ([((EduStanfordNlpTreesGrammaticalRelation *) nil_chk([edge getRelation])) isEqual:JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, AUX_PASSIVE_MODIFIER)]) {
      [((id<JavaUtilSet>) nil_chk(withPassiveAuxiliary)) addWithId:[edge getGovernor]];
    }
    if ([((EduStanfordNlpTreesGrammaticalRelation *) nil_chk([edge getRelation])) getParent] == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, NOMINAL_SUBJECT) || [((EduStanfordNlpTreesGrammaticalRelation *) nil_chk([edge getRelation])) getParent] == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, SUBJECT) || [((EduStanfordNlpTreesGrammaticalRelation *) nil_chk([edge getRelation])) getParent] == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, CLAUSAL_SUBJECT)) {
      if (![((id<JavaUtilMap>) nil_chk(subjectMap)) containsKeyWithId:[edge getGovernor]]) {
        (void) [subjectMap putWithId:[edge getGovernor] withId:edge];
      }
    }
    if ([edge getRelation] == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, RELATIVE_CLAUSE_MODIFIER)) {
      [((id<JavaUtilList>) nil_chk(rcmodHeads)) addWithId:[edge getGovernor]];
    }
    if ([((NSString *) nil_chk([((EduStanfordNlpTreesGrammaticalRelation *) nil_chk([edge getRelation])) description])) hasPrefix:@"acl:"] || [((NSString *) nil_chk([((EduStanfordNlpTreesGrammaticalRelation *) nil_chk([edge getRelation])) description])) hasPrefix:@"advcl:"]) {
      [((id<JavaUtilList>) nil_chk(prepcDep)) addWithId:[edge getDependent]];
    }
  }
  EduStanfordNlpSemgraphSemanticGraph *sgCopy = [sg makeSoftCopy];
  for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong edge in nil_chk([((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sgCopy)) edgeIterable])) {
    if ([((id<JavaUtilCollection>) nil_chk(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations_getConjs())) containsWithId:[((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge)) getRelation]]) {
      EduStanfordNlpLingIndexedWord *gov = [edge getGovernor];
      EduStanfordNlpLingIndexedWord *dep = [edge getDependent];
      id<JavaUtilSet> gov_relations = [((id<JavaUtilMap>) nil_chk(map)) getWithId:gov];
      if (gov_relations != nil) {
        for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong edge1 in gov_relations) {
          EduStanfordNlpLingIndexedWord *newGov = [((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge1)) getGovernor];
          if ([((EduStanfordNlpLingIndexedWord *) nil_chk(newGov)) isEqual:dep]) {
            continue;
          }
          EduStanfordNlpTreesGrammaticalRelation *newRel = [edge1 getRelation];
          if (newRel != JreLoadStatic(EduStanfordNlpTreesGrammaticalRelation, ROOT) && newRel != JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, CASE_MARKER)) {
            if ([((id<JavaUtilList>) nil_chk(rcmodHeads)) containsWithId:gov] && [rcmodHeads containsWithId:dep]) {
              if (newRel != JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, DIRECT_OBJECT) && newRel != JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, NOMINAL_SUBJECT)) {
                if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
                  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@$@$@$", @"Adding new ", newRel, @" dependency from ", newGov, @" to ", dep, @" (subj/obj case)")];
                }
                (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:newGov withEduStanfordNlpLingIndexedWord:dep withEduStanfordNlpTreesGrammaticalRelation:newRel withDouble:JavaLangDouble_NEGATIVE_INFINITY withBoolean:true];
              }
            }
            else {
              if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
                [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@$@$@", @"Adding new ", newRel, @" dependency from ", newGov, @" to ", dep)];
              }
              (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:newGov withEduStanfordNlpLingIndexedWord:dep withEduStanfordNlpTreesGrammaticalRelation:newRel withDouble:JavaLangDouble_NEGATIVE_INFINITY withBoolean:true];
            }
          }
        }
      }
      NSString *tag = [((EduStanfordNlpLingIndexedWord *) nil_chk(dep)) tag];
      if ([((id<JavaUtilMap>) nil_chk(subjectMap)) containsKeyWithId:gov] && ([((NSString *) nil_chk(tag)) hasPrefix:@"VB"] || [tag hasPrefix:@"JJ"]) && ![subjectMap containsKeyWithId:dep]) {
        EduStanfordNlpSemgraphSemanticGraphEdge *tdsubj = [subjectMap getWithId:gov];
        EduStanfordNlpTreesGrammaticalRelation *relation = [((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(tdsubj)) getRelation];
        if (relation == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, NOMINAL_PASSIVE_SUBJECT)) {
          if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_isDefinitelyActiveWithNSString_(tag)) {
            relation = JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, NOMINAL_SUBJECT);
          }
        }
        else if (relation == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, CLAUSAL_PASSIVE_SUBJECT)) {
          if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_isDefinitelyActiveWithNSString_(tag)) {
            relation = JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, CLAUSAL_SUBJECT);
          }
        }
        else if (relation == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, NOMINAL_SUBJECT)) {
          if ([((id<JavaUtilSet>) nil_chk(withPassiveAuxiliary)) containsWithId:dep]) {
            relation = JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, NOMINAL_PASSIVE_SUBJECT);
          }
        }
        else if (relation == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, CLAUSAL_SUBJECT)) {
          if ([((id<JavaUtilSet>) nil_chk(withPassiveAuxiliary)) containsWithId:dep]) {
            relation = JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, CLAUSAL_PASSIVE_SUBJECT);
          }
        }
        if (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_DEBUG) {
          [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@$@$@$", @"Adding new ", relation, @" dependency from ", dep, @" to ", [tdsubj getDependent], @" (subj propagation case)")];
        }
        (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:dep withEduStanfordNlpLingIndexedWord:[tdsubj getDependent] withEduStanfordNlpTreesGrammaticalRelation:relation withDouble:JavaLangDouble_NEGATIVE_INFINITY withBoolean:true];
      }
    }
  }
}

jboolean EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_isDefinitelyActiveWithNSString_(NSString *tag) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  return [((NSString *) nil_chk(tag)) isEqual:@"VB"] || [tag isEqual:@"VBZ"] || [tag isEqual:@"VBP"] || [tag hasPrefix:@"JJ"];
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_collapseReferentWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  id<JavaUtilList> refs = new_JavaUtilArrayList_initWithJavaUtilCollection_([((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) findAllRelnsWithEduStanfordNlpTreesGrammaticalRelation:JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, REFERENT)]);
  EduStanfordNlpSemgraphSemanticGraph *sgCopy = [sg makeSoftCopy];
  for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong ref in refs) {
    EduStanfordNlpLingIndexedWord *dep = [((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(ref)) getDependent];
    EduStanfordNlpLingIndexedWord *ant = [ref getGovernor];
    for (id<JavaUtilIterator> iter = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sgCopy)) incomingEdgeIteratorWithEduStanfordNlpLingIndexedWord:dep]; [((id<JavaUtilIterator>) nil_chk(iter)) hasNext]; ) {
      EduStanfordNlpSemgraphSemanticGraphEdge *edge = [iter next];
      if ([((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge)) getRelation] != JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, REFERENT) && ![((EduStanfordNlpLingIndexedWord *) nil_chk([edge getGovernor])) isEqual:ant]) {
        [sg removeEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:edge];
        (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:[edge getGovernor] withEduStanfordNlpLingIndexedWord:ant withEduStanfordNlpTreesGrammaticalRelation:[edge getRelation] withDouble:JavaLangDouble_NEGATIVE_INFINITY withBoolean:true];
      }
    }
  }
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addRefWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong edge in nil_chk([((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) findAllRelnsWithEduStanfordNlpTreesGrammaticalRelation:JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, RELATIVE_CLAUSE_MODIFIER)])) {
    EduStanfordNlpLingIndexedWord *head = [((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge)) getGovernor];
    EduStanfordNlpLingIndexedWord *modifier = [edge getDependent];
    EduStanfordNlpSemgraphSemanticGraphEdge *leftChildEdge = nil;
    for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong childEdge in nil_chk([sg outgoingEdgeIterableWithEduStanfordNlpLingIndexedWord:modifier])) {
      if ([((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(JreLoadStatic(EduStanfordNlpTreesEnglishPatterns, RELATIVIZING_WORD_PATTERN))) matcherWithJavaLangCharSequence:[((EduStanfordNlpLingIndexedWord *) nil_chk([((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(childEdge)) getDependent])) value]])) matches] && (leftChildEdge == nil || [((EduStanfordNlpLingIndexedWord *) nil_chk([childEdge getDependent])) index] < [((EduStanfordNlpLingIndexedWord *) nil_chk([leftChildEdge getDependent])) index])) {
        leftChildEdge = childEdge;
      }
    }
    EduStanfordNlpSemgraphSemanticGraphEdge *leftGrandchildEdge = nil;
    for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong childEdge in nil_chk([sg outgoingEdgeIterableWithEduStanfordNlpLingIndexedWord:modifier])) {
      for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong grandchildEdge in nil_chk([sg outgoingEdgeIterableWithEduStanfordNlpLingIndexedWord:[((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(childEdge)) getDependent]])) {
        if ([((JavaUtilRegexMatcher *) nil_chk([((JavaUtilRegexPattern *) nil_chk(JreLoadStatic(EduStanfordNlpTreesEnglishPatterns, RELATIVIZING_WORD_PATTERN))) matcherWithJavaLangCharSequence:[((EduStanfordNlpLingIndexedWord *) nil_chk([((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(grandchildEdge)) getDependent])) value]])) matches] && (leftGrandchildEdge == nil || [((EduStanfordNlpLingIndexedWord *) nil_chk([grandchildEdge getDependent])) index] < [((EduStanfordNlpLingIndexedWord *) nil_chk([leftGrandchildEdge getDependent])) index])) {
          leftGrandchildEdge = grandchildEdge;
        }
      }
    }
    EduStanfordNlpLingIndexedWord *newDep = nil;
    if (leftGrandchildEdge != nil && (leftChildEdge == nil || [((EduStanfordNlpLingIndexedWord *) nil_chk([leftGrandchildEdge getDependent])) index] < [((EduStanfordNlpLingIndexedWord *) nil_chk([leftChildEdge getDependent])) index])) {
      newDep = [leftGrandchildEdge getDependent];
    }
    else if (leftChildEdge != nil) {
      newDep = [leftChildEdge getDependent];
    }
    if (newDep != nil && ![sg containsEdgeWithEduStanfordNlpLingIndexedWord:head withEduStanfordNlpLingIndexedWord:newDep]) {
      (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:head withEduStanfordNlpLingIndexedWord:newDep withEduStanfordNlpTreesGrammaticalRelation:JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, REFERENT) withDouble:JavaLangDouble_NEGATIVE_INFINITY withBoolean:true];
    }
  }
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_addExtraNSubjWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong xcomp in nil_chk([((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) findAllRelnsWithEduStanfordNlpTreesGrammaticalRelation:JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, XCLAUSAL_COMPLEMENT)])) {
    EduStanfordNlpLingIndexedWord *modifier = [((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(xcomp)) getDependent];
    EduStanfordNlpLingIndexedWord *head = [xcomp getGovernor];
    jboolean hasSubjectDaughter = false;
    jboolean hasAux = false;
    id<JavaUtilList> subjects = EduStanfordNlpUtilGenerics_newArrayList();
    id<JavaUtilList> objects = EduStanfordNlpUtilGenerics_newArrayList();
    for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong dep in nil_chk([sg edgeIterable])) {
      if (([((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(dep)) getRelation] == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, NOMINAL_SUBJECT) || [dep getRelation] == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, NOMINAL_PASSIVE_SUBJECT)) && [((EduStanfordNlpLingIndexedWord *) nil_chk([dep getGovernor])) isEqual:modifier]) {
        hasSubjectDaughter = true;
        break;
      }
      if (([dep getRelation] == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, AUX_MODIFIER) || [dep getRelation] == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, MARKER)) && [((EduStanfordNlpLingIndexedWord *) nil_chk([dep getGovernor])) isEqual:modifier]) {
        hasAux = true;
      }
      if (([dep getRelation] == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, NOMINAL_SUBJECT) || [dep getRelation] == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, NOMINAL_PASSIVE_SUBJECT)) && [((EduStanfordNlpLingIndexedWord *) nil_chk([dep getGovernor])) isEqual:head]) {
        [((id<JavaUtilList>) nil_chk(subjects)) addWithId:[dep getDependent]];
      }
      if ([dep getRelation] == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, DIRECT_OBJECT) && [((EduStanfordNlpLingIndexedWord *) nil_chk([dep getGovernor])) isEqual:head]) {
        [((id<JavaUtilList>) nil_chk(objects)) addWithId:[dep getDependent]];
      }
    }
    if (hasSubjectDaughter) {
      continue;
    }
    if (([((NSString *) nil_chk([((EduStanfordNlpLingIndexedWord *) nil_chk(modifier)) value])) equalsIgnoreCase:@"to"] && hasAux) || (![((NSString *) nil_chk([modifier value])) equalsIgnoreCase:@"to"] && !hasAux)) {
      continue;
    }
    if ([((id<JavaUtilList>) nil_chk(objects)) size] > 0) {
      for (EduStanfordNlpLingIndexedWord * __strong object in objects) {
        if (![sg containsEdgeWithEduStanfordNlpLingIndexedWord:modifier withEduStanfordNlpLingIndexedWord:object]) (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:modifier withEduStanfordNlpLingIndexedWord:object withEduStanfordNlpTreesGrammaticalRelation:JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, NOMINAL_SUBJECT) withDouble:JavaLangDouble_NEGATIVE_INFINITY withBoolean:true];
      }
    }
    else {
      for (EduStanfordNlpLingIndexedWord * __strong subject in nil_chk(subjects)) {
        if (![sg containsEdgeWithEduStanfordNlpLingIndexedWord:modifier withEduStanfordNlpLingIndexedWord:subject]) (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:modifier withEduStanfordNlpLingIndexedWord:subject withEduStanfordNlpTreesGrammaticalRelation:JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, NOMINAL_SUBJECT) withDouble:JavaLangDouble_NEGATIVE_INFINITY withBoolean:true];
      }
    }
  }
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_correctSubjPassWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  if ([((id<JavaUtilCollection>) nil_chk([((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) getRoots])) isEmpty]) return;
  EduStanfordNlpSemgraphSemanticGraph *sgCopy = [sg makeSoftCopy];
  EduStanfordNlpSemgraphSemgrexSemgrexMatcher *matcher = [((EduStanfordNlpSemgraphSemgrexSemgrexPattern *) nil_chk(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_CORRECT_SUBJPASS_PATTERN)) matcherWithEduStanfordNlpSemgraphSemanticGraph:sgCopy];
  while ([((EduStanfordNlpSemgraphSemgrexSemgrexMatcher *) nil_chk(matcher)) find]) {
    EduStanfordNlpLingIndexedWord *gov = [matcher getNodeWithNSString:@"gov"];
    EduStanfordNlpLingIndexedWord *subj = [matcher getNodeWithNSString:@"subj"];
    EduStanfordNlpSemgraphSemanticGraphEdge *edge = [sg getEdgeWithEduStanfordNlpLingIndexedWord:gov withEduStanfordNlpLingIndexedWord:subj];
    EduStanfordNlpTreesGrammaticalRelation *reln = nil;
    if ([((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge)) getRelation] == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, NOMINAL_SUBJECT)) {
      reln = JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, NOMINAL_PASSIVE_SUBJECT);
    }
    else if ([edge getRelation] == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, CLAUSAL_SUBJECT)) {
      reln = JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, CLAUSAL_PASSIVE_SUBJECT);
    }
    if (reln != nil) {
      [sg removeEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:edge];
      (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:gov withEduStanfordNlpLingIndexedWord:subj withEduStanfordNlpTreesGrammaticalRelation:reln withDouble:JavaLangDouble_NEGATIVE_INFINITY withBoolean:false];
    }
  }
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_processMultiwordPrepsWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  if ([((id<JavaUtilCollection>) nil_chk([((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) getRoots])) isEmpty]) return;
  JavaUtilHashMap *bigrams = new_JavaUtilHashMap_init();
  JavaUtilHashMap *trigrams = new_JavaUtilHashMap_init();
  id<JavaUtilList> vertexList = [sg vertexListSorted];
  jint numWords = [((id<JavaUtilList>) nil_chk(vertexList)) size];
  for (jint i = 1; i < numWords; i++) {
    NSString *bigram = JreStrcat("$C$", [((NSString *) nil_chk([((EduStanfordNlpLingIndexedWord *) nil_chk([vertexList getWithInt:i - 1])) value])) lowercaseString], '_', [((NSString *) nil_chk([((EduStanfordNlpLingIndexedWord *) nil_chk([vertexList getWithInt:i])) value])) lowercaseString]);
    if ([bigrams getWithId:bigram] == nil) {
      (void) [bigrams putWithId:bigram withId:new_JavaUtilHashSet_init()];
    }
    [((JavaUtilHashSet *) nil_chk([bigrams getWithId:bigram])) addWithId:JavaLangInteger_valueOfWithInt_([((EduStanfordNlpLingIndexedWord *) nil_chk([vertexList getWithInt:i - 1])) index])];
    if (i > 1) {
      NSString *trigram = JreStrcat("$C$", [((NSString *) nil_chk([((EduStanfordNlpLingIndexedWord *) nil_chk([vertexList getWithInt:i - 2])) value])) lowercaseString], '_', bigram);
      if ([trigrams getWithId:trigram] == nil) {
        (void) [trigrams putWithId:trigram withId:new_JavaUtilHashSet_init()];
      }
      [((JavaUtilHashSet *) nil_chk([trigrams getWithId:trigram])) addWithId:JavaLangInteger_valueOfWithInt_([((EduStanfordNlpLingIndexedWord *) nil_chk([vertexList getWithInt:i - 2])) index])];
    }
  }
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_processSimple2WPWithEduStanfordNlpSemgraphSemanticGraph_withJavaUtilHashMap_(sg, bigrams);
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_processComplex2WPWithEduStanfordNlpSemgraphSemanticGraph_withJavaUtilHashMap_(sg, bigrams);
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_process3WPWithEduStanfordNlpSemgraphSemanticGraph_withJavaUtilHashMap_(sg, trigrams);
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_processSimple2WPWithEduStanfordNlpSemgraphSemanticGraph_withJavaUtilHashMap_(EduStanfordNlpSemgraphSemanticGraph *sg, JavaUtilHashMap *bigrams) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  {
    IOSObjectArray *a__ = EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_TWO_WORD_PREPS_REGULAR;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *bigram = *b__++;
      if ([((JavaUtilHashMap *) nil_chk(bigrams)) getWithId:bigram] == nil) {
        continue;
      }
      for (JavaLangInteger * __strong i in nil_chk([bigrams getWithId:bigram])) {
        EduStanfordNlpLingIndexedWord *w1 = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) getNodeByIndexSafeWithInt:[((JavaLangInteger *) nil_chk(i)) intValue]];
        EduStanfordNlpLingIndexedWord *w2 = [sg getNodeByIndexSafeWithInt:[i intValue] + 1];
        if (w1 == nil || w2 == nil) {
          continue;
        }
        EduStanfordNlpSemgraphSemgrexSemgrexMatcher *matcher = [((EduStanfordNlpSemgraphSemgrexSemgrexPattern *) nil_chk(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_TWO_WORD_PREPS_REGULAR_PATTERN)) matcherWithEduStanfordNlpSemgraphSemanticGraph:sg];
        EduStanfordNlpLingIndexedWord *gov = nil;
        while ([((EduStanfordNlpSemgraphSemgrexSemgrexMatcher *) nil_chk(matcher)) find]) {
          if ([w1 isEqual:[matcher getNodeWithNSString:@"w1"]] && [w2 isEqual:[matcher getNodeWithNSString:@"w2"]]) {
            gov = [matcher getNodeWithNSString:@"gov"];
            break;
          }
        }
        if (gov == nil) {
          continue;
        }
        EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_createMultiWordExpressionWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpTreesGrammaticalRelation_withEduStanfordNlpLingIndexedWordArray_(sg, gov, JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, CASE_MARKER), [IOSObjectArray newArrayWithObjects:(id[]){ w1, w2 } count:2 type:EduStanfordNlpLingIndexedWord_class_()]);
      }
    }
  }
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_processComplex2WPWithEduStanfordNlpSemgraphSemanticGraph_withJavaUtilHashMap_(EduStanfordNlpSemgraphSemanticGraph *sg, JavaUtilHashMap *bigrams) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  {
    IOSObjectArray *a__ = EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_TWO_WORD_PREPS_COMPLEX;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *bigram = *b__++;
      if ([((JavaUtilHashMap *) nil_chk(bigrams)) getWithId:bigram] == nil) {
        continue;
      }
      for (JavaLangInteger * __strong i in nil_chk([bigrams getWithId:bigram])) {
        EduStanfordNlpLingIndexedWord *w1 = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) getNodeByIndexSafeWithInt:[((JavaLangInteger *) nil_chk(i)) intValue]];
        EduStanfordNlpLingIndexedWord *w2 = [sg getNodeByIndexSafeWithInt:[i intValue] + 1];
        if (w1 == nil || w2 == nil) {
          continue;
        }
        EduStanfordNlpSemgraphSemgrexSemgrexMatcher *matcher = [((EduStanfordNlpSemgraphSemgrexSemgrexPattern *) nil_chk(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_TWO_WORD_PREPS_COMPLEX_PATTERN)) matcherWithEduStanfordNlpSemgraphSemanticGraph:sg];
        EduStanfordNlpLingIndexedWord *gov = nil;
        EduStanfordNlpLingIndexedWord *gov2 = nil;
        while ([((EduStanfordNlpSemgraphSemgrexSemgrexMatcher *) nil_chk(matcher)) find]) {
          if ([w1 isEqual:[matcher getNodeWithNSString:@"w1"]] && [w2 isEqual:[matcher getNodeWithNSString:@"w2"]]) {
            gov = [matcher getNodeWithNSString:@"gov"];
            gov2 = [matcher getNodeWithNSString:@"gov2"];
            break;
          }
        }
        if (gov2 == nil) {
          continue;
        }
        if ([((id<JavaUtilCollection>) nil_chk([sg getRoots])) containsWithId:w1]) {
          EduStanfordNlpSemgraphSemanticGraphEdge *edge = [sg getEdgeWithEduStanfordNlpLingIndexedWord:w1 withEduStanfordNlpLingIndexedWord:gov2];
          if (edge == nil) {
            continue;
          }
          [sg removeEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:edge];
          [((id<JavaUtilCollection>) nil_chk([sg getRoots])) removeWithId:w1];
          [sg addRootWithEduStanfordNlpLingIndexedWord:gov2];
        }
        else {
          EduStanfordNlpSemgraphSemanticGraphEdge *edge = [sg getEdgeWithEduStanfordNlpLingIndexedWord:w1 withEduStanfordNlpLingIndexedWord:gov2];
          if (edge == nil) {
            continue;
          }
          [sg removeEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:edge];
          gov = gov == nil ? [sg getParentWithEduStanfordNlpLingIndexedWord:w1] : gov;
          if (gov == nil) {
            continue;
          }
          EduStanfordNlpTreesGrammaticalRelation *reln = [edge getRelation];
          if ([sg hasChildWithRelnWithEduStanfordNlpLingIndexedWord:w1 withEduStanfordNlpTreesGrammaticalRelation:JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, COPULA)]) {
            EduStanfordNlpTreesGrammaticalRelation *reln2 = [((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk([sg getEdgeWithEduStanfordNlpLingIndexedWord:gov withEduStanfordNlpLingIndexedWord:w1])) getRelation];
            if ([((id<JavaUtilSet>) nil_chk(JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, clauseRelations))) containsWithId:reln2]) {
              reln = reln2;
            }
          }
          (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:gov withEduStanfordNlpLingIndexedWord:gov2 withEduStanfordNlpTreesGrammaticalRelation:reln withDouble:JavaLangDouble_NEGATIVE_INFINITY withBoolean:false];
        }
        for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong edge2 in nil_chk([sg getOutEdgesSortedWithEduStanfordNlpLingIndexedWord:w1])) {
          [sg removeEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:edge2];
          (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:gov2 withEduStanfordNlpLingIndexedWord:[((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge2)) getDependent] withEduStanfordNlpTreesGrammaticalRelation:[edge2 getRelation] withDouble:[edge2 getWeight] withBoolean:[edge2 isExtra]];
        }
        EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_createMultiWordExpressionWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpTreesGrammaticalRelation_withEduStanfordNlpLingIndexedWordArray_(sg, gov2, JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, CASE_MARKER), [IOSObjectArray newArrayWithObjects:(id[]){ w1, w2 } count:2 type:EduStanfordNlpLingIndexedWord_class_()]);
      }
    }
  }
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_process3WPWithEduStanfordNlpSemgraphSemanticGraph_withJavaUtilHashMap_(EduStanfordNlpSemgraphSemanticGraph *sg, JavaUtilHashMap *trigrams) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  {
    IOSObjectArray *a__ = EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_THREE_WORD_PREPS;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *trigram = *b__++;
      if ([((JavaUtilHashMap *) nil_chk(trigrams)) getWithId:trigram] == nil) {
        continue;
      }
      for (JavaLangInteger * __strong i in nil_chk([trigrams getWithId:trigram])) {
        EduStanfordNlpLingIndexedWord *w1 = [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) getNodeByIndexSafeWithInt:[((JavaLangInteger *) nil_chk(i)) intValue]];
        EduStanfordNlpLingIndexedWord *w2 = [sg getNodeByIndexSafeWithInt:[i intValue] + 1];
        EduStanfordNlpLingIndexedWord *w3 = [sg getNodeByIndexSafeWithInt:[i intValue] + 2];
        if (w1 == nil || w2 == nil || w3 == nil) {
          continue;
        }
        EduStanfordNlpSemgraphSemgrexSemgrexMatcher *matcher = [((EduStanfordNlpSemgraphSemgrexSemgrexPattern *) nil_chk(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_THREE_WORD_PREPS_PATTERN)) matcherWithEduStanfordNlpSemgraphSemanticGraph:sg];
        EduStanfordNlpLingIndexedWord *gov = nil;
        EduStanfordNlpLingIndexedWord *gov2 = nil;
        while ([((EduStanfordNlpSemgraphSemgrexSemgrexMatcher *) nil_chk(matcher)) find]) {
          if ([w1 isEqual:[matcher getNodeWithNSString:@"w1"]] && [w2 isEqual:[matcher getNodeWithNSString:@"w2"]] && [w3 isEqual:[matcher getNodeWithNSString:@"w3"]]) {
            gov = [matcher getNodeWithNSString:@"gov"];
            gov2 = [matcher getNodeWithNSString:@"gov2"];
            break;
          }
        }
        if (gov2 == nil) {
          continue;
        }
        EduStanfordNlpTreesGrammaticalRelation *markerReln = JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, CASE_MARKER);
        if ([((id<JavaUtilCollection>) nil_chk([sg getRoots])) containsWithId:w2]) {
          EduStanfordNlpSemgraphSemanticGraphEdge *edge = [sg getEdgeWithEduStanfordNlpLingIndexedWord:w2 withEduStanfordNlpLingIndexedWord:gov2];
          if (edge == nil) {
            continue;
          }
          [sg removeEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:edge];
          [((id<JavaUtilCollection>) nil_chk([sg getRoots])) removeWithId:w2];
          [sg addRootWithEduStanfordNlpLingIndexedWord:gov2];
        }
        else {
          EduStanfordNlpSemgraphSemanticGraphEdge *edge = [sg getEdgeWithEduStanfordNlpLingIndexedWord:w2 withEduStanfordNlpLingIndexedWord:gov2];
          if (edge == nil) {
            continue;
          }
          [sg removeEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:edge];
          gov = gov == nil ? [sg getParentWithEduStanfordNlpLingIndexedWord:w2] : gov;
          if (gov == nil) {
            continue;
          }
          EduStanfordNlpTreesGrammaticalRelation *reln = [((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk([sg getEdgeWithEduStanfordNlpLingIndexedWord:gov withEduStanfordNlpLingIndexedWord:w2])) getRelation];
          if (reln == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, NOMINAL_MODIFIER) && ([edge getRelation] == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, CLAUSAL_MODIFIER) || [edge getRelation] == JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, ADV_CLAUSE_MODIFIER))) {
            reln = [edge getRelation];
            markerReln = JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, MARKER);
          }
          (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:gov withEduStanfordNlpLingIndexedWord:gov2 withEduStanfordNlpTreesGrammaticalRelation:reln withDouble:JavaLangDouble_NEGATIVE_INFINITY withBoolean:false];
        }
        for (EduStanfordNlpSemgraphSemanticGraphEdge * __strong edge2 in nil_chk([sg getOutEdgesSortedWithEduStanfordNlpLingIndexedWord:w2])) {
          [sg removeEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:edge2];
          (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:gov2 withEduStanfordNlpLingIndexedWord:[((EduStanfordNlpSemgraphSemanticGraphEdge *) nil_chk(edge2)) getDependent] withEduStanfordNlpTreesGrammaticalRelation:[edge2 getRelation] withDouble:[edge2 getWeight] withBoolean:[edge2 isExtra]];
        }
        EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_createMultiWordExpressionWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpTreesGrammaticalRelation_withEduStanfordNlpLingIndexedWordArray_(sg, gov2, markerReln, [IOSObjectArray newArrayWithObjects:(id[]){ w1, w2, w3 } count:3 type:EduStanfordNlpLingIndexedWord_class_()]);
      }
    }
  }
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_createMultiWordExpressionWithEduStanfordNlpSemgraphSemanticGraph_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpTreesGrammaticalRelation_withEduStanfordNlpLingIndexedWordArray_(EduStanfordNlpSemgraphSemanticGraph *sg, EduStanfordNlpLingIndexedWord *gov, EduStanfordNlpTreesGrammaticalRelation *reln, IOSObjectArray *words) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  if ([((id<JavaUtilCollection>) nil_chk([((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) getRoots])) isEmpty] || gov == nil || ((IOSObjectArray *) nil_chk(words))->size_ < 1) {
    return;
  }
  jboolean first = true;
  EduStanfordNlpLingIndexedWord *mweHead = nil;
  {
    IOSObjectArray *a__ = words;
    EduStanfordNlpLingIndexedWord * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    EduStanfordNlpLingIndexedWord * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      EduStanfordNlpLingIndexedWord *word = *b__++;
      EduStanfordNlpLingIndexedWord *wordGov = [sg getParentWithEduStanfordNlpLingIndexedWord:word];
      if (wordGov != nil) {
        EduStanfordNlpSemgraphSemanticGraphEdge *edge = [sg getEdgeWithEduStanfordNlpLingIndexedWord:wordGov withEduStanfordNlpLingIndexedWord:word];
        if (edge != nil) {
          [sg removeEdgeWithEduStanfordNlpSemgraphSemanticGraphEdge:edge];
        }
      }
      if (first) {
        (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:gov withEduStanfordNlpLingIndexedWord:word withEduStanfordNlpTreesGrammaticalRelation:reln withDouble:JavaLangDouble_NEGATIVE_INFINITY withBoolean:false];
        mweHead = word;
        first = false;
      }
      else {
        (void) [sg addEdgeWithEduStanfordNlpLingIndexedWord:mweHead withEduStanfordNlpLingIndexedWord:word withEduStanfordNlpTreesGrammaticalRelation:JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, MULTI_WORD_EXPRESSION) withDouble:JavaLangDouble_NEGATIVE_INFINITY withBoolean:false];
      }
    }
  }
}

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_removeExactDuplicatesWithEduStanfordNlpSemgraphSemanticGraph_(EduStanfordNlpSemgraphSemanticGraph *sg) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  [((EduStanfordNlpSemgraphSemanticGraph *) nil_chk(sg)) deleteDuplicateEdges];
}

id<JavaUtilList> EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_readCoNLLXGrammaticalStructureCollectionWithNSString_(NSString *fileName) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  return EduStanfordNlpTreesGrammaticalStructure_readCoNLLXGrammaticalStructureCollectionWithNSString_withJavaUtilMap_withEduStanfordNlpTreesGrammaticalStructureFromDependenciesFactory_(fileName, JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, shortNameToGRel), new_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_FromDependenciesFactory_init());
}

EduStanfordNlpTreesUniversalEnglishGrammaticalStructure *EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_buildCoNLLXGrammaticalStructureWithJavaUtilList_(id<JavaUtilList> tokenFields) {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initialize();
  return (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure *) cast_chk(EduStanfordNlpTreesGrammaticalStructure_buildCoNLLXGrammaticalStructureWithJavaUtilList_withJavaUtilMap_withEduStanfordNlpTreesGrammaticalStructureFromDependenciesFactory_(tokenFields, JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, shortNameToGRel), new_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_FromDependenciesFactory_init()), [EduStanfordNlpTreesUniversalEnglishGrammaticalStructure class]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure)

@implementation EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter

- (jboolean)testWithId:(EduStanfordNlpTreesTypedDependency *)d {
  return d != nil && [d reln] != JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, RELATIVE) && [d reln] != JreLoadStatic(EduStanfordNlpTreesUniversalEnglishGrammaticalRelations, PREPOSITION);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilFunctionPredicate>)and__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_and__WithJavaUtilFunctionPredicate_(self, arg0);
}

- (id<JavaUtilFunctionPredicate>)negate {
  return JavaUtilFunctionPredicate_negate(self);
}

- (id<JavaUtilFunctionPredicate>)or__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_or__WithJavaUtilFunctionPredicate_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "test", "LEduStanfordNlpTreesTypedDependency;", "LEduStanfordNlpTreesUniversalEnglishGrammaticalStructure;", "Ljava/lang/Object;Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/TypedDependency;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter = { "ExtraTreeDepFilter", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0xa, 2, 1, 2, -1, -1, 3, -1 };
  return &_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter;
}

@end

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter_init(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter *new_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter, init)
}

EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter *create_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_ExtraTreeDepFilter)

@implementation EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_FromDependenciesFactory

- (EduStanfordNlpTreesUniversalEnglishGrammaticalStructure *)buildWithJavaUtilList:(id<JavaUtilList>)tdeps
                                              withEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)root {
  return new_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_initWithJavaUtilList_withEduStanfordNlpTreesTreeGraphNode_(tdeps, root);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_FromDependenciesFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEduStanfordNlpTreesUniversalEnglishGrammaticalStructure;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(buildWithJavaUtilList:withEduStanfordNlpTreesTreeGraphNode:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "build", "LJavaUtilList;LEduStanfordNlpTreesTreeGraphNode;", "(Ljava/util/List<Ledu/stanford/nlp/trees/TypedDependency;>;Ledu/stanford/nlp/trees/TreeGraphNode;)Ledu/stanford/nlp/trees/UniversalEnglishGrammaticalStructure;", "LEduStanfordNlpTreesUniversalEnglishGrammaticalStructure;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_FromDependenciesFactory = { "FromDependenciesFactory", "edu.stanford.nlp.trees", ptrTable, methods, NULL, 7, 0x9, 2, 0, 3, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_FromDependenciesFactory;
}

@end

void EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_FromDependenciesFactory_init(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_FromDependenciesFactory *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_FromDependenciesFactory *new_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_FromDependenciesFactory_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_FromDependenciesFactory, init)
}

EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_FromDependenciesFactory *create_EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_FromDependenciesFactory_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_FromDependenciesFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesUniversalEnglishGrammaticalStructure_FromDependenciesFactory)
