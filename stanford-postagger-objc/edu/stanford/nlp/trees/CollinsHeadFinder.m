//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/CollinsHeadFinder.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/CategoryWordTag.h"
#include "edu/stanford/nlp/trees/AbstractCollinsHeadFinder.h"
#include "edu/stanford/nlp/trees/CollinsHeadFinder.h"
#include "edu/stanford/nlp/trees/DiskTreebank.h"
#include "edu/stanford/nlp/trees/HeadFinder.h"
#include "edu/stanford/nlp/trees/PennTreebankLanguagePack.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeVisitor.h"
#include "edu/stanford/nlp/trees/Treebank.h"
#include "edu/stanford/nlp/trees/TreebankLanguagePack.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/util/Map.h"

inline IOSObjectArray *EduStanfordNlpTreesCollinsHeadFinder_get_EMPTY_STRING_ARRAY();
static IOSObjectArray *EduStanfordNlpTreesCollinsHeadFinder_EMPTY_STRING_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesCollinsHeadFinder, EMPTY_STRING_ARRAY, IOSObjectArray *)

inline jlong EduStanfordNlpTreesCollinsHeadFinder_get_serialVersionUID();
#define EduStanfordNlpTreesCollinsHeadFinder_serialVersionUID -8747319554557223437LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTreesCollinsHeadFinder, serialVersionUID, jlong)

@interface EduStanfordNlpTreesCollinsHeadFinder_$Lambda$1 : NSObject < EduStanfordNlpTreesTreeVisitor > {
 @public
  id<EduStanfordNlpTreesHeadFinder> val$chf_;
}

- (void)visitTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)pt;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesCollinsHeadFinder_$Lambda$1)

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesCollinsHeadFinder_$Lambda$1, val$chf_, id<EduStanfordNlpTreesHeadFinder>)

__attribute__((unused)) static void EduStanfordNlpTreesCollinsHeadFinder_$Lambda$1_initWithEduStanfordNlpTreesHeadFinder_(EduStanfordNlpTreesCollinsHeadFinder_$Lambda$1 *self, id<EduStanfordNlpTreesHeadFinder> capture$0);

__attribute__((unused)) static EduStanfordNlpTreesCollinsHeadFinder_$Lambda$1 *new_EduStanfordNlpTreesCollinsHeadFinder_$Lambda$1_initWithEduStanfordNlpTreesHeadFinder_(id<EduStanfordNlpTreesHeadFinder> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesCollinsHeadFinder_$Lambda$1 *create_EduStanfordNlpTreesCollinsHeadFinder_$Lambda$1_initWithEduStanfordNlpTreesHeadFinder_(id<EduStanfordNlpTreesHeadFinder> capture$0);

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesCollinsHeadFinder)

@implementation EduStanfordNlpTreesCollinsHeadFinder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesCollinsHeadFinder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithEduStanfordNlpTreesTreebankLanguagePack:(id<EduStanfordNlpTreesTreebankLanguagePack>)tlp {
  EduStanfordNlpTreesCollinsHeadFinder_initWithEduStanfordNlpTreesTreebankLanguagePack_(self, tlp);
  return self;
}

- (instancetype)initWithEduStanfordNlpTreesTreebankLanguagePack:(id<EduStanfordNlpTreesTreebankLanguagePack>)tlp
                                              withNSStringArray:(IOSObjectArray *)categoriesToAvoid {
  EduStanfordNlpTreesCollinsHeadFinder_initWithEduStanfordNlpTreesTreebankLanguagePack_withNSStringArray_(self, tlp, categoriesToAvoid);
  return self;
}

- (jint)postOperationFixWithInt:(jint)headIdx
withEduStanfordNlpTreesTreeArray:(IOSObjectArray *)daughterTrees {
  if (headIdx >= 2) {
    NSString *prevLab = [((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(tlp_)) basicCategoryWithNSString:[((EduStanfordNlpTreesTree *) nil_chk(IOSObjectArray_Get(nil_chk(daughterTrees), headIdx - 1))) value]];
    if ([((NSString *) nil_chk(prevLab)) isEqual:@"CC"] || [prevLab isEqual:@"CONJP"]) {
      jint newHeadIdx = headIdx - 2;
      EduStanfordNlpTreesTree *t = IOSObjectArray_Get(daughterTrees, newHeadIdx);
      while (newHeadIdx >= 0 && [((EduStanfordNlpTreesTree *) nil_chk(t)) isPreTerminal] && [tlp_ isPunctuationTagWithNSString:[t value]]) {
        newHeadIdx--;
      }
      if (newHeadIdx >= 0) {
        headIdx = newHeadIdx;
      }
    }
  }
  return headIdx;
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduStanfordNlpTreesCollinsHeadFinder_mainWithNSStringArray_(args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x81, -1, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithEduStanfordNlpTreesTreebankLanguagePack:);
  methods[2].selector = @selector(initWithEduStanfordNlpTreesTreebankLanguagePack:withNSStringArray:);
  methods[3].selector = @selector(postOperationFixWithInt:withEduStanfordNlpTreesTreeArray:);
  methods[4].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY_STRING_ARRAY", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTreesCollinsHeadFinder_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTreesTreebankLanguagePack;", "LEduStanfordNlpTreesTreebankLanguagePack;[LNSString;", "postOperationFix", "I[LEduStanfordNlpTreesTree;", "main", "[LNSString;", &EduStanfordNlpTreesCollinsHeadFinder_EMPTY_STRING_ARRAY };
  static const J2ObjcClassInfo _EduStanfordNlpTreesCollinsHeadFinder = { "CollinsHeadFinder", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0x1, 5, 2, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesCollinsHeadFinder;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesCollinsHeadFinder class]) {
    EduStanfordNlpTreesCollinsHeadFinder_EMPTY_STRING_ARRAY = [IOSObjectArray newArrayWithObjects:(id[]){  } count:0 type:NSString_class_()];
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesCollinsHeadFinder)
  }
}

@end

void EduStanfordNlpTreesCollinsHeadFinder_init(EduStanfordNlpTreesCollinsHeadFinder *self) {
  EduStanfordNlpTreesCollinsHeadFinder_initWithEduStanfordNlpTreesTreebankLanguagePack_(self, new_EduStanfordNlpTreesPennTreebankLanguagePack_init());
}

EduStanfordNlpTreesCollinsHeadFinder *new_EduStanfordNlpTreesCollinsHeadFinder_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesCollinsHeadFinder, init)
}

EduStanfordNlpTreesCollinsHeadFinder *create_EduStanfordNlpTreesCollinsHeadFinder_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesCollinsHeadFinder, init)
}

void EduStanfordNlpTreesCollinsHeadFinder_initWithEduStanfordNlpTreesTreebankLanguagePack_(EduStanfordNlpTreesCollinsHeadFinder *self, id<EduStanfordNlpTreesTreebankLanguagePack> tlp) {
  EduStanfordNlpTreesCollinsHeadFinder_initWithEduStanfordNlpTreesTreebankLanguagePack_withNSStringArray_(self, tlp, EduStanfordNlpTreesCollinsHeadFinder_EMPTY_STRING_ARRAY);
}

EduStanfordNlpTreesCollinsHeadFinder *new_EduStanfordNlpTreesCollinsHeadFinder_initWithEduStanfordNlpTreesTreebankLanguagePack_(id<EduStanfordNlpTreesTreebankLanguagePack> tlp) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesCollinsHeadFinder, initWithEduStanfordNlpTreesTreebankLanguagePack_, tlp)
}

EduStanfordNlpTreesCollinsHeadFinder *create_EduStanfordNlpTreesCollinsHeadFinder_initWithEduStanfordNlpTreesTreebankLanguagePack_(id<EduStanfordNlpTreesTreebankLanguagePack> tlp) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesCollinsHeadFinder, initWithEduStanfordNlpTreesTreebankLanguagePack_, tlp)
}

void EduStanfordNlpTreesCollinsHeadFinder_initWithEduStanfordNlpTreesTreebankLanguagePack_withNSStringArray_(EduStanfordNlpTreesCollinsHeadFinder *self, id<EduStanfordNlpTreesTreebankLanguagePack> tlp, IOSObjectArray *categoriesToAvoid) {
  EduStanfordNlpTreesAbstractCollinsHeadFinder_initWithEduStanfordNlpTreesTreebankLanguagePack_withNSStringArray_(self, tlp, categoriesToAvoid);
  self->nonTerminalInfo_ = EduStanfordNlpUtilGenerics_newHashMap();
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"ADJP" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"left", @"NNS", @"QP", @"NN", @"$", @"ADVP", @"JJ", @"VBN", @"VBG", @"ADJP", @"JJR", @"NP", @"JJS", @"DT", @"FW", @"RBR", @"RBS", @"SBAR", @"RB" } count:19 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"ADVP" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"right", @"RB", @"RBR", @"RBS", @"FW", @"ADVP", @"TO", @"CD", @"JJR", @"JJ", @"IN", @"NP", @"JJS", @"NN" } count:14 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"CONJP" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"right", @"CC", @"RB", @"IN" } count:4 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"FRAG" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"right" } count:1 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"INTJ" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"left" } count:1 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"LST" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"right", @"LS", @":" } count:3 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"NAC" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"left", @"NN", @"NNS", @"NNP", @"NNPS", @"NP", @"NAC", @"EX", @"$", @"CD", @"QP", @"PRP", @"VBG", @"JJ", @"JJS", @"JJR", @"ADJP", @"FW" } count:18 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"NX" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"left" } count:1 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"PP" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"right", @"IN", @"TO", @"VBG", @"VBN", @"RP", @"FW" } count:7 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"PRN" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"left" } count:1 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"PRT" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"right", @"RP" } count:2 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"QP" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"left", @"$", @"IN", @"NNS", @"NN", @"JJ", @"RB", @"DT", @"CD", @"NCD", @"QP", @"JJR", @"JJS" } count:13 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"RRC" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"right", @"VP", @"NP", @"ADVP", @"ADJP", @"PP" } count:6 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"S" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"left", @"TO", @"IN", @"VP", @"S", @"SBAR", @"ADJP", @"UCP", @"NP" } count:9 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"SBAR" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"left", @"WHNP", @"WHPP", @"WHADVP", @"WHADJP", @"IN", @"DT", @"S", @"SQ", @"SINV", @"SBAR", @"FRAG" } count:12 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"SBARQ" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"left", @"SQ", @"S", @"SINV", @"SBARQ", @"FRAG" } count:6 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"SINV" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"left", @"VBZ", @"VBD", @"VBP", @"VB", @"MD", @"VP", @"S", @"SINV", @"ADJP", @"NP" } count:11 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"SQ" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"left", @"VBZ", @"VBD", @"VBP", @"VB", @"MD", @"VP", @"SQ" } count:8 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"UCP" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"right" } count:1 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"VP" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"left", @"TO", @"VBD", @"VBN", @"MD", @"VBZ", @"VB", @"VBG", @"VBP", @"AUX", @"AUXG", @"VP", @"ADJP", @"NN", @"NNS", @"NP" } count:16 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"WHADJP" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"left", @"CC", @"WRB", @"JJ", @"ADJP" } count:5 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"WHADVP" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"right", @"CC", @"WRB" } count:3 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"WHNP" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"left", @"WDT", @"WP", @"WP$", @"WHADJP", @"WHPP", @"WHNP" } count:7 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"WHPP" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"right", @"IN", @"TO", @"FW" } count:4 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"X" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"right" } count:1 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"NP" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"rightdis", @"NN", @"NNP", @"NNPS", @"NNS", @"NX", @"POS", @"JJR" } count:8 type:NSString_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ @"left", @"NP" } count:2 type:NSString_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ @"rightdis", @"$", @"ADJP", @"PRN" } count:4 type:NSString_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ @"right", @"CD" } count:2 type:NSString_class_()], [IOSObjectArray newArrayWithObjects:(id[]){ @"rightdis", @"JJ", @"JJS", @"RB", @"QP" } count:5 type:NSString_class_()] } count:5 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"TYPO" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"left" } count:1 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"EDITED" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"left" } count:1 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
  (void) [((id<JavaUtilMap>) nil_chk(self->nonTerminalInfo_)) putWithId:@"XS" withId:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray newArrayWithObjects:(id[]){ @"right", @"IN" } count:2 type:NSString_class_()] } count:1 type:IOSClass_arrayType(NSString_class_(), 1)]];
}

EduStanfordNlpTreesCollinsHeadFinder *new_EduStanfordNlpTreesCollinsHeadFinder_initWithEduStanfordNlpTreesTreebankLanguagePack_withNSStringArray_(id<EduStanfordNlpTreesTreebankLanguagePack> tlp, IOSObjectArray *categoriesToAvoid) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesCollinsHeadFinder, initWithEduStanfordNlpTreesTreebankLanguagePack_withNSStringArray_, tlp, categoriesToAvoid)
}

EduStanfordNlpTreesCollinsHeadFinder *create_EduStanfordNlpTreesCollinsHeadFinder_initWithEduStanfordNlpTreesTreebankLanguagePack_withNSStringArray_(id<EduStanfordNlpTreesTreebankLanguagePack> tlp, IOSObjectArray *categoriesToAvoid) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesCollinsHeadFinder, initWithEduStanfordNlpTreesTreebankLanguagePack_withNSStringArray_, tlp, categoriesToAvoid)
}

void EduStanfordNlpTreesCollinsHeadFinder_mainWithNSStringArray_(IOSObjectArray *args) {
  EduStanfordNlpTreesCollinsHeadFinder_initialize();
  EduStanfordNlpTreesTreebank *treebank = new_EduStanfordNlpTreesDiskTreebank_init();
  *JreLoadStaticRef(EduStanfordNlpLingCategoryWordTag, suppressTerminalDetails) = true;
  [treebank loadPathWithNSString:IOSObjectArray_Get(nil_chk(args), 0)];
  id<EduStanfordNlpTreesHeadFinder> chf = new_EduStanfordNlpTreesCollinsHeadFinder_init();
  [treebank applyWithEduStanfordNlpTreesTreeVisitor:new_EduStanfordNlpTreesCollinsHeadFinder_$Lambda$1_initWithEduStanfordNlpTreesHeadFinder_(chf)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesCollinsHeadFinder)

@implementation EduStanfordNlpTreesCollinsHeadFinder_$Lambda$1

- (void)visitTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)pt {
  [((EduStanfordNlpTreesTree *) nil_chk(pt)) percolateHeadsWithEduStanfordNlpTreesHeadFinder:val$chf_];
  [pt pennPrint];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) println];
}

@end

void EduStanfordNlpTreesCollinsHeadFinder_$Lambda$1_initWithEduStanfordNlpTreesHeadFinder_(EduStanfordNlpTreesCollinsHeadFinder_$Lambda$1 *self, id<EduStanfordNlpTreesHeadFinder> capture$0) {
  self->val$chf_ = capture$0;
  NSObject_init(self);
}

EduStanfordNlpTreesCollinsHeadFinder_$Lambda$1 *new_EduStanfordNlpTreesCollinsHeadFinder_$Lambda$1_initWithEduStanfordNlpTreesHeadFinder_(id<EduStanfordNlpTreesHeadFinder> capture$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesCollinsHeadFinder_$Lambda$1, initWithEduStanfordNlpTreesHeadFinder_, capture$0)
}

EduStanfordNlpTreesCollinsHeadFinder_$Lambda$1 *create_EduStanfordNlpTreesCollinsHeadFinder_$Lambda$1_initWithEduStanfordNlpTreesHeadFinder_(id<EduStanfordNlpTreesHeadFinder> capture$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesCollinsHeadFinder_$Lambda$1, initWithEduStanfordNlpTreesHeadFinder_, capture$0)
}
