//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/EnglishPatterns.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/trees/EnglishPatterns.h"
#include "edu/stanford/nlp/util/StringUtils.h"
#include "java/util/regex/Pattern.h"

@interface EduStanfordNlpTreesEnglishPatterns ()

- (instancetype)init;

@end

__attribute__((unused)) static void EduStanfordNlpTreesEnglishPatterns_init(EduStanfordNlpTreesEnglishPatterns *self);

__attribute__((unused)) static EduStanfordNlpTreesEnglishPatterns *new_EduStanfordNlpTreesEnglishPatterns_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesEnglishPatterns *create_EduStanfordNlpTreesEnglishPatterns_init();

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesEnglishPatterns)

IOSObjectArray *EduStanfordNlpTreesEnglishPatterns_copularVerbs;
IOSObjectArray *EduStanfordNlpTreesEnglishPatterns_beGetVerbs;
NSString *EduStanfordNlpTreesEnglishPatterns_timeWordRegex = @"/^(?i:Mondays?|Tuesdays?|Wednesdays?|Thursdays?|Fridays?|Saturdays?|Sundays?|years?|months?|weeks?|days?|mornings?|evenings?|nights?|January|Jan\\.|February|Feb\\.|March|Mar\\.|April|Apr\\.|May|June|July|August|Aug\\.|September|Sept\\.|October|Oct\\.|November|Nov\\.|December|Dec\\.|today|yesterday|tomorrow|spring|summer|fall|autumn|winter)$/";
NSString *EduStanfordNlpTreesEnglishPatterns_timeWordLotRegex = @"/^(?i:Mondays?|Tuesdays?|Wednesdays?|Thursdays?|Fridays?|Saturdays?|Sundays?|years?|months?|weeks?|days?|mornings?|evenings?|nights?|January|Jan\\.|February|Feb\\.|March|Mar\\.|April|Apr\\.|May|June|July|August|Aug\\.|September|Sept\\.|October|Oct\\.|November|Nov\\.|December|Dec\\.|today|yesterday|tomorrow|spring|summer|fall|autumn|winter|lot)$/";
NSString *EduStanfordNlpTreesEnglishPatterns_copularWordRegex;
NSString *EduStanfordNlpTreesEnglishPatterns_clausalComplementRegex = @"/^(?i:seem|seems|seemed|seeming|resemble|resembles|resembled|resembling|become|becomes|became|becoming|remain|remains|remained|remaining)$/";
NSString *EduStanfordNlpTreesEnglishPatterns_passiveAuxWordRegex;
NSString *EduStanfordNlpTreesEnglishPatterns_beAuxiliaryRegex = @"/^(?i:am|is|are|r|be|being|'s|'re|'m|was|were|been|s|ai|m|art|ar|wase)$/";
NSString *EduStanfordNlpTreesEnglishPatterns_haveRegex = @"/^(?i:have|had|has|having|'ve|ve|v|'d|d|hvae|hav|as)$/";
NSString *EduStanfordNlpTreesEnglishPatterns_selfRegex = @"/^(?i:myself|yourself|himself|herself|itself|ourselves|yourselves|themselves)$/";
NSString *EduStanfordNlpTreesEnglishPatterns_xcompVerbRegex = @"/^(?i:advise|advises|advised|advising|allow|allows|allowed|allowing|ask|asks|asked|asking|beg|begs|begged|begging|convice|convinces|convinced|convincing|demand|demands|demanded|demanding|desire|desires|desired|desiring|expect|expects|expected|expecting|encourage|encourages|encouraged|encouraging|force|forces|forced|forcing|implore|implores|implored|imploring|lobby|lobbies|lobbied|lobbying|order|orders|ordered|ordering|persuade|persuades|persuaded|persuading|pressure|pressures|pressured|pressuring|prompt|prompts|prompted|prompting|require|requires|required|requiring|tell|tells|told|telling|urge|urges|urged|urging)$/";
NSString *EduStanfordNlpTreesEnglishPatterns_xcompNoObjVerbRegex = @"/^(?i:advis|afford|allow|am$|appear|are$|ask|attempt|avoid|be$|bec[oa]m|beg[ia]n|believ|call|caus[ei]|ceas[ei]|choos[ei]|chose|claim|consider|continu|convinc|decid|decline|end|enjoy|expect|feel|felt|find|forb[ia]d|forc[ei]|forg[eo]t|found|going|gon|g[eo]t|happen|hat[ei]|ha[vds]|help|hesitat|hop[ei]|intend|instruct|invit|['i]s$|keep|kept|learn|leav[ei]|left|let|lik[ei]|look|lov[ei]|made|mak[ei]|manag|nam[ei]|need|offer|order|plan|pretend|proceed|promis|prov[ei]|rate|recommend|refus|regret|remember|requir|sa[iy]|seem|sound|start|stop|suggest|suppos|tell|tend|threaten|told|tr[yi]|turn|used|wan|was$|willing|wish)/";
NSString *EduStanfordNlpTreesEnglishPatterns_ccompVerbRegex = @"/^(?i:ask|asks|asked|asking|know|knows|knew|knowing|specify|specifies|specified|specifying|tell|tells|told|telling|understand|understands|understood|understanding|wonder|wonders|wondered|wondering)$/";
NSString *EduStanfordNlpTreesEnglishPatterns_ccompObjVerbRegex = @"/^(?i:tell|tells|told|telling)$/";
NSString *EduStanfordNlpTreesEnglishPatterns_RELATIVIZING_WORD_REGEX = @"(?i:that|what|which|who|whom|whose)";
JavaUtilRegexPattern *EduStanfordNlpTreesEnglishPatterns_RELATIVIZING_WORD_PATTERN;
NSString *EduStanfordNlpTreesEnglishPatterns_NP_V_S_INF_VERBS_REGEX = @"(?i:acquiesce|submit|bow|defer|accede|succumb|yield|capitulate|despise|disdain|dislike|regret|like|love|enjoy|fear|hate|pledge|proceed|begin|start|commence|recommence|resume|undertake|ally|collaborate|collude|conspire|discriminate|legislate|partner|protest|rebel|retaliate|scheme|sin|befriend|continue|broadcast|cable|e-mail|fax|modem|netmail|phone|radio|relay|satellite|semaphore|sign|signal|telecast|telegraph|telephone|telex|wire|wireless|ache|crave|fall|hanker|hope|hunger|itch|long|lust|pine|pray|thirst|wish|yearn|dangle|hanker|lust|thirst|yearn|babble|bark|bawl|bellow|bleat|blubber|boom|bray|burble|bluster|cackle|call|carol|chant|chatter|chirp|chortle|chuckle|cluck|coo|croak|croon|crow|cry|drawl|drone|gabble|gasp|gibber|groan|growl|grumble|grunt|hiss|holler|hoot|howl|jabber|keen|lilt|lisp|mewl|moan|mumble|murmur|mutter|nasal|natter|pant|prattle|purr|quaver|rage|rant|rasp|roar|rumble|scream|screech|shout|shriek|sibilate|simper|sigh|sing|smatter|smile|snap|snarl|snivel|snuffle|splutter|squall|squawk|squeak|squeal|stammer|stemmer|stutter|thunder|tisk|trill|trumpet|twang|twitter|vociferate|wail|warble|wheeze|whimper|whine|whisper|whistle|witter|whoop|yammer|yap|yell|yelp|yodel|blare|gurgle|hum|neglect|fail|forego|forgo|flub|overleap|manage|omit|seem|appear|prove|manage|fail|flub|try|attempt|intend|enjoy|expect|wish|hope|intend|mean|plan|propose|think|aim|dream|imagine|yen)";

@implementation EduStanfordNlpTreesEnglishPatterns

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesEnglishPatterns_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "copularVerbs", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 0, -1, -1 },
    { "beGetVerbs", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 1, -1, -1 },
    { "timeWordRegex", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "timeWordLotRegex", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
    { "copularWordRegex", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "clausalComplementRegex", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
    { "passiveAuxWordRegex", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
    { "beAuxiliaryRegex", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "haveRegex", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "selfRegex", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "xcompVerbRegex", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "xcompNoObjVerbRegex", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
    { "ccompVerbRegex", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 12, -1, -1 },
    { "ccompObjVerbRegex", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "RELATIVIZING_WORD_REGEX", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
    { "RELATIVIZING_WORD_PATTERN", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x19, -1, 15, -1, -1 },
    { "NP_V_S_INF_VERBS_REGEX", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 16, -1, -1 },
  };
  static const void *ptrTable[] = { &EduStanfordNlpTreesEnglishPatterns_copularVerbs, &EduStanfordNlpTreesEnglishPatterns_beGetVerbs, &EduStanfordNlpTreesEnglishPatterns_timeWordRegex, &EduStanfordNlpTreesEnglishPatterns_timeWordLotRegex, &EduStanfordNlpTreesEnglishPatterns_copularWordRegex, &EduStanfordNlpTreesEnglishPatterns_clausalComplementRegex, &EduStanfordNlpTreesEnglishPatterns_passiveAuxWordRegex, &EduStanfordNlpTreesEnglishPatterns_beAuxiliaryRegex, &EduStanfordNlpTreesEnglishPatterns_haveRegex, &EduStanfordNlpTreesEnglishPatterns_selfRegex, &EduStanfordNlpTreesEnglishPatterns_xcompVerbRegex, &EduStanfordNlpTreesEnglishPatterns_xcompNoObjVerbRegex, &EduStanfordNlpTreesEnglishPatterns_ccompVerbRegex, &EduStanfordNlpTreesEnglishPatterns_ccompObjVerbRegex, &EduStanfordNlpTreesEnglishPatterns_RELATIVIZING_WORD_REGEX, &EduStanfordNlpTreesEnglishPatterns_RELATIVIZING_WORD_PATTERN, &EduStanfordNlpTreesEnglishPatterns_NP_V_S_INF_VERBS_REGEX };
  static const J2ObjcClassInfo _EduStanfordNlpTreesEnglishPatterns = { "EnglishPatterns", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0x1, 1, 17, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesEnglishPatterns;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesEnglishPatterns class]) {
    EduStanfordNlpTreesEnglishPatterns_copularVerbs = [IOSObjectArray newArrayWithObjects:(id[]){ @"be", @"being", @"been", @"am", @"are", @"r", @"is", @"ai", @"was", @"were", @"'m", @"m", @"'re", @"'s", @"s", @"`s", @"art", @"ar", @"wase" } count:19 type:NSString_class_()];
    EduStanfordNlpTreesEnglishPatterns_beGetVerbs = [IOSObjectArray newArrayWithObjects:(id[]){ @"be", @"being", @"been", @"am", @"are", @"r", @"is", @"ai", @"was", @"were", @"'m", @"m", @"'re", @"'s", @"s", @"`s", @"art", @"ar", @"wase", @"get", @"getting", @"gets", @"got", @"gotten" } count:24 type:NSString_class_()];
    EduStanfordNlpTreesEnglishPatterns_copularWordRegex = JreStrcat("$$$", @"/^(?i:", EduStanfordNlpUtilStringUtils_joinWithNSObjectArray_withNSString_(EduStanfordNlpTreesEnglishPatterns_copularVerbs, @"|"), @")$/");
    EduStanfordNlpTreesEnglishPatterns_passiveAuxWordRegex = JreStrcat("$$$", @"/^(?i:", EduStanfordNlpUtilStringUtils_joinWithNSObjectArray_withNSString_(EduStanfordNlpTreesEnglishPatterns_beGetVerbs, @"|"), @")$/");
    EduStanfordNlpTreesEnglishPatterns_RELATIVIZING_WORD_PATTERN = JavaUtilRegexPattern_compileWithNSString_(EduStanfordNlpTreesEnglishPatterns_RELATIVIZING_WORD_REGEX);
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesEnglishPatterns)
  }
}

@end

void EduStanfordNlpTreesEnglishPatterns_init(EduStanfordNlpTreesEnglishPatterns *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesEnglishPatterns *new_EduStanfordNlpTreesEnglishPatterns_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesEnglishPatterns, init)
}

EduStanfordNlpTreesEnglishPatterns *create_EduStanfordNlpTreesEnglishPatterns_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesEnglishPatterns, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesEnglishPatterns)
