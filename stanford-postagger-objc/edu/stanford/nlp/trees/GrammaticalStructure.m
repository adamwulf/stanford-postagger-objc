//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/GrammaticalStructure.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/graph/DirectedMultiGraph.h"
#include "edu/stanford/nlp/international/Language.h"
#include "edu/stanford/nlp/io/IOUtils.h"
#include "edu/stanford/nlp/io/RuntimeIOException.h"
#include "edu/stanford/nlp/ling/AbstractCoreLabel.h"
#include "edu/stanford/nlp/ling/CoreAnnotations.h"
#include "edu/stanford/nlp/ling/CoreLabel.h"
#include "edu/stanford/nlp/ling/IndexedWord.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/ling/Word.h"
#include "edu/stanford/nlp/parser/lexparser/TreebankLangParserParams.h"
#include "edu/stanford/nlp/process/PTBTokenizer.h"
#include "edu/stanford/nlp/process/WhitespaceTokenizer.h"
#include "edu/stanford/nlp/trees/Dependency.h"
#include "edu/stanford/nlp/trees/DependencyPrinter.h"
#include "edu/stanford/nlp/trees/DependencyReader.h"
#include "edu/stanford/nlp/trees/GrammaticalRelation.h"
#include "edu/stanford/nlp/trees/GrammaticalStructure.h"
#include "edu/stanford/nlp/trees/GrammaticalStructureFromDependenciesFactory.h"
#include "edu/stanford/nlp/trees/HeadFinder.h"
#include "edu/stanford/nlp/trees/MemoryTreebank.h"
#include "edu/stanford/nlp/trees/NPTmpRetainingTreeNormalizer.h"
#include "edu/stanford/nlp/trees/PennTreeReader.h"
#include "edu/stanford/nlp/trees/SemanticHeadFinder.h"
#include "edu/stanford/nlp/trees/SimpleTree.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeGraphNode.h"
#include "edu/stanford/nlp/trees/TreeReader.h"
#include "edu/stanford/nlp/trees/TreeTransformer.h"
#include "edu/stanford/nlp/trees/TreebankLanguagePack.h"
#include "edu/stanford/nlp/trees/Trees.h"
#include "edu/stanford/nlp/trees/TypedDependency.h"
#include "edu/stanford/nlp/trees/UniversalPOSMapper.h"
#include "edu/stanford/nlp/trees/UniversalSemanticHeadFinder.h"
#include "edu/stanford/nlp/util/CoreMap.h"
#include "edu/stanford/nlp/util/Filters.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "edu/stanford/nlp/util/ReflectionLoading.h"
#include "edu/stanford/nlp/util/StringUtils.h"
#include "java/io/BufferedReader.h"
#include "java/io/FileInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStreamReader.h"
#include "java/io/LineNumberReader.h"
#include "java/io/PrintStream.h"
#include "java/io/Reader.h"
#include "java/io/Serializable.h"
#include "java/io/StringReader.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Boolean.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Enum.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/InstantiationException.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/SecurityException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/Constructor.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/lang/reflect/Method.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Properties.h"
#include "java/util/Set.h"
#include "java/util/Spliterator.h"
#include "java/util/WeakHashMap.h"
#include "java/util/concurrent/locks/Lock.h"
#include "java/util/function/Consumer.h"
#include "java/util/function/Function.h"
#include "java/util/function/Predicate.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"

@interface EduStanfordNlpTreesGrammaticalStructure () {
 @public
  id<JavaUtilMap> indexMap_;
}

- (void)indexNodesWithEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)tree;

- (jint)indexLeavesWithEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)tree
                                                withInt:(jint)startIndex;

- (jint)indexNodesWithEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)tree
                                               withInt:(jint)startIndex;

- (void)addNodeToIndexMapWithInt:(jint)index
withEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)node;

- (EduStanfordNlpTreesTreeGraphNode *)getNodeByIndexWithInt:(jint)index;

+ (void)throwDepFormatExceptionWithNSString:(NSString *)dep;

+ (void)attachStrandedNodesWithEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)t
                           withEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)root
                                                    withBoolean:(jboolean)attach
                                  withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)puncFilter
                                  withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)tagFilter
                      withEduStanfordNlpGraphDirectedMultiGraph:(EduStanfordNlpGraphDirectedMultiGraph *)basicGraph;

+ (void)analyzeNodeWithEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)t
                   withEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)root
                                 withJavaUtilCollection:(id<JavaUtilCollection>)relations
                      withEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)hf
                          withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)puncFilter
                          withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)tagFilter
              withEduStanfordNlpGraphDirectedMultiGraph:(EduStanfordNlpGraphDirectedMultiGraph *)basicGraph
              withEduStanfordNlpGraphDirectedMultiGraph:(EduStanfordNlpGraphDirectedMultiGraph *)completeGraph;

- (void)getExtraDepsWithJavaUtilList:(id<JavaUtilList>)deps
       withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)puncTypedDepFilter
withEduStanfordNlpGraphDirectedMultiGraph:(EduStanfordNlpGraphDirectedMultiGraph *)completeGraph;

- (id<JavaUtilList>)getDepsWithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)puncTypedDepFilter
               withEduStanfordNlpGraphDirectedMultiGraph:(EduStanfordNlpGraphDirectedMultiGraph *)basicGraph;

+ (EduStanfordNlpTreesGrammaticalRelation *)getGrammaticalRelationCommonAncestorWithEduStanfordNlpLingAbstractCoreLabel:(id<EduStanfordNlpLingAbstractCoreLabel>)gov
                                                                                withEduStanfordNlpLingAbstractCoreLabel:(id<EduStanfordNlpLingAbstractCoreLabel>)govH
                                                                                withEduStanfordNlpLingAbstractCoreLabel:(id<EduStanfordNlpLingAbstractCoreLabel>)dep
                                                                                withEduStanfordNlpLingAbstractCoreLabel:(id<EduStanfordNlpLingAbstractCoreLabel>)depH
                                                                                                       withJavaUtilList:(id<JavaUtilList>)labels;

+ (id<JavaUtilList>)removeGrammaticalRelationAncestorsWithJavaUtilList:(id<JavaUtilList>)original;

+ (NSString *)toStringIndexWithEduStanfordNlpTreesTypedDependency:(EduStanfordNlpTreesTypedDependency *)td
                                                  withJavaUtilMap:(id<JavaUtilMap>)indexToPos;

+ (IOSObjectArray *)parseClassConstructArgsWithNSString:(NSString *)namePlusArgs;

+ (id<EduStanfordNlpTreesDependencyReader>)loadAlternateDependencyReaderWithNSString:(NSString *)altDepReaderName;

+ (id<EduStanfordNlpTreesDependencyPrinter>)loadAlternateDependencyPrinterWithNSString:(NSString *)altDepPrinterName;

+ (id<JavaUtilFunctionFunction>)loadParserWithNSString:(NSString *)parserFile
                                          withNSString:(NSString *)parserOptions
                                           withBoolean:(jboolean)makeCopulaHead;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesGrammaticalStructure, indexMap_, id<JavaUtilMap>)

inline jboolean EduStanfordNlpTreesGrammaticalStructure_get_PRINT_DEBUGGING();
static jboolean EduStanfordNlpTreesGrammaticalStructure_PRINT_DEBUGGING;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(EduStanfordNlpTreesGrammaticalStructure, PRINT_DEBUGGING, jboolean)

inline jlong EduStanfordNlpTreesGrammaticalStructure_get_serialVersionUID();
#define EduStanfordNlpTreesGrammaticalStructure_serialVersionUID 2286294455343892678LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTreesGrammaticalStructure, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpTreesGrammaticalStructure_indexNodesWithEduStanfordNlpTreesTreeGraphNode_(EduStanfordNlpTreesGrammaticalStructure *self, EduStanfordNlpTreesTreeGraphNode *tree);

__attribute__((unused)) static jint EduStanfordNlpTreesGrammaticalStructure_indexLeavesWithEduStanfordNlpTreesTreeGraphNode_withInt_(EduStanfordNlpTreesGrammaticalStructure *self, EduStanfordNlpTreesTreeGraphNode *tree, jint startIndex);

__attribute__((unused)) static jint EduStanfordNlpTreesGrammaticalStructure_indexNodesWithEduStanfordNlpTreesTreeGraphNode_withInt_(EduStanfordNlpTreesGrammaticalStructure *self, EduStanfordNlpTreesTreeGraphNode *tree, jint startIndex);

__attribute__((unused)) static void EduStanfordNlpTreesGrammaticalStructure_addNodeToIndexMapWithInt_withEduStanfordNlpTreesTreeGraphNode_(EduStanfordNlpTreesGrammaticalStructure *self, jint index, EduStanfordNlpTreesTreeGraphNode *node);

__attribute__((unused)) static EduStanfordNlpTreesTreeGraphNode *EduStanfordNlpTreesGrammaticalStructure_getNodeByIndexWithInt_(EduStanfordNlpTreesGrammaticalStructure *self, jint index);

__attribute__((unused)) static void EduStanfordNlpTreesGrammaticalStructure_throwDepFormatExceptionWithNSString_(NSString *dep);

__attribute__((unused)) static void EduStanfordNlpTreesGrammaticalStructure_attachStrandedNodesWithEduStanfordNlpTreesTreeGraphNode_withEduStanfordNlpTreesTreeGraphNode_withBoolean_withJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_withEduStanfordNlpGraphDirectedMultiGraph_(EduStanfordNlpTreesTreeGraphNode *t, EduStanfordNlpTreesTreeGraphNode *root, jboolean attach, id<JavaUtilFunctionPredicate> puncFilter, id<JavaUtilFunctionPredicate> tagFilter, EduStanfordNlpGraphDirectedMultiGraph *basicGraph);

__attribute__((unused)) static void EduStanfordNlpTreesGrammaticalStructure_analyzeNodeWithEduStanfordNlpTreesTreeGraphNode_withEduStanfordNlpTreesTreeGraphNode_withJavaUtilCollection_withEduStanfordNlpTreesHeadFinder_withJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_withEduStanfordNlpGraphDirectedMultiGraph_withEduStanfordNlpGraphDirectedMultiGraph_(EduStanfordNlpTreesTreeGraphNode *t, EduStanfordNlpTreesTreeGraphNode *root, id<JavaUtilCollection> relations, id<EduStanfordNlpTreesHeadFinder> hf, id<JavaUtilFunctionPredicate> puncFilter, id<JavaUtilFunctionPredicate> tagFilter, EduStanfordNlpGraphDirectedMultiGraph *basicGraph, EduStanfordNlpGraphDirectedMultiGraph *completeGraph);

__attribute__((unused)) static void EduStanfordNlpTreesGrammaticalStructure_getExtraDepsWithJavaUtilList_withJavaUtilFunctionPredicate_withEduStanfordNlpGraphDirectedMultiGraph_(EduStanfordNlpTreesGrammaticalStructure *self, id<JavaUtilList> deps, id<JavaUtilFunctionPredicate> puncTypedDepFilter, EduStanfordNlpGraphDirectedMultiGraph *completeGraph);

__attribute__((unused)) static id<JavaUtilList> EduStanfordNlpTreesGrammaticalStructure_getDepsWithJavaUtilFunctionPredicate_withEduStanfordNlpGraphDirectedMultiGraph_(EduStanfordNlpTreesGrammaticalStructure *self, id<JavaUtilFunctionPredicate> puncTypedDepFilter, EduStanfordNlpGraphDirectedMultiGraph *basicGraph);

__attribute__((unused)) static EduStanfordNlpTreesGrammaticalRelation *EduStanfordNlpTreesGrammaticalStructure_getGrammaticalRelationCommonAncestorWithEduStanfordNlpLingAbstractCoreLabel_withEduStanfordNlpLingAbstractCoreLabel_withEduStanfordNlpLingAbstractCoreLabel_withEduStanfordNlpLingAbstractCoreLabel_withJavaUtilList_(id<EduStanfordNlpLingAbstractCoreLabel> gov, id<EduStanfordNlpLingAbstractCoreLabel> govH, id<EduStanfordNlpLingAbstractCoreLabel> dep, id<EduStanfordNlpLingAbstractCoreLabel> depH, id<JavaUtilList> labels);

__attribute__((unused)) static id<JavaUtilList> EduStanfordNlpTreesGrammaticalStructure_removeGrammaticalRelationAncestorsWithJavaUtilList_(id<JavaUtilList> original);

__attribute__((unused)) static NSString *EduStanfordNlpTreesGrammaticalStructure_toStringIndexWithEduStanfordNlpTreesTypedDependency_withJavaUtilMap_(EduStanfordNlpTreesTypedDependency *td, id<JavaUtilMap> indexToPos);

__attribute__((unused)) static IOSObjectArray *EduStanfordNlpTreesGrammaticalStructure_parseClassConstructArgsWithNSString_(NSString *namePlusArgs);

__attribute__((unused)) static id<EduStanfordNlpTreesDependencyReader> EduStanfordNlpTreesGrammaticalStructure_loadAlternateDependencyReaderWithNSString_(NSString *altDepReaderName);

__attribute__((unused)) static id<EduStanfordNlpTreesDependencyPrinter> EduStanfordNlpTreesGrammaticalStructure_loadAlternateDependencyPrinterWithNSString_(NSString *altDepPrinterName);

__attribute__((unused)) static id<JavaUtilFunctionFunction> EduStanfordNlpTreesGrammaticalStructure_loadParserWithNSString_withNSString_withBoolean_(NSString *parserFile, NSString *parserOptions, jboolean makeCopulaHead);

__attribute__((unused)) static IOSObjectArray *EduStanfordNlpTreesGrammaticalStructure__Annotations$0();

__attribute__((unused)) static IOSObjectArray *EduStanfordNlpTreesGrammaticalStructure__Annotations$1();

__attribute__((unused)) static IOSObjectArray *EduStanfordNlpTreesGrammaticalStructure__Annotations$2();

__attribute__((unused)) static void EduStanfordNlpTreesGrammaticalStructure_Extras_initWithBoolean_withBoolean_withBoolean_withNSString_withInt_(EduStanfordNlpTreesGrammaticalStructure_Extras *self, jboolean doRef, jboolean doSubj, jboolean collapseRef, NSString *__name, jint __ordinal);

__attribute__((unused)) static EduStanfordNlpTreesGrammaticalStructure_Extras *new_EduStanfordNlpTreesGrammaticalStructure_Extras_initWithBoolean_withBoolean_withBoolean_withNSString_withInt_(jboolean doRef, jboolean doSubj, jboolean collapseRef, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter : NSObject < JavaUtilFunctionPredicate, JavaIoSerializable > {
 @public
  id<JavaUtilFunctionPredicate> npf_;
}

- (instancetype)initWithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)f;

- (jboolean)testWithId:(id<EduStanfordNlpTreesDependency>)d;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter)

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter, npf_, id<JavaUtilFunctionPredicate>)

inline jlong EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter_get_serialVersionUID();
#define EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter_serialVersionUID -2319891944796663180LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter_initWithJavaUtilFunctionPredicate_(EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter *self, id<JavaUtilFunctionPredicate> f);

__attribute__((unused)) static EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter *new_EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter_initWithJavaUtilFunctionPredicate_(id<JavaUtilFunctionPredicate> f) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter *create_EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter_initWithJavaUtilFunctionPredicate_(id<JavaUtilFunctionPredicate> f);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter)

@interface EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter : NSObject < JavaUtilFunctionPredicate, JavaIoSerializable > {
 @public
  id<JavaUtilFunctionPredicate> npf_;
  id<JavaUtilFunctionPredicate> tf_;
}

- (instancetype)initWithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)f
                    withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)tf;

- (jboolean)testWithId:(EduStanfordNlpTreesTypedDependency *)d;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter)

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter, npf_, id<JavaUtilFunctionPredicate>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter, tf_, id<JavaUtilFunctionPredicate>)

inline jlong EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter_get_serialVersionUID();
#define EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter_serialVersionUID -2872766864289207468LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter_initWithJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_(EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter *self, id<JavaUtilFunctionPredicate> f, id<JavaUtilFunctionPredicate> tf);

__attribute__((unused)) static EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter *new_EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter_initWithJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_(id<JavaUtilFunctionPredicate> f, id<JavaUtilFunctionPredicate> tf) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter *create_EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter_initWithJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_(id<JavaUtilFunctionPredicate> f, id<JavaUtilFunctionPredicate> tf);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter)

@interface EduStanfordNlpTreesGrammaticalStructure_NameComparator : NSObject < JavaUtilComparator >

- (jint)compareWithId:(id)o1
               withId:(id)o2;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesGrammaticalStructure_NameComparator)

__attribute__((unused)) static void EduStanfordNlpTreesGrammaticalStructure_NameComparator_init(EduStanfordNlpTreesGrammaticalStructure_NameComparator *self);

__attribute__((unused)) static EduStanfordNlpTreesGrammaticalStructure_NameComparator *new_EduStanfordNlpTreesGrammaticalStructure_NameComparator_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesGrammaticalStructure_NameComparator *create_EduStanfordNlpTreesGrammaticalStructure_NameComparator_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesGrammaticalStructure_NameComparator)

@interface EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper : NSObject < JavaLangIterable > {
 @public
  id<JavaLangIterable> trees_;
  jboolean keepPunct_;
  id<EduStanfordNlpParserLexparserTreebankLangParserParams> params_;
  id<JavaUtilMap> origTrees_;
}

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)wrappedTrees
                             withBoolean:(jboolean)keepPunct
withEduStanfordNlpParserLexparserTreebankLangParserParams:(id<EduStanfordNlpParserLexparserTreebankLangParserParams>)params;

- (id<JavaUtilIterator>)iterator;

- (EduStanfordNlpTreesTree *)getOriginalTreeWithEduStanfordNlpTreesGrammaticalStructure:(EduStanfordNlpTreesGrammaticalStructure *)gs;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper)

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper, trees_, id<JavaLangIterable>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper, params_, id<EduStanfordNlpParserLexparserTreebankLangParserParams>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper, origTrees_, id<JavaUtilMap>)

__attribute__((unused)) static void EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_initWithJavaLangIterable_withBoolean_withEduStanfordNlpParserLexparserTreebankLangParserParams_(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper *self, id<JavaLangIterable> wrappedTrees, jboolean keepPunct, id<EduStanfordNlpParserLexparserTreebankLangParserParams> params);

__attribute__((unused)) static EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper *new_EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_initWithJavaLangIterable_withBoolean_withEduStanfordNlpParserLexparserTreebankLangParserParams_(id<JavaLangIterable> wrappedTrees, jboolean keepPunct, id<EduStanfordNlpParserLexparserTreebankLangParserParams> params) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper *create_EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_initWithJavaLangIterable_withBoolean_withEduStanfordNlpParserLexparserTreebankLangParserParams_(id<JavaLangIterable> wrappedTrees, jboolean keepPunct, id<EduStanfordNlpParserLexparserTreebankLangParserParams> params);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper)

@interface EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator : NSObject < JavaUtilIterator > {
 @public
  EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper *this$0_;
  id<JavaUtilIterator> tbIterator_;
  id<JavaUtilFunctionPredicate> puncFilter_;
  id<EduStanfordNlpTreesHeadFinder> hf_;
  EduStanfordNlpTreesGrammaticalStructure *next_;
}

- (instancetype)initWithEduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper:(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper *)outer$;

- (void)primeGs;

- (jboolean)hasNext;

- (EduStanfordNlpTreesGrammaticalStructure *)next;

- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator)

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator, this$0_, EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator, tbIterator_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator, puncFilter_, id<JavaUtilFunctionPredicate>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator, hf_, id<EduStanfordNlpTreesHeadFinder>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator, next_, EduStanfordNlpTreesGrammaticalStructure *)

__attribute__((unused)) static void EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator_initWithEduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator *self, EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper *outer$);

__attribute__((unused)) static EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator *new_EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator_initWithEduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator *create_EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator_initWithEduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper *outer$);

__attribute__((unused)) static void EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator_primeGs(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator *self);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator)

@interface EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1 : NSObject < JavaUtilIterator > {
 @public
  EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing *this$0_;
  NSString *line_;
  JavaIoBufferedReader *val$iReader_;
}

- (jboolean)hasNext;

- (EduStanfordNlpTreesTree *)next;

- (void)remove;

- (instancetype)initWithEduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing:(EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing *)outer$
                                                              withJavaIoBufferedReader:(JavaIoBufferedReader *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1)

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1, this$0_, EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1, line_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1, val$iReader_, JavaIoBufferedReader *)

__attribute__((unused)) static void EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1_initWithEduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_withJavaIoBufferedReader_(EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1 *self, EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing *outer$, JavaIoBufferedReader *capture$0);

__attribute__((unused)) static EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1 *new_EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1_initWithEduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_withJavaIoBufferedReader_(EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing *outer$, JavaIoBufferedReader *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1 *create_EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1_initWithEduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_withJavaIoBufferedReader_(EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing *outer$, JavaIoBufferedReader *capture$0);

@interface EduStanfordNlpTreesGrammaticalStructure_$1 : EduStanfordNlpTreesGrammaticalStructure

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)arg$0
withEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesGrammaticalStructure_$1)

inline jlong EduStanfordNlpTreesGrammaticalStructure_$1_get_serialVersionUID();
#define EduStanfordNlpTreesGrammaticalStructure_$1_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTreesGrammaticalStructure_$1, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpTreesGrammaticalStructure_$1_initWithJavaUtilList_withEduStanfordNlpTreesTreeGraphNode_(EduStanfordNlpTreesGrammaticalStructure_$1 *self, id<JavaUtilList> arg$0, EduStanfordNlpTreesTreeGraphNode *arg$1);

__attribute__((unused)) static EduStanfordNlpTreesGrammaticalStructure_$1 *new_EduStanfordNlpTreesGrammaticalStructure_$1_initWithJavaUtilList_withEduStanfordNlpTreesTreeGraphNode_(id<JavaUtilList> arg$0, EduStanfordNlpTreesTreeGraphNode *arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesGrammaticalStructure_$1 *create_EduStanfordNlpTreesGrammaticalStructure_$1_initWithJavaUtilList_withEduStanfordNlpTreesTreeGraphNode_(id<JavaUtilList> arg$0, EduStanfordNlpTreesTreeGraphNode *arg$1);

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesGrammaticalStructure)

NSString *EduStanfordNlpTreesGrammaticalStructure_DEFAULT_PARSER_FILE = @"/u/nlp/data/lexparser/englishPCFG.ser.gz";

@implementation EduStanfordNlpTreesGrammaticalStructure

- (instancetype)initWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                         withJavaUtilCollection:(id<JavaUtilCollection>)relations
                withJavaUtilConcurrentLocksLock:(id<JavaUtilConcurrentLocksLock>)relationsLock
         withEduStanfordNlpTreesTreeTransformer:(id<EduStanfordNlpTreesTreeTransformer>)transformer
              withEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)hf
                  withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)puncFilter
                  withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)tagFilter {
  EduStanfordNlpTreesGrammaticalStructure_initWithEduStanfordNlpTreesTree_withJavaUtilCollection_withJavaUtilConcurrentLocksLock_withEduStanfordNlpTreesTreeTransformer_withEduStanfordNlpTreesHeadFinder_withJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_(self, t, relations, relationsLock, transformer, hf, puncFilter, tagFilter);
  return self;
}

- (void)indexNodesWithEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)tree {
  EduStanfordNlpTreesGrammaticalStructure_indexNodesWithEduStanfordNlpTreesTreeGraphNode_(self, tree);
}

- (jint)indexLeavesWithEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)tree
                                                withInt:(jint)startIndex {
  return EduStanfordNlpTreesGrammaticalStructure_indexLeavesWithEduStanfordNlpTreesTreeGraphNode_withInt_(self, tree, startIndex);
}

- (jint)indexNodesWithEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)tree
                                               withInt:(jint)startIndex {
  return EduStanfordNlpTreesGrammaticalStructure_indexNodesWithEduStanfordNlpTreesTreeGraphNode_withInt_(self, tree, startIndex);
}

- (void)addNodeToIndexMapWithInt:(jint)index
withEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)node {
  EduStanfordNlpTreesGrammaticalStructure_addNodeToIndexMapWithInt_withEduStanfordNlpTreesTreeGraphNode_(self, index, node);
}

- (EduStanfordNlpTreesTreeGraphNode *)getNodeByIndexWithInt:(jint)index {
  return EduStanfordNlpTreesGrammaticalStructure_getNodeByIndexWithInt_(self, index);
}

- (EduStanfordNlpTreesTreeGraphNode *)root {
  return root_;
}

+ (void)throwDepFormatExceptionWithNSString:(NSString *)dep {
  EduStanfordNlpTreesGrammaticalStructure_throwDepFormatExceptionWithNSString_(dep);
}

+ (EduStanfordNlpTreesGrammaticalStructure *)fromStringRepsWithJavaUtilList:(id<JavaUtilList>)tokens
                                                           withJavaUtilList:(id<JavaUtilList>)posTags
                                                           withJavaUtilList:(id<JavaUtilList>)deps {
  return EduStanfordNlpTreesGrammaticalStructure_fromStringRepsWithJavaUtilList_withJavaUtilList_withJavaUtilList_(tokens, posTags, deps);
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)projectiveDependencies
withEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)root {
  EduStanfordNlpTreesGrammaticalStructure_initWithJavaUtilList_withEduStanfordNlpTreesTreeGraphNode_(self, projectiveDependencies, root);
  return self;
}

- (NSString *)description {
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  (void) [sb appendWithNSString:[((NSString *) nil_chk([((EduStanfordNlpTreesTreeGraphNode *) nil_chk(root_)) toPrettyStringWithInt:0])) substring:1]];
  (void) [sb appendWithNSString:@"Typed Dependencies:\n"];
  (void) [sb appendWithId:typedDependencies_];
  return [sb description];
}

+ (void)attachStrandedNodesWithEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)t
                           withEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)root
                                                    withBoolean:(jboolean)attach
                                  withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)puncFilter
                                  withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)tagFilter
                      withEduStanfordNlpGraphDirectedMultiGraph:(EduStanfordNlpGraphDirectedMultiGraph *)basicGraph {
  EduStanfordNlpTreesGrammaticalStructure_attachStrandedNodesWithEduStanfordNlpTreesTreeGraphNode_withEduStanfordNlpTreesTreeGraphNode_withBoolean_withJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_withEduStanfordNlpGraphDirectedMultiGraph_(t, root, attach, puncFilter, tagFilter, basicGraph);
}

+ (void)analyzeNodeWithEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)t
                   withEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)root
                                 withJavaUtilCollection:(id<JavaUtilCollection>)relations
                      withEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)hf
                          withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)puncFilter
                          withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)tagFilter
              withEduStanfordNlpGraphDirectedMultiGraph:(EduStanfordNlpGraphDirectedMultiGraph *)basicGraph
              withEduStanfordNlpGraphDirectedMultiGraph:(EduStanfordNlpGraphDirectedMultiGraph *)completeGraph {
  EduStanfordNlpTreesGrammaticalStructure_analyzeNodeWithEduStanfordNlpTreesTreeGraphNode_withEduStanfordNlpTreesTreeGraphNode_withJavaUtilCollection_withEduStanfordNlpTreesHeadFinder_withJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_withEduStanfordNlpGraphDirectedMultiGraph_withEduStanfordNlpGraphDirectedMultiGraph_(t, root, relations, hf, puncFilter, tagFilter, basicGraph, completeGraph);
}

- (void)getExtraDepsWithJavaUtilList:(id<JavaUtilList>)deps
       withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)puncTypedDepFilter
withEduStanfordNlpGraphDirectedMultiGraph:(EduStanfordNlpGraphDirectedMultiGraph *)completeGraph {
  EduStanfordNlpTreesGrammaticalStructure_getExtraDepsWithJavaUtilList_withJavaUtilFunctionPredicate_withEduStanfordNlpGraphDirectedMultiGraph_(self, deps, puncTypedDepFilter, completeGraph);
}

- (id<JavaUtilList>)getDepsWithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)puncTypedDepFilter
               withEduStanfordNlpGraphDirectedMultiGraph:(EduStanfordNlpGraphDirectedMultiGraph *)basicGraph {
  return EduStanfordNlpTreesGrammaticalStructure_getDepsWithJavaUtilFunctionPredicate_withEduStanfordNlpGraphDirectedMultiGraph_(self, puncTypedDepFilter, basicGraph);
}

- (id<JavaUtilFunctionPredicate>)extraTreeDepFilter {
  return EduStanfordNlpUtilFilters_acceptFilter();
}

- (void)postProcessDependenciesWithJavaUtilList:(id<JavaUtilList>)basicDep {
}

- (void)getExtrasWithJavaUtilList:(id<JavaUtilList>)basicDep {
}

- (void)getTreeDepsWithJavaUtilList:(id<JavaUtilList>)deps
withEduStanfordNlpGraphDirectedMultiGraph:(EduStanfordNlpGraphDirectedMultiGraph *)completeGraph
      withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)puncTypedDepFilter
      withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)extraTreeDepFilter {
  for (EduStanfordNlpTreesTreeGraphNode * __strong gov in nil_chk([((EduStanfordNlpGraphDirectedMultiGraph *) nil_chk(completeGraph)) getAllVertices])) {
    for (EduStanfordNlpTreesTreeGraphNode * __strong dep in nil_chk([completeGraph getChildrenWithId:gov])) {
      for (EduStanfordNlpTreesGrammaticalRelation * __strong rel in nil_chk(EduStanfordNlpTreesGrammaticalStructure_removeGrammaticalRelationAncestorsWithJavaUtilList_([completeGraph getEdgesWithId:gov withId:dep]))) {
        EduStanfordNlpTreesTypedDependency *newDep = new_EduStanfordNlpTreesTypedDependency_initWithEduStanfordNlpTreesGrammaticalRelation_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_(rel, new_EduStanfordNlpLingIndexedWord_initWithEduStanfordNlpLingCoreLabel_([((EduStanfordNlpTreesTreeGraphNode *) nil_chk([((EduStanfordNlpTreesTreeGraphNode *) nil_chk(gov)) headWordNode])) label]), new_EduStanfordNlpLingIndexedWord_initWithEduStanfordNlpLingCoreLabel_([((EduStanfordNlpTreesTreeGraphNode *) nil_chk([((EduStanfordNlpTreesTreeGraphNode *) nil_chk(dep)) headWordNode])) label]));
        if (![((id<JavaUtilList>) nil_chk(deps)) containsWithId:newDep] && [((id<JavaUtilFunctionPredicate>) nil_chk(puncTypedDepFilter)) testWithId:newDep] && [((id<JavaUtilFunctionPredicate>) nil_chk(extraTreeDepFilter)) testWithId:newDep]) {
          [newDep setExtra];
          [deps addWithId:newDep];
        }
      }
    }
  }
}

- (EduStanfordNlpTreesGrammaticalRelation *)getGrammaticalRelationWithInt:(jint)govIndex
                                                                  withInt:(jint)depIndex {
  EduStanfordNlpTreesTreeGraphNode *gov = EduStanfordNlpTreesGrammaticalStructure_getNodeByIndexWithInt_(self, govIndex);
  EduStanfordNlpTreesTreeGraphNode *dep = EduStanfordNlpTreesGrammaticalStructure_getNodeByIndexWithInt_(self, depIndex);
  return [self getGrammaticalRelationWithEduStanfordNlpLingIndexedWord:new_EduStanfordNlpLingIndexedWord_initWithEduStanfordNlpLingCoreLabel_([((EduStanfordNlpTreesTreeGraphNode *) nil_chk(gov)) label]) withEduStanfordNlpLingIndexedWord:new_EduStanfordNlpLingIndexedWord_initWithEduStanfordNlpLingCoreLabel_([((EduStanfordNlpTreesTreeGraphNode *) nil_chk(dep)) label])];
}

- (EduStanfordNlpTreesGrammaticalRelation *)getGrammaticalRelationWithEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)gov
                                                                  withEduStanfordNlpLingIndexedWord:(EduStanfordNlpLingIndexedWord *)dep {
  id<JavaUtilList> labels = EduStanfordNlpUtilGenerics_newArrayList();
  for (EduStanfordNlpTreesTypedDependency * __strong dependency in nil_chk([self typedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_Extras:JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, MAXIMAL)])) {
    if ([((EduStanfordNlpLingIndexedWord *) nil_chk([((EduStanfordNlpTreesTypedDependency *) nil_chk(dependency)) gov])) isEqual:gov] && [((EduStanfordNlpLingIndexedWord *) nil_chk([dependency dep])) isEqual:dep]) {
      [((id<JavaUtilList>) nil_chk(labels)) addWithId:[dependency reln]];
    }
  }
  return EduStanfordNlpTreesGrammaticalStructure_getGrammaticalRelationCommonAncestorWithEduStanfordNlpLingAbstractCoreLabel_withEduStanfordNlpLingAbstractCoreLabel_withEduStanfordNlpLingAbstractCoreLabel_withEduStanfordNlpLingAbstractCoreLabel_withJavaUtilList_(gov, gov, dep, dep, labels);
}

+ (EduStanfordNlpTreesGrammaticalRelation *)getGrammaticalRelationCommonAncestorWithEduStanfordNlpLingAbstractCoreLabel:(id<EduStanfordNlpLingAbstractCoreLabel>)gov
                                                                                withEduStanfordNlpLingAbstractCoreLabel:(id<EduStanfordNlpLingAbstractCoreLabel>)govH
                                                                                withEduStanfordNlpLingAbstractCoreLabel:(id<EduStanfordNlpLingAbstractCoreLabel>)dep
                                                                                withEduStanfordNlpLingAbstractCoreLabel:(id<EduStanfordNlpLingAbstractCoreLabel>)depH
                                                                                                       withJavaUtilList:(id<JavaUtilList>)labels {
  return EduStanfordNlpTreesGrammaticalStructure_getGrammaticalRelationCommonAncestorWithEduStanfordNlpLingAbstractCoreLabel_withEduStanfordNlpLingAbstractCoreLabel_withEduStanfordNlpLingAbstractCoreLabel_withEduStanfordNlpLingAbstractCoreLabel_withJavaUtilList_(gov, govH, dep, depH, labels);
}

+ (id<JavaUtilList>)removeGrammaticalRelationAncestorsWithJavaUtilList:(id<JavaUtilList>)original {
  return EduStanfordNlpTreesGrammaticalStructure_removeGrammaticalRelationAncestorsWithJavaUtilList_(original);
}

- (id<JavaUtilCollection>)typedDependencies {
  return [self typedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_Extras:JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE)];
}

- (id<JavaUtilCollection>)allTypedDependencies {
  return [self typedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_Extras:JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, MAXIMAL)];
}

- (id<JavaUtilList>)typedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_Extras:(EduStanfordNlpTreesGrammaticalStructure_Extras *)includeExtras {
  id<JavaUtilList> deps;
  if (includeExtras != JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE)) {
    deps = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(allTypedDependencies_)) size]);
    for (EduStanfordNlpTreesTypedDependency * __strong dep in allTypedDependencies_) {
      [deps addWithId:new_EduStanfordNlpTreesTypedDependency_initWithEduStanfordNlpTreesTypedDependency_(dep)];
    }
  }
  else {
    deps = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(typedDependencies_)) size]);
    for (EduStanfordNlpTreesTypedDependency * __strong dep in typedDependencies_) {
      [deps addWithId:new_EduStanfordNlpTreesTypedDependency_initWithEduStanfordNlpTreesTypedDependency_(dep)];
    }
  }
  [self correctDependenciesWithJavaUtilList:deps];
  return deps;
}

- (id<JavaUtilList>)typedDependenciesWithBoolean:(jboolean)includeExtras {
  return [self typedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_Extras:includeExtras ? JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, MAXIMAL) : JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE)];
}

- (id<JavaUtilCollection>)typedDependenciesCollapsed {
  return [self typedDependenciesCollapsedWithEduStanfordNlpTreesGrammaticalStructure_Extras:JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE)];
}

- (id<JavaUtilCollection>)typedDependenciesCollapsedTree {
  id<JavaUtilList> tdl = [self typedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_Extras:JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE)];
  [self collapseDependenciesTreeWithJavaUtilList:tdl];
  return tdl;
}

- (id<JavaUtilList>)typedDependenciesCollapsedWithEduStanfordNlpTreesGrammaticalStructure_Extras:(EduStanfordNlpTreesGrammaticalStructure_Extras *)includeExtras {
  id<JavaUtilList> tdl = [self typedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_Extras:includeExtras];
  [self collapseDependenciesWithJavaUtilList:tdl withBoolean:false withEduStanfordNlpTreesGrammaticalStructure_Extras:includeExtras];
  return tdl;
}

- (id<JavaUtilList>)typedDependenciesCollapsedWithBoolean:(jboolean)includeExtras {
  return [self typedDependenciesCollapsedWithEduStanfordNlpTreesGrammaticalStructure_Extras:includeExtras ? JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, MAXIMAL) : JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE)];
}

- (id<JavaUtilList>)typedDependenciesCCprocessedWithEduStanfordNlpTreesGrammaticalStructure_Extras:(EduStanfordNlpTreesGrammaticalStructure_Extras *)includeExtras {
  id<JavaUtilList> tdl = [self typedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_Extras:includeExtras];
  [self collapseDependenciesWithJavaUtilList:tdl withBoolean:true withEduStanfordNlpTreesGrammaticalStructure_Extras:includeExtras];
  return tdl;
}

- (id<JavaUtilList>)typedDependenciesCCprocessedWithBoolean:(jboolean)includeExtras {
  return [self typedDependenciesCCprocessedWithEduStanfordNlpTreesGrammaticalStructure_Extras:includeExtras ? JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, MAXIMAL) : JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE)];
}

- (id<JavaUtilList>)typedDependenciesCCprocessed {
  return [self typedDependenciesCCprocessedWithEduStanfordNlpTreesGrammaticalStructure_Extras:JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, MAXIMAL)];
}

- (void)collapseDependenciesWithJavaUtilList:(id<JavaUtilList>)list
                                 withBoolean:(jboolean)CCprocess
withEduStanfordNlpTreesGrammaticalStructure_Extras:(EduStanfordNlpTreesGrammaticalStructure_Extras *)includeExtras {
}

- (void)collapseDependenciesTreeWithJavaUtilList:(id<JavaUtilList>)list {
}

- (void)correctDependenciesWithJavaUtilList:(id<JavaUtilList>)list {
}

+ (jboolean)isConnectedWithJavaUtilCollection:(id<JavaUtilCollection>)list {
  return EduStanfordNlpTreesGrammaticalStructure_isConnectedWithJavaUtilCollection_(list);
}

+ (id<JavaUtilCollection>)getRootsWithJavaUtilCollection:(id<JavaUtilCollection>)list {
  return EduStanfordNlpTreesGrammaticalStructure_getRootsWithJavaUtilCollection_(list);
}

+ (void)printDependenciesWithEduStanfordNlpTreesGrammaticalStructure:(EduStanfordNlpTreesGrammaticalStructure *)gs
                                              withJavaUtilCollection:(id<JavaUtilCollection>)deps
                                         withEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                                                         withBoolean:(jboolean)conllx
                                                         withBoolean:(jboolean)extraSep {
  EduStanfordNlpTreesGrammaticalStructure_printDependenciesWithEduStanfordNlpTreesGrammaticalStructure_withJavaUtilCollection_withEduStanfordNlpTreesTree_withBoolean_withBoolean_(gs, deps, tree, conllx, extraSep);
}

+ (NSString *)dependenciesToCoNLLXStringWithEduStanfordNlpTreesGrammaticalStructure:(EduStanfordNlpTreesGrammaticalStructure *)gs
                                                      withEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)sentence {
  return EduStanfordNlpTreesGrammaticalStructure_dependenciesToCoNLLXStringWithEduStanfordNlpTreesGrammaticalStructure_withEduStanfordNlpUtilCoreMap_(gs, sentence);
}

+ (NSString *)dependenciesToCoNLLXStringWithJavaUtilCollection:(id<JavaUtilCollection>)deps
                                 withEduStanfordNlpUtilCoreMap:(id<EduStanfordNlpUtilCoreMap>)sentence {
  return EduStanfordNlpTreesGrammaticalStructure_dependenciesToCoNLLXStringWithJavaUtilCollection_withEduStanfordNlpUtilCoreMap_(deps, sentence);
}

+ (NSString *)dependenciesToStringWithEduStanfordNlpTreesGrammaticalStructure:(EduStanfordNlpTreesGrammaticalStructure *)gs
                                                       withJavaUtilCollection:(id<JavaUtilCollection>)deps
                                                  withEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                                                                  withBoolean:(jboolean)conllx
                                                                  withBoolean:(jboolean)extraSep {
  return EduStanfordNlpTreesGrammaticalStructure_dependenciesToStringWithEduStanfordNlpTreesGrammaticalStructure_withJavaUtilCollection_withEduStanfordNlpTreesTree_withBoolean_withBoolean_(gs, deps, tree, conllx, extraSep);
}

+ (NSString *)toStringIndexWithEduStanfordNlpTreesTypedDependency:(EduStanfordNlpTreesTypedDependency *)td
                                                  withJavaUtilMap:(id<JavaUtilMap>)indexToPos {
  return EduStanfordNlpTreesGrammaticalStructure_toStringIndexWithEduStanfordNlpTreesTypedDependency_withJavaUtilMap_(td, indexToPos);
}

+ (id<JavaUtilList>)readCoNLLXGrammaticalStructureCollectionWithNSString:(NSString *)fileName
                                                         withJavaUtilMap:(id<JavaUtilMap>)shortNameToGRel
      withEduStanfordNlpTreesGrammaticalStructureFromDependenciesFactory:(id<EduStanfordNlpTreesGrammaticalStructureFromDependenciesFactory>)factory {
  return EduStanfordNlpTreesGrammaticalStructure_readCoNLLXGrammaticalStructureCollectionWithNSString_withJavaUtilMap_withEduStanfordNlpTreesGrammaticalStructureFromDependenciesFactory_(fileName, shortNameToGRel, factory);
}

+ (EduStanfordNlpTreesGrammaticalStructure *)buildCoNLLXGrammaticalStructureWithJavaUtilList:(id<JavaUtilList>)tokenFields
                                                                             withJavaUtilMap:(id<JavaUtilMap>)shortNameToGRel
                          withEduStanfordNlpTreesGrammaticalStructureFromDependenciesFactory:(id<EduStanfordNlpTreesGrammaticalStructureFromDependenciesFactory>)factory {
  return EduStanfordNlpTreesGrammaticalStructure_buildCoNLLXGrammaticalStructureWithJavaUtilList_withJavaUtilMap_withEduStanfordNlpTreesGrammaticalStructureFromDependenciesFactory_(tokenFields, shortNameToGRel, factory);
}

+ (IOSObjectArray *)parseClassConstructArgsWithNSString:(NSString *)namePlusArgs {
  return EduStanfordNlpTreesGrammaticalStructure_parseClassConstructArgsWithNSString_(namePlusArgs);
}

+ (id<EduStanfordNlpTreesDependencyReader>)loadAlternateDependencyReaderWithNSString:(NSString *)altDepReaderName {
  return EduStanfordNlpTreesGrammaticalStructure_loadAlternateDependencyReaderWithNSString_(altDepReaderName);
}

+ (id<EduStanfordNlpTreesDependencyPrinter>)loadAlternateDependencyPrinterWithNSString:(NSString *)altDepPrinterName {
  return EduStanfordNlpTreesGrammaticalStructure_loadAlternateDependencyPrinterWithNSString_(altDepPrinterName);
}

+ (id<JavaUtilFunctionFunction>)loadParserWithNSString:(NSString *)parserFile
                                          withNSString:(NSString *)parserOptions
                                           withBoolean:(jboolean)makeCopulaHead {
  return EduStanfordNlpTreesGrammaticalStructure_loadParserWithNSString_withNSString_withBoolean_(parserFile, parserOptions, makeCopulaHead);
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduStanfordNlpTreesGrammaticalStructure_mainWithNSStringArray_(args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x2, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 2, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTreeGraphNode;", 0x2, 8, 9, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTreeGraphNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 10, 11, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesGrammaticalStructure;", 0x9, 12, 13, -1, 14, -1, -1 },
    { NULL, NULL, 0x1, -1, 15, -1, 16, -1, -1 },
    { NULL, "LNSString;", 0x1, 17, -1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 18, 19, -1, 20, -1, -1 },
    { NULL, "V", 0xa, 21, 22, -1, 23, -1, -1 },
    { NULL, "V", 0x2, 24, 25, -1, 26, -1, -1 },
    { NULL, "LJavaUtilList;", 0x2, 27, 28, -1, 29, -1, -1 },
    { NULL, "LJavaUtilFunctionPredicate;", 0x4, -1, -1, -1, 30, -1, -1 },
    { NULL, "V", 0x4, 31, 32, -1, 33, -1, -1 },
    { NULL, "V", 0x4, 34, 32, -1, 33, -1, -1 },
    { NULL, "V", 0x4, 35, 36, -1, 37, -1, -1 },
    { NULL, "LEduStanfordNlpTreesGrammaticalRelation;", 0x1, 38, 39, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesGrammaticalRelation;", 0x1, 38, 40, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesGrammaticalRelation;", 0xa, 41, 42, -1, 43, -1, -1 },
    { NULL, "LJavaUtilList;", 0xa, 44, 32, -1, 45, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, 46, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, 46, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 47, 48, -1, 49, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 47, 50, -1, 51, 52, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, 46, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, 46, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 53, 48, -1, 49, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 53, 50, -1, 51, 54, -1 },
    { NULL, "LJavaUtilList;", 0x1, 55, 48, -1, 49, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 55, 50, -1, 51, 56, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 57, -1, -1 },
    { NULL, "V", 0x4, 58, 59, -1, 60, -1, -1 },
    { NULL, "V", 0x4, 61, 32, -1, 33, -1, -1 },
    { NULL, "V", 0x4, 62, 32, -1, 33, -1, -1 },
    { NULL, "Z", 0x9, 63, 64, -1, 65, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x9, 66, 64, -1, 67, -1, -1 },
    { NULL, "V", 0x9, 68, 69, -1, 70, -1, -1 },
    { NULL, "LNSString;", 0x9, 71, 72, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 71, 73, -1, 74, -1, -1 },
    { NULL, "LNSString;", 0x9, 75, 69, -1, 76, -1, -1 },
    { NULL, "LNSString;", 0xa, 77, 78, -1, 79, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 80, 81, 82, 83, -1, -1 },
    { NULL, "LEduStanfordNlpTreesGrammaticalStructure;", 0x9, 84, 85, -1, 86, -1, -1 },
    { NULL, "[LNSString;", 0xa, 87, 11, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesDependencyReader;", 0xa, 88, 11, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesDependencyPrinter;", 0xa, 89, 11, -1, -1, -1, -1 },
    { NULL, "LJavaUtilFunctionFunction;", 0xa, 90, 91, -1, 92, -1, -1 },
    { NULL, "V", 0x9, 93, 94, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesTree:withJavaUtilCollection:withJavaUtilConcurrentLocksLock:withEduStanfordNlpTreesTreeTransformer:withEduStanfordNlpTreesHeadFinder:withJavaUtilFunctionPredicate:withJavaUtilFunctionPredicate:);
  methods[1].selector = @selector(indexNodesWithEduStanfordNlpTreesTreeGraphNode:);
  methods[2].selector = @selector(indexLeavesWithEduStanfordNlpTreesTreeGraphNode:withInt:);
  methods[3].selector = @selector(indexNodesWithEduStanfordNlpTreesTreeGraphNode:withInt:);
  methods[4].selector = @selector(addNodeToIndexMapWithInt:withEduStanfordNlpTreesTreeGraphNode:);
  methods[5].selector = @selector(getNodeByIndexWithInt:);
  methods[6].selector = @selector(root);
  methods[7].selector = @selector(throwDepFormatExceptionWithNSString:);
  methods[8].selector = @selector(fromStringRepsWithJavaUtilList:withJavaUtilList:withJavaUtilList:);
  methods[9].selector = @selector(initWithJavaUtilList:withEduStanfordNlpTreesTreeGraphNode:);
  methods[10].selector = @selector(description);
  methods[11].selector = @selector(attachStrandedNodesWithEduStanfordNlpTreesTreeGraphNode:withEduStanfordNlpTreesTreeGraphNode:withBoolean:withJavaUtilFunctionPredicate:withJavaUtilFunctionPredicate:withEduStanfordNlpGraphDirectedMultiGraph:);
  methods[12].selector = @selector(analyzeNodeWithEduStanfordNlpTreesTreeGraphNode:withEduStanfordNlpTreesTreeGraphNode:withJavaUtilCollection:withEduStanfordNlpTreesHeadFinder:withJavaUtilFunctionPredicate:withJavaUtilFunctionPredicate:withEduStanfordNlpGraphDirectedMultiGraph:withEduStanfordNlpGraphDirectedMultiGraph:);
  methods[13].selector = @selector(getExtraDepsWithJavaUtilList:withJavaUtilFunctionPredicate:withEduStanfordNlpGraphDirectedMultiGraph:);
  methods[14].selector = @selector(getDepsWithJavaUtilFunctionPredicate:withEduStanfordNlpGraphDirectedMultiGraph:);
  methods[15].selector = @selector(extraTreeDepFilter);
  methods[16].selector = @selector(postProcessDependenciesWithJavaUtilList:);
  methods[17].selector = @selector(getExtrasWithJavaUtilList:);
  methods[18].selector = @selector(getTreeDepsWithJavaUtilList:withEduStanfordNlpGraphDirectedMultiGraph:withJavaUtilFunctionPredicate:withJavaUtilFunctionPredicate:);
  methods[19].selector = @selector(getGrammaticalRelationWithInt:withInt:);
  methods[20].selector = @selector(getGrammaticalRelationWithEduStanfordNlpLingIndexedWord:withEduStanfordNlpLingIndexedWord:);
  methods[21].selector = @selector(getGrammaticalRelationCommonAncestorWithEduStanfordNlpLingAbstractCoreLabel:withEduStanfordNlpLingAbstractCoreLabel:withEduStanfordNlpLingAbstractCoreLabel:withEduStanfordNlpLingAbstractCoreLabel:withJavaUtilList:);
  methods[22].selector = @selector(removeGrammaticalRelationAncestorsWithJavaUtilList:);
  methods[23].selector = @selector(typedDependencies);
  methods[24].selector = @selector(allTypedDependencies);
  methods[25].selector = @selector(typedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_Extras:);
  methods[26].selector = @selector(typedDependenciesWithBoolean:);
  methods[27].selector = @selector(typedDependenciesCollapsed);
  methods[28].selector = @selector(typedDependenciesCollapsedTree);
  methods[29].selector = @selector(typedDependenciesCollapsedWithEduStanfordNlpTreesGrammaticalStructure_Extras:);
  methods[30].selector = @selector(typedDependenciesCollapsedWithBoolean:);
  methods[31].selector = @selector(typedDependenciesCCprocessedWithEduStanfordNlpTreesGrammaticalStructure_Extras:);
  methods[32].selector = @selector(typedDependenciesCCprocessedWithBoolean:);
  methods[33].selector = @selector(typedDependenciesCCprocessed);
  methods[34].selector = @selector(collapseDependenciesWithJavaUtilList:withBoolean:withEduStanfordNlpTreesGrammaticalStructure_Extras:);
  methods[35].selector = @selector(collapseDependenciesTreeWithJavaUtilList:);
  methods[36].selector = @selector(correctDependenciesWithJavaUtilList:);
  methods[37].selector = @selector(isConnectedWithJavaUtilCollection:);
  methods[38].selector = @selector(getRootsWithJavaUtilCollection:);
  methods[39].selector = @selector(printDependenciesWithEduStanfordNlpTreesGrammaticalStructure:withJavaUtilCollection:withEduStanfordNlpTreesTree:withBoolean:withBoolean:);
  methods[40].selector = @selector(dependenciesToCoNLLXStringWithEduStanfordNlpTreesGrammaticalStructure:withEduStanfordNlpUtilCoreMap:);
  methods[41].selector = @selector(dependenciesToCoNLLXStringWithJavaUtilCollection:withEduStanfordNlpUtilCoreMap:);
  methods[42].selector = @selector(dependenciesToStringWithEduStanfordNlpTreesGrammaticalStructure:withJavaUtilCollection:withEduStanfordNlpTreesTree:withBoolean:withBoolean:);
  methods[43].selector = @selector(toStringIndexWithEduStanfordNlpTreesTypedDependency:withJavaUtilMap:);
  methods[44].selector = @selector(readCoNLLXGrammaticalStructureCollectionWithNSString:withJavaUtilMap:withEduStanfordNlpTreesGrammaticalStructureFromDependenciesFactory:);
  methods[45].selector = @selector(buildCoNLLXGrammaticalStructureWithJavaUtilList:withJavaUtilMap:withEduStanfordNlpTreesGrammaticalStructureFromDependenciesFactory:);
  methods[46].selector = @selector(parseClassConstructArgsWithNSString:);
  methods[47].selector = @selector(loadAlternateDependencyReaderWithNSString:);
  methods[48].selector = @selector(loadAlternateDependencyPrinterWithNSString:);
  methods[49].selector = @selector(loadParserWithNSString:withNSString:withBoolean:);
  methods[50].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PRINT_DEBUGGING", "Z", .constantValue.asLong = 0, 0x1a, -1, 95, -1, -1 },
    { "typedDependencies_", "LJavaUtilList;", .constantValue.asLong = 0, 0x14, -1, -1, 96, -1 },
    { "allTypedDependencies_", "LJavaUtilList;", .constantValue.asLong = 0, 0x14, -1, -1, 96, -1 },
    { "puncFilter_", "LJavaUtilFunctionPredicate;", .constantValue.asLong = 0, 0x14, -1, -1, 97, -1 },
    { "tagFilter_", "LJavaUtilFunctionPredicate;", .constantValue.asLong = 0, 0x14, -1, -1, 97, -1 },
    { "root_", "LEduStanfordNlpTreesTreeGraphNode;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "indexMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 98, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTreesGrammaticalStructure_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "DEFAULT_PARSER_FILE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 99, -1, -1 },
    { "CoNLLX_WordField", "I", .constantValue.asInt = EduStanfordNlpTreesGrammaticalStructure_CoNLLX_WordField, 0x19, -1, -1, -1, -1 },
    { "CoNLLX_POSField", "I", .constantValue.asInt = EduStanfordNlpTreesGrammaticalStructure_CoNLLX_POSField, 0x19, -1, -1, -1, -1 },
    { "CoNLLX_GovField", "I", .constantValue.asInt = EduStanfordNlpTreesGrammaticalStructure_CoNLLX_GovField, 0x19, -1, -1, -1, -1 },
    { "CoNLLX_RelnField", "I", .constantValue.asInt = EduStanfordNlpTreesGrammaticalStructure_CoNLLX_RelnField, 0x19, -1, -1, -1, -1 },
    { "CoNLLX_FieldCount", "I", .constantValue.asInt = EduStanfordNlpTreesGrammaticalStructure_CoNLLX_FieldCount, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTreesTree;LJavaUtilCollection;LJavaUtilConcurrentLocksLock;LEduStanfordNlpTreesTreeTransformer;LEduStanfordNlpTreesHeadFinder;LJavaUtilFunctionPredicate;LJavaUtilFunctionPredicate;", "(Ledu/stanford/nlp/trees/Tree;Ljava/util/Collection<Ledu/stanford/nlp/trees/GrammaticalRelation;>;Ljava/util/concurrent/locks/Lock;Ledu/stanford/nlp/trees/TreeTransformer;Ledu/stanford/nlp/trees/HeadFinder;Ljava/util/function/Predicate<Ljava/lang/String;>;Ljava/util/function/Predicate<Ljava/lang/String;>;)V", "indexNodes", "LEduStanfordNlpTreesTreeGraphNode;", "indexLeaves", "LEduStanfordNlpTreesTreeGraphNode;I", "addNodeToIndexMap", "ILEduStanfordNlpTreesTreeGraphNode;", "getNodeByIndex", "I", "throwDepFormatException", "LNSString;", "fromStringReps", "LJavaUtilList;LJavaUtilList;LJavaUtilList;", "(Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;)Ledu/stanford/nlp/trees/GrammaticalStructure;", "LJavaUtilList;LEduStanfordNlpTreesTreeGraphNode;", "(Ljava/util/List<Ledu/stanford/nlp/trees/TypedDependency;>;Ledu/stanford/nlp/trees/TreeGraphNode;)V", "toString", "attachStrandedNodes", "LEduStanfordNlpTreesTreeGraphNode;LEduStanfordNlpTreesTreeGraphNode;ZLJavaUtilFunctionPredicate;LJavaUtilFunctionPredicate;LEduStanfordNlpGraphDirectedMultiGraph;", "(Ledu/stanford/nlp/trees/TreeGraphNode;Ledu/stanford/nlp/trees/TreeGraphNode;ZLjava/util/function/Predicate<Ljava/lang/String;>;Ljava/util/function/Predicate<Ljava/lang/String;>;Ledu/stanford/nlp/graph/DirectedMultiGraph<Ledu/stanford/nlp/trees/TreeGraphNode;Ledu/stanford/nlp/trees/GrammaticalRelation;>;)V", "analyzeNode", "LEduStanfordNlpTreesTreeGraphNode;LEduStanfordNlpTreesTreeGraphNode;LJavaUtilCollection;LEduStanfordNlpTreesHeadFinder;LJavaUtilFunctionPredicate;LJavaUtilFunctionPredicate;LEduStanfordNlpGraphDirectedMultiGraph;LEduStanfordNlpGraphDirectedMultiGraph;", "(Ledu/stanford/nlp/trees/TreeGraphNode;Ledu/stanford/nlp/trees/TreeGraphNode;Ljava/util/Collection<Ledu/stanford/nlp/trees/GrammaticalRelation;>;Ledu/stanford/nlp/trees/HeadFinder;Ljava/util/function/Predicate<Ljava/lang/String;>;Ljava/util/function/Predicate<Ljava/lang/String;>;Ledu/stanford/nlp/graph/DirectedMultiGraph<Ledu/stanford/nlp/trees/TreeGraphNode;Ledu/stanford/nlp/trees/GrammaticalRelation;>;Ledu/stanford/nlp/graph/DirectedMultiGraph<Ledu/stanford/nlp/trees/TreeGraphNode;Ledu/stanford/nlp/trees/GrammaticalRelation;>;)V", "getExtraDeps", "LJavaUtilList;LJavaUtilFunctionPredicate;LEduStanfordNlpGraphDirectedMultiGraph;", "(Ljava/util/List<Ledu/stanford/nlp/trees/TypedDependency;>;Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/TypedDependency;>;Ledu/stanford/nlp/graph/DirectedMultiGraph<Ledu/stanford/nlp/trees/TreeGraphNode;Ledu/stanford/nlp/trees/GrammaticalRelation;>;)V", "getDeps", "LJavaUtilFunctionPredicate;LEduStanfordNlpGraphDirectedMultiGraph;", "(Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/TypedDependency;>;Ledu/stanford/nlp/graph/DirectedMultiGraph<Ledu/stanford/nlp/trees/TreeGraphNode;Ledu/stanford/nlp/trees/GrammaticalRelation;>;)Ljava/util/List<Ledu/stanford/nlp/trees/TypedDependency;>;", "()Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/TypedDependency;>;", "postProcessDependencies", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/trees/TypedDependency;>;)V", "getExtras", "getTreeDeps", "LJavaUtilList;LEduStanfordNlpGraphDirectedMultiGraph;LJavaUtilFunctionPredicate;LJavaUtilFunctionPredicate;", "(Ljava/util/List<Ledu/stanford/nlp/trees/TypedDependency;>;Ledu/stanford/nlp/graph/DirectedMultiGraph<Ledu/stanford/nlp/trees/TreeGraphNode;Ledu/stanford/nlp/trees/GrammaticalRelation;>;Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/TypedDependency;>;Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/TypedDependency;>;)V", "getGrammaticalRelation", "II", "LEduStanfordNlpLingIndexedWord;LEduStanfordNlpLingIndexedWord;", "getGrammaticalRelationCommonAncestor", "LEduStanfordNlpLingAbstractCoreLabel;LEduStanfordNlpLingAbstractCoreLabel;LEduStanfordNlpLingAbstractCoreLabel;LEduStanfordNlpLingAbstractCoreLabel;LJavaUtilList;", "(Ledu/stanford/nlp/ling/AbstractCoreLabel;Ledu/stanford/nlp/ling/AbstractCoreLabel;Ledu/stanford/nlp/ling/AbstractCoreLabel;Ledu/stanford/nlp/ling/AbstractCoreLabel;Ljava/util/List<Ledu/stanford/nlp/trees/GrammaticalRelation;>;)Ledu/stanford/nlp/trees/GrammaticalRelation;", "removeGrammaticalRelationAncestors", "(Ljava/util/List<Ledu/stanford/nlp/trees/GrammaticalRelation;>;)Ljava/util/List<Ledu/stanford/nlp/trees/GrammaticalRelation;>;", "()Ljava/util/Collection<Ledu/stanford/nlp/trees/TypedDependency;>;", "typedDependencies", "LEduStanfordNlpTreesGrammaticalStructure_Extras;", "(Ledu/stanford/nlp/trees/GrammaticalStructure$Extras;)Ljava/util/List<Ledu/stanford/nlp/trees/TypedDependency;>;", "Z", "(Z)Ljava/util/List<Ledu/stanford/nlp/trees/TypedDependency;>;", (void *)&EduStanfordNlpTreesGrammaticalStructure__Annotations$0, "typedDependenciesCollapsed", (void *)&EduStanfordNlpTreesGrammaticalStructure__Annotations$1, "typedDependenciesCCprocessed", (void *)&EduStanfordNlpTreesGrammaticalStructure__Annotations$2, "()Ljava/util/List<Ledu/stanford/nlp/trees/TypedDependency;>;", "collapseDependencies", "LJavaUtilList;ZLEduStanfordNlpTreesGrammaticalStructure_Extras;", "(Ljava/util/List<Ledu/stanford/nlp/trees/TypedDependency;>;ZLedu/stanford/nlp/trees/GrammaticalStructure$Extras;)V", "collapseDependenciesTree", "correctDependencies", "isConnected", "LJavaUtilCollection;", "(Ljava/util/Collection<Ledu/stanford/nlp/trees/TypedDependency;>;)Z", "getRoots", "(Ljava/util/Collection<Ledu/stanford/nlp/trees/TypedDependency;>;)Ljava/util/Collection<Ledu/stanford/nlp/trees/TypedDependency;>;", "printDependencies", "LEduStanfordNlpTreesGrammaticalStructure;LJavaUtilCollection;LEduStanfordNlpTreesTree;ZZ", "(Ledu/stanford/nlp/trees/GrammaticalStructure;Ljava/util/Collection<Ledu/stanford/nlp/trees/TypedDependency;>;Ledu/stanford/nlp/trees/Tree;ZZ)V", "dependenciesToCoNLLXString", "LEduStanfordNlpTreesGrammaticalStructure;LEduStanfordNlpUtilCoreMap;", "LJavaUtilCollection;LEduStanfordNlpUtilCoreMap;", "(Ljava/util/Collection<Ledu/stanford/nlp/trees/TypedDependency;>;Ledu/stanford/nlp/util/CoreMap;)Ljava/lang/String;", "dependenciesToString", "(Ledu/stanford/nlp/trees/GrammaticalStructure;Ljava/util/Collection<Ledu/stanford/nlp/trees/TypedDependency;>;Ledu/stanford/nlp/trees/Tree;ZZ)Ljava/lang/String;", "toStringIndex", "LEduStanfordNlpTreesTypedDependency;LJavaUtilMap;", "(Ledu/stanford/nlp/trees/TypedDependency;Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/Integer;>;)Ljava/lang/String;", "readCoNLLXGrammaticalStructureCollection", "LNSString;LJavaUtilMap;LEduStanfordNlpTreesGrammaticalStructureFromDependenciesFactory;", "LJavaIoIOException;", "(Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/trees/GrammaticalRelation;>;Ledu/stanford/nlp/trees/GrammaticalStructureFromDependenciesFactory;)Ljava/util/List<Ledu/stanford/nlp/trees/GrammaticalStructure;>;", "buildCoNLLXGrammaticalStructure", "LJavaUtilList;LJavaUtilMap;LEduStanfordNlpTreesGrammaticalStructureFromDependenciesFactory;", "(Ljava/util/List<Ljava/util/List<Ljava/lang/String;>;>;Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/trees/GrammaticalRelation;>;Ledu/stanford/nlp/trees/GrammaticalStructureFromDependenciesFactory;)Ledu/stanford/nlp/trees/GrammaticalStructure;", "parseClassConstructArgs", "loadAlternateDependencyReader", "loadAlternateDependencyPrinter", "loadParser", "LNSString;LNSString;Z", "(Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/function/Function<Ljava/util/List<+Ledu/stanford/nlp/ling/HasWord;>;Ledu/stanford/nlp/trees/Tree;>;", "main", "[LNSString;", &EduStanfordNlpTreesGrammaticalStructure_PRINT_DEBUGGING, "Ljava/util/List<Ledu/stanford/nlp/trees/TypedDependency;>;", "Ljava/util/function/Predicate<Ljava/lang/String;>;", "Ljava/util/Map<Ljava/lang/Integer;Ledu/stanford/nlp/trees/TreeGraphNode;>;", &EduStanfordNlpTreesGrammaticalStructure_DEFAULT_PARSER_FILE, "LEduStanfordNlpTreesGrammaticalStructure_Extras;LEduStanfordNlpTreesGrammaticalStructure_NoPunctFilter;LEduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter;LEduStanfordNlpTreesGrammaticalStructure_NameComparator;LEduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper;LEduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesGrammaticalStructure = { "GrammaticalStructure", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0x401, 51, 14, -1, 100, -1, -1, -1 };
  return &_EduStanfordNlpTreesGrammaticalStructure;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesGrammaticalStructure class]) {
    EduStanfordNlpTreesGrammaticalStructure_PRINT_DEBUGGING = (JavaLangSystem_getPropertyWithNSString_withNSString_(@"GrammaticalStructure", nil) != nil);
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesGrammaticalStructure)
  }
}

@end

void EduStanfordNlpTreesGrammaticalStructure_initWithEduStanfordNlpTreesTree_withJavaUtilCollection_withJavaUtilConcurrentLocksLock_withEduStanfordNlpTreesTreeTransformer_withEduStanfordNlpTreesHeadFinder_withJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_(EduStanfordNlpTreesGrammaticalStructure *self, EduStanfordNlpTreesTree *t, id<JavaUtilCollection> relations, id<JavaUtilConcurrentLocksLock> relationsLock, id<EduStanfordNlpTreesTreeTransformer> transformer, id<EduStanfordNlpTreesHeadFinder> hf, id<JavaUtilFunctionPredicate> puncFilter, id<JavaUtilFunctionPredicate> tagFilter) {
  NSObject_init(self);
  self->indexMap_ = EduStanfordNlpUtilGenerics_newHashMap();
  EduStanfordNlpTreesTreeGraphNode *treeGraph = new_EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTreeGraphNode_(t, nil);
  EduStanfordNlpTreesTrees_setLeafLabelsWithEduStanfordNlpTreesTree_withJavaUtilList_(treeGraph, [((EduStanfordNlpTreesTree *) nil_chk(t)) yield]);
  EduStanfordNlpTreesTrees_setLeafTagsIfUnsetWithEduStanfordNlpTreesTree_(treeGraph);
  if (transformer != nil) {
    EduStanfordNlpTreesTree *transformed = [transformer transformTreeWithEduStanfordNlpTreesTree:treeGraph];
    if (!([transformed isKindOfClass:[EduStanfordNlpTreesTreeGraphNode class]])) {
      @throw new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$@", @"Transformer did not change TreeGraphNode into another TreeGraphNode: ", transformer));
    }
    self->root_ = (EduStanfordNlpTreesTreeGraphNode *) cast_chk(transformed, [EduStanfordNlpTreesTreeGraphNode class]);
  }
  else {
    self->root_ = treeGraph;
  }
  EduStanfordNlpTreesGrammaticalStructure_indexNodesWithEduStanfordNlpTreesTreeGraphNode_(self, self->root_);
  if (hf == nil) {
    @throw new_JavaLangAssertionError_initWithId_(@"Cannot use null HeadFinder");
  }
  [((EduStanfordNlpTreesTreeGraphNode *) nil_chk(self->root_)) percolateHeadsWithEduStanfordNlpTreesHeadFinder:hf];
  if ([self->root_ value] == nil) {
    [self->root_ setValueWithNSString:@"ROOT"];
  }
  self->puncFilter_ = puncFilter;
  self->tagFilter_ = tagFilter;
  EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter *puncTypedDepFilter = new_EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter_initWithJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_(puncFilter, tagFilter);
  EduStanfordNlpGraphDirectedMultiGraph *basicGraph = new_EduStanfordNlpGraphDirectedMultiGraph_init();
  EduStanfordNlpGraphDirectedMultiGraph *completeGraph = new_EduStanfordNlpGraphDirectedMultiGraph_init();
  if (relationsLock != nil) {
    [relationsLock lock];
  }
  @try {
    EduStanfordNlpTreesGrammaticalStructure_analyzeNodeWithEduStanfordNlpTreesTreeGraphNode_withEduStanfordNlpTreesTreeGraphNode_withJavaUtilCollection_withEduStanfordNlpTreesHeadFinder_withJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_withEduStanfordNlpGraphDirectedMultiGraph_withEduStanfordNlpGraphDirectedMultiGraph_(self->root_, self->root_, relations, hf, puncFilter, tagFilter, basicGraph, completeGraph);
  }
  @finally {
    if (relationsLock != nil) {
      [relationsLock unlock];
    }
  }
  EduStanfordNlpTreesGrammaticalStructure_attachStrandedNodesWithEduStanfordNlpTreesTreeGraphNode_withEduStanfordNlpTreesTreeGraphNode_withBoolean_withJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_withEduStanfordNlpGraphDirectedMultiGraph_(self->root_, self->root_, false, puncFilter, tagFilter, basicGraph);
  self->typedDependencies_ = EduStanfordNlpTreesGrammaticalStructure_getDepsWithJavaUtilFunctionPredicate_withEduStanfordNlpGraphDirectedMultiGraph_(self, puncTypedDepFilter, basicGraph);
  self->allTypedDependencies_ = EduStanfordNlpUtilGenerics_newArrayListWithJavaUtilCollection_(self->typedDependencies_);
  EduStanfordNlpTreesGrammaticalStructure_getExtraDepsWithJavaUtilList_withJavaUtilFunctionPredicate_withEduStanfordNlpGraphDirectedMultiGraph_(self, self->allTypedDependencies_, puncTypedDepFilter, completeGraph);
}

void EduStanfordNlpTreesGrammaticalStructure_indexNodesWithEduStanfordNlpTreesTreeGraphNode_(EduStanfordNlpTreesGrammaticalStructure *self, EduStanfordNlpTreesTreeGraphNode *tree) {
  EduStanfordNlpTreesGrammaticalStructure_indexNodesWithEduStanfordNlpTreesTreeGraphNode_withInt_(self, tree, EduStanfordNlpTreesGrammaticalStructure_indexLeavesWithEduStanfordNlpTreesTreeGraphNode_withInt_(self, tree, 1));
}

jint EduStanfordNlpTreesGrammaticalStructure_indexLeavesWithEduStanfordNlpTreesTreeGraphNode_withInt_(EduStanfordNlpTreesGrammaticalStructure *self, EduStanfordNlpTreesTreeGraphNode *tree, jint startIndex) {
  if ([((EduStanfordNlpTreesTreeGraphNode *) nil_chk(tree)) isLeaf]) {
    jint oldIndex = [tree index];
    if (oldIndex >= 0) {
      startIndex = oldIndex;
    }
    else {
      [tree setIndexWithInt:startIndex];
    }
    EduStanfordNlpTreesGrammaticalStructure_addNodeToIndexMapWithInt_withEduStanfordNlpTreesTreeGraphNode_(self, startIndex, tree);
    startIndex++;
  }
  else {
    {
      IOSObjectArray *a__ = tree->children_;
      EduStanfordNlpTreesTreeGraphNode * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      EduStanfordNlpTreesTreeGraphNode * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        EduStanfordNlpTreesTreeGraphNode *child = *b__++;
        startIndex = EduStanfordNlpTreesGrammaticalStructure_indexLeavesWithEduStanfordNlpTreesTreeGraphNode_withInt_(self, child, startIndex);
      }
    }
  }
  return startIndex;
}

jint EduStanfordNlpTreesGrammaticalStructure_indexNodesWithEduStanfordNlpTreesTreeGraphNode_withInt_(EduStanfordNlpTreesGrammaticalStructure *self, EduStanfordNlpTreesTreeGraphNode *tree, jint startIndex) {
  if ([((EduStanfordNlpTreesTreeGraphNode *) nil_chk(tree)) index] < 0) {
    EduStanfordNlpTreesGrammaticalStructure_addNodeToIndexMapWithInt_withEduStanfordNlpTreesTreeGraphNode_(self, startIndex, tree);
    [tree setIndexWithInt:startIndex++];
  }
  if (![tree isLeaf]) {
    {
      IOSObjectArray *a__ = tree->children_;
      EduStanfordNlpTreesTreeGraphNode * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      EduStanfordNlpTreesTreeGraphNode * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        EduStanfordNlpTreesTreeGraphNode *child = *b__++;
        startIndex = EduStanfordNlpTreesGrammaticalStructure_indexNodesWithEduStanfordNlpTreesTreeGraphNode_withInt_(self, child, startIndex);
      }
    }
  }
  return startIndex;
}

void EduStanfordNlpTreesGrammaticalStructure_addNodeToIndexMapWithInt_withEduStanfordNlpTreesTreeGraphNode_(EduStanfordNlpTreesGrammaticalStructure *self, jint index, EduStanfordNlpTreesTreeGraphNode *node) {
  (void) [((id<JavaUtilMap>) nil_chk(self->indexMap_)) putWithId:JavaLangInteger_valueOfWithInt_(index) withId:node];
}

EduStanfordNlpTreesTreeGraphNode *EduStanfordNlpTreesGrammaticalStructure_getNodeByIndexWithInt_(EduStanfordNlpTreesGrammaticalStructure *self, jint index) {
  return [((id<JavaUtilMap>) nil_chk(self->indexMap_)) getWithId:JavaLangInteger_valueOfWithInt_(index)];
}

void EduStanfordNlpTreesGrammaticalStructure_throwDepFormatExceptionWithNSString_(NSString *dep) {
  EduStanfordNlpTreesGrammaticalStructure_initialize();
  @throw new_JavaLangRuntimeException_initWithNSString_(NSString_formatWithNSString_withNSObjectArray_(@"Dependencies should be for the format 'type(arg-idx, arg-idx)'. Could not parse '%s'", [IOSObjectArray newArrayWithObjects:(id[]){ dep } count:1 type:NSObject_class_()]));
}

EduStanfordNlpTreesGrammaticalStructure *EduStanfordNlpTreesGrammaticalStructure_fromStringRepsWithJavaUtilList_withJavaUtilList_withJavaUtilList_(id<JavaUtilList> tokens, id<JavaUtilList> posTags, id<JavaUtilList> deps) {
  EduStanfordNlpTreesGrammaticalStructure_initialize();
  if ([((id<JavaUtilList>) nil_chk(tokens)) size] != [((id<JavaUtilList>) nil_chk(posTags)) size]) {
    @throw new_JavaLangRuntimeException_initWithNSString_(NSString_formatWithNSString_withNSObjectArray_(@"tokens.size(): %d != pos.size(): %d%n", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_([tokens size]), JavaLangInteger_valueOfWithInt_([posTags size]) } count:2 type:NSObject_class_()]));
  }
  id<JavaUtilList> tgWordNodes = new_JavaUtilArrayList_initWithInt_([tokens size]);
  id<JavaUtilList> tgPOSNodes = new_JavaUtilArrayList_initWithInt_([tokens size]);
  EduStanfordNlpLingCoreLabel *rootLabel = new_EduStanfordNlpLingCoreLabel_init();
  [rootLabel setValueWithNSString:@"ROOT"];
  id<JavaUtilList> nodeWords = new_JavaUtilArrayList_initWithInt_([tgPOSNodes size] + 1);
  [nodeWords addWithId:new_EduStanfordNlpLingIndexedWord_initWithEduStanfordNlpLingCoreLabel_(rootLabel)];
  EduStanfordNlpTreesUniversalSemanticHeadFinder *headFinder = new_EduStanfordNlpTreesUniversalSemanticHeadFinder_init();
  id<JavaUtilIterator> posIter = [posTags iterator];
  for (NSString * __strong wordString in tokens) {
    NSString *posString = [((id<JavaUtilIterator>) nil_chk(posIter)) next];
    EduStanfordNlpLingCoreLabel *wordLabel = new_EduStanfordNlpLingCoreLabel_init();
    [wordLabel setWordWithNSString:wordString];
    [wordLabel setValueWithNSString:wordString];
    [wordLabel setTagWithNSString:posString];
    EduStanfordNlpTreesTreeGraphNode *word = new_EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpLingLabel_(wordLabel);
    EduStanfordNlpLingCoreLabel *tagLabel = new_EduStanfordNlpLingCoreLabel_init();
    [tagLabel setValueWithNSString:posString];
    [tagLabel setWordWithNSString:posString];
    EduStanfordNlpTreesTreeGraphNode *pos = new_EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpLingLabel_(tagLabel);
    [tgWordNodes addWithId:word];
    [tgPOSNodes addWithId:pos];
    IOSObjectArray *childArr = [IOSObjectArray newArrayWithObjects:(id[]){ word } count:1 type:EduStanfordNlpTreesTreeGraphNode_class_()];
    [pos setChildrenWithEduStanfordNlpTreesTreeArray:childArr];
    [word setParentWithEduStanfordNlpTreesTreeGraphNode:pos];
    [pos percolateHeadsWithEduStanfordNlpTreesHeadFinder:headFinder];
    [nodeWords addWithId:new_EduStanfordNlpLingIndexedWord_initWithEduStanfordNlpLingCoreLabel_(wordLabel)];
  }
  EduStanfordNlpTreesTreeGraphNode *root = new_EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpLingLabel_(rootLabel);
  [root setChildrenWithEduStanfordNlpTreesTreeArray:[tgPOSNodes toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[tgPOSNodes size] type:EduStanfordNlpTreesTreeGraphNode_class_()]]];
  [root setIndexWithInt:0];
  id<JavaUtilList> tdeps = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(deps)) size]);
  for (NSString * __strong depString in deps) {
    jint firstBracket = [((NSString *) nil_chk(depString)) indexOf:'('];
    if (firstBracket == -1) EduStanfordNlpTreesGrammaticalStructure_throwDepFormatExceptionWithNSString_(depString);
    NSString *type = [depString substring:0 endIndex:firstBracket];
    if ([depString charAtWithInt:((jint) [depString length]) - 1] != ')') EduStanfordNlpTreesGrammaticalStructure_throwDepFormatExceptionWithNSString_(depString);
    NSString *args = [depString substring:firstBracket + 1 endIndex:((jint) [depString length]) - 1];
    jint argSep = [((NSString *) nil_chk(args)) indexOfString:@", "];
    if (argSep == -1) EduStanfordNlpTreesGrammaticalStructure_throwDepFormatExceptionWithNSString_(depString);
    NSString *parentArg = [args substring:0 endIndex:argSep];
    NSString *childArg = [args substring:argSep + 2];
    jint parentDash = [((NSString *) nil_chk(parentArg)) lastIndexOf:'-'];
    if (parentDash == -1) EduStanfordNlpTreesGrammaticalStructure_throwDepFormatExceptionWithNSString_(depString);
    jint childDash = [((NSString *) nil_chk(childArg)) lastIndexOf:'-'];
    if (childDash == -1) EduStanfordNlpTreesGrammaticalStructure_throwDepFormatExceptionWithNSString_(depString);
    jint parentIdx = JavaLangInteger_parseIntWithNSString_([((NSString *) nil_chk([parentArg substring:parentDash + 1])) replace:@"'" withSequence:@""]);
    jint childIdx = JavaLangInteger_parseIntWithNSString_([((NSString *) nil_chk([childArg substring:childDash + 1])) replace:@"'" withSequence:@""]);
    EduStanfordNlpTreesGrammaticalRelation *grel = new_EduStanfordNlpTreesGrammaticalRelation_initWithEduStanfordNlpInternationalLanguage_withNSString_withNSString_withEduStanfordNlpTreesGrammaticalRelation_(JreLoadEnum(EduStanfordNlpInternationalLanguage, Any), type, nil, JreLoadStatic(EduStanfordNlpTreesGrammaticalRelation, DEPENDENT));
    EduStanfordNlpTreesTypedDependency *tdep = new_EduStanfordNlpTreesTypedDependency_initWithEduStanfordNlpTreesGrammaticalRelation_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_(grel, [nodeWords getWithInt:parentIdx], [nodeWords getWithInt:childIdx]);
    [tdeps addWithId:tdep];
  }
  return new_EduStanfordNlpTreesGrammaticalStructure_$1_initWithJavaUtilList_withEduStanfordNlpTreesTreeGraphNode_(tdeps, root);
}

void EduStanfordNlpTreesGrammaticalStructure_initWithJavaUtilList_withEduStanfordNlpTreesTreeGraphNode_(EduStanfordNlpTreesGrammaticalStructure *self, id<JavaUtilList> projectiveDependencies, EduStanfordNlpTreesTreeGraphNode *root) {
  NSObject_init(self);
  self->indexMap_ = EduStanfordNlpUtilGenerics_newHashMap();
  self->root_ = root;
  EduStanfordNlpTreesGrammaticalStructure_indexNodesWithEduStanfordNlpTreesTreeGraphNode_(self, self->root_);
  self->puncFilter_ = EduStanfordNlpUtilFilters_acceptFilter();
  self->tagFilter_ = EduStanfordNlpUtilFilters_acceptFilter();
  self->allTypedDependencies_ = self->typedDependencies_ = new_JavaUtilArrayList_initWithJavaUtilCollection_(projectiveDependencies);
}

void EduStanfordNlpTreesGrammaticalStructure_attachStrandedNodesWithEduStanfordNlpTreesTreeGraphNode_withEduStanfordNlpTreesTreeGraphNode_withBoolean_withJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_withEduStanfordNlpGraphDirectedMultiGraph_(EduStanfordNlpTreesTreeGraphNode *t, EduStanfordNlpTreesTreeGraphNode *root, jboolean attach, id<JavaUtilFunctionPredicate> puncFilter, id<JavaUtilFunctionPredicate> tagFilter, EduStanfordNlpGraphDirectedMultiGraph *basicGraph) {
  EduStanfordNlpTreesGrammaticalStructure_initialize();
  if ([((EduStanfordNlpTreesTreeGraphNode *) nil_chk(t)) isLeaf]) {
    return;
  }
  if (attach && [((id<JavaUtilFunctionPredicate>) nil_chk(puncFilter)) testWithId:[((EduStanfordNlpLingCoreLabel *) nil_chk([((EduStanfordNlpTreesTreeGraphNode *) nil_chk([t headWordNode])) label])) value]] && [((id<JavaUtilFunctionPredicate>) nil_chk(tagFilter)) testWithId:[((EduStanfordNlpLingCoreLabel *) nil_chk([((EduStanfordNlpTreesTreeGraphNode *) nil_chk([t headWordNode])) label])) tag]]) {
    EduStanfordNlpTreesTreeGraphNode *parent = [((EduStanfordNlpTreesTreeGraphNode *) nil_chk([t parent])) highestNodeWithSameHead];
    if (![((EduStanfordNlpGraphDirectedMultiGraph *) nil_chk(basicGraph)) isEdgeWithId:parent withId:t] && [basicGraph getShortestPathWithId:root withId:t withBoolean:false] == nil) {
      [basicGraph addWithId:parent withId:t withId:JreLoadStatic(EduStanfordNlpTreesGrammaticalRelation, DEPENDENT)];
    }
  }
  {
    IOSObjectArray *a__ = [t children];
    EduStanfordNlpTreesTreeGraphNode * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    EduStanfordNlpTreesTreeGraphNode * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      EduStanfordNlpTreesTreeGraphNode *kid = *b__++;
      EduStanfordNlpTreesGrammaticalStructure_attachStrandedNodesWithEduStanfordNlpTreesTreeGraphNode_withEduStanfordNlpTreesTreeGraphNode_withBoolean_withJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_withEduStanfordNlpGraphDirectedMultiGraph_(kid, root, ([((EduStanfordNlpTreesTreeGraphNode *) nil_chk(kid)) headWordNode] != [t headWordNode]), puncFilter, tagFilter, basicGraph);
    }
  }
}

void EduStanfordNlpTreesGrammaticalStructure_analyzeNodeWithEduStanfordNlpTreesTreeGraphNode_withEduStanfordNlpTreesTreeGraphNode_withJavaUtilCollection_withEduStanfordNlpTreesHeadFinder_withJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_withEduStanfordNlpGraphDirectedMultiGraph_withEduStanfordNlpGraphDirectedMultiGraph_(EduStanfordNlpTreesTreeGraphNode *t, EduStanfordNlpTreesTreeGraphNode *root, id<JavaUtilCollection> relations, id<EduStanfordNlpTreesHeadFinder> hf, id<JavaUtilFunctionPredicate> puncFilter, id<JavaUtilFunctionPredicate> tagFilter, EduStanfordNlpGraphDirectedMultiGraph *basicGraph, EduStanfordNlpGraphDirectedMultiGraph *completeGraph) {
  EduStanfordNlpTreesGrammaticalStructure_initialize();
  if ([((EduStanfordNlpTreesTreeGraphNode *) nil_chk(t)) isPhrasal]) {
    EduStanfordNlpTreesTreeGraphNode *tHigh = [t highestNodeWithSameHead];
    for (EduStanfordNlpTreesGrammaticalRelation * __strong egr in nil_chk(relations)) {
      if ([((EduStanfordNlpTreesGrammaticalRelation *) nil_chk(egr)) isApplicableWithEduStanfordNlpTreesTree:t]) {
        for (EduStanfordNlpTreesTreeGraphNode * __strong u in nil_chk([egr getRelatedNodesWithEduStanfordNlpTreesTreeGraphNode:t withEduStanfordNlpTreesTreeGraphNode:root withEduStanfordNlpTreesHeadFinder:hf])) {
          EduStanfordNlpTreesTreeGraphNode *uHigh = [((EduStanfordNlpTreesTreeGraphNode *) nil_chk(u)) highestNodeWithSameHead];
          if (uHigh == tHigh) {
            continue;
          }
          if (![((id<JavaUtilFunctionPredicate>) nil_chk(puncFilter)) testWithId:[((EduStanfordNlpLingCoreLabel *) nil_chk([((EduStanfordNlpTreesTreeGraphNode *) nil_chk([((EduStanfordNlpTreesTreeGraphNode *) nil_chk(uHigh)) headWordNode])) label])) value]] || ![((id<JavaUtilFunctionPredicate>) nil_chk(tagFilter)) testWithId:[((EduStanfordNlpLingCoreLabel *) nil_chk([((EduStanfordNlpTreesTreeGraphNode *) nil_chk([uHigh headWordNode])) label])) tag]]) {
            continue;
          }
          [((EduStanfordNlpGraphDirectedMultiGraph *) nil_chk(completeGraph)) addWithId:tHigh withId:uHigh withId:egr];
          id<JavaUtilSet> parents = [((EduStanfordNlpGraphDirectedMultiGraph *) nil_chk(basicGraph)) getParentsWithId:uHigh];
          if ((parents == nil || [parents size] == 0 || [parents containsWithId:tHigh]) && [basicGraph getShortestPathWithId:uHigh withId:tHigh withBoolean:true] == nil) {
            [basicGraph addWithId:tHigh withId:uHigh withId:egr];
          }
        }
      }
    }
    {
      IOSObjectArray *a__ = [t children];
      EduStanfordNlpTreesTreeGraphNode * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      EduStanfordNlpTreesTreeGraphNode * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        EduStanfordNlpTreesTreeGraphNode *kid = *b__++;
        EduStanfordNlpTreesGrammaticalStructure_analyzeNodeWithEduStanfordNlpTreesTreeGraphNode_withEduStanfordNlpTreesTreeGraphNode_withJavaUtilCollection_withEduStanfordNlpTreesHeadFinder_withJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_withEduStanfordNlpGraphDirectedMultiGraph_withEduStanfordNlpGraphDirectedMultiGraph_(kid, root, relations, hf, puncFilter, tagFilter, basicGraph, completeGraph);
      }
    }
  }
}

void EduStanfordNlpTreesGrammaticalStructure_getExtraDepsWithJavaUtilList_withJavaUtilFunctionPredicate_withEduStanfordNlpGraphDirectedMultiGraph_(EduStanfordNlpTreesGrammaticalStructure *self, id<JavaUtilList> deps, id<JavaUtilFunctionPredicate> puncTypedDepFilter, EduStanfordNlpGraphDirectedMultiGraph *completeGraph) {
  [self getExtrasWithJavaUtilList:deps];
  [self getTreeDepsWithJavaUtilList:deps withEduStanfordNlpGraphDirectedMultiGraph:completeGraph withJavaUtilFunctionPredicate:puncTypedDepFilter withJavaUtilFunctionPredicate:[self extraTreeDepFilter]];
  JavaUtilCollections_sortWithJavaUtilList_(deps);
}

id<JavaUtilList> EduStanfordNlpTreesGrammaticalStructure_getDepsWithJavaUtilFunctionPredicate_withEduStanfordNlpGraphDirectedMultiGraph_(EduStanfordNlpTreesGrammaticalStructure *self, id<JavaUtilFunctionPredicate> puncTypedDepFilter, EduStanfordNlpGraphDirectedMultiGraph *basicGraph) {
  id<JavaUtilList> basicDep = EduStanfordNlpUtilGenerics_newArrayList();
  for (EduStanfordNlpTreesTreeGraphNode * __strong gov in nil_chk([((EduStanfordNlpGraphDirectedMultiGraph *) nil_chk(basicGraph)) getAllVertices])) {
    for (EduStanfordNlpTreesTreeGraphNode * __strong dep in nil_chk([basicGraph getChildrenWithId:gov])) {
      EduStanfordNlpTreesGrammaticalRelation *reln = EduStanfordNlpTreesGrammaticalStructure_getGrammaticalRelationCommonAncestorWithEduStanfordNlpLingAbstractCoreLabel_withEduStanfordNlpLingAbstractCoreLabel_withEduStanfordNlpLingAbstractCoreLabel_withEduStanfordNlpLingAbstractCoreLabel_withJavaUtilList_([((EduStanfordNlpTreesTreeGraphNode *) nil_chk([((EduStanfordNlpTreesTreeGraphNode *) nil_chk(gov)) headWordNode])) label], [gov label], [((EduStanfordNlpTreesTreeGraphNode *) nil_chk([((EduStanfordNlpTreesTreeGraphNode *) nil_chk(dep)) headWordNode])) label], [dep label], [basicGraph getEdgesWithId:gov withId:dep]);
      [((id<JavaUtilList>) nil_chk(basicDep)) addWithId:new_EduStanfordNlpTreesTypedDependency_initWithEduStanfordNlpTreesGrammaticalRelation_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_(reln, new_EduStanfordNlpLingIndexedWord_initWithEduStanfordNlpLingCoreLabel_([((EduStanfordNlpTreesTreeGraphNode *) nil_chk([gov headWordNode])) label]), new_EduStanfordNlpLingIndexedWord_initWithEduStanfordNlpLingCoreLabel_([((EduStanfordNlpTreesTreeGraphNode *) nil_chk([dep headWordNode])) label]))];
    }
  }
  EduStanfordNlpTreesTreeGraphNode *dependencyRoot = new_EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpLingLabel_(new_EduStanfordNlpLingWord_initWithNSString_(@"ROOT"));
  [dependencyRoot setIndexWithInt:0];
  EduStanfordNlpTreesTreeGraphNode *rootDep = [((EduStanfordNlpTreesTreeGraphNode *) nil_chk([self root])) headWordNode];
  if (rootDep == nil) {
    id<JavaUtilList> leaves = EduStanfordNlpTreesTrees_leavesWithEduStanfordNlpTreesTree_([self root]);
    if ([((id<JavaUtilList>) nil_chk(leaves)) size] > 0) {
      EduStanfordNlpTreesTree *leaf = [leaves getWithInt:0];
      if (!([leaf isKindOfClass:[EduStanfordNlpTreesTreeGraphNode class]])) {
        @throw new_JavaLangAssertionError_initWithId_(@"Leaves should be TreeGraphNodes");
      }
      rootDep = (EduStanfordNlpTreesTreeGraphNode *) cast_chk(leaf, [EduStanfordNlpTreesTreeGraphNode class]);
      if ([((EduStanfordNlpTreesTreeGraphNode *) nil_chk(rootDep)) headWordNode] != nil) {
        rootDep = [rootDep headWordNode];
      }
    }
  }
  if (rootDep != nil) {
    EduStanfordNlpTreesTypedDependency *rootTypedDep = new_EduStanfordNlpTreesTypedDependency_initWithEduStanfordNlpTreesGrammaticalRelation_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_(JreLoadStatic(EduStanfordNlpTreesGrammaticalRelation, ROOT), new_EduStanfordNlpLingIndexedWord_initWithEduStanfordNlpLingCoreLabel_([dependencyRoot label]), new_EduStanfordNlpLingIndexedWord_initWithEduStanfordNlpLingCoreLabel_([rootDep label]));
    if ([((id<JavaUtilFunctionPredicate>) nil_chk(puncTypedDepFilter)) testWithId:rootTypedDep]) {
      [((id<JavaUtilList>) nil_chk(basicDep)) addWithId:rootTypedDep];
    }
    else {
      EduStanfordNlpLingIndexedWord *root = [rootTypedDep dep];
      EduStanfordNlpLingIndexedWord *newRoot = nil;
      JavaUtilCollections_sortWithJavaUtilList_(basicDep);
      for (EduStanfordNlpTreesTypedDependency * __strong td in nil_chk(basicDep)) {
        if ([((EduStanfordNlpLingIndexedWord *) nil_chk([((EduStanfordNlpTreesTypedDependency *) nil_chk(td)) gov])) isEqual:root]) {
          if (newRoot != nil) {
            [td setGovWithEduStanfordNlpLingIndexedWord:newRoot];
          }
          else {
            [td setGovWithEduStanfordNlpLingIndexedWord:[td gov]];
            [td setRelnWithEduStanfordNlpTreesGrammaticalRelation:JreLoadStatic(EduStanfordNlpTreesGrammaticalRelation, ROOT)];
            newRoot = [td dep];
          }
        }
      }
    }
  }
  [self postProcessDependenciesWithJavaUtilList:basicDep];
  JavaUtilCollections_sortWithJavaUtilList_(basicDep);
  return basicDep;
}

EduStanfordNlpTreesGrammaticalRelation *EduStanfordNlpTreesGrammaticalStructure_getGrammaticalRelationCommonAncestorWithEduStanfordNlpLingAbstractCoreLabel_withEduStanfordNlpLingAbstractCoreLabel_withEduStanfordNlpLingAbstractCoreLabel_withEduStanfordNlpLingAbstractCoreLabel_withJavaUtilList_(id<EduStanfordNlpLingAbstractCoreLabel> gov, id<EduStanfordNlpLingAbstractCoreLabel> govH, id<EduStanfordNlpLingAbstractCoreLabel> dep, id<EduStanfordNlpLingAbstractCoreLabel> depH, id<JavaUtilList> labels) {
  EduStanfordNlpTreesGrammaticalStructure_initialize();
  EduStanfordNlpTreesGrammaticalRelation *reln = JreLoadStatic(EduStanfordNlpTreesGrammaticalRelation, DEPENDENT);
  id<JavaUtilList> sortedLabels;
  if ([((id<JavaUtilList>) nil_chk(labels)) size] <= 1) {
    sortedLabels = labels;
  }
  else {
    sortedLabels = new_JavaUtilArrayList_initWithJavaUtilCollection_(labels);
    JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(sortedLabels, new_EduStanfordNlpTreesGrammaticalStructure_NameComparator_init());
  }
  for (EduStanfordNlpTreesGrammaticalRelation * __strong reln2 in sortedLabels) {
    if ([((EduStanfordNlpTreesGrammaticalRelation *) nil_chk(reln)) isAncestorWithEduStanfordNlpTreesGrammaticalRelation:reln2]) {
      reln = reln2;
    }
    else if (EduStanfordNlpTreesGrammaticalStructure_PRINT_DEBUGGING && ![((EduStanfordNlpTreesGrammaticalRelation *) nil_chk(reln2)) isAncestorWithEduStanfordNlpTreesGrammaticalRelation:reln]) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@C@C$C$", @"@@@\t", reln, 0x0009, reln2, 0x0009, [((id<EduStanfordNlpLingAbstractCoreLabel>) nil_chk(govH)) getWithIOSClass:EduStanfordNlpLingCoreAnnotations_ValueAnnotation_class_()], 0x0009, [((id<EduStanfordNlpLingAbstractCoreLabel>) nil_chk(depH)) getWithIOSClass:EduStanfordNlpLingCoreAnnotations_ValueAnnotation_class_()])];
    }
  }
  if (EduStanfordNlpTreesGrammaticalStructure_PRINT_DEBUGGING && [((EduStanfordNlpTreesGrammaticalRelation *) nil_chk(reln)) isEqual:JreLoadStatic(EduStanfordNlpTreesGrammaticalRelation, DEPENDENT)]) {
    NSString *topCat = [((id<EduStanfordNlpLingAbstractCoreLabel>) nil_chk(govH)) getWithIOSClass:EduStanfordNlpLingCoreAnnotations_ValueAnnotation_class_()];
    NSString *topTag = [((id<EduStanfordNlpLingAbstractCoreLabel>) nil_chk(gov)) tag];
    NSString *topWord = [gov value];
    NSString *botCat = [((id<EduStanfordNlpLingAbstractCoreLabel>) nil_chk(depH)) getWithIOSClass:EduStanfordNlpLingCoreAnnotations_ValueAnnotation_class_()];
    NSString *botTag = [((id<EduStanfordNlpLingAbstractCoreLabel>) nil_chk(dep)) tag];
    NSString *botWord = [dep value];
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$$C$C$C$C$C$C", @"### dep\t", topCat, 0x0009, topTag, 0x0009, topWord, 0x0009, botCat, 0x0009, botTag, 0x0009, botWord, 0x0009)];
  }
  return reln;
}

id<JavaUtilList> EduStanfordNlpTreesGrammaticalStructure_removeGrammaticalRelationAncestorsWithJavaUtilList_(id<JavaUtilList> original) {
  EduStanfordNlpTreesGrammaticalStructure_initialize();
  id<JavaUtilList> filtered = EduStanfordNlpUtilGenerics_newArrayList();
  for (EduStanfordNlpTreesGrammaticalRelation * __strong reln in nil_chk(original)) {
    jboolean descendantFound = false;
    for (jint index = 0; index < [((id<JavaUtilList>) nil_chk(filtered)) size]; ++index) {
      EduStanfordNlpTreesGrammaticalRelation *gr = [filtered getWithInt:index];
      if ([((EduStanfordNlpTreesGrammaticalRelation *) nil_chk(gr)) isAncestorWithEduStanfordNlpTreesGrammaticalRelation:reln]) {
        (void) [filtered removeWithInt:index];
        --index;
      }
      else if ([((EduStanfordNlpTreesGrammaticalRelation *) nil_chk(reln)) isAncestorWithEduStanfordNlpTreesGrammaticalRelation:gr]) {
        descendantFound = true;
      }
    }
    if (!descendantFound) {
      [filtered addWithId:reln];
    }
  }
  return filtered;
}

jboolean EduStanfordNlpTreesGrammaticalStructure_isConnectedWithJavaUtilCollection_(id<JavaUtilCollection> list) {
  EduStanfordNlpTreesGrammaticalStructure_initialize();
  return [((id<JavaUtilCollection>) nil_chk(EduStanfordNlpTreesGrammaticalStructure_getRootsWithJavaUtilCollection_(list))) size] <= 1;
}

id<JavaUtilCollection> EduStanfordNlpTreesGrammaticalStructure_getRootsWithJavaUtilCollection_(id<JavaUtilCollection> list) {
  EduStanfordNlpTreesGrammaticalStructure_initialize();
  id<JavaUtilCollection> roots = new_JavaUtilArrayList_init();
  id<JavaUtilCollection> deps = EduStanfordNlpUtilGenerics_newHashSet();
  for (EduStanfordNlpTreesTypedDependency * __strong typedDep in nil_chk(list)) {
    [((id<JavaUtilCollection>) nil_chk(deps)) addWithId:[((EduStanfordNlpTreesTypedDependency *) nil_chk(typedDep)) dep]];
  }
  id<JavaUtilCollection> govs = EduStanfordNlpUtilGenerics_newHashSet();
  for (EduStanfordNlpTreesTypedDependency * __strong typedDep in list) {
    EduStanfordNlpLingIndexedWord *gov = [((EduStanfordNlpTreesTypedDependency *) nil_chk(typedDep)) gov];
    if (![((id<JavaUtilCollection>) nil_chk(deps)) containsWithId:gov] && ![((id<JavaUtilCollection>) nil_chk(govs)) containsWithId:gov]) {
      [roots addWithId:typedDep];
    }
    [((id<JavaUtilCollection>) nil_chk(govs)) addWithId:gov];
  }
  return roots;
}

void EduStanfordNlpTreesGrammaticalStructure_printDependenciesWithEduStanfordNlpTreesGrammaticalStructure_withJavaUtilCollection_withEduStanfordNlpTreesTree_withBoolean_withBoolean_(EduStanfordNlpTreesGrammaticalStructure *gs, id<JavaUtilCollection> deps, EduStanfordNlpTreesTree *tree, jboolean conllx, jboolean extraSep) {
  EduStanfordNlpTreesGrammaticalStructure_initialize();
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:EduStanfordNlpTreesGrammaticalStructure_dependenciesToStringWithEduStanfordNlpTreesGrammaticalStructure_withJavaUtilCollection_withEduStanfordNlpTreesTree_withBoolean_withBoolean_(gs, deps, tree, conllx, extraSep)];
}

NSString *EduStanfordNlpTreesGrammaticalStructure_dependenciesToCoNLLXStringWithEduStanfordNlpTreesGrammaticalStructure_withEduStanfordNlpUtilCoreMap_(EduStanfordNlpTreesGrammaticalStructure *gs, id<EduStanfordNlpUtilCoreMap> sentence) {
  EduStanfordNlpTreesGrammaticalStructure_initialize();
  return EduStanfordNlpTreesGrammaticalStructure_dependenciesToCoNLLXStringWithJavaUtilCollection_withEduStanfordNlpUtilCoreMap_([((EduStanfordNlpTreesGrammaticalStructure *) nil_chk(gs)) typedDependencies], sentence);
}

NSString *EduStanfordNlpTreesGrammaticalStructure_dependenciesToCoNLLXStringWithJavaUtilCollection_withEduStanfordNlpUtilCoreMap_(id<JavaUtilCollection> deps, id<EduStanfordNlpUtilCoreMap> sentence) {
  EduStanfordNlpTreesGrammaticalStructure_initialize();
  JavaLangStringBuilder *bf = new_JavaLangStringBuilder_init();
  JavaUtilHashMap *indexedDeps = new_JavaUtilHashMap_initWithInt_([((id<JavaUtilCollection>) nil_chk(deps)) size]);
  for (EduStanfordNlpTreesTypedDependency * __strong dep in deps) {
    (void) [indexedDeps putWithId:JavaLangInteger_valueOfWithInt_([((EduStanfordNlpLingIndexedWord *) nil_chk([((EduStanfordNlpTreesTypedDependency *) nil_chk(dep)) dep])) index]) withId:dep];
  }
  id<JavaUtilList> tokens = [((id<EduStanfordNlpUtilCoreMap>) nil_chk(sentence)) getWithIOSClass:EduStanfordNlpLingCoreAnnotations_TokensAnnotation_class_()];
  if (tokens == nil) {
    @throw new_JavaLangRuntimeException_initWithNSString_(@"dependenciesToCoNLLXString: CoreMap does not have required TokensAnnotation.");
  }
  jint idx = 1;
  for (EduStanfordNlpLingCoreLabel * __strong token in tokens) {
    NSString *word = [((EduStanfordNlpLingCoreLabel *) nil_chk(token)) value];
    NSString *pos = [token tag];
    NSString *cPos = ([token getWithIOSClass:EduStanfordNlpLingCoreAnnotations_CoarseTagAnnotation_class_()] != nil) ? [token getWithIOSClass:EduStanfordNlpLingCoreAnnotations_CoarseTagAnnotation_class_()] : pos;
    NSString *lemma = [token lemma] != nil ? [token lemma] : @"_";
    JavaLangInteger *gov = JavaLangInteger_valueOfWithInt_([indexedDeps containsKeyWithId:JavaLangInteger_valueOfWithInt_(idx)] ? [((EduStanfordNlpLingIndexedWord *) nil_chk([((EduStanfordNlpTreesTypedDependency *) nil_chk([indexedDeps getWithId:JavaLangInteger_valueOfWithInt_(idx)])) gov])) index] : 0);
    NSString *reln = [indexedDeps containsKeyWithId:JavaLangInteger_valueOfWithInt_(idx)] ? [((EduStanfordNlpTreesGrammaticalRelation *) nil_chk([((EduStanfordNlpTreesTypedDependency *) nil_chk([indexedDeps getWithId:JavaLangInteger_valueOfWithInt_(idx)])) reln])) description] : @"erased";
    NSString *out = NSString_formatWithNSString_withNSObjectArray_(@"%d\t%s\t%s\t%s\t%s\t_\t%d\t%s\t_\t_\n", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(idx), word, lemma, cPos, pos, gov, reln } count:7 type:NSObject_class_()]);
    (void) [bf appendWithNSString:out];
    idx++;
  }
  return [bf description];
}

NSString *EduStanfordNlpTreesGrammaticalStructure_dependenciesToStringWithEduStanfordNlpTreesGrammaticalStructure_withJavaUtilCollection_withEduStanfordNlpTreesTree_withBoolean_withBoolean_(EduStanfordNlpTreesGrammaticalStructure *gs, id<JavaUtilCollection> deps, EduStanfordNlpTreesTree *tree, jboolean conllx, jboolean extraSep) {
  EduStanfordNlpTreesGrammaticalStructure_initialize();
  JavaLangStringBuilder *bf = new_JavaLangStringBuilder_init();
  id<JavaUtilMap> indexToPos = EduStanfordNlpUtilGenerics_newHashMap();
  (void) [((id<JavaUtilMap>) nil_chk(indexToPos)) putWithId:JavaLangInteger_valueOfWithInt_(0) withId:JavaLangInteger_valueOfWithInt_(0)];
  id<JavaUtilList> gsLeaves = [((EduStanfordNlpTreesTreeGraphNode *) nil_chk(((EduStanfordNlpTreesGrammaticalStructure *) nil_chk(gs))->root_)) getLeaves];
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(gsLeaves)) size]; i++) {
    EduStanfordNlpTreesTreeGraphNode *leaf = (EduStanfordNlpTreesTreeGraphNode *) cast_chk([gsLeaves getWithInt:i], [EduStanfordNlpTreesTreeGraphNode class]);
    (void) [indexToPos putWithId:JavaLangInteger_valueOfWithInt_([((EduStanfordNlpLingCoreLabel *) nil_chk(((EduStanfordNlpTreesTreeGraphNode *) nil_chk(leaf))->label_)) index]) withId:JavaLangInteger_valueOfWithInt_(i + 1)];
  }
  if (conllx) {
    id<JavaUtilList> leaves = [((EduStanfordNlpTreesTree *) nil_chk(tree)) getLeaves];
    EduStanfordNlpTreesTree *uposTree = EduStanfordNlpTreesUniversalPOSMapper_mapTreeWithEduStanfordNlpTreesTree_(tree);
    id<JavaUtilList> uposLabels = [((EduStanfordNlpTreesTree *) nil_chk(uposTree)) preTerminalYield];
    jint index = 0;
    id<EduStanfordNlpUtilCoreMap> sentence = new_EduStanfordNlpLingCoreLabel_init();
    id<JavaUtilList> tokens = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(leaves)) size]);
    for (EduStanfordNlpTreesTree * __strong leaf in leaves) {
      index++;
      if (![indexToPos containsKeyWithId:JavaLangInteger_valueOfWithInt_(index)]) {
        continue;
      }
      EduStanfordNlpLingCoreLabel *token = new_EduStanfordNlpLingCoreLabel_init();
      [token setIndexWithInt:index];
      [token setValueWithNSString:[((EduStanfordNlpTreesTree *) nil_chk(leaf)) value]];
      [token setWordWithNSString:[leaf value]];
      [token setTagWithNSString:[((EduStanfordNlpTreesTree *) nil_chk([leaf parentWithEduStanfordNlpTreesTree:tree])) value]];
      (void) [token setWithIOSClass:EduStanfordNlpLingCoreAnnotations_CoarseTagAnnotation_class_() withId:[((id<EduStanfordNlpLingLabel>) nil_chk([((id<JavaUtilList>) nil_chk(uposLabels)) getWithInt:index - 1])) value]];
      [tokens addWithId:token];
    }
    (void) [sentence setWithIOSClass:EduStanfordNlpLingCoreAnnotations_TokensAnnotation_class_() withId:tokens];
    (void) [bf appendWithNSString:EduStanfordNlpTreesGrammaticalStructure_dependenciesToCoNLLXStringWithJavaUtilCollection_withEduStanfordNlpUtilCoreMap_(deps, sentence)];
  }
  else {
    if (extraSep) {
      id<JavaUtilList> extraDeps = new_JavaUtilArrayList_init();
      for (EduStanfordNlpTreesTypedDependency * __strong dep in nil_chk(deps)) {
        if ([((EduStanfordNlpTreesTypedDependency *) nil_chk(dep)) extra]) {
          [extraDeps addWithId:dep];
        }
        else {
          (void) [bf appendWithNSString:EduStanfordNlpTreesGrammaticalStructure_toStringIndexWithEduStanfordNlpTreesTypedDependency_withJavaUtilMap_(dep, indexToPos)];
          (void) [bf appendWithNSString:@"\n"];
        }
      }
      if (![extraDeps isEmpty]) {
        (void) [bf appendWithNSString:@"======\n"];
        for (EduStanfordNlpTreesTypedDependency * __strong dep in extraDeps) {
          (void) [bf appendWithNSString:EduStanfordNlpTreesGrammaticalStructure_toStringIndexWithEduStanfordNlpTreesTypedDependency_withJavaUtilMap_(dep, indexToPos)];
          (void) [bf appendWithNSString:@"\n"];
        }
      }
    }
    else {
      for (EduStanfordNlpTreesTypedDependency * __strong dep in nil_chk(deps)) {
        (void) [bf appendWithNSString:EduStanfordNlpTreesGrammaticalStructure_toStringIndexWithEduStanfordNlpTreesTypedDependency_withJavaUtilMap_(dep, indexToPos)];
        (void) [bf appendWithNSString:@"\n"];
      }
    }
  }
  return [bf description];
}

NSString *EduStanfordNlpTreesGrammaticalStructure_toStringIndexWithEduStanfordNlpTreesTypedDependency_withJavaUtilMap_(EduStanfordNlpTreesTypedDependency *td, id<JavaUtilMap> indexToPos) {
  EduStanfordNlpTreesGrammaticalStructure_initialize();
  EduStanfordNlpLingIndexedWord *gov = [((EduStanfordNlpTreesTypedDependency *) nil_chk(td)) gov];
  EduStanfordNlpLingIndexedWord *dep = [td dep];
  return JreStrcat("@C$C@$$$C@$C", [td reln], '(', [((EduStanfordNlpLingIndexedWord *) nil_chk(gov)) value], '-', [((id<JavaUtilMap>) nil_chk(indexToPos)) getWithId:JavaLangInteger_valueOfWithInt_([gov index])], [gov toPrimes], @", ", [((EduStanfordNlpLingIndexedWord *) nil_chk(dep)) value], '-', [indexToPos getWithId:JavaLangInteger_valueOfWithInt_([dep index])], [dep toPrimes], ')');
}

id<JavaUtilList> EduStanfordNlpTreesGrammaticalStructure_readCoNLLXGrammaticalStructureCollectionWithNSString_withJavaUtilMap_withEduStanfordNlpTreesGrammaticalStructureFromDependenciesFactory_(NSString *fileName, id<JavaUtilMap> shortNameToGRel, id<EduStanfordNlpTreesGrammaticalStructureFromDependenciesFactory> factory) {
  EduStanfordNlpTreesGrammaticalStructure_initialize();
  JavaIoLineNumberReader *reader = new_JavaIoLineNumberReader_initWithJavaIoReader_(EduStanfordNlpIoIOUtils_readerFromStringWithNSString_(fileName));
  id<JavaUtilList> gsList = new_JavaUtilLinkedList_init();
  id<JavaUtilList> tokenFields = new_JavaUtilArrayList_init();
  for (NSString *inline_ = [reader readLine]; inline_ != nil; inline_ = [reader readLine]) {
    if (![inline_ isEmpty]) {
      id<JavaUtilList> fields = JavaUtilArrays_asListWithNSObjectArray_([inline_ split:@"\t"]);
      if ([((id<JavaUtilList>) nil_chk(fields)) size] != EduStanfordNlpTreesGrammaticalStructure_CoNLLX_FieldCount) {
        @throw new_JavaLangRuntimeException_initWithNSString_(NSString_formatWithNSString_withNSObjectArray_(@"Error (line %d): 10 fields expected but %d are present", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_([reader getLineNumber]), JavaLangInteger_valueOfWithInt_([fields size]) } count:2 type:NSObject_class_()]));
      }
      [tokenFields addWithId:fields];
    }
    else {
      if ([tokenFields isEmpty]) continue;
      [gsList addWithId:EduStanfordNlpTreesGrammaticalStructure_buildCoNLLXGrammaticalStructureWithJavaUtilList_withJavaUtilMap_withEduStanfordNlpTreesGrammaticalStructureFromDependenciesFactory_(tokenFields, shortNameToGRel, factory)];
      tokenFields = new_JavaUtilArrayList_init();
    }
  }
  return gsList;
}

EduStanfordNlpTreesGrammaticalStructure *EduStanfordNlpTreesGrammaticalStructure_buildCoNLLXGrammaticalStructureWithJavaUtilList_withJavaUtilMap_withEduStanfordNlpTreesGrammaticalStructureFromDependenciesFactory_(id<JavaUtilList> tokenFields, id<JavaUtilMap> shortNameToGRel, id<EduStanfordNlpTreesGrammaticalStructureFromDependenciesFactory> factory) {
  EduStanfordNlpTreesGrammaticalStructure_initialize();
  id<JavaUtilList> tgWords = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(tokenFields)) size]);
  id<JavaUtilList> tgPOSNodes = new_JavaUtilArrayList_initWithInt_([tokenFields size]);
  EduStanfordNlpTreesSemanticHeadFinder *headFinder = new_EduStanfordNlpTreesSemanticHeadFinder_init();
  for (id<JavaUtilList> __strong fields in tokenFields) {
    EduStanfordNlpLingCoreLabel *word = new_EduStanfordNlpLingCoreLabel_init();
    [word setValueWithNSString:[((id<JavaUtilList>) nil_chk(fields)) getWithInt:EduStanfordNlpTreesGrammaticalStructure_CoNLLX_WordField]];
    [word setWordWithNSString:[fields getWithInt:EduStanfordNlpTreesGrammaticalStructure_CoNLLX_WordField]];
    [word setTagWithNSString:[fields getWithInt:EduStanfordNlpTreesGrammaticalStructure_CoNLLX_POSField]];
    [word setIndexWithInt:[tgWords size] + 1];
    EduStanfordNlpLingCoreLabel *pos = new_EduStanfordNlpLingCoreLabel_init();
    [pos setTagWithNSString:[fields getWithInt:EduStanfordNlpTreesGrammaticalStructure_CoNLLX_POSField]];
    [pos setValueWithNSString:[fields getWithInt:EduStanfordNlpTreesGrammaticalStructure_CoNLLX_POSField]];
    EduStanfordNlpTreesTreeGraphNode *wordNode = new_EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpLingLabel_(word);
    EduStanfordNlpTreesTreeGraphNode *posNode = new_EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpLingLabel_(pos);
    [tgWords addWithId:new_EduStanfordNlpLingIndexedWord_initWithEduStanfordNlpLingCoreLabel_(word)];
    [tgPOSNodes addWithId:posNode];
    IOSObjectArray *childArr = [IOSObjectArray newArrayWithObjects:(id[]){ wordNode } count:1 type:EduStanfordNlpTreesTreeGraphNode_class_()];
    [posNode setChildrenWithEduStanfordNlpTreesTreeArray:childArr];
    [wordNode setParentWithEduStanfordNlpTreesTreeGraphNode:posNode];
    [posNode percolateHeadsWithEduStanfordNlpTreesHeadFinder:headFinder];
  }
  EduStanfordNlpTreesTreeGraphNode *root = new_EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpLingLabel_(new_EduStanfordNlpLingWord_initWithNSString_(JreStrcat("$I", @"ROOT-", ([tgPOSNodes size] + 1))));
  [root setChildrenWithEduStanfordNlpTreesTreeArray:[tgPOSNodes toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[tgPOSNodes size] type:EduStanfordNlpTreesTreeGraphNode_class_()]]];
  id<JavaUtilList> tdeps = new_JavaUtilArrayList_initWithInt_([tgWords size]);
  EduStanfordNlpLingCoreLabel *rootLabel = new_EduStanfordNlpLingCoreLabel_init();
  [rootLabel setValueWithNSString:@"ROOT"];
  [rootLabel setWordWithNSString:@"ROOT"];
  [rootLabel setIndexWithInt:0];
  EduStanfordNlpLingIndexedWord *dependencyRoot = new_EduStanfordNlpLingIndexedWord_initWithEduStanfordNlpLingCoreLabel_(rootLabel);
  for (jint i = 0; i < [tgWords size]; i++) {
    NSString *parentIdStr = [((id<JavaUtilList>) nil_chk([tokenFields getWithInt:i])) getWithInt:EduStanfordNlpTreesGrammaticalStructure_CoNLLX_GovField];
    if (parentIdStr == nil || [parentIdStr isEqual:@""]) continue;
    jint parentId = JavaLangInteger_parseIntWithNSString_(parentIdStr) - 1;
    NSString *grelString = [((id<JavaUtilList>) nil_chk([tokenFields getWithInt:i])) getWithInt:EduStanfordNlpTreesGrammaticalStructure_CoNLLX_RelnField];
    if ([((NSString *) nil_chk(grelString)) isEqual:@"null"] || [grelString isEqual:@"erased"]) continue;
    EduStanfordNlpTreesGrammaticalRelation *grel = [((id<JavaUtilMap>) nil_chk(shortNameToGRel)) getWithId:[grelString lowercaseString]];
    EduStanfordNlpTreesTypedDependency *tdep;
    if (grel == nil) {
      if ([((NSString *) nil_chk([grelString lowercaseString])) isEqual:@"root"]) {
        tdep = new_EduStanfordNlpTreesTypedDependency_initWithEduStanfordNlpTreesGrammaticalRelation_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_(JreLoadStatic(EduStanfordNlpTreesGrammaticalRelation, ROOT), dependencyRoot, [tgWords getWithInt:i]);
      }
      else {
        @throw new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$$@$@$@C", @"Unknown grammatical relation '", grelString, @"' fields: ", [tokenFields getWithInt:i], @"\nNode: ", [tgWords getWithInt:i], @"\nKnown Grammatical relations: [", [shortNameToGRel keySet], ']'));
      }
    }
    else {
      if (parentId >= [tgWords size]) {
        (void) [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printfWithNSString:@"Warning: Invalid Parent Id %d Sentence Length: %d%n" withNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(parentId + 1), JavaLangInteger_valueOfWithInt_([tgWords size]) } count:2 type:NSObject_class_()]];
        (void) [JreLoadStatic(JavaLangSystem, err) printfWithNSString:@"         Assigning to root (0)%n" withNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]];
        parentId = -1;
      }
      tdep = new_EduStanfordNlpTreesTypedDependency_initWithEduStanfordNlpTreesGrammaticalRelation_withEduStanfordNlpLingIndexedWord_withEduStanfordNlpLingIndexedWord_(grel, (parentId == -1 ? dependencyRoot : [tgWords getWithInt:parentId]), [tgWords getWithInt:i]);
    }
    [tdeps addWithId:tdep];
  }
  return [((id<EduStanfordNlpTreesGrammaticalStructureFromDependenciesFactory>) nil_chk(factory)) buildWithJavaUtilList:tdeps withEduStanfordNlpTreesTreeGraphNode:root];
}

IOSObjectArray *EduStanfordNlpTreesGrammaticalStructure_parseClassConstructArgsWithNSString_(NSString *namePlusArgs) {
  EduStanfordNlpTreesGrammaticalStructure_initialize();
  IOSObjectArray *args = JreLoadStatic(EduStanfordNlpUtilStringUtils, EMPTY_STRING_ARRAY);
  NSString *name = namePlusArgs;
  if ([((NSString *) nil_chk(namePlusArgs)) matches:@".*\\([^)]*\\)$"]) {
    NSString *argStr = [namePlusArgs replaceFirst:@"^.*\\(([^)]*)\\)$" withReplacement:@"$1"];
    args = [((NSString *) nil_chk(argStr)) split:@","];
    name = [namePlusArgs replaceFirst:@"\\([^)]*\\)$" withReplacement:@""];
  }
  IOSObjectArray *tokens = [IOSObjectArray newArrayWithLength:1 + ((IOSObjectArray *) nil_chk(args))->size_ type:NSString_class_()];
  (void) IOSObjectArray_Set(tokens, 0, name);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(args, 0, tokens, 1, args->size_);
  return tokens;
}

id<EduStanfordNlpTreesDependencyReader> EduStanfordNlpTreesGrammaticalStructure_loadAlternateDependencyReaderWithNSString_(NSString *altDepReaderName) {
  EduStanfordNlpTreesGrammaticalStructure_initialize();
  IOSClass *altDepReaderClass = nil;
  IOSObjectArray *toks = EduStanfordNlpTreesGrammaticalStructure_parseClassConstructArgsWithNSString_(altDepReaderName);
  altDepReaderName = IOSObjectArray_Get(nil_chk(toks), 0);
  IOSObjectArray *depReaderArgs = [IOSObjectArray newArrayWithLength:toks->size_ - 1 type:NSString_class_()];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(toks, 1, depReaderArgs, 0, toks->size_ - 1);
  @try {
    IOSClass *cl = IOSClass_forName_(altDepReaderName);
    altDepReaderClass = [((IOSClass *) nil_chk(cl)) asSubclass:EduStanfordNlpTreesDependencyReader_class_()];
  }
  @catch (JavaLangClassNotFoundException *e) {
  }
  if (altDepReaderClass == nil) {
    @try {
      IOSClass *cl = IOSClass_forName_(JreStrcat("$$", @"edu.stanford.nlp.trees.", altDepReaderName));
      altDepReaderClass = [((IOSClass *) nil_chk(cl)) asSubclass:EduStanfordNlpTreesDependencyReader_class_()];
    }
    @catch (JavaLangClassNotFoundException *e) {
    }
  }
  if (altDepReaderClass == nil) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$$$$", @"Can't load dependency reader ", altDepReaderName, @" or edu.stanford.nlp.trees.", altDepReaderName)];
    return nil;
  }
  id<EduStanfordNlpTreesDependencyReader> altDepReader;
  if (depReaderArgs->size_ == 0) {
    @try {
      altDepReader = [altDepReaderClass newInstance];
    }
    @catch (JavaLangInstantiationException *e) {
      @throw new_JavaLangRuntimeException_initWithNSException_(e);
    }
    @catch (JavaLangIllegalAccessException *e) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$$$", @"No argument constructor to ", altDepReaderName, @" is not public")];
      return nil;
    }
  }
  else {
    @try {
      altDepReader = [((JavaLangReflectConstructor *) nil_chk([altDepReaderClass getConstructor:[IOSObjectArray newArrayWithObjects:(id[]){ IOSClass_arrayType(NSString_class_(), 1) } count:1 type:IOSClass_class_()]])) newInstanceWithNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ depReaderArgs } count:1 type:NSObject_class_()]];
    }
    @catch (JavaLangIllegalArgumentException *e) {
      @throw new_JavaLangRuntimeException_initWithNSException_(e);
    }
    @catch (JavaLangSecurityException *e) {
      @throw new_JavaLangRuntimeException_initWithNSException_(e);
    }
    @catch (JavaLangReflectInvocationTargetException *e) {
      @throw new_JavaLangRuntimeException_initWithNSException_(e);
    }
    @catch (JavaLangInstantiationException *e) {
      [((JavaLangInstantiationException *) nil_chk(e)) printStackTrace];
      return nil;
    }
    @catch (JavaLangIllegalAccessException *e) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("I$$$", depReaderArgs->size_, @" argument constructor to ", altDepReaderName, @" is not public.")];
      return nil;
    }
    @catch (JavaLangNoSuchMethodException *e) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$$$", @"String arguments constructor to ", altDepReaderName, @" does not exist.")];
      return nil;
    }
  }
  return altDepReader;
}

id<EduStanfordNlpTreesDependencyPrinter> EduStanfordNlpTreesGrammaticalStructure_loadAlternateDependencyPrinterWithNSString_(NSString *altDepPrinterName) {
  EduStanfordNlpTreesGrammaticalStructure_initialize();
  IOSClass *altDepPrinterClass = nil;
  IOSObjectArray *toks = EduStanfordNlpTreesGrammaticalStructure_parseClassConstructArgsWithNSString_(altDepPrinterName);
  altDepPrinterName = IOSObjectArray_Get(nil_chk(toks), 0);
  IOSObjectArray *depPrintArgs = [IOSObjectArray newArrayWithLength:toks->size_ - 1 type:NSString_class_()];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(toks, 1, depPrintArgs, 0, toks->size_ - 1);
  @try {
    IOSClass *cl = IOSClass_forName_(altDepPrinterName);
    altDepPrinterClass = [((IOSClass *) nil_chk(cl)) asSubclass:EduStanfordNlpTreesDependencyPrinter_class_()];
  }
  @catch (JavaLangClassNotFoundException *e) {
  }
  if (altDepPrinterClass == nil) {
    @try {
      IOSClass *cl = IOSClass_forName_(JreStrcat("$$", @"edu.stanford.nlp.trees.", altDepPrinterName));
      altDepPrinterClass = [((IOSClass *) nil_chk(cl)) asSubclass:EduStanfordNlpTreesDependencyPrinter_class_()];
    }
    @catch (JavaLangClassNotFoundException *e) {
    }
  }
  if (altDepPrinterClass == nil) {
    (void) [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printfWithNSString:@"Unable to load alternative printer %s or %s. Is your classpath set correctly?\n" withNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ altDepPrinterName, JreStrcat("$$", @"edu.stanford.nlp.trees.", altDepPrinterName) } count:2 type:NSObject_class_()]];
    return nil;
  }
  @try {
    id<EduStanfordNlpTreesDependencyPrinter> depPrinter;
    if (depPrintArgs->size_ == 0) {
      depPrinter = [altDepPrinterClass newInstance];
    }
    else {
      depPrinter = [((JavaLangReflectConstructor *) nil_chk([altDepPrinterClass getConstructor:[IOSObjectArray newArrayWithObjects:(id[]){ IOSClass_arrayType(NSString_class_(), 1) } count:1 type:IOSClass_class_()]])) newInstanceWithNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ depPrintArgs } count:1 type:NSObject_class_()]];
    }
    return depPrinter;
  }
  @catch (JavaLangIllegalArgumentException *e) {
    [((JavaLangIllegalArgumentException *) nil_chk(e)) printStackTrace];
    return nil;
  }
  @catch (JavaLangSecurityException *e) {
    [((JavaLangSecurityException *) nil_chk(e)) printStackTrace];
    return nil;
  }
  @catch (JavaLangInstantiationException *e) {
    [((JavaLangInstantiationException *) nil_chk(e)) printStackTrace];
    return nil;
  }
  @catch (JavaLangIllegalAccessException *e) {
    [((JavaLangIllegalAccessException *) nil_chk(e)) printStackTrace];
    return nil;
  }
  @catch (JavaLangReflectInvocationTargetException *e) {
    [((JavaLangReflectInvocationTargetException *) nil_chk(e)) printStackTrace];
    return nil;
  }
  @catch (JavaLangNoSuchMethodException *e) {
    if (depPrintArgs->size_ == 0) {
      (void) [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printfWithNSString:@"Can't find no-argument constructor %s().%n" withNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ altDepPrinterName } count:1 type:NSObject_class_()]];
    }
    else {
      (void) [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printfWithNSString:@"Can't find constructor %s(%s).%n" withNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ altDepPrinterName, JavaUtilArrays_toStringWithNSObjectArray_(depPrintArgs) } count:2 type:NSObject_class_()]];
    }
    return nil;
  }
}

id<JavaUtilFunctionFunction> EduStanfordNlpTreesGrammaticalStructure_loadParserWithNSString_withNSString_withBoolean_(NSString *parserFile, NSString *parserOptions, jboolean makeCopulaHead) {
  EduStanfordNlpTreesGrammaticalStructure_initialize();
  if (parserFile == nil || [@"" isEqual:parserFile]) {
    parserFile = EduStanfordNlpTreesGrammaticalStructure_DEFAULT_PARSER_FILE;
    if (parserOptions == nil) {
      parserOptions = @"-retainTmpSubcategories";
    }
  }
  if (parserOptions == nil) {
    parserOptions = @"";
  }
  if (makeCopulaHead) {
    parserOptions = JreStrcat("$$", @"-makeCopulaHead ", parserOptions);
  }
  parserOptions = [parserOptions trim];
  id<JavaUtilFunctionFunction> lp;
  @try {
    IOSObjectArray *classes = [IOSObjectArray newArrayWithObjects:(id[]){ NSString_class_(), IOSClass_arrayType(NSString_class_(), 1) } count:2 type:IOSClass_class_()];
    JavaLangReflectMethod *method = [((IOSClass *) nil_chk(IOSClass_forName_(@"edu.stanford.nlp.parser.lexparser.LexicalizedParser"))) getMethod:@"loadModel" parameterTypes:classes];
    IOSObjectArray *opts = JreLoadStatic(EduStanfordNlpUtilStringUtils, EMPTY_STRING_ARRAY);
    if (![((NSString *) nil_chk(parserOptions)) isEmpty]) {
      opts = [parserOptions split:@" +"];
    }
    lp = (id<JavaUtilFunctionFunction>) cast_check([((JavaLangReflectMethod *) nil_chk(method)) invokeWithId:nil withNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ parserFile, opts } count:2 type:NSObject_class_()]], JavaUtilFunctionFunction_class_());
  }
  @catch (JavaLangException *cnfe) {
    @throw new_JavaLangRuntimeException_initWithNSException_(cnfe);
  }
  return lp;
}

void EduStanfordNlpTreesGrammaticalStructure_mainWithNSStringArray_(IOSObjectArray *args) {
  EduStanfordNlpTreesGrammaticalStructure_initialize();
  EduStanfordNlpTreesMemoryTreebank *tb = new_EduStanfordNlpTreesMemoryTreebank_initWithEduStanfordNlpTreesTreeNormalizer_(new_EduStanfordNlpTreesNPTmpRetainingTreeNormalizer_initWithInt_withBoolean_withInt_withBoolean_(0, false, 1, false));
  id<JavaLangIterable> trees = tb;
  id<JavaLangIterable> gsBank = nil;
  JavaUtilProperties *props = EduStanfordNlpUtilStringUtils_argsToPropertiesWithNSStringArray_(args);
  NSString *encoding = [((JavaUtilProperties *) nil_chk(props)) getPropertyWithNSString:@"encoding" withNSString:@"utf-8"];
  @try {
    JavaLangSystem_setOutWithJavaIoPrintStream_(new_JavaIoPrintStream_initWithJavaIoOutputStream_withBoolean_withNSString_(JreLoadStatic(JavaLangSystem, out), true, encoding));
  }
  @catch (JavaIoIOException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
  NSString *treeFileName = [props getPropertyWithNSString:@"treeFile"];
  NSString *sentFileName = [props getPropertyWithNSString:@"sentFile"];
  NSString *conllXFileName = [props getPropertyWithNSString:@"conllxFile"];
  NSString *altDepPrinterName = [props getPropertyWithNSString:@"altprinter"];
  NSString *altDepReaderName = [props getPropertyWithNSString:@"altreader"];
  NSString *altDepReaderFilename = [props getPropertyWithNSString:@"altreaderfile"];
  NSString *filter = [props getPropertyWithNSString:@"filter"];
  jboolean makeCopulaHead = [props getPropertyWithNSString:@"makeCopulaHead"] != nil;
  jboolean generateOriginalDependencies = [props getPropertyWithNSString:@"originalDependencies"] != nil;
  NSString *tLPP = [props getPropertyWithNSString:@"tLPP" withNSString:@"edu.stanford.nlp.parser.lexparser.EnglishTreebankParserParams"];
  id<EduStanfordNlpParserLexparserTreebankLangParserParams> params = EduStanfordNlpUtilReflectionLoading_loadByReflectionWithNSString_withNSObjectArray_(tLPP, [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  if (generateOriginalDependencies) {
    [((id<EduStanfordNlpParserLexparserTreebankLangParserParams>) nil_chk(params)) setGenerateOriginalDependenciesWithBoolean:true];
  }
  if (makeCopulaHead) {
    IOSObjectArray *options = [IOSObjectArray newArrayWithObjects:(id[]){ @"-makeCopulaHead" } count:1 type:NSString_class_()];
    [((id<EduStanfordNlpParserLexparserTreebankLangParserParams>) nil_chk(params)) setOptionFlagWithNSStringArray:options withInt:0];
  }
  if (sentFileName == nil && (altDepReaderName == nil || altDepReaderFilename == nil) && treeFileName == nil && conllXFileName == nil && filter == nil) {
    @try {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"Usage: java GrammaticalStructure [options]* [-sentFile|-treeFile|-conllxFile file] [-testGraph]"];
      [JreLoadStatic(JavaLangSystem, err) printlnWithNSString:@"  options: -basic, -collapsed, -CCprocessed [the default], -collapsedTree, -parseTree, -test, -parserFile file, -conllx, -keepPunct, -altprinter -altreader -altreaderfile -originalDependencies"];
      id<EduStanfordNlpTreesTreeReader> tr = new_EduStanfordNlpTreesPennTreeReader_initWithJavaIoReader_(new_JavaIoStringReader_initWithNSString_(@"((S (NP (NNP Sam)) (VP (VBD died) (NP-TMP (NN today)))))"));
      [tb addWithId:[tr readTree]];
    }
    @catch (JavaLangException *e) {
      [JreLoadStatic(JavaLangSystem, err) printlnWithNSString:JreStrcat("$@", @"Horrible error: ", e)];
      [((JavaLangException *) nil_chk(e)) printStackTrace];
    }
  }
  else if (altDepReaderName != nil && altDepReaderFilename != nil) {
    id<EduStanfordNlpTreesDependencyReader> altDepReader = EduStanfordNlpTreesGrammaticalStructure_loadAlternateDependencyReaderWithNSString_(altDepReaderName);
    @try {
      gsBank = [((id<EduStanfordNlpTreesDependencyReader>) nil_chk(altDepReader)) readDependenciesWithNSString:altDepReaderFilename];
    }
    @catch (JavaIoIOException *e) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$$", @"Error reading ", altDepReaderFilename)];
      return;
    }
  }
  else if (treeFileName != nil) {
    [tb loadPathWithNSString:treeFileName];
  }
  else if (filter != nil) {
    [tb load__WithJavaIoReader:EduStanfordNlpIoIOUtils_readerFromStdin()];
  }
  else if (conllXFileName != nil) {
    @try {
      gsBank = [((id<EduStanfordNlpParserLexparserTreebankLangParserParams>) nil_chk(params)) readGrammaticalStructureFromFileWithNSString:conllXFileName];
    }
    @catch (EduStanfordNlpIoRuntimeIOException *e) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$$", @"Error reading ", conllXFileName)];
      return;
    }
  }
  else {
    NSString *parserFile = [props getPropertyWithNSString:@"parserFile"];
    NSString *parserOpts = [props getPropertyWithNSString:@"parserOpts"];
    jboolean tokenized = [props getPropertyWithNSString:@"tokenized"] != nil;
    id<JavaUtilFunctionFunction> lp = EduStanfordNlpTreesGrammaticalStructure_loadParserWithNSString_withNSString_withBoolean_(parserFile, parserOpts, makeCopulaHead);
    trees = new_EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_initWithNSString_withNSString_withBoolean_withJavaUtilFunctionFunction_(sentFileName, encoding, tokenized, lp);
    @try {
      JavaLangReflectMethod *method = [[((id<JavaUtilFunctionFunction>) nil_chk(lp)) getClass] getMethod:@"getTLPParams" parameterTypes:[IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]];
      params = (id<EduStanfordNlpParserLexparserTreebankLangParserParams>) cast_check([((JavaLangReflectMethod *) nil_chk(method)) invokeWithId:lp withNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]], EduStanfordNlpParserLexparserTreebankLangParserParams_class_());
    }
    @catch (JavaLangException *cnfe) {
      @throw new_JavaLangRuntimeException_initWithNSException_(cnfe);
    }
  }
  jboolean basic = [props getPropertyWithNSString:@"basic"] != nil;
  jboolean collapsed = [props getPropertyWithNSString:@"collapsed"] != nil;
  jboolean CCprocessed = [props getPropertyWithNSString:@"CCprocessed"] != nil;
  jboolean collapsedTree = [props getPropertyWithNSString:@"collapsedTree"] != nil;
  jboolean nonCollapsed = [props getPropertyWithNSString:@"nonCollapsed"] != nil;
  jboolean extraSep = [props getPropertyWithNSString:@"extraSep"] != nil;
  jboolean parseTree = [props getPropertyWithNSString:@"parseTree"] != nil;
  jboolean test = [props getPropertyWithNSString:@"test"] != nil;
  jboolean keepPunct = [props getPropertyWithNSString:@"keepPunct"] != nil;
  jboolean conllx = [props getPropertyWithNSString:@"conllx"] != nil;
  jboolean checkConnected = [props getPropertyWithNSString:@"checkConnected"] != nil;
  jboolean portray = [props getPropertyWithNSString:@"portray"] != nil;
  if (conllx) {
    keepPunct = true;
  }
  id<EduStanfordNlpTreesDependencyPrinter> altDepPrinter = nil;
  if (altDepPrinterName != nil) {
    altDepPrinter = EduStanfordNlpTreesGrammaticalStructure_loadAlternateDependencyPrinterWithNSString_(altDepPrinterName);
  }
  JavaLangReflectMethod *m = nil;
  if (test) {
    @try {
      IOSClass *sgf = IOSClass_forName_(@"edu.stanford.nlp.semgraph.SemanticGraphFactory");
      m = [((IOSClass *) nil_chk(sgf)) getDeclaredMethod:@"makeFromTree" parameterTypes:[IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpTreesGrammaticalStructure_class_(), [IOSClass booleanClass], [IOSClass booleanClass], [IOSClass booleanClass], [IOSClass booleanClass], [IOSClass booleanClass], [IOSClass booleanClass], JavaUtilFunctionPredicate_class_(), NSString_class_(), [IOSClass intClass] } count:10 type:IOSClass_class_()]];
    }
    @catch (JavaLangException *e) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"Test cannot check for cycles in tree format (classes not available)"];
    }
  }
  if (gsBank == nil) {
    gsBank = new_EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_initWithJavaLangIterable_withBoolean_withEduStanfordNlpParserLexparserTreebankLangParserParams_(trees, keepPunct, params);
  }
  for (EduStanfordNlpTreesGrammaticalStructure * __strong gs in gsBank) {
    EduStanfordNlpTreesTree *tree;
    if ([gsBank isKindOfClass:[EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper class]]) {
      tree = [((EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper *) cast_chk(gsBank, [EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper class])) getOriginalTreeWithEduStanfordNlpTreesGrammaticalStructure:gs];
    }
    else {
      tree = [((EduStanfordNlpTreesGrammaticalStructure *) nil_chk(gs)) root];
    }
    if (test) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"============= parse tree ======================="];
      [((EduStanfordNlpTreesTree *) nil_chk(tree)) pennPrint];
      [JreLoadStatic(JavaLangSystem, out) println];
      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:@"------------- GrammaticalStructure -------------"];
      [JreLoadStatic(JavaLangSystem, out) printlnWithId:gs];
      jboolean allConnected = true;
      jboolean connected;
      id<JavaUtilCollection> bungRoots = nil;
      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:@"------------- basic dependencies ---------------"];
      id<JavaUtilList> gsb = [((EduStanfordNlpTreesGrammaticalStructure *) nil_chk(gs)) typedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_Extras:JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE)];
      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:EduStanfordNlpUtilStringUtils_joinWithJavaLangIterable_withNSString_(gsb, @"\n")];
      connected = EduStanfordNlpTreesGrammaticalStructure_isConnectedWithJavaUtilCollection_(gsb);
      if (!connected && bungRoots == nil) {
        bungRoots = EduStanfordNlpTreesGrammaticalStructure_getRootsWithJavaUtilCollection_(gsb);
      }
      allConnected = (connected && allConnected);
      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:@"------------- non-collapsed dependencies (basic + extra) ---------------"];
      id<JavaUtilList> gse = [gs typedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_Extras:JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, MAXIMAL)];
      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:EduStanfordNlpUtilStringUtils_joinWithJavaLangIterable_withNSString_(gse, @"\n")];
      connected = EduStanfordNlpTreesGrammaticalStructure_isConnectedWithJavaUtilCollection_(gse);
      if (!connected && bungRoots == nil) {
        bungRoots = EduStanfordNlpTreesGrammaticalStructure_getRootsWithJavaUtilCollection_(gse);
      }
      allConnected = (connected && allConnected);
      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:@"------------- collapsed dependencies -----------"];
      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:EduStanfordNlpUtilStringUtils_joinWithJavaLangIterable_withNSString_([gs typedDependenciesCollapsedWithEduStanfordNlpTreesGrammaticalStructure_Extras:JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, MAXIMAL)], @"\n")];
      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:@"------------- collapsed dependencies tree -----------"];
      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:EduStanfordNlpUtilStringUtils_joinWithJavaLangIterable_withNSString_([gs typedDependenciesCollapsedTree], @"\n")];
      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:@"------------- CCprocessed dependencies --------"];
      id<JavaUtilList> gscc = [gs typedDependenciesCollapsedWithEduStanfordNlpTreesGrammaticalStructure_Extras:JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, MAXIMAL)];
      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:EduStanfordNlpUtilStringUtils_joinWithJavaLangIterable_withNSString_(gscc, @"\n")];
      [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:@"-----------------------------------------------"];
      connected = EduStanfordNlpTreesGrammaticalStructure_isConnectedWithJavaUtilCollection_(gscc);
      if (!connected && bungRoots == nil) {
        bungRoots = EduStanfordNlpTreesGrammaticalStructure_getRootsWithJavaUtilCollection_(gscc);
      }
      allConnected = (connected && allConnected);
      if (allConnected) {
        [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:@"dependencies form connected graphs."];
      }
      else {
        [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$@", @"dependency graph NOT connected! possible offending nodes: ", bungRoots)];
      }
      if (m != nil) {
        @try {
          id semGraph = [m invokeWithId:nil withNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ gs, JavaLangBoolean_valueOfWithBoolean_(false), JavaLangBoolean_valueOfWithBoolean_(true), JavaLangBoolean_valueOfWithBoolean_(false), JavaLangBoolean_valueOfWithBoolean_(false), JavaLangBoolean_valueOfWithBoolean_(false), JavaLangBoolean_valueOfWithBoolean_(false), nil, nil, JavaLangInteger_valueOfWithInt_(0) } count:10 type:NSObject_class_()]];
          IOSClass *sg = IOSClass_forName_(@"edu.stanford.nlp.semgraph.SemanticGraph");
          JavaLangReflectMethod *mDag = [((IOSClass *) nil_chk(sg)) getDeclaredMethod:@"isDag" parameterTypes:[IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]];
          jboolean isDag = [((JavaLangBoolean *) nil_chk((JavaLangBoolean *) cast_chk([((JavaLangReflectMethod *) nil_chk(mDag)) invokeWithId:semGraph withNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]], [JavaLangBoolean class]))) booleanValue];
          [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:JreStrcat("$Z", @"tree dependencies form a DAG: ", isDag)];
        }
        @catch (JavaLangException *e) {
          [((JavaLangException *) nil_chk(e)) printStackTrace];
        }
      }
    }
    else {
      if (parseTree) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"============= parse tree ======================="];
        [((EduStanfordNlpTreesTree *) nil_chk(tree)) pennPrint];
        [JreLoadStatic(JavaLangSystem, out) println];
      }
      if (basic) {
        if (collapsed || CCprocessed || collapsedTree || nonCollapsed) {
          [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"------------- basic dependencies ---------------"];
        }
        if (altDepPrinter == nil) {
          EduStanfordNlpTreesGrammaticalStructure_printDependenciesWithEduStanfordNlpTreesGrammaticalStructure_withJavaUtilCollection_withEduStanfordNlpTreesTree_withBoolean_withBoolean_(gs, [((EduStanfordNlpTreesGrammaticalStructure *) nil_chk(gs)) typedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_Extras:JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE)], tree, conllx, false);
        }
        else {
          [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:[altDepPrinter dependenciesToStringWithEduStanfordNlpTreesGrammaticalStructure:gs withJavaUtilCollection:[((EduStanfordNlpTreesGrammaticalStructure *) nil_chk(gs)) typedDependenciesWithEduStanfordNlpTreesGrammaticalStructure_Extras:JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE)] withEduStanfordNlpTreesTree:tree]];
        }
      }
      if (nonCollapsed) {
        if (basic || CCprocessed || collapsed || collapsedTree) {
          [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"----------- non-collapsed dependencies (basic + extra) -----------"];
        }
        EduStanfordNlpTreesGrammaticalStructure_printDependenciesWithEduStanfordNlpTreesGrammaticalStructure_withJavaUtilCollection_withEduStanfordNlpTreesTree_withBoolean_withBoolean_(gs, [((EduStanfordNlpTreesGrammaticalStructure *) nil_chk(gs)) allTypedDependencies], tree, conllx, extraSep);
      }
      if (collapsed) {
        if (basic || CCprocessed || collapsedTree || nonCollapsed) {
          [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"----------- collapsed dependencies -----------"];
        }
        EduStanfordNlpTreesGrammaticalStructure_printDependenciesWithEduStanfordNlpTreesGrammaticalStructure_withJavaUtilCollection_withEduStanfordNlpTreesTree_withBoolean_withBoolean_(gs, [((EduStanfordNlpTreesGrammaticalStructure *) nil_chk(gs)) typedDependenciesCollapsedWithEduStanfordNlpTreesGrammaticalStructure_Extras:JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, MAXIMAL)], tree, conllx, false);
      }
      if (CCprocessed) {
        if (basic || collapsed || collapsedTree || nonCollapsed) {
          [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"---------- CCprocessed dependencies ----------"];
        }
        id<JavaUtilList> deps = [((EduStanfordNlpTreesGrammaticalStructure *) nil_chk(gs)) typedDependenciesCCprocessedWithEduStanfordNlpTreesGrammaticalStructure_Extras:JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, MAXIMAL)];
        if (checkConnected) {
          if (!EduStanfordNlpTreesGrammaticalStructure_isConnectedWithJavaUtilCollection_(deps)) {
            [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"Graph is not connected for:"];
            [JreLoadStatic(JavaLangSystem, err) printlnWithId:tree];
            [JreLoadStatic(JavaLangSystem, err) printlnWithNSString:JreStrcat("$@", @"possible offending nodes: ", EduStanfordNlpTreesGrammaticalStructure_getRootsWithJavaUtilCollection_(deps))];
          }
        }
        EduStanfordNlpTreesGrammaticalStructure_printDependenciesWithEduStanfordNlpTreesGrammaticalStructure_withJavaUtilCollection_withEduStanfordNlpTreesTree_withBoolean_withBoolean_(gs, deps, tree, conllx, false);
      }
      if (collapsedTree) {
        if (basic || CCprocessed || collapsed || nonCollapsed) {
          [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"----------- collapsed dependencies tree -----------"];
        }
        EduStanfordNlpTreesGrammaticalStructure_printDependenciesWithEduStanfordNlpTreesGrammaticalStructure_withJavaUtilCollection_withEduStanfordNlpTreesTree_withBoolean_withBoolean_(gs, [((EduStanfordNlpTreesGrammaticalStructure *) nil_chk(gs)) typedDependenciesCollapsedTree], tree, conllx, false);
      }
      if (!basic && !collapsed && !CCprocessed && !collapsedTree && !nonCollapsed) {
        EduStanfordNlpTreesGrammaticalStructure_printDependenciesWithEduStanfordNlpTreesGrammaticalStructure_withJavaUtilCollection_withEduStanfordNlpTreesTree_withBoolean_withBoolean_(gs, [((EduStanfordNlpTreesGrammaticalStructure *) nil_chk(gs)) typedDependenciesCCprocessedWithEduStanfordNlpTreesGrammaticalStructure_Extras:JreLoadEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, MAXIMAL)], tree, conllx, false);
      }
    }
    if (portray) {
      @try {
        IOSClass *sgu = IOSClass_forName_(@"edu.stanford.nlp.semgraph.SemanticGraphUtils");
        JavaLangReflectMethod *mRender = [((IOSClass *) nil_chk(sgu)) getDeclaredMethod:@"render" parameterTypes:[IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpTreesGrammaticalStructure_class_(), NSString_class_() } count:2 type:IOSClass_class_()]];
        (void) [((JavaLangReflectMethod *) nil_chk(mRender)) invokeWithId:nil withNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ gs, @"Collapsed, CC processed deps" } count:2 type:NSObject_class_()]];
      }
      @catch (JavaLangException *e) {
        @throw new_JavaLangRuntimeException_initWithNSString_withNSException_(@"Couldn't use swing to portray semantic graph", e);
      }
    }
  }
}

IOSObjectArray *EduStanfordNlpTreesGrammaticalStructure__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *EduStanfordNlpTreesGrammaticalStructure__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *EduStanfordNlpTreesGrammaticalStructure__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesGrammaticalStructure)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesGrammaticalStructure_Extras)

EduStanfordNlpTreesGrammaticalStructure_Extras *EduStanfordNlpTreesGrammaticalStructure_Extras_values_[7];

@implementation EduStanfordNlpTreesGrammaticalStructure_Extras

+ (IOSObjectArray *)values {
  return EduStanfordNlpTreesGrammaticalStructure_Extras_values();
}

+ (EduStanfordNlpTreesGrammaticalStructure_Extras *)valueOfWithNSString:(NSString *)name {
  return EduStanfordNlpTreesGrammaticalStructure_Extras_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LEduStanfordNlpTreesGrammaticalStructure_Extras;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesGrammaticalStructure_Extras;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NONE", "LEduStanfordNlpTreesGrammaticalStructure_Extras;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "REF_ONLY_UNCOLLAPSED", "LEduStanfordNlpTreesGrammaticalStructure_Extras;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "REF_ONLY_COLLAPSED", "LEduStanfordNlpTreesGrammaticalStructure_Extras;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "SUBJ_ONLY", "LEduStanfordNlpTreesGrammaticalStructure_Extras;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "REF_UNCOLLAPSED_AND_SUBJ", "LEduStanfordNlpTreesGrammaticalStructure_Extras;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "REF_COLLAPSED_AND_SUBJ", "LEduStanfordNlpTreesGrammaticalStructure_Extras;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "MAXIMAL", "LEduStanfordNlpTreesGrammaticalStructure_Extras;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "doRef_", "Z", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "doSubj_", "Z", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "collapseRef_", "Z", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE), &JreEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, REF_ONLY_UNCOLLAPSED), &JreEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, REF_ONLY_COLLAPSED), &JreEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, SUBJ_ONLY), &JreEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, REF_UNCOLLAPSED_AND_SUBJ), &JreEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, REF_COLLAPSED_AND_SUBJ), &JreEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, MAXIMAL), "LEduStanfordNlpTreesGrammaticalStructure;", "Ljava/lang/Enum<Ledu/stanford/nlp/trees/GrammaticalStructure$Extras;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesGrammaticalStructure_Extras = { "Extras", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0x4019, 2, 10, 9, -1, -1, 10, -1 };
  return &_EduStanfordNlpTreesGrammaticalStructure_Extras;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesGrammaticalStructure_Extras class]) {
    JreEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, NONE) = new_EduStanfordNlpTreesGrammaticalStructure_Extras_initWithBoolean_withBoolean_withBoolean_withNSString_withInt_(false, false, false, @"NONE", 0);
    JreEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, REF_ONLY_UNCOLLAPSED) = new_EduStanfordNlpTreesGrammaticalStructure_Extras_initWithBoolean_withBoolean_withBoolean_withNSString_withInt_(true, false, false, @"REF_ONLY_UNCOLLAPSED", 1);
    JreEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, REF_ONLY_COLLAPSED) = new_EduStanfordNlpTreesGrammaticalStructure_Extras_initWithBoolean_withBoolean_withBoolean_withNSString_withInt_(true, false, true, @"REF_ONLY_COLLAPSED", 2);
    JreEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, SUBJ_ONLY) = new_EduStanfordNlpTreesGrammaticalStructure_Extras_initWithBoolean_withBoolean_withBoolean_withNSString_withInt_(false, true, false, @"SUBJ_ONLY", 3);
    JreEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, REF_UNCOLLAPSED_AND_SUBJ) = new_EduStanfordNlpTreesGrammaticalStructure_Extras_initWithBoolean_withBoolean_withBoolean_withNSString_withInt_(true, true, false, @"REF_UNCOLLAPSED_AND_SUBJ", 4);
    JreEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, REF_COLLAPSED_AND_SUBJ) = new_EduStanfordNlpTreesGrammaticalStructure_Extras_initWithBoolean_withBoolean_withBoolean_withNSString_withInt_(true, true, true, @"REF_COLLAPSED_AND_SUBJ", 5);
    JreEnum(EduStanfordNlpTreesGrammaticalStructure_Extras, MAXIMAL) = new_EduStanfordNlpTreesGrammaticalStructure_Extras_initWithBoolean_withBoolean_withBoolean_withNSString_withInt_(true, true, true, @"MAXIMAL", 6);
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesGrammaticalStructure_Extras)
  }
}

@end

void EduStanfordNlpTreesGrammaticalStructure_Extras_initWithBoolean_withBoolean_withBoolean_withNSString_withInt_(EduStanfordNlpTreesGrammaticalStructure_Extras *self, jboolean doRef, jboolean doSubj, jboolean collapseRef, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  self->doRef_ = doRef;
  self->doSubj_ = doSubj;
  self->collapseRef_ = collapseRef;
}

EduStanfordNlpTreesGrammaticalStructure_Extras *new_EduStanfordNlpTreesGrammaticalStructure_Extras_initWithBoolean_withBoolean_withBoolean_withNSString_withInt_(jboolean doRef, jboolean doSubj, jboolean collapseRef, NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesGrammaticalStructure_Extras, initWithBoolean_withBoolean_withBoolean_withNSString_withInt_, doRef, doSubj, collapseRef, __name, __ordinal)
}

IOSObjectArray *EduStanfordNlpTreesGrammaticalStructure_Extras_values() {
  EduStanfordNlpTreesGrammaticalStructure_Extras_initialize();
  return [IOSObjectArray arrayWithObjects:EduStanfordNlpTreesGrammaticalStructure_Extras_values_ count:7 type:EduStanfordNlpTreesGrammaticalStructure_Extras_class_()];
}

EduStanfordNlpTreesGrammaticalStructure_Extras *EduStanfordNlpTreesGrammaticalStructure_Extras_valueOfWithNSString_(NSString *name) {
  EduStanfordNlpTreesGrammaticalStructure_Extras_initialize();
  for (int i = 0; i < 7; i++) {
    EduStanfordNlpTreesGrammaticalStructure_Extras *e = EduStanfordNlpTreesGrammaticalStructure_Extras_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

EduStanfordNlpTreesGrammaticalStructure_Extras *EduStanfordNlpTreesGrammaticalStructure_Extras_fromOrdinal(NSUInteger ordinal) {
  EduStanfordNlpTreesGrammaticalStructure_Extras_initialize();
  if (ordinal >= 7) {
    return nil;
  }
  return EduStanfordNlpTreesGrammaticalStructure_Extras_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesGrammaticalStructure_Extras)

@implementation EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter

- (instancetype)initWithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)f {
  EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter_initWithJavaUtilFunctionPredicate_(self, f);
  return self;
}

- (jboolean)testWithId:(id<EduStanfordNlpTreesDependency>)d {
  if (d == nil) {
    return false;
  }
  id<EduStanfordNlpLingLabel> lab = [d dependent];
  if (lab == nil) {
    return false;
  }
  return [((id<JavaUtilFunctionPredicate>) nil_chk(npf_)) testWithId:[lab value]];
}

- (id<JavaUtilFunctionPredicate>)and__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_and__WithJavaUtilFunctionPredicate_(self, arg0);
}

- (id<JavaUtilFunctionPredicate>)negate {
  return JavaUtilFunctionPredicate_negate(self);
}

- (id<JavaUtilFunctionPredicate>)or__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_or__WithJavaUtilFunctionPredicate_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilFunctionPredicate:);
  methods[1].selector = @selector(testWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "npf_", "LJavaUtilFunctionPredicate;", .constantValue.asLong = 0, 0x2, -1, -1, 5, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilFunctionPredicate;", "(Ljava/util/function/Predicate<Ljava/lang/String;>;)V", "test", "LEduStanfordNlpTreesDependency;", "(Ledu/stanford/nlp/trees/Dependency<Ledu/stanford/nlp/ling/Label;Ledu/stanford/nlp/ling/Label;Ljava/lang/Object;>;)Z", "Ljava/util/function/Predicate<Ljava/lang/String;>;", "LEduStanfordNlpTreesGrammaticalStructure;", "Ljava/lang/Object;Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/Dependency<Ledu/stanford/nlp/ling/Label;Ledu/stanford/nlp/ling/Label;Ljava/lang/Object;>;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter = { "NoPunctFilter", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0xa, 2, 2, 6, -1, -1, 7, -1 };
  return &_EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter;
}

@end

void EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter_initWithJavaUtilFunctionPredicate_(EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter *self, id<JavaUtilFunctionPredicate> f) {
  NSObject_init(self);
  self->npf_ = f;
}

EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter *new_EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter_initWithJavaUtilFunctionPredicate_(id<JavaUtilFunctionPredicate> f) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter, initWithJavaUtilFunctionPredicate_, f)
}

EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter *create_EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter_initWithJavaUtilFunctionPredicate_(id<JavaUtilFunctionPredicate> f) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter, initWithJavaUtilFunctionPredicate_, f)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesGrammaticalStructure_NoPunctFilter)

@implementation EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter

- (instancetype)initWithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)f
                    withJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)tf {
  EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter_initWithJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_(self, f, tf);
  return self;
}

- (jboolean)testWithId:(EduStanfordNlpTreesTypedDependency *)d {
  if (d == nil) return false;
  EduStanfordNlpLingIndexedWord *l = [d dep];
  if (l == nil) return false;
  return [((id<JavaUtilFunctionPredicate>) nil_chk(npf_)) testWithId:[l value]] && [((id<JavaUtilFunctionPredicate>) nil_chk(tf_)) testWithId:[l tag]];
}

- (id<JavaUtilFunctionPredicate>)and__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_and__WithJavaUtilFunctionPredicate_(self, arg0);
}

- (id<JavaUtilFunctionPredicate>)negate {
  return JavaUtilFunctionPredicate_negate(self);
}

- (id<JavaUtilFunctionPredicate>)or__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_or__WithJavaUtilFunctionPredicate_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilFunctionPredicate:withJavaUtilFunctionPredicate:);
  methods[1].selector = @selector(testWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "npf_", "LJavaUtilFunctionPredicate;", .constantValue.asLong = 0, 0x2, -1, -1, 4, -1 },
    { "tf_", "LJavaUtilFunctionPredicate;", .constantValue.asLong = 0, 0x2, -1, -1, 4, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilFunctionPredicate;LJavaUtilFunctionPredicate;", "(Ljava/util/function/Predicate<Ljava/lang/String;>;Ljava/util/function/Predicate<Ljava/lang/String;>;)V", "test", "LEduStanfordNlpTreesTypedDependency;", "Ljava/util/function/Predicate<Ljava/lang/String;>;", "LEduStanfordNlpTreesGrammaticalStructure;", "Ljava/lang/Object;Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/TypedDependency;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter = { "NoPunctTypedDependencyFilter", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0xa, 2, 3, 5, -1, -1, 6, -1 };
  return &_EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter;
}

@end

void EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter_initWithJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_(EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter *self, id<JavaUtilFunctionPredicate> f, id<JavaUtilFunctionPredicate> tf) {
  NSObject_init(self);
  self->npf_ = f;
  self->tf_ = tf;
}

EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter *new_EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter_initWithJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_(id<JavaUtilFunctionPredicate> f, id<JavaUtilFunctionPredicate> tf) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter, initWithJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_, f, tf)
}

EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter *create_EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter_initWithJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_(id<JavaUtilFunctionPredicate> f, id<JavaUtilFunctionPredicate> tf) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter, initWithJavaUtilFunctionPredicate_withJavaUtilFunctionPredicate_, f, tf)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesGrammaticalStructure_NoPunctTypedDependencyFilter)

@implementation EduStanfordNlpTreesGrammaticalStructure_NameComparator

- (jint)compareWithId:(id)o1
               withId:(id)o2 {
  NSString *n1 = [nil_chk(o1) description];
  NSString *n2 = [nil_chk(o2) description];
  return [((NSString *) nil_chk(n1)) compareToWithId:n2];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesGrammaticalStructure_NameComparator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(compareWithId:withId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LNSObject;LNSObject;", "(TX;TX;)I", "LEduStanfordNlpTreesGrammaticalStructure;", "<X:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Comparator<TX;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesGrammaticalStructure_NameComparator = { "NameComparator", "edu.stanford.nlp.trees", ptrTable, methods, NULL, 7, 0xa, 2, 0, 3, -1, -1, 4, -1 };
  return &_EduStanfordNlpTreesGrammaticalStructure_NameComparator;
}

@end

void EduStanfordNlpTreesGrammaticalStructure_NameComparator_init(EduStanfordNlpTreesGrammaticalStructure_NameComparator *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesGrammaticalStructure_NameComparator *new_EduStanfordNlpTreesGrammaticalStructure_NameComparator_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesGrammaticalStructure_NameComparator, init)
}

EduStanfordNlpTreesGrammaticalStructure_NameComparator *create_EduStanfordNlpTreesGrammaticalStructure_NameComparator_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesGrammaticalStructure_NameComparator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesGrammaticalStructure_NameComparator)

@implementation EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)wrappedTrees
                             withBoolean:(jboolean)keepPunct
withEduStanfordNlpParserLexparserTreebankLangParserParams:(id<EduStanfordNlpParserLexparserTreebankLangParserParams>)params {
  EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_initWithJavaLangIterable_withBoolean_withEduStanfordNlpParserLexparserTreebankLangParserParams_(self, wrappedTrees, keepPunct, params);
  return self;
}

- (id<JavaUtilIterator>)iterator {
  return new_EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator_initWithEduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_(self);
}

- (EduStanfordNlpTreesTree *)getOriginalTreeWithEduStanfordNlpTreesGrammaticalStructure:(EduStanfordNlpTreesGrammaticalStructure *)gs {
  return [((id<JavaUtilMap>) nil_chk(origTrees_)) getWithId:gs];
}

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangIterable:withBoolean:withEduStanfordNlpParserLexparserTreebankLangParserParams:);
  methods[1].selector = @selector(iterator);
  methods[2].selector = @selector(getOriginalTreeWithEduStanfordNlpTreesGrammaticalStructure:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "trees_", "LJavaLangIterable;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
    { "keepPunct_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "params_", "LEduStanfordNlpParserLexparserTreebankLangParserParams;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "origTrees_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangIterable;ZLEduStanfordNlpParserLexparserTreebankLangParserParams;", "(Ljava/lang/Iterable<Ledu/stanford/nlp/trees/Tree;>;ZLedu/stanford/nlp/parser/lexparser/TreebankLangParserParams;)V", "()Ljava/util/Iterator<Ledu/stanford/nlp/trees/GrammaticalStructure;>;", "getOriginalTree", "LEduStanfordNlpTreesGrammaticalStructure;", "Ljava/lang/Iterable<Ledu/stanford/nlp/trees/Tree;>;", "Ljava/util/Map<Ledu/stanford/nlp/trees/GrammaticalStructure;Ledu/stanford/nlp/trees/Tree;>;", "LEduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator;", "Ljava/lang/Object;Ljava/lang/Iterable<Ledu/stanford/nlp/trees/GrammaticalStructure;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper = { "TreeBankGrammaticalStructureWrapper", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0xa, 3, 4, 4, 7, -1, 8, -1 };
  return &_EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper;
}

@end

void EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_initWithJavaLangIterable_withBoolean_withEduStanfordNlpParserLexparserTreebankLangParserParams_(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper *self, id<JavaLangIterable> wrappedTrees, jboolean keepPunct, id<EduStanfordNlpParserLexparserTreebankLangParserParams> params) {
  NSObject_init(self);
  self->origTrees_ = new_JavaUtilWeakHashMap_init();
  self->trees_ = wrappedTrees;
  self->keepPunct_ = keepPunct;
  self->params_ = params;
}

EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper *new_EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_initWithJavaLangIterable_withBoolean_withEduStanfordNlpParserLexparserTreebankLangParserParams_(id<JavaLangIterable> wrappedTrees, jboolean keepPunct, id<EduStanfordNlpParserLexparserTreebankLangParserParams> params) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper, initWithJavaLangIterable_withBoolean_withEduStanfordNlpParserLexparserTreebankLangParserParams_, wrappedTrees, keepPunct, params)
}

EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper *create_EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_initWithJavaLangIterable_withBoolean_withEduStanfordNlpParserLexparserTreebankLangParserParams_(id<JavaLangIterable> wrappedTrees, jboolean keepPunct, id<EduStanfordNlpParserLexparserTreebankLangParserParams> params) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper, initWithJavaLangIterable_withBoolean_withEduStanfordNlpParserLexparserTreebankLangParserParams_, wrappedTrees, keepPunct, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper)

@implementation EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator

- (instancetype)initWithEduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper:(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper *)outer$ {
  EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator_initWithEduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_(self, outer$);
  return self;
}

- (void)primeGs {
  EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator_primeGs(self);
}

- (jboolean)hasNext {
  return next_ != nil;
}

- (EduStanfordNlpTreesGrammaticalStructure *)next {
  EduStanfordNlpTreesGrammaticalStructure *ret = next_;
  if (ret == nil) {
    @throw new_JavaUtilNoSuchElementException_init();
  }
  EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator_primeGs(self);
  return ret;
}

- (void)remove {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesGrammaticalStructure;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper:);
  methods[1].selector = @selector(primeGs);
  methods[2].selector = @selector(hasNext);
  methods[3].selector = @selector(next);
  methods[4].selector = @selector(remove);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LEduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "tbIterator_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x12, -1, -1, 1, -1 },
    { "puncFilter_", "LJavaUtilFunctionPredicate;", .constantValue.asLong = 0, 0x12, -1, -1, 2, -1 },
    { "hf_", "LEduStanfordNlpTreesHeadFinder;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "next_", "LEduStanfordNlpTreesGrammaticalStructure;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper;", "Ljava/util/Iterator<Ledu/stanford/nlp/trees/Tree;>;", "Ljava/util/function/Predicate<Ljava/lang/String;>;", "Ljava/lang/Object;Ljava/util/Iterator<Ledu/stanford/nlp/trees/GrammaticalStructure;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator = { "GsIterator", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0x2, 5, 5, 0, -1, -1, 3, -1 };
  return &_EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator;
}

@end

void EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator_initWithEduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator *self, EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->tbIterator_ = [((id<JavaLangIterable>) nil_chk(outer$->trees_)) iterator];
  if (outer$->keepPunct_) {
    self->puncFilter_ = EduStanfordNlpUtilFilters_acceptFilter();
  }
  else if ([((id<EduStanfordNlpParserLexparserTreebankLangParserParams>) nil_chk(outer$->params_)) generateOriginalDependencies]) {
    self->puncFilter_ = [((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk([outer$->params_ treebankLanguagePack])) punctuationWordRejectFilter];
  }
  else {
    self->puncFilter_ = [((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk([outer$->params_ treebankLanguagePack])) punctuationTagRejectFilter];
  }
  self->hf_ = [((id<EduStanfordNlpParserLexparserTreebankLangParserParams>) nil_chk(outer$->params_)) typedDependencyHeadFinder];
  EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator_primeGs(self);
}

EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator *new_EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator_initWithEduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper *outer$) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator, initWithEduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_, outer$)
}

EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator *create_EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator_initWithEduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper *outer$) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator, initWithEduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_, outer$)
}

void EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator_primeGs(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator *self) {
  EduStanfordNlpTreesGrammaticalStructure *gs = nil;
  while (gs == nil && [((id<JavaUtilIterator>) nil_chk(self->tbIterator_)) hasNext]) {
    EduStanfordNlpTreesTree *t = [((id<JavaUtilIterator>) nil_chk(self->tbIterator_)) next];
    if (t == nil) {
      continue;
    }
    @try {
      gs = [((id<EduStanfordNlpParserLexparserTreebankLangParserParams>) nil_chk(self->this$0_->params_)) getGrammaticalStructureWithEduStanfordNlpTreesTree:t withJavaUtilFunctionPredicate:self->puncFilter_ withEduStanfordNlpTreesHeadFinder:self->hf_];
      (void) [((id<JavaUtilMap>) nil_chk(self->this$0_->origTrees_)) putWithId:gs withId:t];
      self->next_ = gs;
      return;
    }
    @catch (JavaLangNullPointerException *npe) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"Bung tree caused below dump. Continuing...."];
      [JreLoadStatic(JavaLangSystem, err) printlnWithId:t];
      [((JavaLangNullPointerException *) nil_chk(npe)) printStackTrace];
    }
  }
  self->next_ = nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesGrammaticalStructure_TreeBankGrammaticalStructureWrapper_GsIterator)

@implementation EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing

- (instancetype)initWithNSString:(NSString *)filename
                    withNSString:(NSString *)encoding
                     withBoolean:(jboolean)tokenized
    withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)lp {
  EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_initWithNSString_withNSString_withBoolean_withJavaUtilFunctionFunction_(self, filename, encoding, tokenized, lp);
  return self;
}

- (id<JavaUtilIterator>)iterator {
  JavaIoBufferedReader *iReader;
  if (reader_ != nil) {
    iReader = new_JavaIoBufferedReader_initWithJavaIoReader_(reader_);
  }
  else {
    @try {
      iReader = new_JavaIoBufferedReader_initWithJavaIoReader_(new_JavaIoInputStreamReader_initWithJavaIoInputStream_withNSString_(new_JavaIoFileInputStream_initWithNSString_(filename_), encoding_));
    }
    @catch (JavaIoIOException *e) {
      @throw new_JavaLangRuntimeException_initWithNSException_(e);
    }
  }
  return new_EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1_initWithEduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_withJavaIoBufferedReader_(self, iReader);
}

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:withBoolean:withJavaUtilFunctionFunction:);
  methods[1].selector = @selector(iterator);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "reader_", "LJavaIoReader;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "filename_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "tokenized_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "encoding_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "lp_", "LJavaUtilFunctionFunction;", .constantValue.asLong = 0, 0x10, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;ZLJavaUtilFunctionFunction;", "(Ljava/lang/String;Ljava/lang/String;ZLjava/util/function/Function<Ljava/util/List<+Ledu/stanford/nlp/ling/HasWord;>;Ledu/stanford/nlp/trees/Tree;>;)V", "()Ljava/util/Iterator<Ledu/stanford/nlp/trees/Tree;>;", "Ljava/util/function/Function<Ljava/util/List<+Ledu/stanford/nlp/ling/HasWord;>;Ledu/stanford/nlp/trees/Tree;>;", "LEduStanfordNlpTreesGrammaticalStructure;", "Ljava/lang/Object;Ljava/lang/Iterable<Ledu/stanford/nlp/trees/Tree;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing = { "LazyLoadTreesByParsing", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0x8, 2, 5, 4, -1, -1, 5, -1 };
  return &_EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing;
}

@end

void EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_initWithNSString_withNSString_withBoolean_withJavaUtilFunctionFunction_(EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing *self, NSString *filename, NSString *encoding, jboolean tokenized, id<JavaUtilFunctionFunction> lp) {
  NSObject_init(self);
  self->filename_ = filename;
  self->encoding_ = encoding;
  self->reader_ = nil;
  self->tokenized_ = tokenized;
  self->lp_ = lp;
}

EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing *new_EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_initWithNSString_withNSString_withBoolean_withJavaUtilFunctionFunction_(NSString *filename, NSString *encoding, jboolean tokenized, id<JavaUtilFunctionFunction> lp) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing, initWithNSString_withNSString_withBoolean_withJavaUtilFunctionFunction_, filename, encoding, tokenized, lp)
}

EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing *create_EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_initWithNSString_withNSString_withBoolean_withJavaUtilFunctionFunction_(NSString *filename, NSString *encoding, jboolean tokenized, id<JavaUtilFunctionFunction> lp) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing, initWithNSString_withNSString_withBoolean_withJavaUtilFunctionFunction_, filename, encoding, tokenized, lp)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing)

@implementation EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1

- (jboolean)hasNext {
  if (line_ != nil) {
    return true;
  }
  else {
    @try {
      line_ = [((JavaIoBufferedReader *) nil_chk(val$iReader_)) readLine];
    }
    @catch (JavaIoIOException *e) {
      @throw new_JavaLangRuntimeException_initWithNSException_(e);
    }
    if (line_ == nil) {
      @try {
        if (this$0_->reader_ == nil) [val$iReader_ close];
      }
      @catch (JavaLangException *e) {
        @throw new_JavaLangRuntimeException_initWithNSException_(e);
      }
      return false;
    }
    return true;
  }
}

- (EduStanfordNlpTreesTree *)next {
  if (line_ == nil) {
    @throw new_JavaUtilNoSuchElementException_init();
  }
  JavaIoReader *lineReader = new_JavaIoStringReader_initWithNSString_(line_);
  line_ = nil;
  id<JavaUtilList> words;
  if (this$0_->tokenized_) {
    words = [((EduStanfordNlpProcessWhitespaceTokenizer *) nil_chk(EduStanfordNlpProcessWhitespaceTokenizer_newWordWhitespaceTokenizerWithJavaIoReader_(lineReader))) tokenize];
  }
  else {
    words = [((EduStanfordNlpProcessPTBTokenizer *) nil_chk(EduStanfordNlpProcessPTBTokenizer_newPTBTokenizerWithJavaIoReader_(lineReader))) tokenize];
  }
  if (![((id<JavaUtilList>) nil_chk(words)) isEmpty]) {
    EduStanfordNlpTreesTree *parseTree = [((id<JavaUtilFunctionFunction>) nil_chk(this$0_->lp_)) applyWithId:words];
    return parseTree;
  }
  else {
    return new_EduStanfordNlpTreesSimpleTree_init();
  }
}

- (void)remove {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (instancetype)initWithEduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing:(EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing *)outer$
                                                              withJavaIoBufferedReader:(JavaIoBufferedReader *)capture$0 {
  EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1_initWithEduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_withJavaIoBufferedReader_(self, outer$, capture$0);
  return self;
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(hasNext);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(remove);
  methods[3].selector = @selector(initWithEduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing:withJavaIoBufferedReader:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LEduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "line_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "val$iReader_", "LJavaIoBufferedReader;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing;LJavaIoBufferedReader;", "LEduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing;", "iterator", "Ljava/lang/Object;Ljava/util/Iterator<Ledu/stanford/nlp/trees/Tree;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1 = { "", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0x8008, 4, 3, 1, -1, 2, 3, -1 };
  return &_EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1;
}

@end

void EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1_initWithEduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_withJavaIoBufferedReader_(EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1 *self, EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing *outer$, JavaIoBufferedReader *capture$0) {
  self->this$0_ = outer$;
  self->val$iReader_ = capture$0;
  NSObject_init(self);
}

EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1 *new_EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1_initWithEduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_withJavaIoBufferedReader_(EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing *outer$, JavaIoBufferedReader *capture$0) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1, initWithEduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_withJavaIoBufferedReader_, outer$, capture$0)
}

EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1 *create_EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1_initWithEduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_withJavaIoBufferedReader_(EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing *outer$, JavaIoBufferedReader *capture$0) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_$1, initWithEduStanfordNlpTreesGrammaticalStructure_LazyLoadTreesByParsing_withJavaIoBufferedReader_, outer$, capture$0)
}

@implementation EduStanfordNlpTreesGrammaticalStructure_$1

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)arg$0
withEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)arg$1 {
  EduStanfordNlpTreesGrammaticalStructure_$1_initWithJavaUtilList_withEduStanfordNlpTreesTreeGraphNode_(self, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilList:withEduStanfordNlpTreesTreeGraphNode:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTreesGrammaticalStructure_$1_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilList;LEduStanfordNlpTreesTreeGraphNode;", "(Ljava/util/List<Ledu/stanford/nlp/trees/TypedDependency;>;Ledu/stanford/nlp/trees/TreeGraphNode;)V", "LEduStanfordNlpTreesGrammaticalStructure;", "fromStringRepsWithJavaUtilList:withJavaUtilList:withJavaUtilList:" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesGrammaticalStructure_$1 = { "", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0x8008, 1, 1, 2, -1, 3, -1, -1 };
  return &_EduStanfordNlpTreesGrammaticalStructure_$1;
}

@end

void EduStanfordNlpTreesGrammaticalStructure_$1_initWithJavaUtilList_withEduStanfordNlpTreesTreeGraphNode_(EduStanfordNlpTreesGrammaticalStructure_$1 *self, id<JavaUtilList> arg$0, EduStanfordNlpTreesTreeGraphNode *arg$1) {
  EduStanfordNlpTreesGrammaticalStructure_initWithJavaUtilList_withEduStanfordNlpTreesTreeGraphNode_(self, arg$0, arg$1);
}

EduStanfordNlpTreesGrammaticalStructure_$1 *new_EduStanfordNlpTreesGrammaticalStructure_$1_initWithJavaUtilList_withEduStanfordNlpTreesTreeGraphNode_(id<JavaUtilList> arg$0, EduStanfordNlpTreesTreeGraphNode *arg$1) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesGrammaticalStructure_$1, initWithJavaUtilList_withEduStanfordNlpTreesTreeGraphNode_, arg$0, arg$1)
}

EduStanfordNlpTreesGrammaticalStructure_$1 *create_EduStanfordNlpTreesGrammaticalStructure_$1_initWithJavaUtilList_withEduStanfordNlpTreesTreeGraphNode_(id<JavaUtilList> arg$0, EduStanfordNlpTreesTreeGraphNode *arg$1) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesGrammaticalStructure_$1, initWithJavaUtilList_withEduStanfordNlpTreesTreeGraphNode_, arg$0, arg$1)
}
