//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/NamedDependency.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/trees/Dependency.h"
#include "edu/stanford/nlp/trees/DependencyFactory.h"
#include "edu/stanford/nlp/trees/NamedDependency.h"
#include "edu/stanford/nlp/trees/UnnamedDependency.h"
#include "edu/stanford/nlp/util/XMLUtils.h"

@interface EduStanfordNlpTreesNamedDependency () {
 @public
  id name_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesNamedDependency, name_, id)

inline jlong EduStanfordNlpTreesNamedDependency_get_serialVersionUID();
#define EduStanfordNlpTreesNamedDependency_serialVersionUID -1635646451505721133LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTreesNamedDependency, serialVersionUID, jlong)

@interface EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder : NSObject

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder)

inline id<EduStanfordNlpTreesDependencyFactory> EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder_get_df();
static id<EduStanfordNlpTreesDependencyFactory> EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder_df;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder, df, id<EduStanfordNlpTreesDependencyFactory>)

__attribute__((unused)) static void EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder_init(EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder *self);

__attribute__((unused)) static EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder *new_EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder *create_EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder)

@interface EduStanfordNlpTreesNamedDependency_NamedDependencyFactory : NSObject < EduStanfordNlpTreesDependencyFactory >

- (id<EduStanfordNlpTreesDependency>)newDependencyWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)regent
                                                  withEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)dependent OBJC_METHOD_FAMILY_NONE;

- (id<EduStanfordNlpTreesDependency>)newDependencyWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)regent
                                                  withEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)dependent
                                                                       withId:(id)name OBJC_METHOD_FAMILY_NONE;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesNamedDependency_NamedDependencyFactory)

__attribute__((unused)) static void EduStanfordNlpTreesNamedDependency_NamedDependencyFactory_init(EduStanfordNlpTreesNamedDependency_NamedDependencyFactory *self);

__attribute__((unused)) static EduStanfordNlpTreesNamedDependency_NamedDependencyFactory *new_EduStanfordNlpTreesNamedDependency_NamedDependencyFactory_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesNamedDependency_NamedDependencyFactory *create_EduStanfordNlpTreesNamedDependency_NamedDependencyFactory_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesNamedDependency_NamedDependencyFactory)

@implementation EduStanfordNlpTreesNamedDependency

- (instancetype)initWithNSString:(NSString *)regent
                    withNSString:(NSString *)dependent
                          withId:(id)name {
  EduStanfordNlpTreesNamedDependency_initWithNSString_withNSString_withId_(self, regent, dependent, name);
  return self;
}

- (instancetype)initWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)regent
                    withEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)dependent
                                         withId:(id)name {
  EduStanfordNlpTreesNamedDependency_initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_withId_(self, regent, dependent, name);
  return self;
}

- (id)name {
  return name_;
}

- (NSUInteger)hash {
  return ((jint) [((NSString *) nil_chk(regentText_)) hash]) ^ ((jint) [((NSString *) nil_chk(dependentText_)) hash]) ^ ((jint) [nil_chk(name_) hash]);
}

- (jboolean)isEqual:(id)o {
  if (self == o) {
    return true;
  }
  else if (!([o isKindOfClass:[EduStanfordNlpTreesNamedDependency class]])) {
    return false;
  }
  EduStanfordNlpTreesNamedDependency *d = (EduStanfordNlpTreesNamedDependency *) cast_chk(o, [EduStanfordNlpTreesNamedDependency class]);
  return [self equalsIgnoreNameWithId:o] && [nil_chk(name_) isEqual:((EduStanfordNlpTreesNamedDependency *) nil_chk(d))->name_];
}

- (NSString *)description {
  return NSString_formatWithNSString_withNSObjectArray_(@"%s --%s--> %s", [IOSObjectArray newArrayWithObjects:(id[]){ regentText_, [nil_chk(name_) description], dependentText_ } count:3 type:NSObject_class_()]);
}

- (NSString *)toStringWithNSString:(NSString *)format {
  switch (JreIndexOfStr(format, (id[]){ @"xml", @"predicate" }, 2)) {
    case 0:
    return JreStrcat("$$$$$", @"  <dep>\n    <governor>", EduStanfordNlpUtilXMLUtils_escapeXMLWithNSString_([((id<EduStanfordNlpLingLabel>) nil_chk([self governor])) value]), @"</governor>\n    <dependent>", EduStanfordNlpUtilXMLUtils_escapeXMLWithNSString_([((id<EduStanfordNlpLingLabel>) nil_chk([self dependent])) value]), @"</dependent>\n  </dep>");
    case 1:
    return JreStrcat("$@C@C@C", @"dep(", [self governor], ',', [self dependent], ',', [self name], ')');
    default:
    return [self description];
  }
}

- (id<EduStanfordNlpTreesDependencyFactory>)dependencyFactory {
  return JreLoadStatic(EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder, df);
}

+ (id<EduStanfordNlpTreesDependencyFactory>)factory {
  return EduStanfordNlpTreesNamedDependency_factory();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesDependencyFactory;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesDependencyFactory;", 0x9, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSString:withId:);
  methods[1].selector = @selector(initWithEduStanfordNlpLingLabel:withEduStanfordNlpLingLabel:withId:);
  methods[2].selector = @selector(name);
  methods[3].selector = @selector(hash);
  methods[4].selector = @selector(isEqual:);
  methods[5].selector = @selector(description);
  methods[6].selector = @selector(toStringWithNSString:);
  methods[7].selector = @selector(dependencyFactory);
  methods[8].selector = @selector(factory);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTreesNamedDependency_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "name_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;LNSObject;", "LEduStanfordNlpLingLabel;LEduStanfordNlpLingLabel;LNSObject;", "hashCode", "equals", "LNSObject;", "toString", "LNSString;", "LEduStanfordNlpTreesNamedDependency_DependencyFactoryHolder;LEduStanfordNlpTreesNamedDependency_NamedDependencyFactory;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesNamedDependency = { "NamedDependency", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0x1, 9, 2, -1, 7, -1, -1, -1 };
  return &_EduStanfordNlpTreesNamedDependency;
}

@end

void EduStanfordNlpTreesNamedDependency_initWithNSString_withNSString_withId_(EduStanfordNlpTreesNamedDependency *self, NSString *regent, NSString *dependent, id name) {
  EduStanfordNlpTreesUnnamedDependency_initWithNSString_withNSString_(self, regent, dependent);
  self->name_ = name;
}

EduStanfordNlpTreesNamedDependency *new_EduStanfordNlpTreesNamedDependency_initWithNSString_withNSString_withId_(NSString *regent, NSString *dependent, id name) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesNamedDependency, initWithNSString_withNSString_withId_, regent, dependent, name)
}

EduStanfordNlpTreesNamedDependency *create_EduStanfordNlpTreesNamedDependency_initWithNSString_withNSString_withId_(NSString *regent, NSString *dependent, id name) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesNamedDependency, initWithNSString_withNSString_withId_, regent, dependent, name)
}

void EduStanfordNlpTreesNamedDependency_initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_withId_(EduStanfordNlpTreesNamedDependency *self, id<EduStanfordNlpLingLabel> regent, id<EduStanfordNlpLingLabel> dependent, id name) {
  EduStanfordNlpTreesUnnamedDependency_initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_(self, regent, dependent);
  self->name_ = name;
}

EduStanfordNlpTreesNamedDependency *new_EduStanfordNlpTreesNamedDependency_initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_withId_(id<EduStanfordNlpLingLabel> regent, id<EduStanfordNlpLingLabel> dependent, id name) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesNamedDependency, initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_withId_, regent, dependent, name)
}

EduStanfordNlpTreesNamedDependency *create_EduStanfordNlpTreesNamedDependency_initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_withId_(id<EduStanfordNlpLingLabel> regent, id<EduStanfordNlpLingLabel> dependent, id name) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesNamedDependency, initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_withId_, regent, dependent, name)
}

id<EduStanfordNlpTreesDependencyFactory> EduStanfordNlpTreesNamedDependency_factory() {
  EduStanfordNlpTreesNamedDependency_initialize();
  return JreLoadStatic(EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder, df);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesNamedDependency)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder)

@implementation EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "df", "LEduStanfordNlpTreesDependencyFactory;", .constantValue.asLong = 0, 0x1a, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder_df, "LEduStanfordNlpTreesNamedDependency;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder = { "DependencyFactoryHolder", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder class]) {
    EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder_df = new_EduStanfordNlpTreesNamedDependency_NamedDependencyFactory_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder)
  }
}

@end

void EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder_init(EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder *new_EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder, init)
}

EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder *create_EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesNamedDependency_DependencyFactoryHolder)

@implementation EduStanfordNlpTreesNamedDependency_NamedDependencyFactory

- (id<EduStanfordNlpTreesDependency>)newDependencyWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)regent
                                                  withEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)dependent {
  return [self newDependencyWithEduStanfordNlpLingLabel:regent withEduStanfordNlpLingLabel:dependent withId:nil];
}

- (id<EduStanfordNlpTreesDependency>)newDependencyWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)regent
                                                  withEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)dependent
                                                                       withId:(id)name {
  return new_EduStanfordNlpTreesNamedDependency_initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_withId_(regent, dependent, name);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesNamedDependency_NamedDependencyFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEduStanfordNlpTreesDependency;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpTreesDependency;", 0x1, 0, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(newDependencyWithEduStanfordNlpLingLabel:withEduStanfordNlpLingLabel:);
  methods[1].selector = @selector(newDependencyWithEduStanfordNlpLingLabel:withEduStanfordNlpLingLabel:withId:);
  methods[2].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "newDependency", "LEduStanfordNlpLingLabel;LEduStanfordNlpLingLabel;", "(Ledu/stanford/nlp/ling/Label;Ledu/stanford/nlp/ling/Label;)Ledu/stanford/nlp/trees/Dependency<Ledu/stanford/nlp/ling/Label;Ledu/stanford/nlp/ling/Label;Ljava/lang/Object;>;", "LEduStanfordNlpLingLabel;LEduStanfordNlpLingLabel;LNSObject;", "(Ledu/stanford/nlp/ling/Label;Ledu/stanford/nlp/ling/Label;Ljava/lang/Object;)Ledu/stanford/nlp/trees/Dependency<Ledu/stanford/nlp/ling/Label;Ledu/stanford/nlp/ling/Label;Ljava/lang/Object;>;", "LEduStanfordNlpTreesNamedDependency;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesNamedDependency_NamedDependencyFactory = { "NamedDependencyFactory", "edu.stanford.nlp.trees", ptrTable, methods, NULL, 7, 0xa, 3, 0, 5, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesNamedDependency_NamedDependencyFactory;
}

@end

void EduStanfordNlpTreesNamedDependency_NamedDependencyFactory_init(EduStanfordNlpTreesNamedDependency_NamedDependencyFactory *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesNamedDependency_NamedDependencyFactory *new_EduStanfordNlpTreesNamedDependency_NamedDependencyFactory_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesNamedDependency_NamedDependencyFactory, init)
}

EduStanfordNlpTreesNamedDependency_NamedDependencyFactory *create_EduStanfordNlpTreesNamedDependency_NamedDependencyFactory_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesNamedDependency_NamedDependencyFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesNamedDependency_NamedDependencyFactory)
