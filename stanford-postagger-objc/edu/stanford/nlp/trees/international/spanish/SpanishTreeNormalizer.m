//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/international/spanish/SpanishVerbStripper.h"
#include "edu/stanford/nlp/international/spanish/process/AnCoraPronounDisambiguator.h"
#include "edu/stanford/nlp/ling/CoreLabel.h"
#include "edu/stanford/nlp/ling/HasTag.h"
#include "edu/stanford/nlp/ling/HasWord.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/trees/BobChrisTreeNormalizer.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeFactory.h"
#include "edu/stanford/nlp/trees/TreeTransformer.h"
#include "edu/stanford/nlp/trees/TreebankLanguagePack.h"
#include "edu/stanford/nlp/trees/international/spanish/SpanishTreeNormalizer.h"
#include "edu/stanford/nlp/trees/international/spanish/SpanishTreebankLanguagePack.h"
#include "edu/stanford/nlp/trees/tregex/TregexMatcher.h"
#include "edu/stanford/nlp/trees/tregex/TregexPattern.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/Tsurgeon.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonMatcher.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPattern.h"
#include "edu/stanford/nlp/util/Pair.h"
#include "edu/stanford/nlp/util/StringUtils.h"
#include "java/lang/Character.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/StringTokenizer.h"
#include "java/util/function/Predicate.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

@interface EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer () {
 @public
  jboolean simplifiedTagset_;
  jboolean aggressiveNormalization_;
  jboolean retainNER_;
}

- (NSString *)simplifyPOSTagWithNSString:(NSString *)pos;

+ (EduStanfordNlpTreesTree *)expandCliticPronounsWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

+ (EduStanfordNlpTreesTree *)expandCliticPronounsInnerWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                       withEduStanfordNlpTreesTregexTregexPattern:(EduStanfordNlpTreesTregexTregexPattern *)pattern;

- (NSString *)prepareForMultiWordExtractionWithNSString:(NSString *)token;

- (IOSObjectArray *)getMultiWordsWithNSString:(NSString *)token;

- (jboolean)shouldDropWordWithNSString:(NSString *)word;

- (EduStanfordNlpTreesTree *)expandElisionsWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

+ (EduStanfordNlpTreesTree *)expandConmigoWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

+ (id<JavaUtilList>)compilePatternsWithEduStanfordNlpUtilPairArray:(IOSObjectArray *)patterns;

@end

inline id<JavaUtilMap> EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_get_spellingFixes();
static id<JavaUtilMap> EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_spellingFixes;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, spellingFixes, id<JavaUtilMap>)

inline id<JavaUtilFunctionPredicate> EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_get_emptyFilter();
static id<JavaUtilFunctionPredicate> EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_emptyFilter;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, emptyFilter, id<JavaUtilFunctionPredicate>)

inline id<EduStanfordNlpTreesTreeTransformer> EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_get_constituentRenamer();
static id<EduStanfordNlpTreesTreeTransformer> EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_constituentRenamer;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, constituentRenamer, id<EduStanfordNlpTreesTreeTransformer>)

inline IOSObjectArray *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_get_cleanupStrs();
static IOSObjectArray *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_cleanupStrs;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, cleanupStrs, IOSObjectArray *)

inline id<JavaUtilList> EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_get_cleanup();
static id<JavaUtilList> EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_cleanup;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, cleanup, id<JavaUtilList>)

inline id<JavaUtilSet> EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_get_mergeWithConstituentWhenPossible();
static id<JavaUtilSet> EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_mergeWithConstituentWhenPossible;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, mergeWithConstituentWhenPossible, id<JavaUtilSet>)

inline NSString *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_get_VERB_LEAF_WITH_PRONOUNS_TREGEX();
static NSString *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_VERB_LEAF_WITH_PRONOUNS_TREGEX = @"/(?:(?:[aei\u00e1\u00e9\u00ed]r|[\u00e1\u00e9]ndo|[ae\u00e1\u00e9]n?|[aei\u00e1\u00e9\u00ed](?:d(?!os)|(?=os)))|^(?:d[i\u00ed]|h[a\u00e1]z|v[e\u00e9]|p[o\u00f3]n|s[a\u00e1]l|s\u00e9|t[e\u00e9]n|v[e\u00e9]n|(?:id(?=os$))))(?:(?:(?:[mts]e|n?os|les?)(?:l[oa]s?)?)|l[oa]s?)$/=vb > (/^vm[gmn]0000$/";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, VERB_LEAF_WITH_PRONOUNS_TREGEX, NSString *)

inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_get_verbWithCliticPronouns();
static EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_verbWithCliticPronouns;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, verbWithCliticPronouns, EduStanfordNlpTreesTregexTregexPattern *)

inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_get_verbWithCliticPronounsAndSiblings();
static EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_verbWithCliticPronounsAndSiblings;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, verbWithCliticPronounsAndSiblings, EduStanfordNlpTreesTregexTregexPattern *)

inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_get_clauselessVerbWithCliticPronouns();
static EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_clauselessVerbWithCliticPronouns;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, clauselessVerbWithCliticPronouns, EduStanfordNlpTreesTregexTregexPattern *)

inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_get_clausifyVerbWithCliticPronouns();
static EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_clausifyVerbWithCliticPronouns;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, clausifyVerbWithCliticPronouns, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)

inline EduStanfordNlpInternationalSpanishSpanishVerbStripper *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_get_verbStripper();
static EduStanfordNlpInternationalSpanishSpanishVerbStripper *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_verbStripper;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, verbStripper, EduStanfordNlpInternationalSpanishSpanishVerbStripper *)

inline id<JavaUtilList> EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_get_markSimpleNEs();
static id<JavaUtilList> EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_markSimpleNEs;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, markSimpleNEs, id<JavaUtilList>)

inline JavaUtilRegexPattern *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_get_pQuoted();
static JavaUtilRegexPattern *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_pQuoted;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, pQuoted, JavaUtilRegexPattern *)

inline NSString *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_get_WORD_SEPARATORS();
static NSString *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_WORD_SEPARATORS = @",-_\u00a1!\u00bf?()/%";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, WORD_SEPARATORS, NSString *)

inline NSString *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_get_WORD_SEPARATORS_DROP();
static NSString *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_WORD_SEPARATORS_DROP = @"_";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, WORD_SEPARATORS_DROP, NSString *)

inline id<JavaUtilSet> EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_get_hyphenBoundMorphemes();
static id<JavaUtilSet> EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_hyphenBoundMorphemes;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, hyphenBoundMorphemes, id<JavaUtilSet>)

inline IOSObjectArray *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_get_elisionExpansionStrs();
static IOSObjectArray *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_elisionExpansionStrs;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, elisionExpansionStrs, IOSObjectArray *)

inline id<JavaUtilList> EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_get_elisionExpansions();
static id<JavaUtilList> EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_elisionExpansions;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, elisionExpansions, id<JavaUtilList>)

inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_get_conmigoPattern();
inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_set_conmigoPattern(EduStanfordNlpTreesTregexTregexPattern *value);
static EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_conmigoPattern;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, conmigoPattern, EduStanfordNlpTreesTregexTregexPattern *)

__attribute__((unused)) static NSString *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_simplifyPOSTagWithNSString_(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer *self, NSString *pos);

__attribute__((unused)) static EduStanfordNlpTreesTree *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_expandCliticPronounsWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t);

__attribute__((unused)) static EduStanfordNlpTreesTree *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_expandCliticPronounsInnerWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTregexTregexPattern_(EduStanfordNlpTreesTree *t, EduStanfordNlpTreesTregexTregexPattern *pattern);

__attribute__((unused)) static NSString *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_prepareForMultiWordExtractionWithNSString_(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer *self, NSString *token);

__attribute__((unused)) static IOSObjectArray *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_getMultiWordsWithNSString_(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer *self, NSString *token);

__attribute__((unused)) static jboolean EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_shouldDropWordWithNSString_(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer *self, NSString *word);

__attribute__((unused)) static EduStanfordNlpTreesTree *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_expandElisionsWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer *self, EduStanfordNlpTreesTree *t);

__attribute__((unused)) static EduStanfordNlpTreesTree *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_expandConmigoWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t);

__attribute__((unused)) static id<JavaUtilList> EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_compilePatternsWithEduStanfordNlpUtilPairArray_(IOSObjectArray *patterns);

@interface EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$1 : NSObject < JavaUtilFunctionPredicate >

- (jboolean)testWithId:(EduStanfordNlpTreesTree *)tree;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$1)

__attribute__((unused)) static void EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$1_init(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$1 *self);

__attribute__((unused)) static EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$1 *new_EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$1 *create_EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$1_init();

@interface EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$2 : NSObject < EduStanfordNlpTreesTreeTransformer >

- (EduStanfordNlpTreesTree *)transformTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$2)

__attribute__((unused)) static void EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$2_init(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$2 *self);

__attribute__((unused)) static EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$2 *new_EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$2 *create_EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$2_init();

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer)

NSString *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_MW_TAG = @"MW?";
NSString *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_MW_PHRASE_TAG = @"MW_PHRASE?";
NSString *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_EMPTY_LEAF_VALUE = @"=NONE=";
NSString *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_LEFT_PARENTHESIS = @"=LRB=";
NSString *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_RIGHT_PARENTHESIS = @"=RRB=";

@implementation EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithBoolean:(jboolean)simplifiedTagset
                    withBoolean:(jboolean)aggressiveNormalization
                    withBoolean:(jboolean)retainNER {
  EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_initWithBoolean_withBoolean_withBoolean_(self, simplifiedTagset, aggressiveNormalization, retainNER);
  return self;
}

- (EduStanfordNlpTreesTree *)normalizeWholeTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                                        withEduStanfordNlpTreesTreeFactory:(id<EduStanfordNlpTreesTreeFactory>)tf {
  tree = [((EduStanfordNlpTreesTree *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(tree)) pruneWithJavaUtilFunctionPredicate:EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_emptyFilter])) spliceOutWithJavaUtilFunctionPredicate:aOverAFilter_])) transformWithEduStanfordNlpTreesTreeTransformer:EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_constituentRenamer];
  tree = EduStanfordNlpTreesTregexTsurgeonTsurgeon_processPatternsOnTreeWithJavaUtilList_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_cleanup, tree);
  tree = [((EduStanfordNlpTreesTree *) nil_chk(tree)) spliceOutWithJavaUtilFunctionPredicate:aOverAFilter_];
  if (retainNER_) [self markSimpleNamedEntitiesWithEduStanfordNlpTreesTree:tree];
  for (EduStanfordNlpTreesTree * __strong t in nil_chk(tree)) {
    if (simplifiedTagset_ && [((EduStanfordNlpTreesTree *) nil_chk(t)) isPreTerminal]) {
      EduStanfordNlpLingCoreLabel *label = (EduStanfordNlpLingCoreLabel *) cast_chk([((EduStanfordNlpTreesTree *) nil_chk(t)) label], [EduStanfordNlpLingCoreLabel class]);
      NSString *pos = [((EduStanfordNlpLingCoreLabel *) nil_chk(label)) value];
      pos = [((NSString *) nil_chk(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_simplifyPOSTagWithNSString_(self, pos))) intern];
      [label setValueWithNSString:pos];
      [label setTagWithNSString:pos];
    }
    else if (aggressiveNormalization_ && [self isMultiWordCandidateWithEduStanfordNlpTreesTree:t]) {
      [self normalizeForMultiWordWithEduStanfordNlpTreesTree:t withEduStanfordNlpTreesTreeFactory:tf];
    }
  }
  tree = EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_expandElisionsWithEduStanfordNlpTreesTree_(self, tree);
  tree = EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_expandConmigoWithEduStanfordNlpTreesTree_(tree);
  tree = EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_expandCliticPronounsWithEduStanfordNlpTreesTree_(tree);
  NSString *rootLabel = [((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(tlp_)) startSymbol];
  if (![((NSString *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(tree)) value])) isEqual:rootLabel]) tree = [((id<EduStanfordNlpTreesTreeFactory>) nil_chk(tf)) newTreeNodeWithNSString:rootLabel withJavaUtilList:JavaUtilCollections_singletonListWithId_(tree)];
  return tree;
}

- (NSString *)normalizeTerminalWithNSString:(NSString *)word {
  if ([((id<JavaUtilMap>) nil_chk(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_spellingFixes)) containsKeyWithId:word]) return [EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_spellingFixes getWithId:word];
  return word;
}

- (NSString *)simplifyPOSTagWithNSString:(NSString *)pos {
  return EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_simplifyPOSTagWithNSString_(self, pos);
}

+ (EduStanfordNlpTreesTree *)expandCliticPronounsWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  return EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_expandCliticPronounsWithEduStanfordNlpTreesTree_(t);
}

+ (EduStanfordNlpTreesTree *)expandCliticPronounsInnerWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                       withEduStanfordNlpTreesTregexTregexPattern:(EduStanfordNlpTreesTregexTregexPattern *)pattern {
  return EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_expandCliticPronounsInnerWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTregexTregexPattern_(t, pattern);
}

- (void)markSimpleNamedEntitiesWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  (void) EduStanfordNlpTreesTregexTsurgeonTsurgeon_processPatternsOnTreeWithJavaUtilList_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_markSimpleNEs, t);
}

- (jboolean)isMultiWordCandidateWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  {
    IOSObjectArray *a__ = [((EduStanfordNlpTreesTree *) nil_chk(t)) children];
    EduStanfordNlpTreesTree * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    EduStanfordNlpTreesTree * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      EduStanfordNlpTreesTree *child = *b__++;
      IOSObjectArray *a__ = [((EduStanfordNlpTreesTree *) nil_chk(child)) children];
      EduStanfordNlpTreesTree * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      EduStanfordNlpTreesTree * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        EduStanfordNlpTreesTree *grandchild = *b__++;
        if ([((EduStanfordNlpTreesTree *) nil_chk(grandchild)) isLeaf]) return true;
      }
    }
  }
  return false;
}

- (void)normalizeForMultiWordWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                      withEduStanfordNlpTreesTreeFactory:(id<EduStanfordNlpTreesTreeFactory>)tf {
  IOSObjectArray *preterminals = [((EduStanfordNlpTreesTree *) nil_chk(t)) children];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(preterminals))->size_; i++) {
    if (![((EduStanfordNlpTreesTree *) nil_chk(IOSObjectArray_Get(preterminals, i))) isPreTerminal]) continue;
    EduStanfordNlpTreesTree *leaf = [((EduStanfordNlpTreesTree *) nil_chk(IOSObjectArray_Get(preterminals, i))) firstChild];
    NSString *leafValue = [((EduStanfordNlpLingCoreLabel *) nil_chk(((EduStanfordNlpLingCoreLabel *) cast_chk([((EduStanfordNlpTreesTree *) nil_chk(leaf)) label], [EduStanfordNlpLingCoreLabel class])))) value];
    IOSObjectArray *words = EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_getMultiWordsWithNSString_(self, leafValue);
    if (((IOSObjectArray *) nil_chk(words))->size_ == 1) continue;
    id<JavaUtilList> newNodes = new_JavaUtilArrayList_initWithInt_(words->size_);
    {
      IOSObjectArray *a__ = words;
      NSString * const *b__ = a__->buffer_;
      NSString * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        NSString *word1 = *b__++;
        NSString *word = [self normalizeTerminalWithNSString:word1];
        EduStanfordNlpTreesTree *newLeaf = [((id<EduStanfordNlpTreesTreeFactory>) nil_chk(tf)) newLeafWithNSString:word];
        if ([EduStanfordNlpLingHasWord_class_() isInstance:[((EduStanfordNlpTreesTree *) nil_chk(newLeaf)) label]]) [((id<EduStanfordNlpLingHasWord>) nil_chk(((id<EduStanfordNlpLingHasWord>) cast_check([newLeaf label], EduStanfordNlpLingHasWord_class_())))) setWordWithNSString:word];
        EduStanfordNlpTreesTree *newNode = [tf newTreeNodeWithNSString:EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_MW_TAG withJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ newLeaf } count:1 type:EduStanfordNlpTreesTree_class_()])];
        if ([EduStanfordNlpLingHasTag_class_() isInstance:[((EduStanfordNlpTreesTree *) nil_chk(newNode)) label]]) [((id<EduStanfordNlpLingHasTag>) nil_chk(((id<EduStanfordNlpLingHasTag>) cast_check([newNode label], EduStanfordNlpLingHasTag_class_())))) setTagWithNSString:EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_MW_TAG];
        [newNodes addWithId:newNode];
      }
    }
    NSString *phraseValue = JreStrcat("$C$", EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_MW_PHRASE_TAG, '_', EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_simplifyPOSTagWithNSString_(self, [((EduStanfordNlpTreesTree *) nil_chk(IOSObjectArray_Get(preterminals, i))) value]));
    jboolean shouldMerge = preterminals->size_ == 1 && [((id<JavaUtilSet>) nil_chk(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_mergeWithConstituentWhenPossible)) containsWithId:[t value]];
    if (shouldMerge) {
      [t setChildrenWithJavaUtilList:newNodes];
      [t setValueWithNSString:phraseValue];
    }
    else {
      EduStanfordNlpTreesTree *newHead = [((id<EduStanfordNlpTreesTreeFactory>) nil_chk(tf)) newTreeNodeWithNSString:phraseValue withJavaUtilList:newNodes];
      (void) [t setChildWithInt:i withEduStanfordNlpTreesTree:newHead];
    }
  }
}

- (NSString *)prepareForMultiWordExtractionWithNSString:(NSString *)token {
  return EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_prepareForMultiWordExtractionWithNSString_(self, token);
}

- (IOSObjectArray *)getMultiWordsWithNSString:(NSString *)token {
  return EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_getMultiWordsWithNSString_(self, token);
}

- (jboolean)shouldDropWordWithNSString:(NSString *)word {
  return EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_shouldDropWordWithNSString_(self, word);
}

- (EduStanfordNlpTreesTree *)expandElisionsWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  return EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_expandElisionsWithEduStanfordNlpTreesTree_(self, t);
}

+ (EduStanfordNlpTreesTree *)expandConmigoWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  return EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_expandConmigoWithEduStanfordNlpTreesTree_(t);
}

+ (id<JavaUtilList>)compilePatternsWithEduStanfordNlpUtilPairArray:(IOSObjectArray *)patterns {
  return EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_compilePatternsWithEduStanfordNlpUtilPairArray_(patterns);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 5, 4, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0xa, 6, 7, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0xa, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 10, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 11, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 12, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 13, 4, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x2, 14, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 15, 4, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x2, 16, 7, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0xa, 17, 7, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0xa, 18, 19, -1, 20, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithBoolean:withBoolean:withBoolean:);
  methods[2].selector = @selector(normalizeWholeTreeWithEduStanfordNlpTreesTree:withEduStanfordNlpTreesTreeFactory:);
  methods[3].selector = @selector(normalizeTerminalWithNSString:);
  methods[4].selector = @selector(simplifyPOSTagWithNSString:);
  methods[5].selector = @selector(expandCliticPronounsWithEduStanfordNlpTreesTree:);
  methods[6].selector = @selector(expandCliticPronounsInnerWithEduStanfordNlpTreesTree:withEduStanfordNlpTreesTregexTregexPattern:);
  methods[7].selector = @selector(markSimpleNamedEntitiesWithEduStanfordNlpTreesTree:);
  methods[8].selector = @selector(isMultiWordCandidateWithEduStanfordNlpTreesTree:);
  methods[9].selector = @selector(normalizeForMultiWordWithEduStanfordNlpTreesTree:withEduStanfordNlpTreesTreeFactory:);
  methods[10].selector = @selector(prepareForMultiWordExtractionWithNSString:);
  methods[11].selector = @selector(getMultiWordsWithNSString:);
  methods[12].selector = @selector(shouldDropWordWithNSString:);
  methods[13].selector = @selector(expandElisionsWithEduStanfordNlpTreesTree:);
  methods[14].selector = @selector(expandConmigoWithEduStanfordNlpTreesTree:);
  methods[15].selector = @selector(compilePatternsWithEduStanfordNlpUtilPairArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MW_TAG", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 21, -1, -1 },
    { "MW_PHRASE_TAG", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 22, -1, -1 },
    { "EMPTY_LEAF_VALUE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 23, -1, -1 },
    { "LEFT_PARENTHESIS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 24, -1, -1 },
    { "RIGHT_PARENTHESIS", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 25, -1, -1 },
    { "spellingFixes", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 26, 27, -1 },
    { "emptyFilter", "LJavaUtilFunctionPredicate;", .constantValue.asLong = 0, 0x1a, -1, 28, 29, -1 },
    { "constituentRenamer", "LEduStanfordNlpTreesTreeTransformer;", .constantValue.asLong = 0, 0x1a, -1, 30, -1, -1 },
    { "cleanupStrs", "[LEduStanfordNlpUtilPair;", .constantValue.asLong = 0, 0x1a, -1, 31, 32, -1 },
    { "cleanup", "LJavaUtilList;", .constantValue.asLong = 0, 0x1a, -1, 33, 34, -1 },
    { "mergeWithConstituentWhenPossible", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1a, -1, 35, 36, -1 },
    { "simplifiedTagset_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "aggressiveNormalization_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "retainNER_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "VERB_LEAF_WITH_PRONOUNS_TREGEX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 37, -1, -1 },
    { "verbWithCliticPronouns", "LEduStanfordNlpTreesTregexTregexPattern;", .constantValue.asLong = 0, 0x1a, -1, 38, -1, -1 },
    { "verbWithCliticPronounsAndSiblings", "LEduStanfordNlpTreesTregexTregexPattern;", .constantValue.asLong = 0, 0x1a, -1, 39, -1, -1 },
    { "clauselessVerbWithCliticPronouns", "LEduStanfordNlpTreesTregexTregexPattern;", .constantValue.asLong = 0, 0x1a, -1, 40, -1, -1 },
    { "clausifyVerbWithCliticPronouns", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", .constantValue.asLong = 0, 0x1a, -1, 41, -1, -1 },
    { "verbStripper", "LEduStanfordNlpInternationalSpanishSpanishVerbStripper;", .constantValue.asLong = 0, 0x1a, -1, 42, -1, -1 },
    { "markSimpleNEs", "LJavaUtilList;", .constantValue.asLong = 0, 0x1a, -1, 43, 34, -1 },
    { "pQuoted", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 44, -1, -1 },
    { "WORD_SEPARATORS", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 45, -1, -1 },
    { "WORD_SEPARATORS_DROP", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 46, -1, -1 },
    { "hyphenBoundMorphemes", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1a, -1, 47, 36, -1 },
    { "elisionExpansionStrs", "[LEduStanfordNlpUtilPair;", .constantValue.asLong = 0, 0x1a, -1, 48, 32, -1 },
    { "elisionExpansions", "LJavaUtilList;", .constantValue.asLong = 0, 0x1a, -1, 49, 34, -1 },
    { "conmigoPattern", "LEduStanfordNlpTreesTregexTregexPattern;", .constantValue.asLong = 0, 0xa, -1, 50, -1, -1 },
  };
  static const void *ptrTable[] = { "ZZZ", "normalizeWholeTree", "LEduStanfordNlpTreesTree;LEduStanfordNlpTreesTreeFactory;", "normalizeTerminal", "LNSString;", "simplifyPOSTag", "expandCliticPronouns", "LEduStanfordNlpTreesTree;", "expandCliticPronounsInner", "LEduStanfordNlpTreesTree;LEduStanfordNlpTreesTregexTregexPattern;", "markSimpleNamedEntities", "isMultiWordCandidate", "normalizeForMultiWord", "prepareForMultiWordExtraction", "getMultiWords", "shouldDropWord", "expandElisions", "expandConmigo", "compilePatterns", "[LEduStanfordNlpUtilPair;", "([Ledu/stanford/nlp/util/Pair<Ljava/lang/String;Ljava/lang/String;>;)Ljava/util/List<Ledu/stanford/nlp/util/Pair<Ledu/stanford/nlp/trees/tregex/TregexPattern;Ledu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPattern;>;>;", &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_MW_TAG, &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_MW_PHRASE_TAG, &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_EMPTY_LEAF_VALUE, &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_LEFT_PARENTHESIS, &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_RIGHT_PARENTHESIS, &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_spellingFixes, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_emptyFilter, "Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/Tree;>;", &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_constituentRenamer, &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_cleanupStrs, "[Ledu/stanford/nlp/util/Pair<Ljava/lang/String;Ljava/lang/String;>;", &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_cleanup, "Ljava/util/List<Ledu/stanford/nlp/util/Pair<Ledu/stanford/nlp/trees/tregex/TregexPattern;Ledu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPattern;>;>;", &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_mergeWithConstituentWhenPossible, "Ljava/util/Set<Ljava/lang/String;>;", &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_VERB_LEAF_WITH_PRONOUNS_TREGEX, &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_verbWithCliticPronouns, &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_verbWithCliticPronounsAndSiblings, &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_clauselessVerbWithCliticPronouns, &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_clausifyVerbWithCliticPronouns, &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_verbStripper, &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_markSimpleNEs, &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_pQuoted, &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_WORD_SEPARATORS, &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_WORD_SEPARATORS_DROP, &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_hyphenBoundMorphemes, &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_elisionExpansionStrs, &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_elisionExpansions, &EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_conmigoPattern };
  static const J2ObjcClassInfo _EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer = { "SpanishTreeNormalizer", "edu.stanford.nlp.trees.international.spanish", ptrTable, methods, fields, 7, 0x1, 16, 28, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer class]) {
    EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_spellingFixes = new_JavaUtilHashMap_init();
    {
      (void) [EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_spellingFixes putWithId:@"embargp" withId:@"embargo"];
      (void) [EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_spellingFixes putWithId:@"jucio" withId:@"juicio"];
      (void) [EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_spellingFixes putWithId:@"m\u00e9xico" withId:@"M\u00e9xico"];
      (void) [EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_spellingFixes putWithId:@"reirse" withId:@"re\u00edrse"];
      (void) [EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_spellingFixes putWithId:@"tambien" withId:@"tambi\u00e9n"];
      (void) [EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_spellingFixes putWithId:@"Intitute" withId:@"Institute"];
      (void) [EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_spellingFixes putWithId:@"(" withId:EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_LEFT_PARENTHESIS];
      (void) [EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_spellingFixes putWithId:@")" withId:EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_RIGHT_PARENTHESIS];
    }
    EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_emptyFilter = new_EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$1_init();
    EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_constituentRenamer = new_EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$2_init();
    EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_cleanupStrs = [IOSObjectArray newArrayWithObjects:(id[]){ create_EduStanfordNlpUtilPair_initWithId_withId_(@"sp < (sp=sp <: prep=prep)", @"replace sp prep"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"fpa > __=grandparent $++ (__=ancestor <<` fpt=fpt >` =grandparent)", @"move fpt $- ancestor"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"/^s\\.a$/ <: (/^grup\\.nom$/=gn <: /^a/)", @"relabel gn /grup.a/"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"sadv !< /^grup\\.adv$/ <: /^(rg|neg)$/=adv", @"adjoinF (grup.adv foot@) adv"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"z=z <: (__ !< __)", @"relabel z z0"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"/^grup\\.c/=grup > conj <: sp=sp", @"replace grup sp"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"__=N <<` (fp|fs=fp <: (/^\\.$/ !. __)) > sentence=sentence", @"move fp $- N"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"(pi000000 <: __ !$+ S >` (/^grup\\.nom/=gn >` sn=sn)). ((que >: (__=queTag $- =sn)) . (__=vb !< __ >>: (__=vbContainer $- =queTag)))", @"[insert (S (relatiu (pr000000 que)) (infinitiu vmn0000=vbFoot)) >-1 gn][move vb >0 vbFoot][delete queTag][delete vbContainer]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"sn=sn <: (/^grup\\.nom/=gn <<: Nada)$+ (infinitiu=inf <<, que=que <<` (ver , =que) $+ sp=sp)", @"[delete inf] [insert (S (relatiu (pr000000 que)) (infinitiu (vmn0000 ver))) >-1 gn][move sp >-1 sn]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"sentence <<, (sn=sn <, (/^grup\\.w$/ $+ fp))", @"delete sn"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"conj=conj <: fp=fp", @"replace conj fp"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"fit=fit <: \u00bf", @"relabel fit fia") } count:12 type:EduStanfordNlpUtilPair_class_()];
    EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_cleanup = EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_compilePatternsWithEduStanfordNlpUtilPairArray_(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_cleanupStrs);
    EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_mergeWithConstituentWhenPossible = new_JavaUtilHashSet_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ @"grup.adv", @"grup.nom", @"grup.nom.loc", @"grup.nom.org", @"grup.nom.otros", @"grup.nom.pers", @"grup.verb", @"spec" } count:8 type:NSString_class_()]));
    EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_verbWithCliticPronouns = EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(JreStrcat("$$", EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_VERB_LEAF_WITH_PRONOUNS_TREGEX, @" !$ __)>+(/^[^S]/) (/^(infinitiu|gerundi|grup\\.verb)$/=target > /^(sentence|S|grup\\.verb|infinitiu|gerundi)$/=clause << =vb !<< (/^(infinitiu|gerundi|grup\\.verb)$/ << =vb))"));
    EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_verbWithCliticPronounsAndSiblings = EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(JreStrcat("$$", EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_VERB_LEAF_WITH_PRONOUNS_TREGEX, @"=target $ __) >+(/^[^S]/) (/^(infinitiu|gerundi|grup\\.verb)$/ > /^(sentence|S|grup\\.verb|infinitiu|gerundi)$/=clause << =vb !<< (/^(infinitiu|gerundi|grup\\.verb)$/ << =vb))"));
    EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_clauselessVerbWithCliticPronouns = EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(JreStrcat("$$", EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_VERB_LEAF_WITH_PRONOUNS_TREGEX, @") > (/^vmn/ > (/^infinitiu$/=target > /^sp$/))"));
    EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_clausifyVerbWithCliticPronouns = EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(@"adjoinF (S foot@) target");
    EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_verbStripper = EduStanfordNlpInternationalSpanishSpanishVerbStripper_getInstance();
    {
      IOSObjectArray *patternTemplates = [IOSObjectArray newArrayWithObjects:(id[]){ create_EduStanfordNlpUtilPair_initWithId_withId_(@"/^grup\\.nom$/=target <: (/np0000%c/ < __)", @"[relabel target /grup.nom.%s/]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"/^grup\\.nom$/ < ((/np0000%c/=target < __) $+ __)", @"[adjoinF (grup.nom.%s foot@) target]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"/^grup\\.nom$/ < ((/np0000%c/=target < __) $- __)", @"[adjoinF (grup.nom.%s foot@) target]") } count:3 type:EduStanfordNlpUtilPair_class_()];
      IOSObjectArray *namedEntityTypes = [IOSObjectArray newArrayWithObjects:(id[]){ create_EduStanfordNlpUtilPair_initWithId_withId_(JavaLangCharacter_valueOfWithChar_('0'), @"otros"), create_EduStanfordNlpUtilPair_initWithId_withId_(JavaLangCharacter_valueOfWithChar_('l'), @"lug"), create_EduStanfordNlpUtilPair_initWithId_withId_(JavaLangCharacter_valueOfWithChar_('o'), @"org"), create_EduStanfordNlpUtilPair_initWithId_withId_(JavaLangCharacter_valueOfWithChar_('p'), @"pers") } count:4 type:EduStanfordNlpUtilPair_class_()];
      EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_markSimpleNEs = new_JavaUtilArrayList_initWithInt_(patternTemplates->size_ * namedEntityTypes->size_);
      {
        IOSObjectArray *a__ = patternTemplates;
        EduStanfordNlpUtilPair * const *b__ = a__->buffer_;
        EduStanfordNlpUtilPair * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          EduStanfordNlpUtilPair *template_ = *b__++;
          {
            IOSObjectArray *a__ = namedEntityTypes;
            EduStanfordNlpUtilPair * const *b__ = a__->buffer_;
            EduStanfordNlpUtilPair * const *e__ = b__ + a__->size_;
            while (b__ < e__) {
              EduStanfordNlpUtilPair *namedEntityType = *b__++;
              NSString *tregex = NSString_formatWithNSString_withNSObjectArray_([((EduStanfordNlpUtilPair *) nil_chk(template_)) first], [IOSObjectArray newArrayWithObjects:(id[]){ [((EduStanfordNlpUtilPair *) nil_chk(namedEntityType)) first] } count:1 type:NSObject_class_()]);
              NSString *tsurgeon = NSString_formatWithNSString_withNSObjectArray_([template_ second], [IOSObjectArray newArrayWithObjects:(id[]){ [namedEntityType second] } count:1 type:NSObject_class_()]);
              [EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_markSimpleNEs addWithId:new_EduStanfordNlpUtilPair_initWithId_withId_(EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(tregex), EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(tsurgeon))];
            }
          }
        }
      }
    }
    EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_pQuoted = JavaUtilRegexPattern_compileWithNSString_(@"\"(.+)\"");
    EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_hyphenBoundMorphemes = new_JavaUtilHashSet_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ @"anti", @"co", @"ex", @"meso", @"neo", @"pre", @"pro", @"quasi", @"re", @"semi", @"sub" } count:11 type:NSString_class_()]));
    EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_elisionExpansionStrs = [IOSObjectArray newArrayWithObjects:(id[]){ create_EduStanfordNlpUtilPair_initWithId_withId_(@"/^(prep|sadv|conj)$/ <+(/^(prep|grup\\.(adv|cc|prep))$/) (sp000=sp < /(?i)^(del|al)$/=elided) <<` =sp $+ (sn > (__ <+(sn) (sn=sn !< sn) << =sn) !$- sn)", @"[relabel elided /(?i)l//] [insert (spec (da0000 el)) >0 sn]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"prep < (sp000 < /(?i)^(del|al)$/=elided) $+ /grup\\.nom/=target", @"[relabel elided /(?i)l//] [adjoinF (sn (spec (da0000 el)) foot@) target]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"prep < (sp000 < /(?i)^(del|al)$/=elided) $+ /s\\.a/=target", @"[relabel elided /(?i)l//] [adjoinF (sn (spec (da0000 el)) (grup.nom foot@)) target]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"sp < (prep=prep < (sp000 < /(?i)^(a|de)l$/=elided) $+ (S=S <<, relatiu))", @"[relabel elided /(?i)l//] [adjoinF (sn (spec (da0000 el)) (grup.nom foot@)) S]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"prep < (sp000 < /(?i)^(al|del)$/=elided) $+ (S=target <+(S) infinitiu=inf <<, =inf)", @"[relabel elided /(?i)l//] [adjoinF (sn (spec (da0000 el)) foot@) target]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"prep < (sp000 < /(?i)^al$/=elided) $+ (S=target <, neg <2 infinitiu)", @"[relabel elided a] [adjoinF (sn (spec (da0000 el)) foot@) target]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"prep < (sp000 < /(?i)^al$/=elided) $+ relatiu=target", @"[relabel elided a] [adjoinF (sn (spec (da0000 el)) foot@) target]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"prep < (sp000 < /(?i)^al$/=elided) $+ (sp=target <, prep)", @"[relabel elided a] [adjoinF (sn (spec (da0000 el)) (grup.nom foot@)) target]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"prep < (sp000 < /(?i)^(del|al)$/=elided) $+ (/grup\\.nom/=target <, /s\\.a/ <2 /sn|nc0[sp]000/)", @"[relabel elided /(?i)l//] [adjoinF (sn (spec (da0000 el)) foot@) target]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"prep < (sp000 < /(?i)^(al|del)$/=elided) $+ (S=target < participi)", @"[relabel elided /(?i)l//] [adjoinF (sn (spec (da0000 lo)) foot@) target]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"spec < (sp000=target < /(?i)^del$/=elided) > sn $+ /grup\\.nom/", @"[relabel elided /(?i)l//] [insert (da0000 el) $- target]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"sp000=kill < /(?i)^(del|al)$/ $+ w=target", @"[delete kill] [adjoinF (sp (prep (sp000 de)) (sn (spec (da0000 el)) foot@)) target]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"sp000 < /(?i)^(a|de)l$/=contraction >: (prep >` (/^grup\\.prep$/ >` (prep=prep > sp $+ (sn=sn <, /^grup\\.(nom|[wz])/))))", @"[relabel contraction /(?i)l//] [insert (spec (da0000 el)) >0 sn]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"sp000 < /(?i)^(a|de)l$/=contraction >: (prep >` (sp >: (conj $+ (sn=sn <, /^grup\\.(nom|[wz])/))))", @"[relabel contraction /(?i)l//] [insert (spec (da0000 el)) >0 sn]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"sp000 < /(?i)^(a|de)l$/=contraction >: (prep >` (/^grup\\.prep$/ >` (prep=prep > sp $+ (sn <, (sn=sn <, /^grup\\.(nom|[wz])/)))))", @"[relabel contraction /(?i)l//] [insert (spec (da0000 el)) >0 sn]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"sp000 < /(?i)^(a|de)l$/=contraction >: (prep >` (/^grup\\.prep$/ >` (prep > sp $+ (sn=sn <, spec=spec))))", @"[relabel contraction /(?i)l//] [insert (da0000 el) >0 spec]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"sp000 < /(?i)^(a|de)l$/=contraction >: (prep >` (/^grup\\.prep$/ >` (prep > sp $+ /^grup\\.(nom|[wz])$/=ng)))", @"[adjoinF (sn (spec (da0000 el)) foot@) ng] [relabel contraction /(?i)l//]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"sp000 < /(?i)^(de|a)l$/=elided >` (/^grup\\.cc$/ >: (conj $+ /^grup\\.nom/=gn))", @"[relabel elided /(?i)l//] [adjoinF (sn (spec (da0000 el)) foot@) gn]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"sp000=sp < /(?i)^al$/=elided $+ /^vmp/", @"[relabel elided /(?i)l//] [insert (da0000 el) $- sp]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"prep < (sp000 < /(?i)^(al|del)$/=elided) $+ (S=S <+(S) (/^f/=punct $+ (S <+(S) (S <, infinitiu))))", @"[relabel elided /(?i)l//] [adjoinF (sn (spec (da0000 el)) (grup.nom foot@)) S]"), create_EduStanfordNlpUtilPair_initWithId_withId_(@"__=sp < del=contraction >, __=parent $+ (__ < todo >` =parent)", @"[relabel contraction de] [insert (da0000 el) $- sp]") } count:21 type:EduStanfordNlpUtilPair_class_()];
    EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_elisionExpansions = EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_compilePatternsWithEduStanfordNlpUtilPairArray_(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_elisionExpansionStrs);
    EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_conmigoPattern = EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"/(?i)^con[mst]igo$/=conmigo > (/^pp/ > (/^grup\\.nom$/ > sn=sn))");
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer)
  }
}

@end

void EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_init(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer *self) {
  EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_initWithBoolean_withBoolean_withBoolean_(self, true, false, false);
}

EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer *new_EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, init)
}

EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer *create_EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, init)
}

void EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_initWithBoolean_withBoolean_withBoolean_(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer *self, jboolean simplifiedTagset, jboolean aggressiveNormalization, jboolean retainNER) {
  EduStanfordNlpTreesBobChrisTreeNormalizer_initWithEduStanfordNlpTreesTreebankLanguagePack_(self, new_EduStanfordNlpTreesInternationalSpanishSpanishTreebankLanguagePack_init());
  if (retainNER && !simplifiedTagset) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"retainNER argument only valid when simplified tagset is used");
  self->simplifiedTagset_ = simplifiedTagset;
  self->aggressiveNormalization_ = aggressiveNormalization;
  self->retainNER_ = retainNER;
}

EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer *new_EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_initWithBoolean_withBoolean_withBoolean_(jboolean simplifiedTagset, jboolean aggressiveNormalization, jboolean retainNER) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, initWithBoolean_withBoolean_withBoolean_, simplifiedTagset, aggressiveNormalization, retainNER)
}

EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer *create_EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_initWithBoolean_withBoolean_withBoolean_(jboolean simplifiedTagset, jboolean aggressiveNormalization, jboolean retainNER) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer, initWithBoolean_withBoolean_withBoolean_, simplifiedTagset, aggressiveNormalization, retainNER)
}

NSString *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_simplifyPOSTagWithNSString_(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer *self, NSString *pos) {
  if (((jint) [((NSString *) nil_chk(pos)) length]) == 0) return pos;
  {
    jchar ner;
    switch ([pos charAtWithInt:0]) {
      case 'd':
      return JreStrcat("$$", [pos substring:0 endIndex:2], @"0000");
      case 's':
      return JreStrcat("$$", [pos substring:0 endIndex:2], @"000");
      case 'p':
      return JreStrcat("$$", [pos substring:0 endIndex:2], @"000000");
      case 'a':
      return JreStrcat("$$", [pos substring:0 endIndex:3], @"000");
      case 'n':
      ner = self->retainNER_ && ((jint) [pos length]) == 7 ? [pos charAtWithInt:6] : '0';
      return JreStrcat("$CC$C", [pos substring:0 endIndex:2], '0', [pos charAtWithInt:3], @"00", ner);
      case 'v':
      return JreStrcat("$$", [pos substring:0 endIndex:4], @"000");
      default:
      return pos;
    }
  }
}

EduStanfordNlpTreesTree *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_expandCliticPronounsWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t) {
  EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_initialize();
  t = EduStanfordNlpTreesTregexTsurgeonTsurgeon_processPatternWithEduStanfordNlpTreesTregexTregexPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_clauselessVerbWithCliticPronouns, EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_clausifyVerbWithCliticPronouns, t);
  t = EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_expandCliticPronounsInnerWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTregexTregexPattern_(t, EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_verbWithCliticPronouns);
  t = EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_expandCliticPronounsInnerWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTregexTregexPattern_(t, EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_verbWithCliticPronounsAndSiblings);
  return t;
}

EduStanfordNlpTreesTree *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_expandCliticPronounsInnerWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTregexTregexPattern_(EduStanfordNlpTreesTree *t, EduStanfordNlpTreesTregexTregexPattern *pattern) {
  EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_initialize();
  EduStanfordNlpTreesTregexTregexMatcher *matcher = [((EduStanfordNlpTreesTregexTregexPattern *) nil_chk(pattern)) matcherWithEduStanfordNlpTreesTree:t];
  while ([((EduStanfordNlpTreesTregexTregexMatcher *) nil_chk(matcher)) find]) {
    EduStanfordNlpTreesTree *verbNode = [matcher getNodeWithNSString:@"vb"];
    NSString *verb = [((EduStanfordNlpTreesTree *) nil_chk(verbNode)) value];
    if (!EduStanfordNlpInternationalSpanishSpanishVerbStripper_isStrippableWithNSString_(verb)) continue;
    EduStanfordNlpUtilPair *split = [((EduStanfordNlpInternationalSpanishSpanishVerbStripper *) nil_chk(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_verbStripper)) separatePronounsWithNSString:verb];
    if (split == nil) continue;
    JavaLangStringBuilder *clauseYieldBuilder = new_JavaLangStringBuilder_init();
    for (id<EduStanfordNlpLingLabel> __strong label in nil_chk([((EduStanfordNlpTreesTree *) nil_chk([matcher getNodeWithNSString:@"clause"])) yield])) (void) [((JavaLangStringBuilder *) nil_chk([clauseYieldBuilder appendWithNSString:[((id<EduStanfordNlpLingLabel>) nil_chk(label)) value]])) appendWithNSString:@" "];
    NSString *clauseYield = [clauseYieldBuilder description];
    clauseYield = [((NSString *) nil_chk(clauseYield)) substring:0 endIndex:((jint) [clauseYield length]) - 1];
    id<JavaUtilList> pronouns = [split second];
    for (jint i = [((id<JavaUtilList>) nil_chk(pronouns)) size] - 1; i >= 0; i--) {
      NSString *pronoun = [pronouns getWithInt:i];
      NSString *newTreeStr = nil;
      if (EduStanfordNlpInternationalSpanishProcessAnCoraPronounDisambiguator_isAmbiguousWithNSString_(pronoun)) {
        EduStanfordNlpInternationalSpanishProcessAnCoraPronounDisambiguator_PersonalPronounType *type = EduStanfordNlpInternationalSpanishProcessAnCoraPronounDisambiguator_disambiguatePersonalPronounWithEduStanfordNlpUtilPair_withInt_withNSString_(split, i, clauseYield);
        switch ([type ordinal]) {
          case EduStanfordNlpInternationalSpanishProcessAnCoraPronounDisambiguator_PersonalPronounType_Enum_OBJECT:
          newTreeStr = @"(sn (grup.nom (pp000000 %s)))";
          break;
          case EduStanfordNlpInternationalSpanishProcessAnCoraPronounDisambiguator_PersonalPronounType_Enum_REFLEXIVE:
          newTreeStr = @"(morfema.pronominal (pp000000 %s))";
          break;
          case EduStanfordNlpInternationalSpanishProcessAnCoraPronounDisambiguator_PersonalPronounType_Enum_UNKNOWN:
          newTreeStr = @"(PRONOUN? (pp000000 %s))";
          break;
        }
      }
      else {
        newTreeStr = @"(sn (grup.nom (pp000000 %s)))";
      }
      NSString *patternString = JreStrcat("$$$", @"[insert ", NSString_formatWithNSString_withNSObjectArray_(newTreeStr, [IOSObjectArray newArrayWithObjects:(id[]){ pronoun } count:1 type:NSObject_class_()]), @" $- target]");
      EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *insertPattern = EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(patternString);
      t = [((EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *) nil_chk([((EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *) nil_chk(insertPattern)) matcher])) evaluateWithEduStanfordNlpTreesTree:t withEduStanfordNlpTreesTregexTregexMatcher:matcher];
    }
    EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *relabelOperation = EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(NSString_formatWithNSString_withNSObjectArray_(@"[relabel vb /%s/]", [IOSObjectArray newArrayWithObjects:(id[]){ [split first] } count:1 type:NSObject_class_()]));
    t = [((EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *) nil_chk([((EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *) nil_chk(relabelOperation)) matcher])) evaluateWithEduStanfordNlpTreesTree:t withEduStanfordNlpTreesTregexTregexMatcher:matcher];
  }
  return t;
}

NSString *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_prepareForMultiWordExtractionWithNSString_(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer *self, NSString *token) {
  return [((NSString *) nil_chk([((NSString *) nil_chk(token)) replaceAll:@"-fpa-" withReplacement:@"("])) replaceAll:@"-fpt-" withReplacement:@")"];
}

IOSObjectArray *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_getMultiWordsWithNSString_(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer *self, NSString *token) {
  token = EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_prepareForMultiWordExtractionWithNSString_(self, token);
  JavaUtilRegexMatcher *quoteMatcher = [((JavaUtilRegexPattern *) nil_chk(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_pQuoted)) matcherWithJavaLangCharSequence:token];
  if ([((JavaUtilRegexMatcher *) nil_chk(quoteMatcher)) matches]) {
    IOSObjectArray *ret = [IOSObjectArray newArrayWithLength:3 type:NSString_class_()];
    (void) IOSObjectArray_Set(ret, 0, @"\"");
    (void) IOSObjectArray_Set(ret, 1, [quoteMatcher groupWithInt:1]);
    (void) IOSObjectArray_Set(ret, 2, @"\"");
    return ret;
  }
  JavaUtilStringTokenizer *splitter = new_JavaUtilStringTokenizer_initWithNSString_withNSString_withBoolean_(token, EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_WORD_SEPARATORS, true);
  jint remainingTokens = [splitter countTokens];
  id<JavaUtilList> words = new_JavaUtilArrayList_init();
  while ([splitter hasMoreTokens]) {
    NSString *word = [splitter nextToken];
    remainingTokens--;
    if (EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_shouldDropWordWithNSString_(self, word)) continue;
    if (remainingTokens >= 2 && [((id<JavaUtilSet>) nil_chk(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_hyphenBoundMorphemes)) containsWithId:word]) {
      NSString *hyphen = [splitter nextToken];
      remainingTokens--;
      if (![((NSString *) nil_chk(hyphen)) isEqual:@"-"]) {
        [words addWithId:word];
        if (!EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_shouldDropWordWithNSString_(self, hyphen)) [words addWithId:hyphen];
        continue;
      }
      NSString *freeMorpheme = [splitter nextToken];
      remainingTokens--;
      [words addWithId:JreStrcat("$$$", word, hyphen, freeMorpheme)];
      continue;
    }
    else if ([((NSString *) nil_chk(word)) isEqual:@","] && remainingTokens >= 1 && [words size] > 0) {
      jint prevIndex = [words size] - 1;
      NSString *prevWord = [words getWithInt:prevIndex];
      if (EduStanfordNlpUtilStringUtils_isNumericWithNSString_(prevWord)) {
        NSString *nextWord = [splitter nextToken];
        remainingTokens--;
        if (EduStanfordNlpUtilStringUtils_isNumericWithNSString_(nextWord)) {
          (void) [words setWithInt:prevIndex withId:JreStrcat("$C$", prevWord, ',', nextWord)];
        }
        else {
          [words addWithId:word];
          [words addWithId:nextWord];
        }
        continue;
      }
    }
    [words addWithId:word];
  }
  return [words toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[words size] type:NSString_class_()]];
}

jboolean EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_shouldDropWordWithNSString_(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer *self, NSString *word) {
  return ((jint) [((NSString *) nil_chk(word)) length]) == 1 && [((NSString *) nil_chk(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_WORD_SEPARATORS_DROP)) indexOf:[word charAtWithInt:0]] != -1;
}

EduStanfordNlpTreesTree *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_expandElisionsWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer *self, EduStanfordNlpTreesTree *t) {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeon_processPatternsOnTreeWithJavaUtilList_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_elisionExpansions, t);
}

EduStanfordNlpTreesTree *EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_expandConmigoWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t) {
  EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_initialize();
  EduStanfordNlpTreesTregexTregexMatcher *matcher = [((EduStanfordNlpTreesTregexTregexPattern *) nil_chk(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_conmigoPattern)) matcherWithEduStanfordNlpTreesTree:t];
  while ([((EduStanfordNlpTreesTregexTregexMatcher *) nil_chk(matcher)) find]) {
    EduStanfordNlpTreesTree *conmigoNode = [matcher getNodeWithNSString:@"conmigo"];
    NSString *word = [((EduStanfordNlpTreesTree *) nil_chk(conmigoNode)) value];
    NSString *newPronoun = nil;
    if ([((NSString *) nil_chk(word)) equalsIgnoreCase:@"conmigo"]) newPronoun = @"m\u00ed";
    else if ([word equalsIgnoreCase:@"contigo"]) newPronoun = @"ti";
    else if ([word equalsIgnoreCase:@"consigo"]) newPronoun = @"s\u00ed";
    if ([word charAtWithInt:0] == 'C') newPronoun = [((NSString *) nil_chk(newPronoun)) uppercaseString];
    NSString *tsurgeon = NSString_formatWithNSString_withNSObjectArray_(@"[relabel conmigo /%s/][adjoinF (sp (prep (sp000 con)) foot@) sn]", [IOSObjectArray newArrayWithObjects:(id[]){ newPronoun } count:1 type:NSObject_class_()]);
    EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *pattern = EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(tsurgeon);
    t = [((EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *) nil_chk([((EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *) nil_chk(pattern)) matcher])) evaluateWithEduStanfordNlpTreesTree:t withEduStanfordNlpTreesTregexTregexMatcher:matcher];
  }
  return t;
}

id<JavaUtilList> EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_compilePatternsWithEduStanfordNlpUtilPairArray_(IOSObjectArray *patterns) {
  EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_initialize();
  id<JavaUtilList> ret = new_JavaUtilArrayList_initWithInt_(((IOSObjectArray *) nil_chk(patterns))->size_);
  {
    IOSObjectArray *a__ = patterns;
    EduStanfordNlpUtilPair * const *b__ = a__->buffer_;
    EduStanfordNlpUtilPair * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      EduStanfordNlpUtilPair *pattern = *b__++;
      [ret addWithId:new_EduStanfordNlpUtilPair_initWithId_withId_(EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_([((EduStanfordNlpUtilPair *) nil_chk(pattern)) first]), EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_([pattern second]))];
    }
  }
  return ret;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer)

@implementation EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$1

- (jboolean)testWithId:(EduStanfordNlpTreesTree *)tree {
  if ([((EduStanfordNlpTreesTree *) nil_chk(tree)) isPreTerminal] && [((NSString *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk([tree firstChild])) value])) isEqual:EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_EMPTY_LEAF_VALUE]) return false;
  return true;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilFunctionPredicate>)and__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_and__WithJavaUtilFunctionPredicate_(self, arg0);
}

- (id<JavaUtilFunctionPredicate>)negate {
  return JavaUtilFunctionPredicate_negate(self);
}

- (id<JavaUtilFunctionPredicate>)or__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_or__WithJavaUtilFunctionPredicate_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "test", "LEduStanfordNlpTreesTree;", "LEduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer;", "Ljava/lang/Object;Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/Tree;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$1 = { "", "edu.stanford.nlp.trees.international.spanish", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, -1, 3, -1 };
  return &_EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$1;
}

@end

void EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$1_init(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$1 *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$1 *new_EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$1_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$1, init)
}

EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$1 *create_EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$1_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$1, init)
}

@implementation EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$2

- (EduStanfordNlpTreesTree *)transformTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  if ([((EduStanfordNlpTreesTree *) nil_chk(t)) isLeaf]) return t;
  NSString *value = [t value];
  if (value == nil) return t;
  if ([value isEqual:@"sa"]) [t setValueWithNSString:@"s.a"];
  return t;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(transformTreeWithEduStanfordNlpTreesTree:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "transformTree", "LEduStanfordNlpTreesTree;", "LEduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$2 = { "", "edu.stanford.nlp.trees.international.spanish", ptrTable, methods, NULL, 7, 0x8008, 2, 0, 2, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$2;
}

@end

void EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$2_init(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$2 *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$2 *new_EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$2_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$2, init)
}

EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$2 *create_EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$2_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesInternationalSpanishSpanishTreeNormalizer_$2, init)
}
