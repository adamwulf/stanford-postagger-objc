//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/international/hebrew/HebrewTreeNormalizer.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/trees/BobChrisTreeNormalizer.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeFactory.h"
#include "edu/stanford/nlp/trees/TreebankLanguagePack.h"
#include "edu/stanford/nlp/trees/international/hebrew/HebrewTreeNormalizer.h"
#include "edu/stanford/nlp/trees/international/hebrew/HebrewTreebankLanguagePack.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/function/Predicate.h"

@interface EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer () {
 @public
  id<JavaUtilFunctionPredicate> hebrewEmptyFilter_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer, hebrewEmptyFilter_, id<JavaUtilFunctionPredicate>)

inline jlong EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_get_serialVersionUID();
#define EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_serialVersionUID -3129547164200725933LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer, serialVersionUID, jlong)

inline jlong EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_HebrewEmptyFilter_get_serialVersionUID();
#define EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_HebrewEmptyFilter_serialVersionUID -7256461296718287280LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_HebrewEmptyFilter, serialVersionUID, jlong)

@implementation EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (EduStanfordNlpTreesTree *)normalizeWholeTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                                        withEduStanfordNlpTreesTreeFactory:(id<EduStanfordNlpTreesTreeFactory>)tf {
  tree = [((EduStanfordNlpTreesTree *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(tree)) pruneWithJavaUtilFunctionPredicate:hebrewEmptyFilter_ withEduStanfordNlpTreesTreeFactory:tf])) spliceOutWithJavaUtilFunctionPredicate:aOverAFilter_ withEduStanfordNlpTreesTreeFactory:tf];
  while (tree != nil && ([tree value] == nil || [((NSString *) nil_chk([tree value])) isEqual:@""]) && [tree numChildren] <= 1) tree = [tree firstChild];
  if (tree != nil && ![((NSString *) nil_chk([tree value])) isEqual:[((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(tlp_)) startSymbol]]) tree = [((id<EduStanfordNlpTreesTreeFactory>) nil_chk(tf)) newTreeNodeWithNSString:[((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(tlp_)) startSymbol] withJavaUtilList:JavaUtilCollections_singletonListWithId_(tree)];
  return tree;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(normalizeWholeTreeWithEduStanfordNlpTreesTree:withEduStanfordNlpTreesTreeFactory:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "hebrewEmptyFilter_", "LJavaUtilFunctionPredicate;", .constantValue.asLong = 0, 0x12, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "normalizeWholeTree", "LEduStanfordNlpTreesTree;LEduStanfordNlpTreesTreeFactory;", "Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/Tree;>;", "LEduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_HebrewEmptyFilter;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer = { "HebrewTreeNormalizer", "edu.stanford.nlp.trees.international.hebrew", ptrTable, methods, fields, 7, 0x1, 2, 2, -1, 3, -1, -1, -1 };
  return &_EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer;
}

@end

void EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_init(EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer *self) {
  EduStanfordNlpTreesBobChrisTreeNormalizer_initWithEduStanfordNlpTreesTreebankLanguagePack_(self, new_EduStanfordNlpTreesInternationalHebrewHebrewTreebankLanguagePack_init());
  self->hebrewEmptyFilter_ = new_EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_HebrewEmptyFilter_init();
}

EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer *new_EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer, init)
}

EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer *create_EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer)

@implementation EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_HebrewEmptyFilter

- (jboolean)testWithId:(EduStanfordNlpTreesTree *)t {
  return !([((EduStanfordNlpTreesTree *) nil_chk(t)) isPreTerminal] && [((NSString *) nil_chk([t value])) isEqual:@"-NONE-"]);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_HebrewEmptyFilter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilFunctionPredicate>)and__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_and__WithJavaUtilFunctionPredicate_(self, arg0);
}

- (id<JavaUtilFunctionPredicate>)negate {
  return JavaUtilFunctionPredicate_negate(self);
}

- (id<JavaUtilFunctionPredicate>)or__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_or__WithJavaUtilFunctionPredicate_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_HebrewEmptyFilter_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "test", "LEduStanfordNlpTreesTree;", "LEduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer;", "Ljava/lang/Object;Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/Tree;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_HebrewEmptyFilter = { "HebrewEmptyFilter", "edu.stanford.nlp.trees.international.hebrew", ptrTable, methods, fields, 7, 0x9, 2, 1, 2, -1, -1, 3, -1 };
  return &_EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_HebrewEmptyFilter;
}

@end

void EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_HebrewEmptyFilter_init(EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_HebrewEmptyFilter *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_HebrewEmptyFilter *new_EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_HebrewEmptyFilter_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_HebrewEmptyFilter, init)
}

EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_HebrewEmptyFilter *create_EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_HebrewEmptyFilter_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_HebrewEmptyFilter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesInternationalHebrewHebrewTreeNormalizer_HebrewEmptyFilter)
