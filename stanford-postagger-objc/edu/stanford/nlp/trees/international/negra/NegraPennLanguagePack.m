//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/international/negra/NegraPennLanguagePack.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/process/PTBTokenizer.h"
#include "edu/stanford/nlp/process/TokenizerFactory.h"
#include "edu/stanford/nlp/trees/AbstractTreebankLanguagePack.h"
#include "edu/stanford/nlp/trees/HeadFinder.h"
#include "edu/stanford/nlp/trees/TreeReaderFactory.h"
#include "edu/stanford/nlp/trees/international/negra/NegraHeadFinder.h"
#include "edu/stanford/nlp/trees/international/negra/NegraPennLanguagePack.h"
#include "edu/stanford/nlp/trees/international/negra/NegraPennTreeReaderFactory.h"

@interface EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack () {
 @public
  jboolean leaveGF_;
}

+ (jboolean)containsKeptGFWithNSString:(NSString *)category
                               withInt:(jint)index;

@end

inline jlong EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_get_serialVersionUID();
#define EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_serialVersionUID 9081305982861675328LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack, serialVersionUID, jlong)

inline IOSObjectArray *EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_get_gfToKeepArray();
inline IOSObjectArray *EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_set_gfToKeepArray(IOSObjectArray *value);
static IOSObjectArray *EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_gfToKeepArray;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack, gfToKeepArray, IOSObjectArray *)

inline NSString *EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_get_NEGRA_ENCODING();
static NSString *EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_NEGRA_ENCODING = @"ISO-8859-1";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack, NEGRA_ENCODING, NSString *)

inline IOSObjectArray *EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_get_evalBignoredTags();
static IOSObjectArray *EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_evalBignoredTags;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack, evalBignoredTags, IOSObjectArray *)

inline IOSObjectArray *EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_get_negraSFPunctTags();
static IOSObjectArray *EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_negraSFPunctTags;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack, negraSFPunctTags, IOSObjectArray *)

inline IOSObjectArray *EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_get_negraSFPunctWords();
static IOSObjectArray *EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_negraSFPunctWords;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack, negraSFPunctWords, IOSObjectArray *)

inline IOSObjectArray *EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_get_negraPunctTags();
static IOSObjectArray *EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_negraPunctTags;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack, negraPunctTags, IOSObjectArray *)

inline IOSObjectArray *EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_get_negraPunctWords();
static IOSObjectArray *EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_negraPunctWords;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack, negraPunctWords, IOSObjectArray *)

inline IOSCharArray *EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_get_annotationIntroducingChars();
inline IOSCharArray *EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_set_annotationIntroducingChars(IOSCharArray *value);
static IOSCharArray *EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_annotationIntroducingChars;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack, annotationIntroducingChars, IOSCharArray *)

inline IOSObjectArray *EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_get_pennStartSymbols();
inline IOSObjectArray *EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_set_pennStartSymbols(IOSObjectArray *value);
static IOSObjectArray *EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_pennStartSymbols;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack, pennStartSymbols, IOSObjectArray *)

__attribute__((unused)) static jboolean EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_containsKeptGFWithNSString_withInt_(NSString *category, jint index);

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack)

@implementation EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithBoolean:(jboolean)leaveGF {
  EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_initWithBoolean_(self, leaveGF);
  return self;
}

- (instancetype)initWithBoolean:(jboolean)leaveGF
                       withChar:(jchar)gfChar {
  EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_initWithBoolean_withChar_(self, leaveGF, gfChar);
  return self;
}

- (IOSObjectArray *)punctuationTags {
  return EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_negraPunctTags;
}

- (IOSObjectArray *)punctuationWords {
  return EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_negraPunctWords;
}

- (IOSObjectArray *)sentenceFinalPunctuationTags {
  return EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_negraSFPunctTags;
}

- (IOSObjectArray *)sentenceFinalPunctuationWords {
  return EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_negraSFPunctWords;
}

- (NSString *)basicCategoryWithNSString:(NSString *)category {
  NSString *basicCat;
  if (leaveGF_) {
    basicCat = [self stripGFWithNSString:category];
  }
  else {
    basicCat = [super basicCategoryWithNSString:category];
  }
  return basicCat;
}

- (NSString *)stripGFWithNSString:(NSString *)category {
  if (category == nil) {
    return nil;
  }
  jint index = [category lastIndexOf:gfCharacter_];
  if (index > 0) {
    if (!EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_containsKeptGFWithNSString_withInt_(category, index)) category = [category substring:0 endIndex:index];
  }
  return category;
}

+ (jboolean)containsKeptGFWithNSString:(NSString *)category
                               withInt:(jint)index {
  return EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_containsKeptGFWithNSString_withInt_(category, index);
}

- (IOSObjectArray *)evalBIgnoredPunctuationTags {
  return EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_evalBignoredTags;
}

- (IOSCharArray *)labelAnnotationIntroducingCharacters {
  return EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_annotationIntroducingChars;
}

- (IOSObjectArray *)startSymbols {
  return EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_pennStartSymbols;
}

- (NSString *)getEncoding {
  return EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_NEGRA_ENCODING;
}

- (NSString *)treebankFileExtension {
  return @"mrg";
}

- (jboolean)isLeaveGF {
  return leaveGF_;
}

- (void)setLeaveGFWithBoolean:(jboolean)leaveGF {
  self->leaveGF_ = leaveGF;
}

- (id<EduStanfordNlpTreesTreeReaderFactory>)treeReaderFactory {
  return new_EduStanfordNlpTreesInternationalNegraNegraPennTreeReaderFactory_initWithEduStanfordNlpTreesTreebankLanguagePack_(self);
}

- (id<EduStanfordNlpTreesHeadFinder>)headFinder {
  return new_EduStanfordNlpTreesInternationalNegraNegraHeadFinder_initWithEduStanfordNlpTreesTreebankLanguagePack_(self);
}

- (id<EduStanfordNlpTreesHeadFinder>)typedDependencyHeadFinder {
  return new_EduStanfordNlpTreesInternationalNegraNegraHeadFinder_initWithEduStanfordNlpTreesTreebankLanguagePack_(self);
}

- (id<EduStanfordNlpProcessTokenizerFactory>)getTokenizerFactory {
  return EduStanfordNlpProcessPTBTokenizer_factory();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 5, 6, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[C", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 0, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTreeReaderFactory;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesHeadFinder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesHeadFinder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpProcessTokenizerFactory;", 0x1, -1, -1, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithBoolean:);
  methods[2].selector = @selector(initWithBoolean:withChar:);
  methods[3].selector = @selector(punctuationTags);
  methods[4].selector = @selector(punctuationWords);
  methods[5].selector = @selector(sentenceFinalPunctuationTags);
  methods[6].selector = @selector(sentenceFinalPunctuationWords);
  methods[7].selector = @selector(basicCategoryWithNSString:);
  methods[8].selector = @selector(stripGFWithNSString:);
  methods[9].selector = @selector(containsKeptGFWithNSString:withInt:);
  methods[10].selector = @selector(evalBIgnoredPunctuationTags);
  methods[11].selector = @selector(labelAnnotationIntroducingCharacters);
  methods[12].selector = @selector(startSymbols);
  methods[13].selector = @selector(getEncoding);
  methods[14].selector = @selector(treebankFileExtension);
  methods[15].selector = @selector(isLeaveGF);
  methods[16].selector = @selector(setLeaveGFWithBoolean:);
  methods[17].selector = @selector(treeReaderFactory);
  methods[18].selector = @selector(headFinder);
  methods[19].selector = @selector(typedDependencyHeadFinder);
  methods[20].selector = @selector(getTokenizerFactory);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "leaveGF_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "gfToKeepArray", "[LNSString;", .constantValue.asLong = 0, 0xa, -1, 9, -1, -1 },
    { "NEGRA_ENCODING", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 10, -1, -1 },
    { "evalBignoredTags", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "negraSFPunctTags", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
    { "negraSFPunctWords", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 13, -1, -1 },
    { "negraPunctTags", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 14, -1, -1 },
    { "negraPunctWords", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 15, -1, -1 },
    { "annotationIntroducingChars", "[C", .constantValue.asLong = 0, 0xa, -1, 16, -1, -1 },
    { "pennStartSymbols", "[LNSString;", .constantValue.asLong = 0, 0xa, -1, 17, -1, -1 },
  };
  static const void *ptrTable[] = { "Z", "ZC", "basicCategory", "LNSString;", "stripGF", "containsKeptGF", "LNSString;I", "setLeaveGF", "()Ledu/stanford/nlp/process/TokenizerFactory<Ledu/stanford/nlp/ling/Word;>;", &EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_gfToKeepArray, &EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_NEGRA_ENCODING, &EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_evalBignoredTags, &EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_negraSFPunctTags, &EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_negraSFPunctWords, &EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_negraPunctTags, &EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_negraPunctWords, &EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_annotationIntroducingChars, &EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_pennStartSymbols };
  static const J2ObjcClassInfo _EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack = { "NegraPennLanguagePack", "edu.stanford.nlp.trees.international.negra", ptrTable, methods, fields, 7, 0x1, 21, 11, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack class]) {
    EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_gfToKeepArray = [IOSObjectArray newArrayWithObjects:(id[]){ @"SB", @"OA", @"DA" } count:3 type:NSString_class_()];
    EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_evalBignoredTags = [IOSObjectArray newArrayWithObjects:(id[]){ @"$.", @"$," } count:2 type:NSString_class_()];
    EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_negraSFPunctTags = [IOSObjectArray newArrayWithObjects:(id[]){ @"$." } count:1 type:NSString_class_()];
    EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_negraSFPunctWords = [IOSObjectArray newArrayWithObjects:(id[]){ @".", @"!", @"?" } count:3 type:NSString_class_()];
    EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_negraPunctTags = [IOSObjectArray newArrayWithObjects:(id[]){ @"$.", @"$,", @"$*LRB*" } count:3 type:NSString_class_()];
    EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_negraPunctWords = [IOSObjectArray newArrayWithObjects:(id[]){ @"-", @",", @";", @":", @"!", @"?", @"/", @".", @"...", @"\u00b7", @"'", @"\"", @"(", @")", @"*LRB*", @"*RRB*" } count:16 type:NSString_class_()];
    EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_annotationIntroducingChars = [IOSCharArray newArrayWithChars:(jchar[]){ '-', '%', '=', '|', '#', '^', '~' } count:7];
    EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_pennStartSymbols = [IOSObjectArray newArrayWithObjects:(id[]){ @"ROOT" } count:1 type:NSString_class_()];
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack)
  }
}

@end

void EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_init(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack *self) {
  EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_initWithBoolean_withChar_(self, false, EduStanfordNlpTreesAbstractTreebankLanguagePack_DEFAULT_GF_CHAR);
}

EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack *new_EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack, init)
}

EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack *create_EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack, init)
}

void EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_initWithBoolean_(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack *self, jboolean leaveGF) {
  EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_initWithBoolean_withChar_(self, leaveGF, EduStanfordNlpTreesAbstractTreebankLanguagePack_DEFAULT_GF_CHAR);
}

EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack *new_EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_initWithBoolean_(jboolean leaveGF) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack, initWithBoolean_, leaveGF)
}

EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack *create_EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_initWithBoolean_(jboolean leaveGF) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack, initWithBoolean_, leaveGF)
}

void EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_initWithBoolean_withChar_(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack *self, jboolean leaveGF, jchar gfChar) {
  EduStanfordNlpTreesAbstractTreebankLanguagePack_initWithChar_(self, gfChar);
  self->leaveGF_ = false;
  self->leaveGF_ = leaveGF;
}

EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack *new_EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_initWithBoolean_withChar_(jboolean leaveGF, jchar gfChar) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack, initWithBoolean_withChar_, leaveGF, gfChar)
}

EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack *create_EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_initWithBoolean_withChar_(jboolean leaveGF, jchar gfChar) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack, initWithBoolean_withChar_, leaveGF, gfChar)
}

jboolean EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_containsKeptGFWithNSString_withInt_(NSString *category, jint index) {
  EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_initialize();
  {
    IOSObjectArray *a__ = EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_gfToKeepArray;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *gf = *b__++;
      jint gfLength = ((jint) [((NSString *) nil_chk(gf)) length]);
      if (gfLength < (((jint) [((NSString *) nil_chk(category)) length]) - index)) {
        if ([((NSString *) nil_chk([category substring:index + 1 endIndex:index + 1 + gfLength])) isEqual:gf]) return true;
      }
    }
  }
  return false;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack)
