//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/international/negra/NegraPennTreeNormalizer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/ling/LabelFactory.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeFactory.h"
#include "edu/stanford/nlp/trees/TreeNormalizer.h"
#include "edu/stanford/nlp/trees/TreebankLanguagePack.h"
#include "edu/stanford/nlp/trees/international/negra/NegraPennLanguagePack.h"
#include "edu/stanford/nlp/trees/international/negra/NegraPennTreeNormalizer.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "java/util/function/Predicate.h"

@interface EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer () {
 @public
  jint nodeCleanup_;
  jboolean insertNPinPP_;
  id<JavaUtilFunctionPredicate> emptyFilter_;
  id<JavaUtilFunctionPredicate> aOverAFilter_;
  id<JavaUtilSet> prepositionTags_;
  id<JavaUtilSet> postpositionTags_;
}

- (EduStanfordNlpTreesTree *)fixNonUnaryRootWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                     withEduStanfordNlpTreesTreeFactory:(id<EduStanfordNlpTreesTreeFactory>)tf;

- (void)insertNPinPPallWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

- (void)insertNPinPPWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer, emptyFilter_, id<JavaUtilFunctionPredicate>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer, aOverAFilter_, id<JavaUtilFunctionPredicate>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer, prepositionTags_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer, postpositionTags_, id<JavaUtilSet>)

inline NSString *EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_get_nonUnaryRoot();
static NSString *EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_nonUnaryRoot = @"NUR";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer, nonUnaryRoot, NSString *)

inline NSString *EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_get_junkCPP();
static NSString *EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_junkCPP = @"---CJ";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer, junkCPP, NSString *)

inline NSString *EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_get_cpp();
static NSString *EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_cpp = @"CPP";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer, cpp, NSString *)

inline jlong EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_get_serialVersionUID();
#define EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_serialVersionUID 8529514903815041064LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer, serialVersionUID, jlong)

__attribute__((unused)) static EduStanfordNlpTreesTree *EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_fixNonUnaryRootWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTreeFactory_(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer *self, EduStanfordNlpTreesTree *t, id<EduStanfordNlpTreesTreeFactory> tf);

__attribute__((unused)) static void EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_insertNPinPPallWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer *self, EduStanfordNlpTreesTree *t);

__attribute__((unused)) static void EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_insertNPinPPWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer *self, EduStanfordNlpTreesTree *t);

@interface EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1 : NSObject < JavaUtilFunctionPredicate >

- (jboolean)testWithId:(EduStanfordNlpTreesTree *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1)

inline jlong EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1_get_serialVersionUID();
#define EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1_serialVersionUID -606371737889816130LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1_init(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1 *self);

__attribute__((unused)) static EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1 *new_EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1 *create_EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1_init();

@interface EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2 : NSObject < JavaUtilFunctionPredicate >

- (jboolean)testWithId:(EduStanfordNlpTreesTree *)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2)

inline jlong EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2_get_serialVersionUID();
#define EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2_serialVersionUID -606371737889816130LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2_init(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2 *self);

__attribute__((unused)) static EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2 *new_EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2 *create_EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2_init();

@implementation EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithEduStanfordNlpTreesTreebankLanguagePack:(id<EduStanfordNlpTreesTreebankLanguagePack>)tlp {
  EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_initWithEduStanfordNlpTreesTreebankLanguagePack_(self, tlp);
  return self;
}

- (instancetype)initWithEduStanfordNlpTreesTreebankLanguagePack:(id<EduStanfordNlpTreesTreebankLanguagePack>)tlp
                                                        withInt:(jint)nodeCleanup {
  EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_initWithEduStanfordNlpTreesTreebankLanguagePack_withInt_(self, tlp, nodeCleanup);
  return self;
}

- (NSString *)rootSymbol {
  return [((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(tlp_)) startSymbol];
}

- (NSString *)nonUnaryRootSymbol {
  return EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_nonUnaryRoot;
}

- (void)setInsertNPinPPWithBoolean:(jboolean)b {
  insertNPinPP_ = b;
}

- (jboolean)getInsertNPinPP {
  return insertNPinPP_;
}

- (NSString *)normalizeTerminalWithNSString:(NSString *)leaf {
  return [((NSString *) nil_chk(leaf)) intern];
}

- (NSString *)normalizeNonterminalWithNSString:(NSString *)category {
  if ([((NSString *) nil_chk(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_junkCPP)) isEqual:category]) category = EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_cpp;
  category = [self cleanUpLabelWithNSString:category];
  return (category == nil) ? nil : [((NSString *) nil_chk(category)) intern];
}

- (EduStanfordNlpTreesTree *)fixNonUnaryRootWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                     withEduStanfordNlpTreesTreeFactory:(id<EduStanfordNlpTreesTreeFactory>)tf {
  return EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_fixNonUnaryRootWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTreeFactory_(self, t, tf);
}

- (EduStanfordNlpTreesTree *)normalizeWholeTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                                        withEduStanfordNlpTreesTreeFactory:(id<EduStanfordNlpTreesTreeFactory>)tf {
  if ([((EduStanfordNlpTreesTree *) nil_chk(tree)) value] == nil) tree = EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_fixNonUnaryRootWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTreeFactory_(self, tree, tf);
  else if (![((NSString *) nil_chk([tree value])) isEqual:[((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(tlp_)) startSymbol]]) tree = [((id<EduStanfordNlpTreesTreeFactory>) nil_chk(tf)) newTreeNodeWithNSString:[tlp_ startSymbol] withJavaUtilList:JavaUtilCollections_singletonListWithId_(tree)];
  tree = [((EduStanfordNlpTreesTree *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(tree)) pruneWithJavaUtilFunctionPredicate:emptyFilter_ withEduStanfordNlpTreesTreeFactory:tf])) spliceOutWithJavaUtilFunctionPredicate:aOverAFilter_ withEduStanfordNlpTreesTreeFactory:tf];
  if (insertNPinPP_) {
    EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_insertNPinPPallWithEduStanfordNlpTreesTree_(self, tree);
  }
  for (EduStanfordNlpTreesTree * __strong t in nil_chk(tree)) {
    if ([((EduStanfordNlpTreesTree *) nil_chk(t)) isLeaf] || [t isPreTerminal]) continue;
    if ([t value] == nil || [((NSString *) nil_chk([t value])) isEqual:@""]) [t setValueWithNSString:@"DUMMY"];
    if ([((NSString *) nil_chk([t value])) matches:@"--.*"]) continue;
    NSString *cat = [t value];
    if (cat == nil || [cat isEqual:@""]) {
      if ([t numChildren] == 3 && [((NSString *) nil_chk([((id<EduStanfordNlpLingLabel>) nil_chk([((EduStanfordNlpTreesTree *) nil_chk([t firstChild])) label])) value])) isEqual:@"NN"] && [((NSString *) nil_chk([((id<EduStanfordNlpLingLabel>) nil_chk([((EduStanfordNlpTreesTree *) nil_chk([t getChildWithInt:1])) label])) value])) isEqual:@"$."]) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"Correcting treebank error: giving phrase label DL to ", t)];
        [((id<EduStanfordNlpLingLabel>) nil_chk([t label])) setValueWithNSString:@"DL"];
      }
    }
  }
  return tree;
}

- (void)insertNPinPPallWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_insertNPinPPallWithEduStanfordNlpTreesTree_(self, t);
}

- (void)insertNPinPPWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_insertNPinPPWithEduStanfordNlpTreesTree_(self, t);
}

- (NSString *)cleanUpLabelWithNSString:(NSString *)label {
  if (nodeCleanup_ == 1) {
    return [((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(tlp_)) categoryAndFunctionWithNSString:label];
  }
  else if (nodeCleanup_ == 2) {
    return [((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(tlp_)) basicCategoryWithNSString:label];
  }
  return label;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x2, 7, 8, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 9, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 12, 11, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 13, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithEduStanfordNlpTreesTreebankLanguagePack:);
  methods[2].selector = @selector(initWithEduStanfordNlpTreesTreebankLanguagePack:withInt:);
  methods[3].selector = @selector(rootSymbol);
  methods[4].selector = @selector(nonUnaryRootSymbol);
  methods[5].selector = @selector(setInsertNPinPPWithBoolean:);
  methods[6].selector = @selector(getInsertNPinPP);
  methods[7].selector = @selector(normalizeTerminalWithNSString:);
  methods[8].selector = @selector(normalizeNonterminalWithNSString:);
  methods[9].selector = @selector(fixNonUnaryRootWithEduStanfordNlpTreesTree:withEduStanfordNlpTreesTreeFactory:);
  methods[10].selector = @selector(normalizeWholeTreeWithEduStanfordNlpTreesTree:withEduStanfordNlpTreesTreeFactory:);
  methods[11].selector = @selector(insertNPinPPallWithEduStanfordNlpTreesTree:);
  methods[12].selector = @selector(insertNPinPPWithEduStanfordNlpTreesTree:);
  methods[13].selector = @selector(cleanUpLabelWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "nodeCleanup_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "nonUnaryRoot", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 14, -1, -1 },
    { "tlp_", "LEduStanfordNlpTreesTreebankLanguagePack;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "insertNPinPP_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "emptyFilter_", "LJavaUtilFunctionPredicate;", .constantValue.asLong = 0, 0x12, -1, -1, 15, -1 },
    { "aOverAFilter_", "LJavaUtilFunctionPredicate;", .constantValue.asLong = 0, 0x12, -1, -1, 15, -1 },
    { "junkCPP", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 16, -1, -1 },
    { "cpp", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 17, -1, -1 },
    { "prepositionTags_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x2, -1, -1, 18, -1 },
    { "postpositionTags_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x2, -1, -1, 18, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTreesTreebankLanguagePack;", "LEduStanfordNlpTreesTreebankLanguagePack;I", "setInsertNPinPP", "Z", "normalizeTerminal", "LNSString;", "normalizeNonterminal", "fixNonUnaryRoot", "LEduStanfordNlpTreesTree;LEduStanfordNlpTreesTreeFactory;", "normalizeWholeTree", "insertNPinPPall", "LEduStanfordNlpTreesTree;", "insertNPinPP", "cleanUpLabel", &EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_nonUnaryRoot, "Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/Tree;>;", &EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_junkCPP, &EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_cpp, "Ljava/util/Set<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer = { "NegraPennTreeNormalizer", "edu.stanford.nlp.trees.international.negra", ptrTable, methods, fields, 7, 0x1, 14, 11, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer;
}

@end

void EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_init(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer *self) {
  EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_initWithEduStanfordNlpTreesTreebankLanguagePack_(self, new_EduStanfordNlpTreesInternationalNegraNegraPennLanguagePack_init());
}

EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer *new_EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer, init)
}

EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer *create_EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer, init)
}

void EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_initWithEduStanfordNlpTreesTreebankLanguagePack_(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer *self, id<EduStanfordNlpTreesTreebankLanguagePack> tlp) {
  EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_initWithEduStanfordNlpTreesTreebankLanguagePack_withInt_(self, tlp, 0);
}

EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer *new_EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_initWithEduStanfordNlpTreesTreebankLanguagePack_(id<EduStanfordNlpTreesTreebankLanguagePack> tlp) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer, initWithEduStanfordNlpTreesTreebankLanguagePack_, tlp)
}

EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer *create_EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_initWithEduStanfordNlpTreesTreebankLanguagePack_(id<EduStanfordNlpTreesTreebankLanguagePack> tlp) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer, initWithEduStanfordNlpTreesTreebankLanguagePack_, tlp)
}

void EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_initWithEduStanfordNlpTreesTreebankLanguagePack_withInt_(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer *self, id<EduStanfordNlpTreesTreebankLanguagePack> tlp, jint nodeCleanup) {
  EduStanfordNlpTreesTreeNormalizer_init(self);
  self->insertNPinPP_ = false;
  self->prepositionTags_ = EduStanfordNlpUtilGenerics_newHashSetWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ @"APPR", @"APPRART" } count:2 type:NSString_class_()]));
  self->postpositionTags_ = EduStanfordNlpUtilGenerics_newHashSetWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ @"APPO", @"APZR" } count:2 type:NSString_class_()]));
  self->tlp_ = tlp;
  self->nodeCleanup_ = nodeCleanup;
  self->emptyFilter_ = new_EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1_init();
  self->aOverAFilter_ = new_EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2_init();
}

EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer *new_EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_initWithEduStanfordNlpTreesTreebankLanguagePack_withInt_(id<EduStanfordNlpTreesTreebankLanguagePack> tlp, jint nodeCleanup) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer, initWithEduStanfordNlpTreesTreebankLanguagePack_withInt_, tlp, nodeCleanup)
}

EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer *create_EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_initWithEduStanfordNlpTreesTreebankLanguagePack_withInt_(id<EduStanfordNlpTreesTreebankLanguagePack> tlp, jint nodeCleanup) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer, initWithEduStanfordNlpTreesTreebankLanguagePack_withInt_, tlp, nodeCleanup)
}

EduStanfordNlpTreesTree *EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_fixNonUnaryRootWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTreeFactory_(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer *self, EduStanfordNlpTreesTree *t, id<EduStanfordNlpTreesTreeFactory> tf) {
  id<JavaUtilList> kids = [((EduStanfordNlpTreesTree *) nil_chk(t)) getChildrenAsList];
  if ([((id<JavaUtilList>) nil_chk(kids)) size] == 2 && [((EduStanfordNlpTreesTree *) nil_chk([t firstChild])) isPhrasal] && [((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(self->tlp_)) isSentenceFinalPunctuationTagWithNSString:[((EduStanfordNlpTreesTree *) nil_chk([t lastChild])) value]]) {
    id<JavaUtilList> grandKids = [((EduStanfordNlpTreesTree *) nil_chk([t firstChild])) getChildrenAsList];
    [((id<JavaUtilList>) nil_chk(grandKids)) addWithId:[t lastChild]];
    [((EduStanfordNlpTreesTree *) nil_chk([t firstChild])) setChildrenWithJavaUtilList:grandKids];
    (void) [kids removeWithInt:[kids size] - 1];
    [t setChildrenWithJavaUtilList:kids];
    [t setValueWithNSString:[((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(self->tlp_)) startSymbol]];
  }
  else {
    [t setValueWithNSString:EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_nonUnaryRoot];
    t = [((id<EduStanfordNlpTreesTreeFactory>) nil_chk(tf)) newTreeNodeWithNSString:[((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(self->tlp_)) startSymbol] withJavaUtilList:JavaUtilCollections_singletonListWithId_(t)];
  }
  return t;
}

void EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_insertNPinPPallWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer *self, EduStanfordNlpTreesTree *t) {
  IOSObjectArray *kids = [((EduStanfordNlpTreesTree *) nil_chk(t)) children];
  {
    IOSObjectArray *a__ = kids;
    EduStanfordNlpTreesTree * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    EduStanfordNlpTreesTree * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      EduStanfordNlpTreesTree *kid = *b__++;
      EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_insertNPinPPallWithEduStanfordNlpTreesTree_(self, kid);
    }
  }
  EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_insertNPinPPWithEduStanfordNlpTreesTree_(self, t);
}

void EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_insertNPinPPWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer *self, EduStanfordNlpTreesTree *t) {
  if ([((NSString *) nil_chk([((id<EduStanfordNlpTreesTreebankLanguagePack>) nil_chk(self->tlp_)) basicCategoryWithNSString:[((id<EduStanfordNlpLingLabel>) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(t)) label])) value]])) isEqual:@"PP"]) {
    IOSObjectArray *kids = [t children];
    jint i = 0;
    jint j = ((IOSObjectArray *) nil_chk(kids))->size_ - 1;
    while (i < j && [((id<JavaUtilSet>) nil_chk(self->prepositionTags_)) containsWithId:[self->tlp_ basicCategoryWithNSString:[((id<EduStanfordNlpLingLabel>) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(IOSObjectArray_Get(kids, i))) label])) value]]]) {
      i++;
    }
    while (i < j && [((id<JavaUtilSet>) nil_chk(self->postpositionTags_)) containsWithId:[self->tlp_ basicCategoryWithNSString:[((id<EduStanfordNlpLingLabel>) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(IOSObjectArray_Get(kids, j))) label])) value]]]) {
      j--;
    }
    if (i > j) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"##### Warning -- no NP material here!"];
      return;
    }
    jint npKidsLength = j - i + 1;
    IOSObjectArray *npKids = [IOSObjectArray newArrayWithLength:npKidsLength type:EduStanfordNlpTreesTree_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(kids, i, npKids, 0, npKidsLength);
    EduStanfordNlpTreesTree *np = [((id<EduStanfordNlpTreesTreeFactory>) nil_chk([t treeFactory])) newTreeNodeWithEduStanfordNlpLingLabel:[((id<EduStanfordNlpLingLabelFactory>) nil_chk([((id<EduStanfordNlpLingLabel>) nil_chk([t label])) labelFactory])) newLabelWithNSString:@"NP"] withJavaUtilList:JavaUtilArrays_asListWithNSObjectArray_(npKids)];
    IOSObjectArray *newPPkids = [IOSObjectArray newArrayWithLength:kids->size_ - npKidsLength + 1 type:EduStanfordNlpTreesTree_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(kids, 0, newPPkids, 0, i + 1);
    (void) IOSObjectArray_Set(newPPkids, i, np);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(kids, j + 1, newPPkids, i + 1, kids->size_ - j - 1);
    [t setChildrenWithEduStanfordNlpTreesTreeArray:newPPkids];
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"#### inserted NP in PP"];
    [t pennPrint];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer)

@implementation EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1

- (jboolean)testWithId:(EduStanfordNlpTreesTree *)t {
  IOSObjectArray *kids = [((EduStanfordNlpTreesTree *) nil_chk(t)) children];
  id<EduStanfordNlpLingLabel> l = [t label];
  if ((l != nil) && [((id<EduStanfordNlpLingLabel>) nil_chk(l)) value] != nil && ([((NSString *) nil_chk([l value])) matches:@"^\\*T.*$"]) && ![t isLeaf] && ((IOSObjectArray *) nil_chk(kids))->size_ == 1 && [((EduStanfordNlpTreesTree *) nil_chk(IOSObjectArray_Get(kids, 0))) isLeaf]) return false;
  return true;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilFunctionPredicate>)and__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_and__WithJavaUtilFunctionPredicate_(self, arg0);
}

- (id<JavaUtilFunctionPredicate>)negate {
  return JavaUtilFunctionPredicate_negate(self);
}

- (id<JavaUtilFunctionPredicate>)or__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_or__WithJavaUtilFunctionPredicate_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "test", "LEduStanfordNlpTreesTree;", "LEduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer;", "initWithEduStanfordNlpTreesTreebankLanguagePack:withInt:", "Ljava/lang/Object;Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/Tree;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1 = { "", "edu.stanford.nlp.trees.international.negra", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, 4, -1 };
  return &_EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1;
}

@end

void EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1_init(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1 *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1 *new_EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1, init)
}

EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1 *create_EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$1, init)
}

@implementation EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2

- (jboolean)testWithId:(EduStanfordNlpTreesTree *)t {
  if ([((EduStanfordNlpTreesTree *) nil_chk(t)) isLeaf] || [t isPreTerminal] || ((IOSObjectArray *) nil_chk([t children]))->size_ != 1) return true;
  if ([t label] != nil && [((id<EduStanfordNlpLingLabel>) nil_chk([t label])) isEqual:[((EduStanfordNlpTreesTree *) nil_chk(IOSObjectArray_Get(nil_chk([t children]), 0))) label]]) return false;
  return true;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilFunctionPredicate>)and__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_and__WithJavaUtilFunctionPredicate_(self, arg0);
}

- (id<JavaUtilFunctionPredicate>)negate {
  return JavaUtilFunctionPredicate_negate(self);
}

- (id<JavaUtilFunctionPredicate>)or__WithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)arg0 {
  return JavaUtilFunctionPredicate_or__WithJavaUtilFunctionPredicate_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(testWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "test", "LEduStanfordNlpTreesTree;", "LEduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer;", "initWithEduStanfordNlpTreesTreebankLanguagePack:withInt:", "Ljava/lang/Object;Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/Tree;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2 = { "", "edu.stanford.nlp.trees.international.negra", ptrTable, methods, fields, 7, 0x8008, 2, 1, 2, -1, 3, 4, -1 };
  return &_EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2;
}

@end

void EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2_init(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2 *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2 *new_EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2, init)
}

EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2 *create_EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesInternationalNegraNegraPennTreeNormalizer_$2, init)
}
