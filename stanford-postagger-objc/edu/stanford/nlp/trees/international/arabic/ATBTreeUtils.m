//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/international/arabic/ATBTreeUtils.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/CoreLabel.h"
#include "edu/stanford/nlp/ling/Sentence.h"
#include "edu/stanford/nlp/trees/LabeledScoredTreeFactory.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeFactory.h"
#include "edu/stanford/nlp/trees/international/arabic/ATBTreeUtils.h"
#include "edu/stanford/nlp/trees/international/arabic/ArabicTreeNormalizer.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "java/util/function/Predicate.h"

@interface EduStanfordNlpTreesInternationalArabicATBTreeUtils ()

- (instancetype)init;

@end

inline id<JavaUtilFunctionPredicate> EduStanfordNlpTreesInternationalArabicATBTreeUtils_get_emptyFilter();
static id<JavaUtilFunctionPredicate> EduStanfordNlpTreesInternationalArabicATBTreeUtils_emptyFilter;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalArabicATBTreeUtils, emptyFilter, id<JavaUtilFunctionPredicate>)

inline id<EduStanfordNlpTreesTreeFactory> EduStanfordNlpTreesInternationalArabicATBTreeUtils_get_tf();
static id<EduStanfordNlpTreesTreeFactory> EduStanfordNlpTreesInternationalArabicATBTreeUtils_tf;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalArabicATBTreeUtils, tf, id<EduStanfordNlpTreesTreeFactory>)

inline NSString *EduStanfordNlpTreesInternationalArabicATBTreeUtils_get_reservedWordList();
static NSString *EduStanfordNlpTreesInternationalArabicATBTreeUtils_reservedWordList = @"-PLUS- -LRB- -RRB-";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalArabicATBTreeUtils, reservedWordList, NSString *)

__attribute__((unused)) static void EduStanfordNlpTreesInternationalArabicATBTreeUtils_init(EduStanfordNlpTreesInternationalArabicATBTreeUtils *self);

__attribute__((unused)) static EduStanfordNlpTreesInternationalArabicATBTreeUtils *new_EduStanfordNlpTreesInternationalArabicATBTreeUtils_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesInternationalArabicATBTreeUtils *create_EduStanfordNlpTreesInternationalArabicATBTreeUtils_init();

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesInternationalArabicATBTreeUtils)

NSString *EduStanfordNlpTreesInternationalArabicATBTreeUtils_segMarker = @"-";
NSString *EduStanfordNlpTreesInternationalArabicATBTreeUtils_morphBoundary = @"+";
NSString *EduStanfordNlpTreesInternationalArabicATBTreeUtils_puncTag = @"PUNC";
id<JavaUtilSet> EduStanfordNlpTreesInternationalArabicATBTreeUtils_reservedWords;

@implementation EduStanfordNlpTreesInternationalArabicATBTreeUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesInternationalArabicATBTreeUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (NSString *)escapeWithNSString:(NSString *)s {
  return EduStanfordNlpTreesInternationalArabicATBTreeUtils_escapeWithNSString_(s);
}

+ (NSString *)unEscapeWithNSString:(NSString *)s {
  return EduStanfordNlpTreesInternationalArabicATBTreeUtils_unEscapeWithNSString_(s);
}

+ (NSString *)flattenTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  return EduStanfordNlpTreesInternationalArabicATBTreeUtils_flattenTreeWithEduStanfordNlpTreesTree_(t);
}

+ (NSString *)taggedStringFromTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                                  withBoolean:(jboolean)removeEscaping
                                                 withNSString:(NSString *)separator {
  return EduStanfordNlpTreesInternationalArabicATBTreeUtils_taggedStringFromTreeWithEduStanfordNlpTreesTree_withBoolean_withNSString_(t, removeEscaping, separator);
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduStanfordNlpTreesInternationalArabicATBTreeUtils_mainWithNSStringArray_(args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(escapeWithNSString:);
  methods[2].selector = @selector(unEscapeWithNSString:);
  methods[3].selector = @selector(flattenTreeWithEduStanfordNlpTreesTree:);
  methods[4].selector = @selector(taggedStringFromTreeWithEduStanfordNlpTreesTree:withBoolean:withNSString:);
  methods[5].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "emptyFilter", "LJavaUtilFunctionPredicate;", .constantValue.asLong = 0, 0x1a, -1, 9, 10, -1 },
    { "tf", "LEduStanfordNlpTreesTreeFactory;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "segMarker", "LNSString;", .constantValue.asLong = 0, 0x9, -1, 12, -1, -1 },
    { "morphBoundary", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "puncTag", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
    { "reservedWordList", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 15, -1, -1 },
    { "reservedWords", "LJavaUtilSet;", .constantValue.asLong = 0, 0x19, -1, 16, 17, -1 },
  };
  static const void *ptrTable[] = { "escape", "LNSString;", "unEscape", "flattenTree", "LEduStanfordNlpTreesTree;", "taggedStringFromTree", "LEduStanfordNlpTreesTree;ZLNSString;", "main", "[LNSString;", &EduStanfordNlpTreesInternationalArabicATBTreeUtils_emptyFilter, "Ljava/util/function/Predicate<Ledu/stanford/nlp/trees/Tree;>;", &EduStanfordNlpTreesInternationalArabicATBTreeUtils_tf, &EduStanfordNlpTreesInternationalArabicATBTreeUtils_segMarker, &EduStanfordNlpTreesInternationalArabicATBTreeUtils_morphBoundary, &EduStanfordNlpTreesInternationalArabicATBTreeUtils_puncTag, &EduStanfordNlpTreesInternationalArabicATBTreeUtils_reservedWordList, &EduStanfordNlpTreesInternationalArabicATBTreeUtils_reservedWords, "Ljava/util/Set<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesInternationalArabicATBTreeUtils = { "ATBTreeUtils", "edu.stanford.nlp.trees.international.arabic", ptrTable, methods, fields, 7, 0x1, 6, 7, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesInternationalArabicATBTreeUtils;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesInternationalArabicATBTreeUtils class]) {
    EduStanfordNlpTreesInternationalArabicATBTreeUtils_emptyFilter = new_EduStanfordNlpTreesInternationalArabicArabicTreeNormalizer_ArabicEmptyFilter_init();
    EduStanfordNlpTreesInternationalArabicATBTreeUtils_tf = new_EduStanfordNlpTreesLabeledScoredTreeFactory_init();
    EduStanfordNlpTreesInternationalArabicATBTreeUtils_reservedWords = EduStanfordNlpUtilGenerics_newHashSet();
    {
      [((id<JavaUtilSet>) nil_chk(EduStanfordNlpTreesInternationalArabicATBTreeUtils_reservedWords)) addAllWithJavaUtilCollection:JavaUtilArrays_asListWithNSObjectArray_([((NSString *) nil_chk(EduStanfordNlpTreesInternationalArabicATBTreeUtils_reservedWordList)) split:@"\\s+"])];
    }
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesInternationalArabicATBTreeUtils)
  }
}

@end

void EduStanfordNlpTreesInternationalArabicATBTreeUtils_init(EduStanfordNlpTreesInternationalArabicATBTreeUtils *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesInternationalArabicATBTreeUtils *new_EduStanfordNlpTreesInternationalArabicATBTreeUtils_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesInternationalArabicATBTreeUtils, init)
}

EduStanfordNlpTreesInternationalArabicATBTreeUtils *create_EduStanfordNlpTreesInternationalArabicATBTreeUtils_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesInternationalArabicATBTreeUtils, init)
}

NSString *EduStanfordNlpTreesInternationalArabicATBTreeUtils_escapeWithNSString_(NSString *s) {
  EduStanfordNlpTreesInternationalArabicATBTreeUtils_initialize();
  if (s == nil) return nil;
  s = [s replaceAll:@"\\(" withReplacement:@"-LRB-"];
  s = [((NSString *) nil_chk(s)) replaceAll:@"\\)" withReplacement:@"-RRB-"];
  s = [((NSString *) nil_chk(s)) replaceAll:@"\\+" withReplacement:@"-PLUS-"];
  return s;
}

NSString *EduStanfordNlpTreesInternationalArabicATBTreeUtils_unEscapeWithNSString_(NSString *s) {
  EduStanfordNlpTreesInternationalArabicATBTreeUtils_initialize();
  if (s == nil) return nil;
  s = [s replaceAll:@"-LRB-" withReplacement:@"("];
  s = [((NSString *) nil_chk(s)) replaceAll:@"-RRB-" withReplacement:@")"];
  s = [((NSString *) nil_chk(s)) replaceAll:@"-PLUS-" withReplacement:@"+"];
  return s;
}

NSString *EduStanfordNlpTreesInternationalArabicATBTreeUtils_flattenTreeWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t) {
  EduStanfordNlpTreesInternationalArabicATBTreeUtils_initialize();
  t = [((EduStanfordNlpTreesTree *) nil_chk(t)) pruneWithJavaUtilFunctionPredicate:EduStanfordNlpTreesInternationalArabicATBTreeUtils_emptyFilter withEduStanfordNlpTreesTreeFactory:EduStanfordNlpTreesInternationalArabicATBTreeUtils_tf];
  NSString *flatString = EduStanfordNlpLingSentence_listToStringWithJavaUtilList_([((EduStanfordNlpTreesTree *) nil_chk(t)) yield]);
  return flatString;
}

NSString *EduStanfordNlpTreesInternationalArabicATBTreeUtils_taggedStringFromTreeWithEduStanfordNlpTreesTree_withBoolean_withNSString_(EduStanfordNlpTreesTree *t, jboolean removeEscaping, NSString *separator) {
  EduStanfordNlpTreesInternationalArabicATBTreeUtils_initialize();
  t = [((EduStanfordNlpTreesTree *) nil_chk(t)) pruneWithJavaUtilFunctionPredicate:EduStanfordNlpTreesInternationalArabicATBTreeUtils_emptyFilter withEduStanfordNlpTreesTreeFactory:EduStanfordNlpTreesInternationalArabicATBTreeUtils_tf];
  id<JavaUtilList> taggedSentence = [((EduStanfordNlpTreesTree *) nil_chk(t)) taggedLabeledYield];
  for (EduStanfordNlpLingCoreLabel * __strong token in nil_chk(taggedSentence)) {
    NSString *word = (removeEscaping) ? EduStanfordNlpTreesInternationalArabicATBTreeUtils_unEscapeWithNSString_([((EduStanfordNlpLingCoreLabel *) nil_chk(token)) word]) : [((EduStanfordNlpLingCoreLabel *) nil_chk(token)) word];
    [token setWordWithNSString:word];
    [token setValueWithNSString:word];
  }
  return EduStanfordNlpLingSentence_listToStringWithJavaUtilList_withBoolean_withNSString_(taggedSentence, false, separator);
}

void EduStanfordNlpTreesInternationalArabicATBTreeUtils_mainWithNSStringArray_(IOSObjectArray *args) {
  EduStanfordNlpTreesInternationalArabicATBTreeUtils_initialize();
  NSString *debug = @"( the big lion ) + (the small rabbit)";
  NSString *escaped = EduStanfordNlpTreesInternationalArabicATBTreeUtils_escapeWithNSString_(debug);
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:escaped];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesInternationalArabicATBTreeUtils)
