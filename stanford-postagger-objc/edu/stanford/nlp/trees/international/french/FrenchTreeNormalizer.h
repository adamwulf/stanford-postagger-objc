//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/international/french/FrenchTreeNormalizer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer")
#ifdef RESTRICT_EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer
#define INCLUDE_ALL_EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer 0
#else
#define INCLUDE_ALL_EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer 1
#endif
#undef RESTRICT_EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer

#if !defined (EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer_) && (INCLUDE_ALL_EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer || defined(INCLUDE_EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer))
#define EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer_

#define RESTRICT_EduStanfordNlpTreesBobChrisTreeNormalizer 1
#define INCLUDE_EduStanfordNlpTreesBobChrisTreeNormalizer 1
#include "edu/stanford/nlp/trees/BobChrisTreeNormalizer.h"

@class EduStanfordNlpTreesTree;
@protocol EduStanfordNlpTreesTreeFactory;

@interface EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer : EduStanfordNlpTreesBobChrisTreeNormalizer

#pragma mark Public

- (instancetype)initWithBoolean:(jboolean)ccTagset;

- (NSString *)normalizeNonterminalWithNSString:(NSString *)category;

- (NSString *)normalizeTerminalWithNSString:(NSString *)terminal;

- (EduStanfordNlpTreesTree *)normalizeWholeTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                                        withEduStanfordNlpTreesTreeFactory:(id<EduStanfordNlpTreesTreeFactory>)tf;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer)

FOUNDATION_EXPORT void EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer_initWithBoolean_(EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer *self, jboolean ccTagset);

FOUNDATION_EXPORT EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer *new_EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer_initWithBoolean_(jboolean ccTagset) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer *create_EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer_initWithBoolean_(jboolean ccTagset);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer)

#endif

#if !defined (EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer_FrenchAOverAFilter_) && (INCLUDE_ALL_EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer || defined(INCLUDE_EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer_FrenchAOverAFilter))
#define EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer_FrenchAOverAFilter_

#define RESTRICT_JavaUtilFunctionPredicate 1
#define INCLUDE_JavaUtilFunctionPredicate 1
#include "java/util/function/Predicate.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class EduStanfordNlpTreesTree;

@interface EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer_FrenchAOverAFilter : NSObject < JavaUtilFunctionPredicate, JavaIoSerializable >

#pragma mark Public

- (instancetype)init;

- (jboolean)testWithId:(EduStanfordNlpTreesTree *)t;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer_FrenchAOverAFilter)

FOUNDATION_EXPORT void EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer_FrenchAOverAFilter_init(EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer_FrenchAOverAFilter *self);

FOUNDATION_EXPORT EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer_FrenchAOverAFilter *new_EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer_FrenchAOverAFilter_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer_FrenchAOverAFilter *create_EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer_FrenchAOverAFilter_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer_FrenchAOverAFilter)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpTreesInternationalFrenchFrenchTreeNormalizer")
