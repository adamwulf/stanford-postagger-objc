//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/international/pennchinese/FragDiscardingPennTreeReader.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/process/Tokenizer.h"
#include "edu/stanford/nlp/trees/PennTreeReader.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeFactory.h"
#include "edu/stanford/nlp/trees/TreeNormalizer.h"
#include "edu/stanford/nlp/trees/international/pennchinese/FragDiscardingPennTreeReader.h"
#include "java/io/Reader.h"

@implementation EduStanfordNlpTreesInternationalPennchineseFragDiscardingPennTreeReader

- (instancetype)initWithJavaIoReader:(JavaIoReader *)inArg
  withEduStanfordNlpTreesTreeFactory:(id<EduStanfordNlpTreesTreeFactory>)tf
withEduStanfordNlpTreesTreeNormalizer:(EduStanfordNlpTreesTreeNormalizer *)tn
  withEduStanfordNlpProcessTokenizer:(id<EduStanfordNlpProcessTokenizer>)tk {
  EduStanfordNlpTreesInternationalPennchineseFragDiscardingPennTreeReader_initWithJavaIoReader_withEduStanfordNlpTreesTreeFactory_withEduStanfordNlpTreesTreeNormalizer_withEduStanfordNlpProcessTokenizer_(self, inArg, tf, tn, tk);
  return self;
}

- (EduStanfordNlpTreesTree *)readTree {
  EduStanfordNlpTreesTree *tr = [super readTree];
  while (tr != nil && [((NSString *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk([tr firstChild])) value])) isEqual:@"FRAG"]) {
    tr = [super readTree];
  }
  return tr;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaIoReader:withEduStanfordNlpTreesTreeFactory:withEduStanfordNlpTreesTreeNormalizer:withEduStanfordNlpProcessTokenizer:);
  methods[1].selector = @selector(readTree);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaIoReader;LEduStanfordNlpTreesTreeFactory;LEduStanfordNlpTreesTreeNormalizer;LEduStanfordNlpProcessTokenizer;", "(Ljava/io/Reader;Ledu/stanford/nlp/trees/TreeFactory;Ledu/stanford/nlp/trees/TreeNormalizer;Ledu/stanford/nlp/process/Tokenizer<Ljava/lang/String;>;)V", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesInternationalPennchineseFragDiscardingPennTreeReader = { "FragDiscardingPennTreeReader", "edu.stanford.nlp.trees.international.pennchinese", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesInternationalPennchineseFragDiscardingPennTreeReader;
}

@end

void EduStanfordNlpTreesInternationalPennchineseFragDiscardingPennTreeReader_initWithJavaIoReader_withEduStanfordNlpTreesTreeFactory_withEduStanfordNlpTreesTreeNormalizer_withEduStanfordNlpProcessTokenizer_(EduStanfordNlpTreesInternationalPennchineseFragDiscardingPennTreeReader *self, JavaIoReader *inArg, id<EduStanfordNlpTreesTreeFactory> tf, EduStanfordNlpTreesTreeNormalizer *tn, id<EduStanfordNlpProcessTokenizer> tk) {
  EduStanfordNlpTreesPennTreeReader_initWithJavaIoReader_withEduStanfordNlpTreesTreeFactory_withEduStanfordNlpTreesTreeNormalizer_withEduStanfordNlpProcessTokenizer_(self, inArg, tf, tn, tk);
}

EduStanfordNlpTreesInternationalPennchineseFragDiscardingPennTreeReader *new_EduStanfordNlpTreesInternationalPennchineseFragDiscardingPennTreeReader_initWithJavaIoReader_withEduStanfordNlpTreesTreeFactory_withEduStanfordNlpTreesTreeNormalizer_withEduStanfordNlpProcessTokenizer_(JavaIoReader *inArg, id<EduStanfordNlpTreesTreeFactory> tf, EduStanfordNlpTreesTreeNormalizer *tn, id<EduStanfordNlpProcessTokenizer> tk) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesInternationalPennchineseFragDiscardingPennTreeReader, initWithJavaIoReader_withEduStanfordNlpTreesTreeFactory_withEduStanfordNlpTreesTreeNormalizer_withEduStanfordNlpProcessTokenizer_, inArg, tf, tn, tk)
}

EduStanfordNlpTreesInternationalPennchineseFragDiscardingPennTreeReader *create_EduStanfordNlpTreesInternationalPennchineseFragDiscardingPennTreeReader_initWithJavaIoReader_withEduStanfordNlpTreesTreeFactory_withEduStanfordNlpTreesTreeNormalizer_withEduStanfordNlpProcessTokenizer_(JavaIoReader *inArg, id<EduStanfordNlpTreesTreeFactory> tf, EduStanfordNlpTreesTreeNormalizer *tn, id<EduStanfordNlpProcessTokenizer> tk) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesInternationalPennchineseFragDiscardingPennTreeReader, initWithJavaIoReader_withEduStanfordNlpTreesTreeFactory_withEduStanfordNlpTreesTreeNormalizer_withEduStanfordNlpProcessTokenizer_, inArg, tf, tn, tk)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesInternationalPennchineseFragDiscardingPennTreeReader)
