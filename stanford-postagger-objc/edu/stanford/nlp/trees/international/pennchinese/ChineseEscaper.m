//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/international/pennchinese/ChineseEscaper.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/HasWord.h"
#include "edu/stanford/nlp/trees/international/pennchinese/ChineseEscaper.h"
#include "edu/stanford/nlp/util/UTF8EquivalenceFunction.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/function/Function.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

inline JavaUtilRegexPattern *EduStanfordNlpTreesInternationalPennchineseChineseEscaper_get_p2();
static JavaUtilRegexPattern *EduStanfordNlpTreesInternationalPennchineseChineseEscaper_p2;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesInternationalPennchineseChineseEscaper, p2, JavaUtilRegexPattern *)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesInternationalPennchineseChineseEscaper)

@implementation EduStanfordNlpTreesInternationalPennchineseChineseEscaper

- (id<JavaUtilList>)applyWithId:(id<JavaUtilList>)arg {
  id<JavaUtilList> ans = new_JavaUtilArrayList_initWithJavaUtilCollection_(arg);
  for (id<EduStanfordNlpLingHasWord> __strong wd in ans) {
    NSString *w = [((id<EduStanfordNlpLingHasWord>) nil_chk(wd)) word];
    JavaUtilRegexMatcher *m2 = [((JavaUtilRegexPattern *) nil_chk(EduStanfordNlpTreesInternationalPennchineseChineseEscaper_p2)) matcherWithJavaLangCharSequence:w];
    if ([((JavaUtilRegexMatcher *) nil_chk(m2)) find]) {
      w = [m2 replaceAllWithNSString:@"$1"];
    }
    NSString *newW = EduStanfordNlpUtilUTF8EquivalenceFunction_replaceAsciiWithNSString_(w);
    [wd setWordWithNSString:newW];
  }
  return ans;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesInternationalPennchineseChineseEscaper_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilList;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(applyWithId:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "p2", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "apply", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/ling/HasWord;>;)Ljava/util/List<Ledu/stanford/nlp/ling/HasWord;>;", &EduStanfordNlpTreesInternationalPennchineseChineseEscaper_p2, "Ljava/lang/Object;Ljava/util/function/Function<Ljava/util/List<Ledu/stanford/nlp/ling/HasWord;>;Ljava/util/List<Ledu/stanford/nlp/ling/HasWord;>;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesInternationalPennchineseChineseEscaper = { "ChineseEscaper", "edu.stanford.nlp.trees.international.pennchinese", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, 4, -1 };
  return &_EduStanfordNlpTreesInternationalPennchineseChineseEscaper;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesInternationalPennchineseChineseEscaper class]) {
    EduStanfordNlpTreesInternationalPennchineseChineseEscaper_p2 = JavaUtilRegexPattern_compileWithNSString_(@"\\$[a-z]+_\\((.*?)\\|\\|.*?\\)");
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesInternationalPennchineseChineseEscaper)
  }
}

@end

void EduStanfordNlpTreesInternationalPennchineseChineseEscaper_init(EduStanfordNlpTreesInternationalPennchineseChineseEscaper *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesInternationalPennchineseChineseEscaper *new_EduStanfordNlpTreesInternationalPennchineseChineseEscaper_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesInternationalPennchineseChineseEscaper, init)
}

EduStanfordNlpTreesInternationalPennchineseChineseEscaper *create_EduStanfordNlpTreesInternationalPennchineseChineseEscaper_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesInternationalPennchineseChineseEscaper, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesInternationalPennchineseChineseEscaper)
