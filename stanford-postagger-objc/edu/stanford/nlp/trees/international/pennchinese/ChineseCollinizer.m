//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/international/pennchinese/ChineseCollinizer.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/ling/StringLabel.h"
#include "edu/stanford/nlp/trees/LabeledScoredTreeFactory.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeFactory.h"
#include "edu/stanford/nlp/trees/international/pennchinese/ChineseCollinizer.h"
#include "edu/stanford/nlp/trees/international/pennchinese/ChineseTreebankLanguagePack.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface EduStanfordNlpTreesInternationalPennchineseChineseCollinizer () {
 @public
  jboolean deletePunct_;
}

- (EduStanfordNlpTreesTree *)transformTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                                                          withBoolean:(jboolean)isRoot;

@end

inline jboolean EduStanfordNlpTreesInternationalPennchineseChineseCollinizer_get_VERBOSE();
#define EduStanfordNlpTreesInternationalPennchineseChineseCollinizer_VERBOSE false
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTreesInternationalPennchineseChineseCollinizer, VERBOSE, jboolean)

__attribute__((unused)) static EduStanfordNlpTreesTree *EduStanfordNlpTreesInternationalPennchineseChineseCollinizer_transformTreeWithEduStanfordNlpTreesTree_withBoolean_(EduStanfordNlpTreesInternationalPennchineseChineseCollinizer *self, EduStanfordNlpTreesTree *tree, jboolean isRoot);

@implementation EduStanfordNlpTreesInternationalPennchineseChineseCollinizer

- (instancetype)initWithEduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack:(EduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack *)ctlp {
  EduStanfordNlpTreesInternationalPennchineseChineseCollinizer_initWithEduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack_(self, ctlp);
  return self;
}

- (instancetype)initWithEduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack:(EduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack *)ctlp
                                                                                   withBoolean:(jboolean)deletePunct {
  EduStanfordNlpTreesInternationalPennchineseChineseCollinizer_initWithEduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack_withBoolean_(self, ctlp, deletePunct);
  return self;
}

- (EduStanfordNlpTreesTree *)transformTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree {
  return EduStanfordNlpTreesInternationalPennchineseChineseCollinizer_transformTreeWithEduStanfordNlpTreesTree_withBoolean_(self, tree, true);
}

- (EduStanfordNlpTreesTree *)transformTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                                                          withBoolean:(jboolean)isRoot {
  return EduStanfordNlpTreesInternationalPennchineseChineseCollinizer_transformTreeWithEduStanfordNlpTreesTree_withBoolean_(self, tree, isRoot);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x2, 2, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack:);
  methods[1].selector = @selector(initWithEduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack:withBoolean:);
  methods[2].selector = @selector(transformTreeWithEduStanfordNlpTreesTree:);
  methods[3].selector = @selector(transformTreeWithEduStanfordNlpTreesTree:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "VERBOSE", "Z", .constantValue.asBOOL = EduStanfordNlpTreesInternationalPennchineseChineseCollinizer_VERBOSE, 0x1a, -1, -1, -1, -1 },
    { "deletePunct_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "ctlp_", "LEduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "tf_", "LEduStanfordNlpTreesTreeFactory;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack;", "LEduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack;Z", "transformTree", "LEduStanfordNlpTreesTree;", "LEduStanfordNlpTreesTree;Z" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesInternationalPennchineseChineseCollinizer = { "ChineseCollinizer", "edu.stanford.nlp.trees.international.pennchinese", ptrTable, methods, fields, 7, 0x1, 4, 4, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesInternationalPennchineseChineseCollinizer;
}

@end

void EduStanfordNlpTreesInternationalPennchineseChineseCollinizer_initWithEduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack_(EduStanfordNlpTreesInternationalPennchineseChineseCollinizer *self, EduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack *ctlp) {
  EduStanfordNlpTreesInternationalPennchineseChineseCollinizer_initWithEduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack_withBoolean_(self, ctlp, true);
}

EduStanfordNlpTreesInternationalPennchineseChineseCollinizer *new_EduStanfordNlpTreesInternationalPennchineseChineseCollinizer_initWithEduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack_(EduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack *ctlp) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesInternationalPennchineseChineseCollinizer, initWithEduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack_, ctlp)
}

EduStanfordNlpTreesInternationalPennchineseChineseCollinizer *create_EduStanfordNlpTreesInternationalPennchineseChineseCollinizer_initWithEduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack_(EduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack *ctlp) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesInternationalPennchineseChineseCollinizer, initWithEduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack_, ctlp)
}

void EduStanfordNlpTreesInternationalPennchineseChineseCollinizer_initWithEduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack_withBoolean_(EduStanfordNlpTreesInternationalPennchineseChineseCollinizer *self, EduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack *ctlp, jboolean deletePunct) {
  NSObject_init(self);
  self->tf_ = new_EduStanfordNlpTreesLabeledScoredTreeFactory_init();
  self->deletePunct_ = deletePunct;
  self->ctlp_ = ctlp;
}

EduStanfordNlpTreesInternationalPennchineseChineseCollinizer *new_EduStanfordNlpTreesInternationalPennchineseChineseCollinizer_initWithEduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack_withBoolean_(EduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack *ctlp, jboolean deletePunct) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesInternationalPennchineseChineseCollinizer, initWithEduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack_withBoolean_, ctlp, deletePunct)
}

EduStanfordNlpTreesInternationalPennchineseChineseCollinizer *create_EduStanfordNlpTreesInternationalPennchineseChineseCollinizer_initWithEduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack_withBoolean_(EduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack *ctlp, jboolean deletePunct) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesInternationalPennchineseChineseCollinizer, initWithEduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack_withBoolean_, ctlp, deletePunct)
}

EduStanfordNlpTreesTree *EduStanfordNlpTreesInternationalPennchineseChineseCollinizer_transformTreeWithEduStanfordNlpTreesTree_withBoolean_(EduStanfordNlpTreesInternationalPennchineseChineseCollinizer *self, EduStanfordNlpTreesTree *tree, jboolean isRoot) {
  NSString *label = [((id<EduStanfordNlpLingLabel>) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(tree)) label])) value];
  if ([tree isLeaf]) {
    if (self->deletePunct_ && [((EduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack *) nil_chk(self->ctlp_)) isPunctuationWordWithNSString:label]) {
      return nil;
    }
    else {
      return [((id<EduStanfordNlpTreesTreeFactory>) nil_chk(self->tf_)) newLeafWithEduStanfordNlpLingLabel:new_EduStanfordNlpLingStringLabel_initWithNSString_(label)];
    }
  }
  if ([tree isPreTerminal] && self->deletePunct_ && [((EduStanfordNlpTreesInternationalPennchineseChineseTreebankLanguagePack *) nil_chk(self->ctlp_)) isPunctuationTagWithNSString:label]) {
    return nil;
  }
  id<JavaUtilList> children = new_JavaUtilArrayList_init();
  if ([((NSString *) nil_chk(label)) matches:@"ROOT.*"] && [tree numChildren] == 1) {
    return EduStanfordNlpTreesInternationalPennchineseChineseCollinizer_transformTreeWithEduStanfordNlpTreesTree_withBoolean_(self, IOSObjectArray_Get(nil_chk([tree children]), 0), true);
  }
  label = [label replaceFirst:@"[^A-Z].*$" withReplacement:@""];
  label = [((NSString *) nil_chk(label)) replaceFirst:@"PRN" withReplacement:@"ADVP"];
  for (jint cNum = 0; cNum < ((IOSObjectArray *) nil_chk([tree children]))->size_; cNum++) {
    EduStanfordNlpTreesTree *child = IOSObjectArray_Get(nil_chk([tree children]), cNum);
    EduStanfordNlpTreesTree *newChild = EduStanfordNlpTreesInternationalPennchineseChineseCollinizer_transformTreeWithEduStanfordNlpTreesTree_withBoolean_(self, child, false);
    if (newChild != nil) {
      [children addWithId:newChild];
    }
  }
  if ([children isEmpty] && !isRoot) {
    return nil;
  }
  return [((id<EduStanfordNlpTreesTreeFactory>) nil_chk(self->tf_)) newTreeNodeWithEduStanfordNlpLingLabel:new_EduStanfordNlpLingStringLabel_initWithNSString_(label) withJavaUtilList:children];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesInternationalPennchineseChineseCollinizer)
