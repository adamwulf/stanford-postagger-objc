//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/international/pennchinese/ChineseEnglishWordMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap")
#ifdef RESTRICT_EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap
#define INCLUDE_ALL_EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap 0
#else
#define INCLUDE_ALL_EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap 1
#endif
#undef RESTRICT_EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap

#if !defined (EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap_) && (INCLUDE_ALL_EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap || defined(INCLUDE_EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap))
#define EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSObjectArray;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap : NSObject < JavaIoSerializable >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)dictPath;

- (instancetype)initWithNSString:(NSString *)dictPath
                     withBoolean:(jboolean)normalized;

- (instancetype)initWithNSString:(NSString *)dictPath
                    withNSString:(NSString *)pattern
                    withNSString:(NSString *)delimiter
                    withNSString:(NSString *)charset;

- (instancetype)initWithNSString:(NSString *)dictPath
                    withNSString:(NSString *)pattern
                    withNSString:(NSString *)delimiter
                    withNSString:(NSString *)charset
                     withBoolean:(jboolean)normalized;

- (jint)addMapWithJavaUtilMap:(id<JavaUtilMap>)addM;

- (jboolean)containsKeyWithNSString:(NSString *)key;

- (id<JavaUtilSet>)getAllTranslationsWithNSString:(NSString *)key;

- (NSString *)getFirstTranslationWithNSString:(NSString *)key;

+ (EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap *)getInstance;

- (id<JavaUtilMap>)getReverseMap;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (void)readCEDictWithNSString:(NSString *)dictPath;

- (void)readCEDictWithNSString:(NSString *)dictPath
                  withNSString:(NSString *)pattern
                  withNSString:(NSString *)delimiter
                  withNSString:(NSString *)charset;

- (jint)size;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap)

FOUNDATION_EXPORT EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap *EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap_getInstance();

FOUNDATION_EXPORT void EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap_init(EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap *self);

FOUNDATION_EXPORT EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap *new_EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap *create_EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap_init();

FOUNDATION_EXPORT void EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap_initWithNSString_(EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap *self, NSString *dictPath);

FOUNDATION_EXPORT EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap *new_EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap_initWithNSString_(NSString *dictPath) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap *create_EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap_initWithNSString_(NSString *dictPath);

FOUNDATION_EXPORT void EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap_initWithNSString_withBoolean_(EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap *self, NSString *dictPath, jboolean normalized);

FOUNDATION_EXPORT EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap *new_EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap_initWithNSString_withBoolean_(NSString *dictPath, jboolean normalized) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap *create_EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap_initWithNSString_withBoolean_(NSString *dictPath, jboolean normalized);

FOUNDATION_EXPORT void EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap_initWithNSString_withNSString_withNSString_withNSString_(EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap *self, NSString *dictPath, NSString *pattern, NSString *delimiter, NSString *charset);

FOUNDATION_EXPORT EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap *new_EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap_initWithNSString_withNSString_withNSString_withNSString_(NSString *dictPath, NSString *pattern, NSString *delimiter, NSString *charset) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap *create_EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap_initWithNSString_withNSString_withNSString_withNSString_(NSString *dictPath, NSString *pattern, NSString *delimiter, NSString *charset);

FOUNDATION_EXPORT void EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap_initWithNSString_withNSString_withNSString_withNSString_withBoolean_(EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap *self, NSString *dictPath, NSString *pattern, NSString *delimiter, NSString *charset, jboolean normalized);

FOUNDATION_EXPORT EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap *new_EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap_initWithNSString_withNSString_withNSString_withNSString_withBoolean_(NSString *dictPath, NSString *pattern, NSString *delimiter, NSString *charset, jboolean normalized) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap *create_EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap_initWithNSString_withNSString_withNSString_withNSString_withBoolean_(NSString *dictPath, NSString *pattern, NSString *delimiter, NSString *charset, jboolean normalized);

FOUNDATION_EXPORT void EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpTreesInternationalPennchineseChineseEnglishWordMap")
