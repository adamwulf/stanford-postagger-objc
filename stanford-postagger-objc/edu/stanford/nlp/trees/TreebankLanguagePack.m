//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/TreebankLanguagePack.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/trees/TreebankLanguagePack.h"

@interface EduStanfordNlpTreesTreebankLanguagePack : NSObject

@end

NSString *EduStanfordNlpTreesTreebankLanguagePack_DEFAULT_ENCODING = @"UTF-8";

@implementation EduStanfordNlpTreesTreebankLanguagePack

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 2, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 3, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 4, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilFunctionPredicate;", 0x401, -1, -1, -1, 5, -1, -1 },
    { NULL, "LJavaUtilFunctionPredicate;", 0x401, -1, -1, -1, 5, -1, -1 },
    { NULL, "LJavaUtilFunctionPredicate;", 0x401, -1, -1, -1, 5, -1, -1 },
    { NULL, "LJavaUtilFunctionPredicate;", 0x401, -1, -1, -1, 5, -1, -1 },
    { NULL, "LJavaUtilFunctionPredicate;", 0x401, -1, -1, -1, 5, -1, -1 },
    { NULL, "LJavaUtilFunctionPredicate;", 0x401, -1, -1, -1, 5, -1, -1 },
    { NULL, "LJavaUtilFunctionPredicate;", 0x401, -1, -1, -1, 5, -1, -1 },
    { NULL, "[LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesGrammaticalStructureFactory;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesGrammaticalStructureFactory;", 0x401, 6, 7, -1, 8, -1, -1 },
    { NULL, "LEduStanfordNlpTreesGrammaticalStructureFactory;", 0x401, 6, 9, -1, 10, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpProcessTokenizerFactory;", 0x401, -1, -1, -1, 11, -1, -1 },
    { NULL, "[C", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 12, 13, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 14, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 15, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilFunctionFunction;", 0x401, -1, -1, -1, 16, -1, -1 },
    { NULL, "LNSString;", 0x401, 17, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilFunctionFunction;", 0x401, -1, -1, -1, 16, -1, -1 },
    { NULL, "Z", 0x401, 18, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilFunctionPredicate;", 0x401, -1, -1, -1, 5, -1, -1 },
    { NULL, "[LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 19, 13, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTreeReaderFactory;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpProcessTokenizerFactory;", 0x401, -1, -1, -1, 20, -1, -1 },
    { NULL, "LEduStanfordNlpTreesHeadFinder;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesHeadFinder;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpInternationalMorphMorphoFeatureSpecification;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 21, 22, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(isPunctuationTagWithNSString:);
  methods[1].selector = @selector(isPunctuationWordWithNSString:);
  methods[2].selector = @selector(isSentenceFinalPunctuationTagWithNSString:);
  methods[3].selector = @selector(isEvalBIgnoredPunctuationTagWithNSString:);
  methods[4].selector = @selector(punctuationTagAcceptFilter);
  methods[5].selector = @selector(punctuationTagRejectFilter);
  methods[6].selector = @selector(punctuationWordAcceptFilter);
  methods[7].selector = @selector(punctuationWordRejectFilter);
  methods[8].selector = @selector(sentenceFinalPunctuationTagAcceptFilter);
  methods[9].selector = @selector(evalBIgnoredPunctuationTagAcceptFilter);
  methods[10].selector = @selector(evalBIgnoredPunctuationTagRejectFilter);
  methods[11].selector = @selector(punctuationTags);
  methods[12].selector = @selector(punctuationWords);
  methods[13].selector = @selector(sentenceFinalPunctuationTags);
  methods[14].selector = @selector(sentenceFinalPunctuationWords);
  methods[15].selector = @selector(evalBIgnoredPunctuationTags);
  methods[16].selector = @selector(grammaticalStructureFactory);
  methods[17].selector = @selector(grammaticalStructureFactoryWithJavaUtilFunctionPredicate:);
  methods[18].selector = @selector(grammaticalStructureFactoryWithJavaUtilFunctionPredicate:withEduStanfordNlpTreesHeadFinder:);
  methods[19].selector = @selector(supportsGrammaticalStructures);
  methods[20].selector = @selector(getEncoding);
  methods[21].selector = @selector(getTokenizerFactory);
  methods[22].selector = @selector(labelAnnotationIntroducingCharacters);
  methods[23].selector = @selector(isLabelAnnotationIntroducingCharacterWithChar:);
  methods[24].selector = @selector(basicCategoryWithNSString:);
  methods[25].selector = @selector(stripGFWithNSString:);
  methods[26].selector = @selector(getBasicCategoryFunction);
  methods[27].selector = @selector(categoryAndFunctionWithNSString:);
  methods[28].selector = @selector(getCategoryAndFunctionFunction);
  methods[29].selector = @selector(isStartSymbolWithNSString:);
  methods[30].selector = @selector(startSymbolAcceptFilter);
  methods[31].selector = @selector(startSymbols);
  methods[32].selector = @selector(startSymbol);
  methods[33].selector = @selector(treebankFileExtension);
  methods[34].selector = @selector(setGfCharacterWithChar:);
  methods[35].selector = @selector(treeReaderFactory);
  methods[36].selector = @selector(treeTokenizerFactory);
  methods[37].selector = @selector(headFinder);
  methods[38].selector = @selector(typedDependencyHeadFinder);
  methods[39].selector = @selector(morphFeatureSpec);
  methods[40].selector = @selector(setGenerateOriginalDependenciesWithBoolean:);
  methods[41].selector = @selector(generateOriginalDependencies);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_ENCODING", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 23, -1, -1 },
  };
  static const void *ptrTable[] = { "isPunctuationTag", "LNSString;", "isPunctuationWord", "isSentenceFinalPunctuationTag", "isEvalBIgnoredPunctuationTag", "()Ljava/util/function/Predicate<Ljava/lang/String;>;", "grammaticalStructureFactory", "LJavaUtilFunctionPredicate;", "(Ljava/util/function/Predicate<Ljava/lang/String;>;)Ledu/stanford/nlp/trees/GrammaticalStructureFactory;", "LJavaUtilFunctionPredicate;LEduStanfordNlpTreesHeadFinder;", "(Ljava/util/function/Predicate<Ljava/lang/String;>;Ledu/stanford/nlp/trees/HeadFinder;)Ledu/stanford/nlp/trees/GrammaticalStructureFactory;", "()Ledu/stanford/nlp/process/TokenizerFactory<+Ledu/stanford/nlp/ling/HasWord;>;", "isLabelAnnotationIntroducingCharacter", "C", "basicCategory", "stripGF", "()Ljava/util/function/Function<Ljava/lang/String;Ljava/lang/String;>;", "categoryAndFunction", "isStartSymbol", "setGfCharacter", "()Ledu/stanford/nlp/process/TokenizerFactory<Ledu/stanford/nlp/trees/Tree;>;", "setGenerateOriginalDependencies", "Z", &EduStanfordNlpTreesTreebankLanguagePack_DEFAULT_ENCODING };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTreebankLanguagePack = { "TreebankLanguagePack", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0x609, 42, 1, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesTreebankLanguagePack;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTreebankLanguagePack)
