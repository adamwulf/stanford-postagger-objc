//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/AbstractTreebankLanguagePack.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpTreesAbstractTreebankLanguagePack")
#ifdef RESTRICT_EduStanfordNlpTreesAbstractTreebankLanguagePack
#define INCLUDE_ALL_EduStanfordNlpTreesAbstractTreebankLanguagePack 0
#else
#define INCLUDE_ALL_EduStanfordNlpTreesAbstractTreebankLanguagePack 1
#endif
#undef RESTRICT_EduStanfordNlpTreesAbstractTreebankLanguagePack

#if !defined (EduStanfordNlpTreesAbstractTreebankLanguagePack_) && (INCLUDE_ALL_EduStanfordNlpTreesAbstractTreebankLanguagePack || defined(INCLUDE_EduStanfordNlpTreesAbstractTreebankLanguagePack))
#define EduStanfordNlpTreesAbstractTreebankLanguagePack_

#define RESTRICT_EduStanfordNlpTreesTreebankLanguagePack 1
#define INCLUDE_EduStanfordNlpTreesTreebankLanguagePack 1
#include "edu/stanford/nlp/trees/TreebankLanguagePack.h"

@class EduStanfordNlpInternationalMorphMorphoFeatureSpecification;
@class IOSCharArray;
@class IOSObjectArray;
@protocol EduStanfordNlpProcessTokenizerFactory;
@protocol EduStanfordNlpTreesGrammaticalStructureFactory;
@protocol EduStanfordNlpTreesHeadFinder;
@protocol EduStanfordNlpTreesTreeReaderFactory;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilFunctionPredicate;

@interface EduStanfordNlpTreesAbstractTreebankLanguagePack : NSObject < EduStanfordNlpTreesTreebankLanguagePack > {
 @public
  jchar gfCharacter_;
  jboolean generateOriginalDependencies_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithChar:(jchar)gfChar;

- (NSString *)basicCategoryWithNSString:(NSString *)category;

- (NSString *)categoryAndFunctionWithNSString:(NSString *)category;

- (id<JavaUtilFunctionPredicate>)evalBIgnoredPunctuationTagAcceptFilter;

- (id<JavaUtilFunctionPredicate>)evalBIgnoredPunctuationTagRejectFilter;

- (IOSObjectArray *)evalBIgnoredPunctuationTags;

- (jboolean)generateOriginalDependencies;

- (id<JavaUtilFunctionFunction>)getBasicCategoryFunction;

- (id<JavaUtilFunctionFunction>)getCategoryAndFunctionFunction;

- (NSString *)getEncoding;

- (jchar)getGfCharacter;

- (id<EduStanfordNlpProcessTokenizerFactory>)getTokenizerFactory;

- (id<EduStanfordNlpTreesGrammaticalStructureFactory>)grammaticalStructureFactory;

- (id<EduStanfordNlpTreesGrammaticalStructureFactory>)grammaticalStructureFactoryWithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)puncFilt;

- (id<EduStanfordNlpTreesGrammaticalStructureFactory>)grammaticalStructureFactoryWithJavaUtilFunctionPredicate:(id<JavaUtilFunctionPredicate>)puncFilt
                                                                             withEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)typedDependencyHeadFinder;

- (jboolean)isEvalBIgnoredPunctuationTagWithNSString:(NSString *)str;

- (jboolean)isLabelAnnotationIntroducingCharacterWithChar:(jchar)ch;

- (jboolean)isPunctuationTagWithNSString:(NSString *)str;

- (jboolean)isPunctuationWordWithNSString:(NSString *)str;

- (jboolean)isSentenceFinalPunctuationTagWithNSString:(NSString *)str;

- (jboolean)isStartSymbolWithNSString:(NSString *)str;

- (IOSCharArray *)labelAnnotationIntroducingCharacters;

- (EduStanfordNlpInternationalMorphMorphoFeatureSpecification *)morphFeatureSpec;

- (id<JavaUtilFunctionPredicate>)punctuationTagAcceptFilter;

- (id<JavaUtilFunctionPredicate>)punctuationTagRejectFilter;

- (IOSObjectArray *)punctuationTags;

- (id<JavaUtilFunctionPredicate>)punctuationWordAcceptFilter;

- (id<JavaUtilFunctionPredicate>)punctuationWordRejectFilter;

- (IOSObjectArray *)punctuationWords;

- (id<JavaUtilFunctionPredicate>)sentenceFinalPunctuationTagAcceptFilter;

- (IOSObjectArray *)sentenceFinalPunctuationTags;

- (void)setGenerateOriginalDependenciesWithBoolean:(jboolean)generateOriginalDependencies;

- (void)setGfCharacterWithChar:(jchar)gfCharacter;

- (NSString *)startSymbol;

- (id<JavaUtilFunctionPredicate>)startSymbolAcceptFilter;

- (IOSObjectArray *)startSymbols;

- (NSString *)stripGFWithNSString:(NSString *)category;

- (jboolean)supportsGrammaticalStructures;

- (id<EduStanfordNlpTreesTreeReaderFactory>)treeReaderFactory;

- (id<EduStanfordNlpProcessTokenizerFactory>)treeTokenizerFactory;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpTreesAbstractTreebankLanguagePack)

inline jchar EduStanfordNlpTreesAbstractTreebankLanguagePack_get_DEFAULT_GF_CHAR();
#define EduStanfordNlpTreesAbstractTreebankLanguagePack_DEFAULT_GF_CHAR '-'
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTreesAbstractTreebankLanguagePack, DEFAULT_GF_CHAR, jchar)

inline NSString *EduStanfordNlpTreesAbstractTreebankLanguagePack_get_DEFAULT_ENCODING();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpTreesAbstractTreebankLanguagePack_DEFAULT_ENCODING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesAbstractTreebankLanguagePack, DEFAULT_ENCODING, NSString *)

FOUNDATION_EXPORT void EduStanfordNlpTreesAbstractTreebankLanguagePack_init(EduStanfordNlpTreesAbstractTreebankLanguagePack *self);

FOUNDATION_EXPORT void EduStanfordNlpTreesAbstractTreebankLanguagePack_initWithChar_(EduStanfordNlpTreesAbstractTreebankLanguagePack *self, jchar gfChar);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesAbstractTreebankLanguagePack)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpTreesAbstractTreebankLanguagePack")
