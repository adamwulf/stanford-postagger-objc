//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/QPTreeTransformer.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/trees/LabeledScoredTreeFactory.h"
#include "edu/stanford/nlp/trees/MemoryTreebank.h"
#include "edu/stanford/nlp/trees/PennTreeReader.h"
#include "edu/stanford/nlp/trees/QPTreeTransformer.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeReader.h"
#include "edu/stanford/nlp/trees/Treebank.h"
#include "edu/stanford/nlp/trees/tregex/TregexPattern.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/Tsurgeon.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPattern.h"
#include "edu/stanford/nlp/util/StringUtils.h"
#include "java/io/BufferedReader.h"
#include "java/io/FileInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStreamReader.h"
#include "java/io/PrintStream.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/util/Properties.h"

@interface EduStanfordNlpTreesQPTreeTransformer () {
 @public
  jboolean universalDependencies_;
}

@end

inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesQPTreeTransformer_get_flattenNPoverQPTregex();
inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesQPTreeTransformer_set_flattenNPoverQPTregex(EduStanfordNlpTreesTregexTregexPattern *value);
static EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesQPTreeTransformer_flattenNPoverQPTregex;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesQPTreeTransformer, flattenNPoverQPTregex, EduStanfordNlpTreesTregexTregexPattern *)

inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesQPTreeTransformer_get_flattenNPoverQPTsurgeon();
inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesQPTreeTransformer_set_flattenNPoverQPTsurgeon(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *value);
static EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesQPTreeTransformer_flattenNPoverQPTsurgeon;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesQPTreeTransformer, flattenNPoverQPTsurgeon, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)

inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesQPTreeTransformer_get_multiwordXSTregex();
inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesQPTreeTransformer_set_multiwordXSTregex(EduStanfordNlpTreesTregexTregexPattern *value);
static EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesQPTreeTransformer_multiwordXSTregex;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesQPTreeTransformer, multiwordXSTregex, EduStanfordNlpTreesTregexTregexPattern *)

inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesQPTreeTransformer_get_multiwordXSTsurgeon();
inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesQPTreeTransformer_set_multiwordXSTsurgeon(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *value);
static EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesQPTreeTransformer_multiwordXSTsurgeon;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesQPTreeTransformer, multiwordXSTsurgeon, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)

inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesQPTreeTransformer_get_splitCCTregex();
inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesQPTreeTransformer_set_splitCCTregex(EduStanfordNlpTreesTregexTregexPattern *value);
static EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesQPTreeTransformer_splitCCTregex;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesQPTreeTransformer, splitCCTregex, EduStanfordNlpTreesTregexTregexPattern *)

inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesQPTreeTransformer_get_splitCCTsurgeon();
inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesQPTreeTransformer_set_splitCCTsurgeon(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *value);
static EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesQPTreeTransformer_splitCCTsurgeon;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesQPTreeTransformer, splitCCTsurgeon, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)

inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesQPTreeTransformer_get_splitMoneyTregex();
inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesQPTreeTransformer_set_splitMoneyTregex(EduStanfordNlpTreesTregexTregexPattern *value);
static EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesQPTreeTransformer_splitMoneyTregex;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesQPTreeTransformer, splitMoneyTregex, EduStanfordNlpTreesTregexTregexPattern *)

inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesQPTreeTransformer_get_splitMoneyTsurgeon();
inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesQPTreeTransformer_set_splitMoneyTsurgeon(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *value);
static EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesQPTreeTransformer_splitMoneyTsurgeon;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesQPTreeTransformer, splitMoneyTsurgeon, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesQPTreeTransformer)

@implementation EduStanfordNlpTreesQPTreeTransformer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesQPTreeTransformer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithBoolean:(jboolean)universalDependencies {
  EduStanfordNlpTreesQPTreeTransformer_initWithBoolean_(self, universalDependencies);
  return self;
}

- (EduStanfordNlpTreesTree *)transformTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  return [self QPtransformWithEduStanfordNlpTreesTree:t];
}

- (EduStanfordNlpTreesTree *)QPtransformWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  t = EduStanfordNlpTreesTregexTsurgeonTsurgeon_processPatternWithEduStanfordNlpTreesTregexTregexPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesQPTreeTransformer_flattenNPoverQPTregex, EduStanfordNlpTreesQPTreeTransformer_flattenNPoverQPTsurgeon, t);
  if (!universalDependencies_) t = EduStanfordNlpTreesTregexTsurgeonTsurgeon_processPatternWithEduStanfordNlpTreesTregexTregexPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesQPTreeTransformer_multiwordXSTregex, EduStanfordNlpTreesQPTreeTransformer_multiwordXSTsurgeon, t);
  t = EduStanfordNlpTreesTregexTsurgeonTsurgeon_processPatternWithEduStanfordNlpTreesTregexTregexPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesQPTreeTransformer_splitCCTregex, EduStanfordNlpTreesQPTreeTransformer_splitCCTsurgeon, t);
  t = EduStanfordNlpTreesTregexTsurgeonTsurgeon_processPatternWithEduStanfordNlpTreesTregexTregexPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesQPTreeTransformer_splitMoneyTregex, EduStanfordNlpTreesQPTreeTransformer_splitMoneyTsurgeon, t);
  return t;
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduStanfordNlpTreesQPTreeTransformer_mainWithNSStringArray_(args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithBoolean:);
  methods[2].selector = @selector(transformTreeWithEduStanfordNlpTreesTree:);
  methods[3].selector = @selector(QPtransformWithEduStanfordNlpTreesTree:);
  methods[4].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "universalDependencies_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "flattenNPoverQPTregex", "LEduStanfordNlpTreesTregexTregexPattern;", .constantValue.asLong = 0, 0xa, -1, 6, -1, -1 },
    { "flattenNPoverQPTsurgeon", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", .constantValue.asLong = 0, 0xa, -1, 7, -1, -1 },
    { "multiwordXSTregex", "LEduStanfordNlpTreesTregexTregexPattern;", .constantValue.asLong = 0, 0xa, -1, 8, -1, -1 },
    { "multiwordXSTsurgeon", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", .constantValue.asLong = 0, 0xa, -1, 9, -1, -1 },
    { "splitCCTregex", "LEduStanfordNlpTreesTregexTregexPattern;", .constantValue.asLong = 0, 0xa, -1, 10, -1, -1 },
    { "splitCCTsurgeon", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", .constantValue.asLong = 0, 0xa, -1, 11, -1, -1 },
    { "splitMoneyTregex", "LEduStanfordNlpTreesTregexTregexPattern;", .constantValue.asLong = 0, 0xa, -1, 12, -1, -1 },
    { "splitMoneyTsurgeon", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", .constantValue.asLong = 0, 0xa, -1, 13, -1, -1 },
  };
  static const void *ptrTable[] = { "Z", "transformTree", "LEduStanfordNlpTreesTree;", "QPtransform", "main", "[LNSString;", &EduStanfordNlpTreesQPTreeTransformer_flattenNPoverQPTregex, &EduStanfordNlpTreesQPTreeTransformer_flattenNPoverQPTsurgeon, &EduStanfordNlpTreesQPTreeTransformer_multiwordXSTregex, &EduStanfordNlpTreesQPTreeTransformer_multiwordXSTsurgeon, &EduStanfordNlpTreesQPTreeTransformer_splitCCTregex, &EduStanfordNlpTreesQPTreeTransformer_splitCCTsurgeon, &EduStanfordNlpTreesQPTreeTransformer_splitMoneyTregex, &EduStanfordNlpTreesQPTreeTransformer_splitMoneyTsurgeon };
  static const J2ObjcClassInfo _EduStanfordNlpTreesQPTreeTransformer = { "QPTreeTransformer", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0x1, 5, 9, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesQPTreeTransformer;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesQPTreeTransformer class]) {
    EduStanfordNlpTreesQPTreeTransformer_flattenNPoverQPTregex = EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"NP < (QP=left $+ (QP=right < CC))");
    EduStanfordNlpTreesQPTreeTransformer_flattenNPoverQPTsurgeon = EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(@"[createSubtree QP left right] [excise left left] [excise right right]");
    EduStanfordNlpTreesQPTreeTransformer_multiwordXSTregex = EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"QP <1 /^RB|JJ|IN/=left [ ( <2 /^JJ|IN/=right <3 /^CD|DT/ ) | ( <2 /^JJ|IN/ <3 ( IN=right < /^(?i:as|than)$/ ) <4 /^CD|DT/ ) ] ");
    EduStanfordNlpTreesQPTreeTransformer_multiwordXSTsurgeon = EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(@"createSubtree XS left right");
    EduStanfordNlpTreesQPTreeTransformer_splitCCTregex = EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"QP < (CC $- __=r1 $+ __=l2 ?$-- /^[$]|CC$/=lnum ?$++ /^[$]|CC$/=rnum) <1 __=l1 <- __=r2 !< (__ < (__ < __))");
    EduStanfordNlpTreesQPTreeTransformer_splitCCTsurgeon = EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(@"[if exists lnum createSubtree QP l1 r1] [if not exists lnum createSubtree NP l1 r1] [if exists rnum createSubtree QP l2 r2] [if not exists rnum createSubtree NP l2 r2]");
    EduStanfordNlpTreesQPTreeTransformer_splitMoneyTregex = EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"QP < (/^[$]$/ !$++ /^(?!([$]|CD)).*$/ !$++ (__ < (__ < __)) $+ __=left) <- __=right");
    EduStanfordNlpTreesQPTreeTransformer_splitMoneyTsurgeon = EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(@"createSubtree QP left right");
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesQPTreeTransformer)
  }
}

@end

void EduStanfordNlpTreesQPTreeTransformer_init(EduStanfordNlpTreesQPTreeTransformer *self) {
  EduStanfordNlpTreesQPTreeTransformer_initWithBoolean_(self, false);
}

EduStanfordNlpTreesQPTreeTransformer *new_EduStanfordNlpTreesQPTreeTransformer_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesQPTreeTransformer, init)
}

EduStanfordNlpTreesQPTreeTransformer *create_EduStanfordNlpTreesQPTreeTransformer_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesQPTreeTransformer, init)
}

void EduStanfordNlpTreesQPTreeTransformer_initWithBoolean_(EduStanfordNlpTreesQPTreeTransformer *self, jboolean universalDependencies) {
  NSObject_init(self);
  self->universalDependencies_ = false;
  self->universalDependencies_ = universalDependencies;
}

EduStanfordNlpTreesQPTreeTransformer *new_EduStanfordNlpTreesQPTreeTransformer_initWithBoolean_(jboolean universalDependencies) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesQPTreeTransformer, initWithBoolean_, universalDependencies)
}

EduStanfordNlpTreesQPTreeTransformer *create_EduStanfordNlpTreesQPTreeTransformer_initWithBoolean_(jboolean universalDependencies) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesQPTreeTransformer, initWithBoolean_, universalDependencies)
}

void EduStanfordNlpTreesQPTreeTransformer_mainWithNSStringArray_(IOSObjectArray *args) {
  EduStanfordNlpTreesQPTreeTransformer_initialize();
  EduStanfordNlpTreesQPTreeTransformer *transformer = new_EduStanfordNlpTreesQPTreeTransformer_init();
  EduStanfordNlpTreesTreebank *tb = new_EduStanfordNlpTreesMemoryTreebank_init();
  JavaUtilProperties *props = EduStanfordNlpUtilStringUtils_argsToPropertiesWithNSStringArray_(args);
  NSString *treeFileName = [((JavaUtilProperties *) nil_chk(props)) getPropertyWithNSString:@"treeFile"];
  if (treeFileName != nil) {
    @try {
      id<EduStanfordNlpTreesTreeReader> tr = new_EduStanfordNlpTreesPennTreeReader_initWithJavaIoReader_withEduStanfordNlpTreesTreeFactory_(new_JavaIoBufferedReader_initWithJavaIoReader_(new_JavaIoInputStreamReader_initWithJavaIoInputStream_(new_JavaIoFileInputStream_initWithNSString_(treeFileName))), new_EduStanfordNlpTreesLabeledScoredTreeFactory_init());
      EduStanfordNlpTreesTree *t;
      while ((t = [tr readTree]) != nil) {
        [tb addWithId:t];
      }
    }
    @catch (JavaIoIOException *e) {
      @throw new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$@", @"File problem: ", e));
    }
  }
  for (EduStanfordNlpTreesTree * __strong t in tb) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"Original tree"];
    [((EduStanfordNlpTreesTree *) nil_chk(t)) pennPrint];
    [JreLoadStatic(JavaLangSystem, out) println];
    [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:@"Tree transformed"];
    EduStanfordNlpTreesTree *tree = [transformer transformTreeWithEduStanfordNlpTreesTree:t];
    [((EduStanfordNlpTreesTree *) nil_chk(tree)) pennPrint];
    [JreLoadStatic(JavaLangSystem, out) println];
    [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:@"----------------------------"];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesQPTreeTransformer)
