//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/tregex/TregexMatcher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpTreesTregexTregexMatcher")
#ifdef RESTRICT_EduStanfordNlpTreesTregexTregexMatcher
#define INCLUDE_ALL_EduStanfordNlpTreesTregexTregexMatcher 0
#else
#define INCLUDE_ALL_EduStanfordNlpTreesTregexTregexMatcher 1
#endif
#undef RESTRICT_EduStanfordNlpTreesTregexTregexMatcher

#if !defined (EduStanfordNlpTreesTregexTregexMatcher_) && (INCLUDE_ALL_EduStanfordNlpTreesTregexTregexMatcher || defined(INCLUDE_EduStanfordNlpTreesTregexTregexMatcher))
#define EduStanfordNlpTreesTregexTregexMatcher_

@class EduStanfordNlpTreesTree;
@class EduStanfordNlpTreesTregexVariableStrings;
@class JavaUtilIdentityHashMap;
@protocol EduStanfordNlpTreesHeadFinder;
@protocol JavaUtilIterator;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface EduStanfordNlpTreesTregexTregexMatcher : NSObject {
 @public
  EduStanfordNlpTreesTree *root_;
  EduStanfordNlpTreesTree *tree_;
  JavaUtilIdentityHashMap *nodesToParents_;
  id<JavaUtilMap> namesToNodes_;
  EduStanfordNlpTreesTregexVariableStrings *variableStrings_;
  id<JavaUtilIterator> findIterator_;
  EduStanfordNlpTreesTree *findCurrent_;
  id<EduStanfordNlpTreesHeadFinder> headFinder_;
}

#pragma mark Public

- (jboolean)find;

- (jboolean)findAtWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)node;

- (jboolean)findNextMatchingNode;

- (id<EduStanfordNlpTreesHeadFinder>)getHeadFinder;

- (EduStanfordNlpTreesTree *)getMatch;

- (EduStanfordNlpTreesTree *)getNodeWithNSString:(NSString *)name;

- (id<JavaUtilSet>)getNodeNames;

- (NSString *)getVariableStringWithNSString:(NSString *)var;

- (jboolean)matches;

- (jboolean)matchesAtWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)node;

- (void)reset;

#pragma mark Package-Private

- (instancetype)initWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)root
                    withEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                    withJavaUtilIdentityHashMap:(JavaUtilIdentityHashMap *)nodesToParents
                                withJavaUtilMap:(id<JavaUtilMap>)namesToNodes
   withEduStanfordNlpTreesTregexVariableStrings:(EduStanfordNlpTreesTregexVariableStrings *)variableStrings
              withEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)headFinder;

- (EduStanfordNlpTreesTree *)getParentWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)node;

- (EduStanfordNlpTreesTree *)getRoot;

- (void)resetChildIter;

- (void)resetChildIterWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesTregexTregexMatcher)

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTregexMatcher, root_, EduStanfordNlpTreesTree *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTregexMatcher, tree_, EduStanfordNlpTreesTree *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTregexMatcher, nodesToParents_, JavaUtilIdentityHashMap *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTregexMatcher, namesToNodes_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTregexMatcher, variableStrings_, EduStanfordNlpTreesTregexVariableStrings *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTregexMatcher, findIterator_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTregexMatcher, findCurrent_, EduStanfordNlpTreesTree *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTregexMatcher, headFinder_, id<EduStanfordNlpTreesHeadFinder>)

FOUNDATION_EXPORT void EduStanfordNlpTreesTregexTregexMatcher_initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTree_withJavaUtilIdentityHashMap_withJavaUtilMap_withEduStanfordNlpTreesTregexVariableStrings_withEduStanfordNlpTreesHeadFinder_(EduStanfordNlpTreesTregexTregexMatcher *self, EduStanfordNlpTreesTree *root, EduStanfordNlpTreesTree *tree, JavaUtilIdentityHashMap *nodesToParents, id<JavaUtilMap> namesToNodes, EduStanfordNlpTreesTregexVariableStrings *variableStrings, id<EduStanfordNlpTreesHeadFinder> headFinder);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesTregexTregexMatcher)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpTreesTregexTregexMatcher")
