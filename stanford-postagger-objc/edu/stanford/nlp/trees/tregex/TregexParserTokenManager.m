//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/tregex/TregexParserTokenManager.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/trees/tregex/SimpleCharStream.h"
#include "edu/stanford/nlp/trees/tregex/Token.h"
#include "edu/stanford/nlp/trees/tregex/TokenMgrError.h"
#include "edu/stanford/nlp/trees/tregex/TregexParserTokenManager.h"
#include "java/io/IOException.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"

@interface EduStanfordNlpTreesTregexTregexParserTokenManager () {
 @public
  IOSIntArray *jjrounds_;
  IOSIntArray *jjstateSet_;
}

- (jint)jjStopStringLiteralDfa_0WithInt:(jint)pos
                               withLong:(jlong)active0;

- (jint)jjStartNfa_0WithInt:(jint)pos
                   withLong:(jlong)active0;

- (jint)jjStopAtPosWithInt:(jint)pos
                   withInt:(jint)kind;

- (jint)jjMoveStringLiteralDfa0_0;

- (jint)jjMoveStringLiteralDfa1_0WithLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa2_0WithLong:(jlong)old0
                                 withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa3_0WithLong:(jlong)old0
                                 withLong:(jlong)active0;

- (jint)jjStartNfaWithStates_0WithInt:(jint)pos
                              withInt:(jint)kind
                              withInt:(jint)state;

- (jint)jjMoveNfa_0WithInt:(jint)startState
                   withInt:(jint)curPos;

+ (jboolean)jjCanMove_0WithInt:(jint)hiByte
                       withInt:(jint)i1
                       withInt:(jint)i2
                      withLong:(jlong)l1
                      withLong:(jlong)l2;

- (void)jjCheckNAddWithInt:(jint)state;

- (void)jjAddStatesWithInt:(jint)start
                   withInt:(jint)end;

- (void)jjCheckNAddTwoStatesWithInt:(jint)state1
                            withInt:(jint)state2;

- (void)jjCheckNAddStatesWithInt:(jint)start
                         withInt:(jint)end;

- (void)ReInitRounds;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTregexParserTokenManager, jjrounds_, IOSIntArray *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTregexParserTokenManager, jjstateSet_, IOSIntArray *)

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jint pos, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTregexParserTokenManager_jjStartNfa_0WithInt_withLong_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jint pos, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopAtPosWithInt_withInt_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jint pos, jint kind);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveStringLiteralDfa0_0(EduStanfordNlpTreesTregexTregexParserTokenManager *self);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveStringLiteralDfa1_0WithLong_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveStringLiteralDfa2_0WithLong_withLong_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jlong old0, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveStringLiteralDfa3_0WithLong_withLong_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jlong old0, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTregexParserTokenManager_jjStartNfaWithStates_0WithInt_withInt_withInt_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jint pos, jint kind, jint state);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveNfa_0WithInt_withInt_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jint startState, jint curPos);

__attribute__((unused)) static jboolean EduStanfordNlpTreesTregexTregexParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(jint hiByte, jint i1, jint i2, jlong l1, jlong l2);

__attribute__((unused)) static void EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jint state);

__attribute__((unused)) static void EduStanfordNlpTreesTregexTregexParserTokenManager_jjAddStatesWithInt_withInt_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jint start, jint end);

__attribute__((unused)) static void EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jint state1, jint state2);

__attribute__((unused)) static void EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddStatesWithInt_withInt_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jint start, jint end);

__attribute__((unused)) static void EduStanfordNlpTreesTregexTregexParserTokenManager_ReInitRounds(EduStanfordNlpTreesTregexTregexParserTokenManager *self);

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesTregexTregexParserTokenManager)

IOSLongArray *EduStanfordNlpTreesTregexTregexParserTokenManager_jjbitVec0;
IOSLongArray *EduStanfordNlpTreesTregexTregexParserTokenManager_jjbitVec2;
IOSIntArray *EduStanfordNlpTreesTregexTregexParserTokenManager_jjnextStates;
IOSObjectArray *EduStanfordNlpTreesTregexTregexParserTokenManager_jjstrLiteralImages;
IOSObjectArray *EduStanfordNlpTreesTregexTregexParserTokenManager_lexStateNames;
IOSLongArray *EduStanfordNlpTreesTregexTregexParserTokenManager_jjtoToken;
IOSLongArray *EduStanfordNlpTreesTregexTregexParserTokenManager_jjtoSkip;

@implementation EduStanfordNlpTreesTregexTregexParserTokenManager

- (void)setDebugStreamWithJavaIoPrintStream:(JavaIoPrintStream *)ds {
  debugStream_ = ds;
}

- (jint)jjStopStringLiteralDfa_0WithInt:(jint)pos
                               withLong:(jlong)active0 {
  return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, pos, active0);
}

- (jint)jjStartNfa_0WithInt:(jint)pos
                   withLong:(jlong)active0 {
  return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStartNfa_0WithInt_withLong_(self, pos, active0);
}

- (jint)jjStopAtPosWithInt:(jint)pos
                   withInt:(jint)kind {
  return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopAtPosWithInt_withInt_(self, pos, kind);
}

- (jint)jjMoveStringLiteralDfa0_0 {
  return EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveStringLiteralDfa0_0(self);
}

- (jint)jjMoveStringLiteralDfa1_0WithLong:(jlong)active0 {
  return EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveStringLiteralDfa1_0WithLong_(self, active0);
}

- (jint)jjMoveStringLiteralDfa2_0WithLong:(jlong)old0
                                 withLong:(jlong)active0 {
  return EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveStringLiteralDfa2_0WithLong_withLong_(self, old0, active0);
}

- (jint)jjMoveStringLiteralDfa3_0WithLong:(jlong)old0
                                 withLong:(jlong)active0 {
  return EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveStringLiteralDfa3_0WithLong_withLong_(self, old0, active0);
}

- (jint)jjStartNfaWithStates_0WithInt:(jint)pos
                              withInt:(jint)kind
                              withInt:(jint)state {
  return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStartNfaWithStates_0WithInt_withInt_withInt_(self, pos, kind, state);
}

- (jint)jjMoveNfa_0WithInt:(jint)startState
                   withInt:(jint)curPos {
  return EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveNfa_0WithInt_withInt_(self, startState, curPos);
}

+ (jboolean)jjCanMove_0WithInt:(jint)hiByte
                       withInt:(jint)i1
                       withInt:(jint)i2
                      withLong:(jlong)l1
                      withLong:(jlong)l2 {
  return EduStanfordNlpTreesTregexTregexParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2);
}

- (EduStanfordNlpTreesTregexToken *)jjFillToken {
  __unused EduStanfordNlpTreesTregexToken *t;
  __unused NSString *curTokenImage;
  __unused jint beginLine;
  __unused jint endLine;
  __unused jint beginColumn;
  __unused jint endColumn;
  __unused NSString *im = IOSObjectArray_Get(nil_chk(EduStanfordNlpTreesTregexTregexParserTokenManager_jjstrLiteralImages), jjmatchedKind_);
  curTokenImage = (im == nil) ? [((EduStanfordNlpTreesTregexSimpleCharStream *) nil_chk(input_stream_)) GetImage] : im;
  beginLine = [((EduStanfordNlpTreesTregexSimpleCharStream *) nil_chk(input_stream_)) getBeginLine];
  beginColumn = [((EduStanfordNlpTreesTregexSimpleCharStream *) nil_chk(input_stream_)) getBeginColumn];
  endLine = [((EduStanfordNlpTreesTregexSimpleCharStream *) nil_chk(input_stream_)) getEndLine];
  endColumn = [((EduStanfordNlpTreesTregexSimpleCharStream *) nil_chk(input_stream_)) getEndColumn];
  t = EduStanfordNlpTreesTregexToken_newTokenWithInt_withNSString_(jjmatchedKind_, curTokenImage);
  ((EduStanfordNlpTreesTregexToken *) nil_chk(t))->beginLine_ = beginLine;
  t->endLine_ = endLine;
  t->beginColumn_ = beginColumn;
  t->endColumn_ = endColumn;
  return t;
}

- (EduStanfordNlpTreesTregexToken *)getNextToken {
  __unused EduStanfordNlpTreesTregexToken *matchedToken;
  __unused jint curPos = 0;
  for (; ; ) {
    {
      @try {
        curChar_ = [((EduStanfordNlpTreesTregexSimpleCharStream *) nil_chk(input_stream_)) BeginToken];
      }
      @catch (JavaIoIOException *e) {
        jjmatchedKind_ = 0;
        jjmatchedPos_ = -1;
        matchedToken = [self jjFillToken];
        return matchedToken;
      }
      @try {
        [((EduStanfordNlpTreesTregexSimpleCharStream *) nil_chk(input_stream_)) backupWithInt:0];
        while (curChar_ <= 32 && ((jlong) 0x100002000LL & (JreLShift64(1LL, curChar_))) != 0LL) curChar_ = [((EduStanfordNlpTreesTregexSimpleCharStream *) nil_chk(input_stream_)) BeginToken];
      }
      @catch (JavaIoIOException *e1) {
        goto continue_EOFLoop;
      }
      jjmatchedKind_ = (jint) 0x7fffffff;
      jjmatchedPos_ = 0;
      curPos = EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveStringLiteralDfa0_0(self);
      if (jjmatchedKind_ != (jint) 0x7fffffff) {
        if (jjmatchedPos_ + 1 < curPos) [((EduStanfordNlpTreesTregexSimpleCharStream *) nil_chk(input_stream_)) backupWithInt:curPos - jjmatchedPos_ - 1];
        if ((IOSLongArray_Get(nil_chk(EduStanfordNlpTreesTregexTregexParserTokenManager_jjtoToken), JreRShift32(jjmatchedKind_, 6)) & (JreLShift64(1LL, (jjmatchedKind_ & 077)))) != 0LL) {
          matchedToken = [self jjFillToken];
          return matchedToken;
        }
        else {
          goto continue_EOFLoop;
        }
      }
      __unused jint error_line = [((EduStanfordNlpTreesTregexSimpleCharStream *) nil_chk(input_stream_)) getEndLine];
      __unused jint error_column = [((EduStanfordNlpTreesTregexSimpleCharStream *) nil_chk(input_stream_)) getEndColumn];
      __unused NSString *error_after = nil;
      __unused jboolean EOFSeen = false;
      @try {
        [((EduStanfordNlpTreesTregexSimpleCharStream *) nil_chk(input_stream_)) readChar];
        [((EduStanfordNlpTreesTregexSimpleCharStream *) nil_chk(input_stream_)) backupWithInt:1];
      }
      @catch (JavaIoIOException *e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? @"" : [((EduStanfordNlpTreesTregexSimpleCharStream *) nil_chk(input_stream_)) GetImage];
        if (curChar_ == 0x000a || curChar_ == 0x000d) {
          error_line++;
          error_column = 0;
        }
        else error_column++;
      }
      if (!EOFSeen) {
        [((EduStanfordNlpTreesTregexSimpleCharStream *) nil_chk(input_stream_)) backupWithInt:1];
        error_after = curPos <= 1 ? @"" : [((EduStanfordNlpTreesTregexSimpleCharStream *) nil_chk(input_stream_)) GetImage];
      }
      @throw new_EduStanfordNlpTreesTregexTokenMgrError_initWithBoolean_withInt_withInt_withInt_withNSString_withChar_withInt_(EOFSeen, curLexState_, error_line, error_column, error_after, curChar_, EduStanfordNlpTreesTregexTokenMgrError_LEXICAL_ERROR);
    }
    continue_EOFLoop: ;
  }
}

- (void)jjCheckNAddWithInt:(jint)state {
  EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, state);
}

- (void)jjAddStatesWithInt:(jint)start
                   withInt:(jint)end {
  EduStanfordNlpTreesTregexTregexParserTokenManager_jjAddStatesWithInt_withInt_(self, start, end);
}

- (void)jjCheckNAddTwoStatesWithInt:(jint)state1
                            withInt:(jint)state2 {
  EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, state1, state2);
}

- (void)jjCheckNAddStatesWithInt:(jint)start
                         withInt:(jint)end {
  EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, start, end);
}

- (instancetype)initWithEduStanfordNlpTreesTregexSimpleCharStream:(EduStanfordNlpTreesTregexSimpleCharStream *)stream {
  EduStanfordNlpTreesTregexTregexParserTokenManager_initWithEduStanfordNlpTreesTregexSimpleCharStream_(self, stream);
  return self;
}

- (instancetype)initWithEduStanfordNlpTreesTregexSimpleCharStream:(EduStanfordNlpTreesTregexSimpleCharStream *)stream
                                                          withInt:(jint)lexState {
  EduStanfordNlpTreesTregexTregexParserTokenManager_initWithEduStanfordNlpTreesTregexSimpleCharStream_withInt_(self, stream, lexState);
  return self;
}

- (void)ReInitWithEduStanfordNlpTreesTregexSimpleCharStream:(EduStanfordNlpTreesTregexSimpleCharStream *)stream {
  jjmatchedPos_ = jjnewStateCnt_ = 0;
  curLexState_ = defaultLexState_;
  input_stream_ = stream;
  EduStanfordNlpTreesTregexTregexParserTokenManager_ReInitRounds(self);
}

- (void)ReInitRounds {
  EduStanfordNlpTreesTregexTregexParserTokenManager_ReInitRounds(self);
}

- (void)ReInitWithEduStanfordNlpTreesTregexSimpleCharStream:(EduStanfordNlpTreesTregexSimpleCharStream *)stream
                                                    withInt:(jint)lexState {
  [self ReInitWithEduStanfordNlpTreesTregexSimpleCharStream:stream];
  [self SwitchToWithInt:lexState];
}

- (void)SwitchToWithInt:(jint)lexState {
  if (lexState >= 1 || lexState < 0) @throw new_EduStanfordNlpTreesTregexTokenMgrError_initWithNSString_withInt_(JreStrcat("$I$", @"Error: Ignoring invalid lexical state : ", lexState, @". State unchanged."), EduStanfordNlpTreesTregexTokenMgrError_INVALID_LEXICAL_STATE);
  else curLexState_ = lexState;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 4, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 11, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 12, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 14, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1a, 15, 16, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTregexToken;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTregexToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 19, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 20, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 21, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 22, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 23, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 24, 22, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 24, 23, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 18, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(setDebugStreamWithJavaIoPrintStream:);
  methods[1].selector = @selector(jjStopStringLiteralDfa_0WithInt:withLong:);
  methods[2].selector = @selector(jjStartNfa_0WithInt:withLong:);
  methods[3].selector = @selector(jjStopAtPosWithInt:withInt:);
  methods[4].selector = @selector(jjMoveStringLiteralDfa0_0);
  methods[5].selector = @selector(jjMoveStringLiteralDfa1_0WithLong:);
  methods[6].selector = @selector(jjMoveStringLiteralDfa2_0WithLong:withLong:);
  methods[7].selector = @selector(jjMoveStringLiteralDfa3_0WithLong:withLong:);
  methods[8].selector = @selector(jjStartNfaWithStates_0WithInt:withInt:withInt:);
  methods[9].selector = @selector(jjMoveNfa_0WithInt:withInt:);
  methods[10].selector = @selector(jjCanMove_0WithInt:withInt:withInt:withLong:withLong:);
  methods[11].selector = @selector(jjFillToken);
  methods[12].selector = @selector(getNextToken);
  methods[13].selector = @selector(jjCheckNAddWithInt:);
  methods[14].selector = @selector(jjAddStatesWithInt:withInt:);
  methods[15].selector = @selector(jjCheckNAddTwoStatesWithInt:withInt:);
  methods[16].selector = @selector(jjCheckNAddStatesWithInt:withInt:);
  methods[17].selector = @selector(initWithEduStanfordNlpTreesTregexSimpleCharStream:);
  methods[18].selector = @selector(initWithEduStanfordNlpTreesTregexSimpleCharStream:withInt:);
  methods[19].selector = @selector(ReInitWithEduStanfordNlpTreesTregexSimpleCharStream:);
  methods[20].selector = @selector(ReInitRounds);
  methods[21].selector = @selector(ReInitWithEduStanfordNlpTreesTregexSimpleCharStream:withInt:);
  methods[22].selector = @selector(SwitchToWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "debugStream_", "LJavaIoPrintStream;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "jjbitVec0", "[J", .constantValue.asLong = 0, 0x18, -1, 26, -1, -1 },
    { "jjbitVec2", "[J", .constantValue.asLong = 0, 0x18, -1, 27, -1, -1 },
    { "jjnextStates", "[I", .constantValue.asLong = 0, 0x18, -1, 28, -1, -1 },
    { "jjstrLiteralImages", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 29, -1, -1 },
    { "curLexState_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "defaultLexState_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjnewStateCnt_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjround_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjmatchedPos_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjmatchedKind_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "lexStateNames", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 30, -1, -1 },
    { "jjtoToken", "[J", .constantValue.asLong = 0, 0x18, -1, 31, -1, -1 },
    { "jjtoSkip", "[J", .constantValue.asLong = 0, 0x18, -1, 32, -1, -1 },
    { "input_stream_", "LEduStanfordNlpTreesTregexSimpleCharStream;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "jjrounds_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "jjstateSet_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "curChar_", "C", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setDebugStream", "LJavaIoPrintStream;", "jjStopStringLiteralDfa_0", "IJ", "jjStartNfa_0", "jjStopAtPos", "II", "jjMoveStringLiteralDfa1_0", "J", "jjMoveStringLiteralDfa2_0", "JJ", "jjMoveStringLiteralDfa3_0", "jjStartNfaWithStates_0", "III", "jjMoveNfa_0", "jjCanMove_0", "IIIJJ", "jjCheckNAdd", "I", "jjAddStates", "jjCheckNAddTwoStates", "jjCheckNAddStates", "LEduStanfordNlpTreesTregexSimpleCharStream;", "LEduStanfordNlpTreesTregexSimpleCharStream;I", "ReInit", "SwitchTo", &EduStanfordNlpTreesTregexTregexParserTokenManager_jjbitVec0, &EduStanfordNlpTreesTregexTregexParserTokenManager_jjbitVec2, &EduStanfordNlpTreesTregexTregexParserTokenManager_jjnextStates, &EduStanfordNlpTreesTregexTregexParserTokenManager_jjstrLiteralImages, &EduStanfordNlpTreesTregexTregexParserTokenManager_lexStateNames, &EduStanfordNlpTreesTregexTregexParserTokenManager_jjtoToken, &EduStanfordNlpTreesTregexTregexParserTokenManager_jjtoSkip };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTregexTregexParserTokenManager = { "TregexParserTokenManager", "edu.stanford.nlp.trees.tregex", ptrTable, methods, fields, 7, 0x0, 23, 18, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesTregexTregexParserTokenManager;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesTregexTregexParserTokenManager class]) {
    EduStanfordNlpTreesTregexTregexParserTokenManager_jjbitVec0 = [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0xfffffffffffffffeLL, (jlong) 0xffffffffffffffffLL, (jlong) 0xffffffffffffffffLL, (jlong) 0xffffffffffffffffLL } count:4];
    EduStanfordNlpTreesTregexTregexParserTokenManager_jjbitVec2 = [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0x0LL, (jlong) 0x0LL, (jlong) 0xffffffffffffffffLL, (jlong) 0xffffffffffffffffLL } count:4];
    EduStanfordNlpTreesTregexTregexParserTokenManager_jjnextStates = [IOSIntArray newArrayWithInts:(jint[]){ 9, 10, 11, 36, 37, 38, 20, 16, 29, 39, 31, 40, 33, 41, 23, 26, 27, 28, 20, 16, 29, 30, 31, 32, 33, 34, 1, 23, 15, 17, 14, 16, 18, 19, 20, 21 } count:36];
    EduStanfordNlpTreesTregexTregexParserTokenManager_jjstrLiteralImages = [IOSObjectArray newArrayWithObjects:(id[]){ @"", nil, nil, nil, nil, @"<...", nil, nil, nil, @"__", nil, nil, @"|", @"\n", @"(", @")", @"!", @"@", @"#", @"%", @"=", @"~", @"&", @"?", @"[", @"]", @"{", @";", @"}" } count:29 type:NSString_class_()];
    EduStanfordNlpTreesTregexTregexParserTokenManager_lexStateNames = [IOSObjectArray newArrayWithObjects:(id[]){ @"DEFAULT" } count:1 type:NSString_class_()];
    EduStanfordNlpTreesTregexTregexParserTokenManager_jjtoToken = [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0x1ffffff1LL } count:1];
    EduStanfordNlpTreesTregexTregexParserTokenManager_jjtoSkip = [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0xeLL } count:1];
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesTregexTregexParserTokenManager)
  }
}

@end

jint EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jint pos, jlong active0) {
  switch (pos) {
    case 0:
    if ((active0 & (jlong) 0x8LL) != 0LL) return 6;
    if ((active0 & (jlong) 0x100000LL) != 0LL) return 1;
    if ((active0 & (jlong) 0x20LL) != 0LL) {
      self->jjmatchedKind_ = 4;
      return 26;
    }
    return -1;
    case 1:
    if ((active0 & (jlong) 0x20LL) != 0LL) {
      if (self->jjmatchedPos_ == 0) {
        self->jjmatchedKind_ = 4;
        self->jjmatchedPos_ = 0;
      }
      return -1;
    }
    return -1;
    case 2:
    if ((active0 & (jlong) 0x20LL) != 0LL) {
      if (self->jjmatchedPos_ == 0) {
        self->jjmatchedKind_ = 4;
        self->jjmatchedPos_ = 0;
      }
      return -1;
    }
    return -1;
    default:
    return -1;
  }
}

jint EduStanfordNlpTreesTregexTregexParserTokenManager_jjStartNfa_0WithInt_withLong_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jint pos, jlong active0) {
  return EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveNfa_0WithInt_withInt_(self, EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, pos, active0), pos + 1);
}

jint EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopAtPosWithInt_withInt_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jint pos, jint kind) {
  self->jjmatchedKind_ = kind;
  self->jjmatchedPos_ = pos;
  return pos + 1;
}

jint EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveStringLiteralDfa0_0(EduStanfordNlpTreesTregexTregexParserTokenManager *self) {
  switch (self->curChar_) {
    case 9:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStartNfaWithStates_0WithInt_withInt_withInt_(self, 0, 3, 6);
    case 10:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 13);
    case 33:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 16);
    case 35:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 18);
    case 37:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 19);
    case 38:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 22);
    case 40:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 14);
    case 41:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 15);
    case 59:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 27);
    case 60:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveStringLiteralDfa1_0WithLong_(self, (jlong) 0x20LL);
    case 61:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStartNfaWithStates_0WithInt_withInt_withInt_(self, 0, 20, 1);
    case 63:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 23);
    case 64:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 17);
    case 91:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 24);
    case 93:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 25);
    case 95:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveStringLiteralDfa1_0WithLong_(self, (jlong) 0x200LL);
    case 123:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 26);
    case 124:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 12);
    case 125:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 28);
    case 126:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 21);
    default:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveNfa_0WithInt_withInt_(self, 0, 0);
  }
}

jint EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveStringLiteralDfa1_0WithLong_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jlong active0) {
  @try {
    self->curChar_ = [((EduStanfordNlpTreesTregexSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 0, active0);
    return 1;
  }
  switch (self->curChar_) {
    case 46:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveStringLiteralDfa2_0WithLong_withLong_(self, active0, (jlong) 0x20LL);
    case 95:
    if ((active0 & (jlong) 0x200LL) != 0LL) return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopAtPosWithInt_withInt_(self, 1, 9);
    break;
    default:
    break;
  }
  return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStartNfa_0WithInt_withLong_(self, 0, active0);
}

jint EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveStringLiteralDfa2_0WithLong_withLong_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jlong old0, jlong active0) {
  if (((active0 &= old0)) == 0LL) return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStartNfa_0WithInt_withLong_(self, 0, old0);
  @try {
    self->curChar_ = [((EduStanfordNlpTreesTregexSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 1, active0);
    return 2;
  }
  switch (self->curChar_) {
    case 46:
    return EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveStringLiteralDfa3_0WithLong_withLong_(self, active0, (jlong) 0x20LL);
    default:
    break;
  }
  return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStartNfa_0WithInt_withLong_(self, 1, active0);
}

jint EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveStringLiteralDfa3_0WithLong_withLong_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jlong old0, jlong active0) {
  if (((active0 &= old0)) == 0LL) return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStartNfa_0WithInt_withLong_(self, 1, old0);
  @try {
    self->curChar_ = [((EduStanfordNlpTreesTregexSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, 2, active0);
    return 3;
  }
  switch (self->curChar_) {
    case 46:
    if ((active0 & (jlong) 0x20LL) != 0LL) return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStopAtPosWithInt_withInt_(self, 3, 5);
    break;
    default:
    break;
  }
  return EduStanfordNlpTreesTregexTregexParserTokenManager_jjStartNfa_0WithInt_withLong_(self, 2, active0);
}

jint EduStanfordNlpTreesTregexTregexParserTokenManager_jjStartNfaWithStates_0WithInt_withInt_withInt_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jint pos, jint kind, jint state) {
  self->jjmatchedKind_ = kind;
  self->jjmatchedPos_ = pos;
  @try {
    self->curChar_ = [((EduStanfordNlpTreesTregexSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    return pos + 1;
  }
  return EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveNfa_0WithInt_withInt_(self, state, pos + 1);
}

jint EduStanfordNlpTreesTregexTregexParserTokenManager_jjMoveNfa_0WithInt_withInt_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jint startState, jint curPos) {
  __unused jint startsAt = 0;
  self->jjnewStateCnt_ = 42;
  __unused jint i = 1;
  *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), 0) = startState;
  __unused jint kind = (jint) 0x7fffffff;
  for (; ; ) {
    if (++self->jjround_ == (jint) 0x7fffffff) EduStanfordNlpTreesTregexTregexParserTokenManager_ReInitRounds(self);
    if (self->curChar_ < 64) {
      __unused jlong l = JreLShift64(1LL, self->curChar_);
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 26:
          if (self->curChar_ == 43) {
            if (kind > 6) kind = 6;
          }
          else if (self->curChar_ == 61) {
            if (kind > 4) kind = 4;
          }
          else if (self->curChar_ == 60) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 33);
          }
          else if (self->curChar_ == 35) {
            if (kind > 4) kind = 4;
          }
          else if (self->curChar_ == 58) {
            if (kind > 4) kind = 4;
          }
          else if (self->curChar_ == 45) {
            if (kind > 4) kind = 4;
          }
          else if (self->curChar_ == 44) {
            if (kind > 4) kind = 4;
          }
          if (self->curChar_ == 60) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 31);
          }
          if (self->curChar_ == 60) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 29);
          }
          if (self->curChar_ == 60) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 16);
          }
          if (self->curChar_ == 60) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 20);
          }
          if (self->curChar_ == 60) {
            if (kind > 4) kind = 4;
          }
          break;
          case 0:
          if (((jlong) 0x2c84ffffdbffLL & l) != 0LL) {
            if (kind > 8) kind = 8;
            {
              EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 6);
            }
          }
          else if (((jlong) 0x3ff000000000000LL & l) != 0LL) {
            if (kind > 7) kind = 7;
            {
              EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 4);
            }
          }
          else if (((jlong) 0x5400501000000000LL & l) != 0LL) {
            if (kind > 4) kind = 4;
          }
          else if (self->curChar_ == 47) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 0, 2);
          }
          else if (self->curChar_ == 61) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 1);
          }
          if (self->curChar_ == 62) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 3, 14);
          }
          else if (self->curChar_ == 60) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 15, 27);
          }
          else if (self->curChar_ == 44) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 20, 23);
          }
          else if (self->curChar_ == 46) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 18, 23);
          }
          else if (self->curChar_ == 36) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 28, 35);
          }
          else if (self->curChar_ == 45) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 4);
          }
          break;
          case 1:
          if (self->curChar_ == 61 && kind > 4) kind = 4;
          break;
          case 2:
          if (self->curChar_ == 61) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 1);
          }
          break;
          case 3:
          if (self->curChar_ == 45) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 4);
          }
          break;
          case 4:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 7) kind = 7;
          {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 4);
          }
          break;
          case 5:
          if (((jlong) 0x2c84ffffdbffLL & l) == 0LL) break;
          if (kind > 8) kind = 8;
          {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 6);
          }
          break;
          case 6:
          if (((jlong) 0xbff2c84ffffdbffLL & l) == 0LL) break;
          if (kind > 8) kind = 8;
          {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 6);
          }
          break;
          case 7:
          case 8:
          if (self->curChar_ == 47) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 0, 2);
          }
          break;
          case 10:
          if (((jlong) 0xffff7fffffffdbffLL & l) != 0LL) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 0, 2);
          }
          break;
          case 11:
          if (self->curChar_ == 47 && kind > 10) kind = 10;
          break;
          case 13:
          if (self->curChar_ == 36) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 28, 35);
          }
          break;
          case 14:
          if (self->curChar_ == 43 && kind > 4) kind = 4;
          break;
          case 15:
          if (self->curChar_ == 43) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 14);
          }
          break;
          case 16:
          if (self->curChar_ == 45 && kind > 4) kind = 4;
          break;
          case 17:
          if (self->curChar_ == 45) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 16);
          }
          break;
          case 18:
          if (self->curChar_ == 46 && kind > 4) kind = 4;
          break;
          case 19:
          if (self->curChar_ == 46) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 18);
          }
          break;
          case 20:
          if (self->curChar_ == 44 && kind > 4) kind = 4;
          break;
          case 21:
          if (self->curChar_ == 44) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 20);
          }
          break;
          case 22:
          if (self->curChar_ == 46) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 18, 23);
          }
          break;
          case 23:
          if (self->curChar_ == 43 && kind > 6) kind = 6;
          break;
          case 24:
          if (self->curChar_ == 44) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 20, 23);
          }
          break;
          case 25:
          if (self->curChar_ == 60) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 15, 27);
          }
          break;
          case 27:
          if (self->curChar_ == 60) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 20);
          }
          break;
          case 28:
          if (self->curChar_ == 60) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 16);
          }
          break;
          case 30:
          if (self->curChar_ == 60) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 29);
          }
          break;
          case 31:
          if (self->curChar_ == 58 && kind > 4) kind = 4;
          break;
          case 32:
          if (self->curChar_ == 60) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 31);
          }
          break;
          case 33:
          if (self->curChar_ == 35 && kind > 4) kind = 4;
          break;
          case 34:
          if (self->curChar_ == 60) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 33);
          }
          break;
          case 35:
          if (self->curChar_ == 62) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 3, 14);
          }
          break;
          case 36:
          if (self->curChar_ == 62 && kind > 4) kind = 4;
          break;
          case 37:
          if (self->curChar_ == 62) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 20);
          }
          break;
          case 38:
          if (self->curChar_ == 62) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 16);
          }
          break;
          case 39:
          if (self->curChar_ == 62) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 29);
          }
          break;
          case 40:
          if (self->curChar_ == 62) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 31);
          }
          break;
          case 41:
          if (self->curChar_ == 62) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 33);
          }
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else if (self->curChar_ < 128) {
      __unused jlong l = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 26:
          case 29:
          if (self->curChar_ == 96 && kind > 4) kind = 4;
          break;
          case 0:
          if (((jlong) 0x87ffffff57fffffeLL & l) != 0LL) {
            if (kind > 8) kind = 8;
            {
              EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 6);
            }
          }
          if (((jlong) 0x7fffffe07fffffeLL & l) != 0LL) {
            if (kind > 11) kind = 11;
            {
              EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 12);
            }
          }
          break;
          case 5:
          if (((jlong) 0x87ffffff57fffffeLL & l) == 0LL) break;
          if (kind > 8) kind = 8;
          {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 6);
          }
          break;
          case 6:
          if (((jlong) 0xbfffffffd7fffffeLL & l) == 0LL) break;
          if (kind > 8) kind = 8;
          {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 6);
          }
          break;
          case 9:
          if (self->curChar_ == 92) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 8;
          break;
          case 10:
          {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjAddStatesWithInt_withInt_(self, 0, 2);
          }
          break;
          case 12:
          if (((jlong) 0x7fffffe07fffffeLL & l) == 0LL) break;
          if (kind > 11) kind = 11;
          {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 12);
          }
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else {
      __unused jint hiByte = (JreRShift32(self->curChar_, 8));
      __unused jint i1 = JreRShift32(hiByte, 6);
      __unused jlong l1 = JreLShift64(1LL, (hiByte & 077));
      __unused jint i2 = JreRShift32((self->curChar_ & (jint) 0xff), 6);
      __unused jlong l2 = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 0:
          case 6:
          if (!EduStanfordNlpTreesTregexTregexParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) break;
          if (kind > 8) kind = 8;
          {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, 6);
          }
          break;
          case 10:
          if (EduStanfordNlpTreesTregexTregexParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) {
            EduStanfordNlpTreesTregexTregexParserTokenManager_jjAddStatesWithInt_withInt_(self, 0, 2);
          }
          break;
          default:
          if (i1 == 0 || l1 == 0 || i2 == 0 || l2 == 0) break;
          else break;
        }
      }
      while (i != startsAt);
    }
    if (kind != (jint) 0x7fffffff) {
      self->jjmatchedKind_ = kind;
      self->jjmatchedPos_ = curPos;
      kind = (jint) 0x7fffffff;
    }
    ++curPos;
    if ((i = self->jjnewStateCnt_) == (startsAt = 42 - (self->jjnewStateCnt_ = startsAt))) return curPos;
    @try {
      self->curChar_ = [((EduStanfordNlpTreesTregexSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
    }
    @catch (JavaIoIOException *e) {
      return curPos;
    }
  }
}

jboolean EduStanfordNlpTreesTregexTregexParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(jint hiByte, jint i1, jint i2, jlong l1, jlong l2) {
  EduStanfordNlpTreesTregexTregexParserTokenManager_initialize();
  switch (hiByte) {
    case 0:
    return ((IOSLongArray_Get(nil_chk(EduStanfordNlpTreesTregexTregexParserTokenManager_jjbitVec2), i2) & l2) != 0LL);
    default:
    if ((IOSLongArray_Get(nil_chk(EduStanfordNlpTreesTregexTregexParserTokenManager_jjbitVec0), i1) & l1) != 0LL) return true;
    return false;
  }
}

void EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jint state) {
  if (IOSIntArray_Get(nil_chk(self->jjrounds_), state) != self->jjround_) {
    *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), self->jjnewStateCnt_++) = state;
    *IOSIntArray_GetRef(self->jjrounds_, state) = self->jjround_;
  }
}

void EduStanfordNlpTreesTregexTregexParserTokenManager_jjAddStatesWithInt_withInt_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jint start, jint end) {
  do {
    *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), self->jjnewStateCnt_++) = IOSIntArray_Get(nil_chk(EduStanfordNlpTreesTregexTregexParserTokenManager_jjnextStates), start);
  }
  while (start++ != end);
}

void EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jint state1, jint state2) {
  EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, state1);
  EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, state2);
}

void EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddStatesWithInt_withInt_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, jint start, jint end) {
  do {
    EduStanfordNlpTreesTregexTregexParserTokenManager_jjCheckNAddWithInt_(self, IOSIntArray_Get(nil_chk(EduStanfordNlpTreesTregexTregexParserTokenManager_jjnextStates), start));
  }
  while (start++ != end);
}

void EduStanfordNlpTreesTregexTregexParserTokenManager_initWithEduStanfordNlpTreesTregexSimpleCharStream_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, EduStanfordNlpTreesTregexSimpleCharStream *stream) {
  NSObject_init(self);
  self->debugStream_ = JreLoadStatic(JavaLangSystem, out);
  self->curLexState_ = 0;
  self->defaultLexState_ = 0;
  self->jjrounds_ = [IOSIntArray newArrayWithLength:42];
  self->jjstateSet_ = [IOSIntArray newArrayWithLength:2 * 42];
  self->input_stream_ = stream;
}

EduStanfordNlpTreesTregexTregexParserTokenManager *new_EduStanfordNlpTreesTregexTregexParserTokenManager_initWithEduStanfordNlpTreesTregexSimpleCharStream_(EduStanfordNlpTreesTregexSimpleCharStream *stream) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTregexParserTokenManager, initWithEduStanfordNlpTreesTregexSimpleCharStream_, stream)
}

EduStanfordNlpTreesTregexTregexParserTokenManager *create_EduStanfordNlpTreesTregexTregexParserTokenManager_initWithEduStanfordNlpTreesTregexSimpleCharStream_(EduStanfordNlpTreesTregexSimpleCharStream *stream) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTregexParserTokenManager, initWithEduStanfordNlpTreesTregexSimpleCharStream_, stream)
}

void EduStanfordNlpTreesTregexTregexParserTokenManager_initWithEduStanfordNlpTreesTregexSimpleCharStream_withInt_(EduStanfordNlpTreesTregexTregexParserTokenManager *self, EduStanfordNlpTreesTregexSimpleCharStream *stream, jint lexState) {
  NSObject_init(self);
  self->debugStream_ = JreLoadStatic(JavaLangSystem, out);
  self->curLexState_ = 0;
  self->defaultLexState_ = 0;
  self->jjrounds_ = [IOSIntArray newArrayWithLength:42];
  self->jjstateSet_ = [IOSIntArray newArrayWithLength:2 * 42];
  [self ReInitWithEduStanfordNlpTreesTregexSimpleCharStream:stream];
  [self SwitchToWithInt:lexState];
}

EduStanfordNlpTreesTregexTregexParserTokenManager *new_EduStanfordNlpTreesTregexTregexParserTokenManager_initWithEduStanfordNlpTreesTregexSimpleCharStream_withInt_(EduStanfordNlpTreesTregexSimpleCharStream *stream, jint lexState) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTregexParserTokenManager, initWithEduStanfordNlpTreesTregexSimpleCharStream_withInt_, stream, lexState)
}

EduStanfordNlpTreesTregexTregexParserTokenManager *create_EduStanfordNlpTreesTregexTregexParserTokenManager_initWithEduStanfordNlpTreesTregexSimpleCharStream_withInt_(EduStanfordNlpTreesTregexSimpleCharStream *stream, jint lexState) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTregexParserTokenManager, initWithEduStanfordNlpTreesTregexSimpleCharStream_withInt_, stream, lexState)
}

void EduStanfordNlpTreesTregexTregexParserTokenManager_ReInitRounds(EduStanfordNlpTreesTregexTregexParserTokenManager *self) {
  __unused jint i;
  self->jjround_ = (jint) 0x80000001;
  for (i = 42; i-- > 0; ) *IOSIntArray_GetRef(nil_chk(self->jjrounds_), i) = -0x7fffffff - 1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTregexTregexParserTokenManager)
