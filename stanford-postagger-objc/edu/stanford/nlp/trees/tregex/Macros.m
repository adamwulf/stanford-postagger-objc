//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/tregex/Macros.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/io/RuntimeIOException.h"
#include "edu/stanford/nlp/trees/tregex/Macros.h"
#include "edu/stanford/nlp/trees/tregex/TregexPatternCompiler.h"
#include "edu/stanford/nlp/util/Pair.h"
#include "java/io/BufferedReader.h"
#include "java/io/FileInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStreamReader.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface EduStanfordNlpTreesTregexMacros ()

- (instancetype)init;

@end

__attribute__((unused)) static void EduStanfordNlpTreesTregexMacros_init(EduStanfordNlpTreesTregexMacros *self);

__attribute__((unused)) static EduStanfordNlpTreesTregexMacros *new_EduStanfordNlpTreesTregexMacros_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesTregexMacros *create_EduStanfordNlpTreesTregexMacros_init();

@implementation EduStanfordNlpTreesTregexMacros

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesTregexMacros_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (id<JavaUtilList>)readMacrosWithNSString:(NSString *)filename {
  return EduStanfordNlpTreesTregexMacros_readMacrosWithNSString_(filename);
}

+ (id<JavaUtilList>)readMacrosWithNSString:(NSString *)filename
                              withNSString:(NSString *)encoding {
  return EduStanfordNlpTreesTregexMacros_readMacrosWithNSString_withNSString_(filename, encoding);
}

+ (id<JavaUtilList>)readMacrosWithJavaIoBufferedReader:(JavaIoBufferedReader *)bin {
  return EduStanfordNlpTreesTregexMacros_readMacrosWithJavaIoBufferedReader_(bin);
}

+ (void)addAllMacrosWithEduStanfordNlpTreesTregexTregexPatternCompiler:(EduStanfordNlpTreesTregexTregexPatternCompiler *)compiler
                                                          withNSString:(NSString *)filename
                                                          withNSString:(NSString *)encoding {
  EduStanfordNlpTreesTregexMacros_addAllMacrosWithEduStanfordNlpTreesTregexTregexPatternCompiler_withNSString_withNSString_(compiler, filename, encoding);
}

+ (void)addAllMacrosWithEduStanfordNlpTreesTregexTregexPatternCompiler:(EduStanfordNlpTreesTregexTregexPatternCompiler *)compiler
                                              withJavaIoBufferedReader:(JavaIoBufferedReader *)br {
  EduStanfordNlpTreesTregexMacros_addAllMacrosWithEduStanfordNlpTreesTregexTregexPatternCompiler_withJavaIoBufferedReader_(compiler, br);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 0, 3, -1, 4, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 0, 5, -1, 6, -1, -1 },
    { NULL, "V", 0x9, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 7, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readMacrosWithNSString:);
  methods[2].selector = @selector(readMacrosWithNSString:withNSString:);
  methods[3].selector = @selector(readMacrosWithJavaIoBufferedReader:);
  methods[4].selector = @selector(addAllMacrosWithEduStanfordNlpTreesTregexTregexPatternCompiler:withNSString:withNSString:);
  methods[5].selector = @selector(addAllMacrosWithEduStanfordNlpTreesTregexTregexPatternCompiler:withJavaIoBufferedReader:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "readMacros", "LNSString;", "(Ljava/lang/String;)Ljava/util/List<Ledu/stanford/nlp/util/Pair<Ljava/lang/String;Ljava/lang/String;>;>;", "LNSString;LNSString;", "(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List<Ledu/stanford/nlp/util/Pair<Ljava/lang/String;Ljava/lang/String;>;>;", "LJavaIoBufferedReader;", "(Ljava/io/BufferedReader;)Ljava/util/List<Ledu/stanford/nlp/util/Pair<Ljava/lang/String;Ljava/lang/String;>;>;", "addAllMacros", "LEduStanfordNlpTreesTregexTregexPatternCompiler;LNSString;LNSString;", "LEduStanfordNlpTreesTregexTregexPatternCompiler;LJavaIoBufferedReader;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTregexMacros = { "Macros", "edu.stanford.nlp.trees.tregex", ptrTable, methods, NULL, 7, 0x1, 6, 0, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesTregexMacros;
}

@end

void EduStanfordNlpTreesTregexMacros_init(EduStanfordNlpTreesTregexMacros *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesTregexMacros *new_EduStanfordNlpTreesTregexMacros_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexMacros, init)
}

EduStanfordNlpTreesTregexMacros *create_EduStanfordNlpTreesTregexMacros_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexMacros, init)
}

id<JavaUtilList> EduStanfordNlpTreesTregexMacros_readMacrosWithNSString_(NSString *filename) {
  EduStanfordNlpTreesTregexMacros_initialize();
  return EduStanfordNlpTreesTregexMacros_readMacrosWithNSString_withNSString_(filename, @"utf-8");
}

id<JavaUtilList> EduStanfordNlpTreesTregexMacros_readMacrosWithNSString_withNSString_(NSString *filename, NSString *encoding) {
  EduStanfordNlpTreesTregexMacros_initialize();
  @try {
    JavaIoBufferedReader *bin = new_JavaIoBufferedReader_initWithJavaIoReader_(new_JavaIoInputStreamReader_initWithJavaIoInputStream_withNSString_(new_JavaIoFileInputStream_initWithNSString_(filename), encoding));
    return EduStanfordNlpTreesTregexMacros_readMacrosWithJavaIoBufferedReader_(bin);
  }
  @catch (JavaIoIOException *e) {
    @throw new_EduStanfordNlpIoRuntimeIOException_initWithNSException_(e);
  }
}

id<JavaUtilList> EduStanfordNlpTreesTregexMacros_readMacrosWithJavaIoBufferedReader_(JavaIoBufferedReader *bin) {
  EduStanfordNlpTreesTregexMacros_initialize();
  @try {
    id<JavaUtilList> macros = new_JavaUtilArrayList_init();
    NSString *line;
    jint lineNumber = 0;
    while ((line = [((JavaIoBufferedReader *) nil_chk(bin)) readLine]) != nil) {
      ++lineNumber;
      NSString *trimmed = [((NSString *) nil_chk(line)) trim];
      if ([((NSString *) nil_chk(trimmed)) isEqual:@""] || [trimmed charAtWithInt:0] == '#') {
        continue;
      }
      IOSObjectArray *pieces = [line split:@"\t" limit:2];
      if (((IOSObjectArray *) nil_chk(pieces))->size_ < 2) {
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$", @"Expected lines of the format original (tab) replacement.  Line number ", lineNumber, @" does not match."));
      }
      [macros addWithId:new_EduStanfordNlpUtilPair_initWithId_withId_(IOSObjectArray_Get(pieces, 0), IOSObjectArray_Get(pieces, 1))];
    }
    return macros;
  }
  @catch (JavaIoIOException *e) {
    @throw new_EduStanfordNlpIoRuntimeIOException_initWithNSException_(e);
  }
}

void EduStanfordNlpTreesTregexMacros_addAllMacrosWithEduStanfordNlpTreesTregexTregexPatternCompiler_withNSString_withNSString_(EduStanfordNlpTreesTregexTregexPatternCompiler *compiler, NSString *filename, NSString *encoding) {
  EduStanfordNlpTreesTregexMacros_initialize();
  if (filename == nil || [filename isEqual:@""]) {
    return;
  }
  for (EduStanfordNlpUtilPair * __strong macro in nil_chk(EduStanfordNlpTreesTregexMacros_readMacrosWithNSString_withNSString_(filename, encoding))) {
    [((EduStanfordNlpTreesTregexTregexPatternCompiler *) nil_chk(compiler)) addMacroWithNSString:[((EduStanfordNlpUtilPair *) nil_chk(macro)) first] withNSString:[macro second]];
  }
}

void EduStanfordNlpTreesTregexMacros_addAllMacrosWithEduStanfordNlpTreesTregexTregexPatternCompiler_withJavaIoBufferedReader_(EduStanfordNlpTreesTregexTregexPatternCompiler *compiler, JavaIoBufferedReader *br) {
  EduStanfordNlpTreesTregexMacros_initialize();
  for (EduStanfordNlpUtilPair * __strong macro in nil_chk(EduStanfordNlpTreesTregexMacros_readMacrosWithJavaIoBufferedReader_(br))) {
    [((EduStanfordNlpTreesTregexTregexPatternCompiler *) nil_chk(compiler)) addMacroWithNSString:[((EduStanfordNlpUtilPair *) nil_chk(macro)) first] withNSString:[macro second]];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTregexMacros)
