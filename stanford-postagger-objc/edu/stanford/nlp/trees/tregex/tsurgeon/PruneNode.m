//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/tregex/tsurgeon/PruneNode.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/Trees.h"
#include "edu/stanford/nlp/trees/tregex/TregexMatcher.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/PruneNode.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonMatcher.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPattern.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@interface EduStanfordNlpTreesTregexTsurgeonPruneNode ()

+ (EduStanfordNlpTreesTree *)pruneHelperWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)root
                                        withEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)nodeToPrune;

@end

__attribute__((unused)) static EduStanfordNlpTreesTree *EduStanfordNlpTreesTregexTsurgeonPruneNode_pruneHelperWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *root, EduStanfordNlpTreesTree *nodeToPrune);

@interface EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher : EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonPruneNode:(EduStanfordNlpTreesTregexTsurgeonPruneNode *)outer$
                                                   withJavaUtilMap:(id<JavaUtilMap>)newNodeNames
        withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer;

- (EduStanfordNlpTreesTree *)evaluateWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                      withEduStanfordNlpTreesTregexTregexMatcher:(EduStanfordNlpTreesTregexTregexMatcher *)tregex;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher)

__attribute__((unused)) static void EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonPruneNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher *self, EduStanfordNlpTreesTregexTsurgeonPruneNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer);

__attribute__((unused)) static EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher *new_EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonPruneNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonPruneNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher *create_EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonPruneNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonPruneNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher)

@implementation EduStanfordNlpTreesTregexTsurgeonPruneNode

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray:(IOSObjectArray *)children {
  EduStanfordNlpTreesTregexTsurgeonPruneNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(self, children);
  return self;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)children {
  EduStanfordNlpTreesTregexTsurgeonPruneNode_initWithJavaUtilList_(self, children);
  return self;
}

- (EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *)matcherWithJavaUtilMap:(id<JavaUtilMap>)newNodeNames
                  withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer {
  return new_EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonPruneNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, newNodeNames, coindexer);
}

+ (EduStanfordNlpTreesTree *)pruneHelperWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)root
                                        withEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)nodeToPrune {
  return EduStanfordNlpTreesTregexTsurgeonPruneNode_pruneHelperWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTree_(root, nodeToPrune);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0xa, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray:);
  methods[1].selector = @selector(initWithJavaUtilList:);
  methods[2].selector = @selector(matcherWithJavaUtilMap:withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:);
  methods[3].selector = @selector(pruneHelperWithEduStanfordNlpTreesTree:withEduStanfordNlpTreesTree:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "[LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", "LJavaUtilList;", "(Ljava/util/List<Ledu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPattern;>;)V", "matcher", "LJavaUtilMap;LEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator;", "(Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/trees/Tree;>;Ledu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator;)Ledu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonMatcher;", "pruneHelper", "LEduStanfordNlpTreesTree;LEduStanfordNlpTreesTree;", "LEduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTregexTsurgeonPruneNode = { "PruneNode", "edu.stanford.nlp.trees.tregex.tsurgeon", ptrTable, methods, NULL, 7, 0x0, 4, 0, -1, 8, -1, -1, -1 };
  return &_EduStanfordNlpTreesTregexTsurgeonPruneNode;
}

@end

void EduStanfordNlpTreesTregexTsurgeonPruneNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(EduStanfordNlpTreesTregexTsurgeonPruneNode *self, IOSObjectArray *children) {
  EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_initWithNSString_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(self, @"prune", children);
}

EduStanfordNlpTreesTregexTsurgeonPruneNode *new_EduStanfordNlpTreesTregexTsurgeonPruneNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(IOSObjectArray *children) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonPruneNode, initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_, children)
}

EduStanfordNlpTreesTregexTsurgeonPruneNode *create_EduStanfordNlpTreesTregexTsurgeonPruneNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(IOSObjectArray *children) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonPruneNode, initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_, children)
}

void EduStanfordNlpTreesTregexTsurgeonPruneNode_initWithJavaUtilList_(EduStanfordNlpTreesTregexTsurgeonPruneNode *self, id<JavaUtilList> children) {
  EduStanfordNlpTreesTregexTsurgeonPruneNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(self, [((id<JavaUtilList>) nil_chk(children)) toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[children size] type:EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_class_()]]);
}

EduStanfordNlpTreesTregexTsurgeonPruneNode *new_EduStanfordNlpTreesTregexTsurgeonPruneNode_initWithJavaUtilList_(id<JavaUtilList> children) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonPruneNode, initWithJavaUtilList_, children)
}

EduStanfordNlpTreesTregexTsurgeonPruneNode *create_EduStanfordNlpTreesTregexTsurgeonPruneNode_initWithJavaUtilList_(id<JavaUtilList> children) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonPruneNode, initWithJavaUtilList_, children)
}

EduStanfordNlpTreesTree *EduStanfordNlpTreesTregexTsurgeonPruneNode_pruneHelperWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *root, EduStanfordNlpTreesTree *nodeToPrune) {
  EduStanfordNlpTreesTregexTsurgeonPruneNode_initialize();
  if (nodeToPrune == root) return nil;
  EduStanfordNlpTreesTree *parent = [((EduStanfordNlpTreesTree *) nil_chk(nodeToPrune)) parentWithEduStanfordNlpTreesTree:root];
  (void) [((EduStanfordNlpTreesTree *) nil_chk(parent)) removeChildWithInt:EduStanfordNlpTreesTrees_objectEqualityIndexOfWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTree_(parent, nodeToPrune)];
  if (((IOSObjectArray *) nil_chk([parent children]))->size_ == 0) return EduStanfordNlpTreesTregexTsurgeonPruneNode_pruneHelperWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTree_(root, parent);
  return root;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTregexTsurgeonPruneNode)

@implementation EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonPruneNode:(EduStanfordNlpTreesTregexTsurgeonPruneNode *)outer$
                                                   withJavaUtilMap:(id<JavaUtilMap>)newNodeNames
        withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer {
  EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonPruneNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, outer$, newNodeNames, coindexer);
  return self;
}

- (EduStanfordNlpTreesTree *)evaluateWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                      withEduStanfordNlpTreesTregexTregexMatcher:(EduStanfordNlpTreesTregexTregexMatcher *)tregex {
  jboolean prunedWholeTree = false;
  {
    IOSObjectArray *a__ = childMatcher_;
    EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *child = *b__++;
      EduStanfordNlpTreesTree *nodeToPrune = [((EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *) nil_chk(child)) evaluateWithEduStanfordNlpTreesTree:tree withEduStanfordNlpTreesTregexTregexMatcher:tregex];
      if (EduStanfordNlpTreesTregexTsurgeonPruneNode_pruneHelperWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTree_(tree, nodeToPrune) == nil) prunedWholeTree = true;
    }
  }
  return prunedWholeTree ? nil : tree;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesTregexTsurgeonPruneNode:withJavaUtilMap:withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:);
  methods[1].selector = @selector(evaluateWithEduStanfordNlpTreesTree:withEduStanfordNlpTreesTregexTregexMatcher:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpTreesTregexTsurgeonPruneNode;LJavaUtilMap;LEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator;", "(Ledu/stanford/nlp/trees/tregex/tsurgeon/PruneNode;Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/trees/Tree;>;Ledu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator;)V", "evaluate", "LEduStanfordNlpTreesTree;LEduStanfordNlpTreesTregexTregexMatcher;", "LEduStanfordNlpTreesTregexTsurgeonPruneNode;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher = { "Matcher", "edu.stanford.nlp.trees.tregex.tsurgeon", ptrTable, methods, NULL, 7, 0x2, 2, 0, 4, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher;
}

@end

void EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonPruneNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher *self, EduStanfordNlpTreesTregexTsurgeonPruneNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, outer$, newNodeNames, coindexer);
}

EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher *new_EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonPruneNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonPruneNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher, initWithEduStanfordNlpTreesTregexTsurgeonPruneNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_, outer$, newNodeNames, coindexer)
}

EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher *create_EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonPruneNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonPruneNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher, initWithEduStanfordNlpTreesTregexTsurgeonPruneNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_, outer$, newNodeNames, coindexer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTregexTsurgeonPruneNode_Matcher)
