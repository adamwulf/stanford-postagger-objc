//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/tregex/tsurgeon/ReplaceNode.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/tregex/TregexMatcher.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/AuxiliaryTree.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/HoldTreeNode.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/ReplaceNode.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonMatcher.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPattern.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonRuntimeException.h"
#include "edu/stanford/nlp/util/ArrayUtils.h"
#include "edu/stanford/nlp/util/CollectionUtils.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/function/Function.h"

inline id<JavaUtilFunctionFunction> EduStanfordNlpTreesTregexTsurgeonReplaceNode_get_convertAuxiliaryToHold();
static id<JavaUtilFunctionFunction> EduStanfordNlpTreesTregexTsurgeonReplaceNode_convertAuxiliaryToHold;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesTregexTsurgeonReplaceNode, convertAuxiliaryToHold, id<JavaUtilFunctionFunction>)

@interface EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher : EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher {
 @public
  EduStanfordNlpTreesTregexTsurgeonReplaceNode *this$0_;
}

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonReplaceNode:(EduStanfordNlpTreesTregexTsurgeonReplaceNode *)outer$
                                                     withJavaUtilMap:(id<JavaUtilMap>)newNodeNames
          withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer;

- (EduStanfordNlpTreesTree *)evaluateWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                      withEduStanfordNlpTreesTregexTregexMatcher:(EduStanfordNlpTreesTregexTregexMatcher *)tregex;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher)

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher, this$0_, EduStanfordNlpTreesTregexTsurgeonReplaceNode *)

__attribute__((unused)) static void EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonReplaceNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher *self, EduStanfordNlpTreesTregexTsurgeonReplaceNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer);

__attribute__((unused)) static EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher *new_EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonReplaceNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonReplaceNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher *create_EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonReplaceNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonReplaceNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher)

@interface EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1 : NSObject < JavaUtilFunctionFunction >

- (id)applyWithId:(EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *)t;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1)

inline EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1 *EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1_get_instance();
static EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1 *EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1, instance, EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1 *)

__attribute__((unused)) static void EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1_init(EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1 *self);

__attribute__((unused)) static EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1 *new_EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1 *create_EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1_init();

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesTregexTsurgeonReplaceNode)

@implementation EduStanfordNlpTreesTregexTsurgeonReplaceNode

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern:(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)oldNode
               withEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray:(IOSObjectArray *)newNodes {
  EduStanfordNlpTreesTregexTsurgeonReplaceNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(self, oldNode, newNodes);
  return self;
}

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern:(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)oldNode
                                                        withJavaUtilList:(id<JavaUtilList>)trees {
  EduStanfordNlpTreesTregexTsurgeonReplaceNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withJavaUtilList_(self, oldNode, trees);
  return self;
}

- (EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *)matcherWithJavaUtilMap:(id<JavaUtilMap>)newNodeNames
                  withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer {
  return new_EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonReplaceNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, newNodeNames, coindexer);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x81, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, 2, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher;", 0x1, 3, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern:withEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray:);
  methods[1].selector = @selector(initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern:withJavaUtilList:);
  methods[2].selector = @selector(matcherWithJavaUtilMap:withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "convertAuxiliaryToHold", "LJavaUtilFunctionFunction;", .constantValue.asLong = 0, 0x1a, -1, 6, 7, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;[LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;LJavaUtilList;", "(Ledu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPattern;Ljava/util/List<Ledu/stanford/nlp/trees/tregex/tsurgeon/AuxiliaryTree;>;)V", "matcher", "LJavaUtilMap;LEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator;", "(Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/trees/Tree;>;Ledu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator;)Ledu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonMatcher;", &EduStanfordNlpTreesTregexTsurgeonReplaceNode_convertAuxiliaryToHold, "Ljava/util/function/Function<Ledu/stanford/nlp/trees/tregex/tsurgeon/AuxiliaryTree;Ledu/stanford/nlp/trees/tregex/tsurgeon/HoldTreeNode;>;", "LEduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTregexTsurgeonReplaceNode = { "ReplaceNode", "edu.stanford.nlp.trees.tregex.tsurgeon", ptrTable, methods, fields, 7, 0x0, 3, 1, -1, 8, -1, -1, -1 };
  return &_EduStanfordNlpTreesTregexTsurgeonReplaceNode;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesTregexTsurgeonReplaceNode class]) {
    EduStanfordNlpTreesTregexTsurgeonReplaceNode_convertAuxiliaryToHold = JreLoadStatic(EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1, instance);
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesTregexTsurgeonReplaceNode)
  }
}

@end

void EduStanfordNlpTreesTregexTsurgeonReplaceNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(EduStanfordNlpTreesTregexTsurgeonReplaceNode *self, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *oldNode, IOSObjectArray *newNodes) {
  EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_initWithNSString_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(self, @"replace", EduStanfordNlpUtilArrayUtils_concatenateWithNSObjectArray_withNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){ oldNode } count:1 type:EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_class_()], newNodes));
}

EduStanfordNlpTreesTregexTsurgeonReplaceNode *new_EduStanfordNlpTreesTregexTsurgeonReplaceNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *oldNode, IOSObjectArray *newNodes) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonReplaceNode, initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_, oldNode, newNodes)
}

EduStanfordNlpTreesTregexTsurgeonReplaceNode *create_EduStanfordNlpTreesTregexTsurgeonReplaceNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *oldNode, IOSObjectArray *newNodes) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonReplaceNode, initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_, oldNode, newNodes)
}

void EduStanfordNlpTreesTregexTsurgeonReplaceNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withJavaUtilList_(EduStanfordNlpTreesTregexTsurgeonReplaceNode *self, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *oldNode, id<JavaUtilList> trees) {
  EduStanfordNlpTreesTregexTsurgeonReplaceNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(self, oldNode, [((id<JavaUtilList>) nil_chk(EduStanfordNlpUtilCollectionUtils_transformAsListWithJavaUtilCollection_withJavaUtilFunctionFunction_(trees, EduStanfordNlpTreesTregexTsurgeonReplaceNode_convertAuxiliaryToHold))) toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[((id<JavaUtilList>) nil_chk(trees)) size] type:EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_class_()]]);
}

EduStanfordNlpTreesTregexTsurgeonReplaceNode *new_EduStanfordNlpTreesTregexTsurgeonReplaceNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withJavaUtilList_(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *oldNode, id<JavaUtilList> trees) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonReplaceNode, initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withJavaUtilList_, oldNode, trees)
}

EduStanfordNlpTreesTregexTsurgeonReplaceNode *create_EduStanfordNlpTreesTregexTsurgeonReplaceNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withJavaUtilList_(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *oldNode, id<JavaUtilList> trees) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonReplaceNode, initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withJavaUtilList_, oldNode, trees)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTregexTsurgeonReplaceNode)

@implementation EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonReplaceNode:(EduStanfordNlpTreesTregexTsurgeonReplaceNode *)outer$
                                                     withJavaUtilMap:(id<JavaUtilMap>)newNodeNames
          withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer {
  EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonReplaceNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, outer$, newNodeNames, coindexer);
  return self;
}

- (EduStanfordNlpTreesTree *)evaluateWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                      withEduStanfordNlpTreesTregexTregexMatcher:(EduStanfordNlpTreesTregexTregexMatcher *)tregex {
  EduStanfordNlpTreesTree *oldNode = [((EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *) nil_chk(IOSObjectArray_Get(nil_chk(childMatcher_), 0))) evaluateWithEduStanfordNlpTreesTree:tree withEduStanfordNlpTreesTregexTregexMatcher:tregex];
  if (oldNode == tree) {
    if (((IOSObjectArray *) nil_chk(this$0_->children_))->size_ > 2) {
      @throw new_EduStanfordNlpTreesTregexTsurgeonTsurgeonRuntimeException_initWithNSString_(@"Attempted to replace a root node with more than one node, unable to proceed");
    }
    return [((EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *) nil_chk(IOSObjectArray_Get(nil_chk(childMatcher_), 1))) evaluateWithEduStanfordNlpTreesTree:tree withEduStanfordNlpTreesTregexTregexMatcher:tregex];
  }
  EduStanfordNlpTreesTree *parent = [((EduStanfordNlpTreesTree *) nil_chk(oldNode)) parentWithEduStanfordNlpTreesTree:tree];
  jint i = [((EduStanfordNlpTreesTree *) nil_chk(parent)) objectIndexOfWithEduStanfordNlpTreesTree:oldNode];
  (void) [parent removeChildWithInt:i];
  for (jint j = 1; j < ((IOSObjectArray *) nil_chk(this$0_->children_))->size_; ++j) {
    EduStanfordNlpTreesTree *newNode = [((EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *) nil_chk(IOSObjectArray_Get(nil_chk(childMatcher_), j))) evaluateWithEduStanfordNlpTreesTree:tree withEduStanfordNlpTreesTregexTregexMatcher:tregex];
    [parent insertDtrWithEduStanfordNlpTreesTree:[((EduStanfordNlpTreesTree *) nil_chk(newNode)) deepCopy] withInt:i + j - 1];
  }
  return tree;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesTregexTsurgeonReplaceNode:withJavaUtilMap:withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:);
  methods[1].selector = @selector(evaluateWithEduStanfordNlpTreesTree:withEduStanfordNlpTreesTregexTregexMatcher:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LEduStanfordNlpTreesTregexTsurgeonReplaceNode;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTreesTregexTsurgeonReplaceNode;LJavaUtilMap;LEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator;", "(Ledu/stanford/nlp/trees/tregex/tsurgeon/ReplaceNode;Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/trees/Tree;>;Ledu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator;)V", "evaluate", "LEduStanfordNlpTreesTree;LEduStanfordNlpTreesTregexTregexMatcher;", "LEduStanfordNlpTreesTregexTsurgeonReplaceNode;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher = { "Matcher", "edu.stanford.nlp.trees.tregex.tsurgeon", ptrTable, methods, fields, 7, 0x2, 2, 1, 4, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher;
}

@end

void EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonReplaceNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher *self, EduStanfordNlpTreesTregexTsurgeonReplaceNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  self->this$0_ = outer$;
  EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, outer$, newNodeNames, coindexer);
}

EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher *new_EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonReplaceNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonReplaceNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher, initWithEduStanfordNlpTreesTregexTsurgeonReplaceNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_, outer$, newNodeNames, coindexer)
}

EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher *create_EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonReplaceNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonReplaceNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher, initWithEduStanfordNlpTreesTregexTsurgeonReplaceNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_, outer$, newNodeNames, coindexer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTregexTsurgeonReplaceNode_Matcher)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1)

@implementation EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1

- (id)applyWithId:(EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *)t {
  return new_EduStanfordNlpTreesTregexTsurgeonHoldTreeNode_initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_(t);
}

- (id<JavaUtilFunctionFunction>)andThenWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_andThenWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilFunctionFunction>)composeWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilFunctionFunction_composeWithJavaUtilFunctionFunction_(self, arg0);
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1 class]) {
    EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1_instance = new_EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1)
  }
}

@end

void EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1_init(EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1 *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1 *new_EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1, init)
}

EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1 *create_EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonReplaceNode_$Lambda$1, init)
}
