//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/tregex/tsurgeon/CreateSubtreeNode.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/ling/LabelFactory.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeFactory.h"
#include "edu/stanford/nlp/trees/tregex/TregexMatcher.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/AuxiliaryTree.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/CreateSubtreeNode.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonMatcher.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParseException.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPattern.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonRuntimeException.h"
#include "edu/stanford/nlp/util/Generics.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@interface EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode () {
 @public
  EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *auxTree_;
}

- (void)findFoot;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode, auxTree_, EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *)

__attribute__((unused)) static void EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_findFoot(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode *self);

@interface EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher : EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher {
 @public
  EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode *this$0_;
}

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode:(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode *)outer$
                                                           withJavaUtilMap:(id<JavaUtilMap>)newNodeNames
                withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer;

- (EduStanfordNlpTreesTree *)evaluateWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                      withEduStanfordNlpTreesTregexTregexMatcher:(EduStanfordNlpTreesTregexTregexMatcher *)tregex;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher)

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher, this$0_, EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode *)

__attribute__((unused)) static void EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher *self, EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer);

__attribute__((unused)) static EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher *new_EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher *create_EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher)

@implementation EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern:(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)start
                      withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree:(EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *)tree {
  EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_(self, start, tree);
  return self;
}

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern:(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)start
                    withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern:(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)end
                      withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree:(EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *)tree {
  EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_(self, start, end, tree);
  return self;
}

- (void)findFoot {
  EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_findFoot(self);
}

- (EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *)matcherWithJavaUtilMap:(id<JavaUtilMap>)newNodeNames
                  withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer {
  return new_EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, newNodeNames, coindexer);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher;", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern:withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree:);
  methods[1].selector = @selector(initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern:withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern:withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree:);
  methods[2].selector = @selector(findFoot);
  methods[3].selector = @selector(matcherWithJavaUtilMap:withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "auxTree_", "LEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;LEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree;", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;LEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree;", "matcher", "LJavaUtilMap;LEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator;", "(Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/trees/Tree;>;Ledu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator;)Ledu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonMatcher;", "LEduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode = { "CreateSubtreeNode", "edu.stanford.nlp.trees.tregex.tsurgeon", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, 5, -1, -1, -1 };
  return &_EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode;
}

@end

void EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode *self, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *start, EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *tree) {
  EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_(self, start, nil, tree);
}

EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode *new_EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *start, EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *tree) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode, initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_, start, tree)
}

EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode *create_EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *start, EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *tree) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode, initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_, start, tree)
}

void EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode *self, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *start, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *end, EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *tree) {
  EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_initWithNSString_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(self, @"combineSubtrees", (end == nil) ? [IOSObjectArray newArrayWithObjects:(id[]){ start } count:1 type:EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_class_()] : [IOSObjectArray newArrayWithObjects:(id[]){ start, end } count:2 type:EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_class_()]);
  self->auxTree_ = tree;
  EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_findFoot(self);
}

EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode *new_EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *start, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *end, EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *tree) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode, initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_, start, end, tree)
}

EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode *create_EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *start, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *end, EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *tree) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode, initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_, start, end, tree)
}

void EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_findFoot(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode *self) {
  if (((EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *) nil_chk(self->auxTree_))->foot_ == nil) {
    if (![((EduStanfordNlpTreesTree *) nil_chk(self->auxTree_->tree_)) isLeaf]) @throw new_EduStanfordNlpTreesTregexTsurgeonTsurgeonParseException_initWithNSString_(JreStrcat("$@", @"No foot node found for ", self->auxTree_));
    ((EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *) nil_chk(self->auxTree_))->foot_ = self->auxTree_->tree_;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode)

@implementation EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode:(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode *)outer$
                                                           withJavaUtilMap:(id<JavaUtilMap>)newNodeNames
                withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer {
  EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, outer$, newNodeNames, coindexer);
  return self;
}

- (EduStanfordNlpTreesTree *)evaluateWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                      withEduStanfordNlpTreesTregexTregexMatcher:(EduStanfordNlpTreesTregexTregexMatcher *)tregex {
  EduStanfordNlpTreesTree *startChild = [((EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *) nil_chk(IOSObjectArray_Get(nil_chk(childMatcher_), 0))) evaluateWithEduStanfordNlpTreesTree:tree withEduStanfordNlpTreesTregexTregexMatcher:tregex];
  EduStanfordNlpTreesTree *endChild = (((IOSObjectArray *) nil_chk(childMatcher_))->size_ == 2) ? [((EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *) nil_chk(IOSObjectArray_Get(childMatcher_, 1))) evaluateWithEduStanfordNlpTreesTree:tree withEduStanfordNlpTreesTregexTregexMatcher:tregex] : startChild;
  EduStanfordNlpTreesTree *parent = [((EduStanfordNlpTreesTree *) nil_chk(startChild)) parentWithEduStanfordNlpTreesTree:tree];
  if (parent != [endChild parentWithEduStanfordNlpTreesTree:tree]) {
    @throw new_EduStanfordNlpTreesTregexTsurgeonTsurgeonRuntimeException_initWithNSString_(JreStrcat("$@", @"Parents did not match for trees when applied to ", self));
  }
  EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *treeCopy = [((EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *) nil_chk(this$0_->auxTree_)) copy__WithEduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher:self withEduStanfordNlpTreesTreeFactory:[((EduStanfordNlpTreesTree *) nil_chk(tree)) treeFactory] withEduStanfordNlpLingLabelFactory:[((id<EduStanfordNlpLingLabel>) nil_chk([tree label])) labelFactory]];
  id<JavaUtilList> children = EduStanfordNlpUtilGenerics_newArrayList();
  id<JavaUtilList> innerChildren = EduStanfordNlpUtilGenerics_newArrayList();
  jboolean insideSpan = false;
  {
    IOSObjectArray *a__ = [((EduStanfordNlpTreesTree *) nil_chk(parent)) children];
    EduStanfordNlpTreesTree * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    EduStanfordNlpTreesTree * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      EduStanfordNlpTreesTree *child = *b__++;
      if (child == startChild || child == endChild) {
        if (!insideSpan && startChild != endChild) {
          insideSpan = true;
          [((id<JavaUtilList>) nil_chk(innerChildren)) addWithId:child];
        }
        else {
          insideSpan = false;
          [((id<JavaUtilList>) nil_chk(innerChildren)) addWithId:child];
          [((EduStanfordNlpTreesTree *) nil_chk(((EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *) nil_chk(treeCopy))->foot_)) setChildrenWithJavaUtilList:innerChildren];
          [((id<JavaUtilList>) nil_chk(children)) addWithId:treeCopy->tree_];
        }
      }
      else if (insideSpan) {
        [((id<JavaUtilList>) nil_chk(innerChildren)) addWithId:child];
      }
      else {
        [((id<JavaUtilList>) nil_chk(children)) addWithId:child];
      }
    }
  }
  [parent setChildrenWithJavaUtilList:children];
  return tree;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode:withJavaUtilMap:withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:);
  methods[1].selector = @selector(evaluateWithEduStanfordNlpTreesTree:withEduStanfordNlpTreesTregexTregexMatcher:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LEduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode;LJavaUtilMap;LEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator;", "(Ledu/stanford/nlp/trees/tregex/tsurgeon/CreateSubtreeNode;Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/trees/Tree;>;Ledu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator;)V", "evaluate", "LEduStanfordNlpTreesTree;LEduStanfordNlpTreesTregexTregexMatcher;", "LEduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher = { "Matcher", "edu.stanford.nlp.trees.tregex.tsurgeon", ptrTable, methods, fields, 7, 0x2, 2, 1, 4, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher;
}

@end

void EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher *self, EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  self->this$0_ = outer$;
  EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, outer$, newNodeNames, coindexer);
}

EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher *new_EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher, initWithEduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_, outer$, newNodeNames, coindexer)
}

EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher *create_EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher, initWithEduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_, outer$, newNodeNames, coindexer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTregexTsurgeonCreateSubtreeNode_Matcher)
