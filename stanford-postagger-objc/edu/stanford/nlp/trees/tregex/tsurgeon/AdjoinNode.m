//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/tregex/tsurgeon/AdjoinNode.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/ling/LabelFactory.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeFactory.h"
#include "edu/stanford/nlp/trees/tregex/TregexMatcher.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/AdjoinNode.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/AuxiliaryTree.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonMatcher.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPattern.h"
#include "java/lang/NullPointerException.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@interface EduStanfordNlpTreesTregexTsurgeonAdjoinNode () {
 @public
  EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *adjunctionTree_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTsurgeonAdjoinNode, adjunctionTree_, EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *)

@interface EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher : EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher {
 @public
  EduStanfordNlpTreesTregexTsurgeonAdjoinNode *this$0_;
}

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonAdjoinNode:(EduStanfordNlpTreesTregexTsurgeonAdjoinNode *)outer$
                                                    withJavaUtilMap:(id<JavaUtilMap>)newNodeNames
         withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer;

- (EduStanfordNlpTreesTree *)evaluateWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                      withEduStanfordNlpTreesTregexTregexMatcher:(EduStanfordNlpTreesTregexTregexMatcher *)tregex;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher)

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher, this$0_, EduStanfordNlpTreesTregexTsurgeonAdjoinNode *)

__attribute__((unused)) static void EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher *self, EduStanfordNlpTreesTregexTsurgeonAdjoinNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer);

__attribute__((unused)) static EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher *new_EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonAdjoinNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher *create_EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonAdjoinNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher)

@implementation EduStanfordNlpTreesTregexTsurgeonAdjoinNode

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree:(EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *)t
                  withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern:(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)p {
  EduStanfordNlpTreesTregexTsurgeonAdjoinNode_initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(self, t, p);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree:(EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *)t
withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern:(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)p {
  EduStanfordNlpTreesTregexTsurgeonAdjoinNode_initWithNSString_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(self, name, t, p);
  return self;
}

- (EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *)adjunctionTree {
  return adjunctionTree_;
}

- (EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *)matcherWithJavaUtilMap:(id<JavaUtilMap>)newNodeNames
                  withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer {
  return new_EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, newNodeNames, coindexer);
}

- (NSString *)description {
  return JreStrcat("$$$", [super description], @"<-", [((EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *) nil_chk(adjunctionTree_)) description]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher;", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree:withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern:);
  methods[1].selector = @selector(initWithNSString:withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree:withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern:);
  methods[2].selector = @selector(adjunctionTree);
  methods[3].selector = @selector(matcherWithJavaUtilMap:withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:);
  methods[4].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "adjunctionTree_", "LEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree;LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", "LNSString;LEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree;LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", "matcher", "LJavaUtilMap;LEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator;", "(Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/trees/Tree;>;Ledu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator;)Ledu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonMatcher;", "toString", "LEduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTregexTsurgeonAdjoinNode = { "AdjoinNode", "edu.stanford.nlp.trees.tregex.tsurgeon", ptrTable, methods, fields, 7, 0x0, 5, 1, -1, 6, -1, -1, -1 };
  return &_EduStanfordNlpTreesTregexTsurgeonAdjoinNode;
}

@end

void EduStanfordNlpTreesTregexTsurgeonAdjoinNode_initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(EduStanfordNlpTreesTregexTsurgeonAdjoinNode *self, EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *t, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *p) {
  EduStanfordNlpTreesTregexTsurgeonAdjoinNode_initWithNSString_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(self, @"adjoin", t, p);
}

EduStanfordNlpTreesTregexTsurgeonAdjoinNode *new_EduStanfordNlpTreesTregexTsurgeonAdjoinNode_initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *t, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *p) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonAdjoinNode, initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_, t, p)
}

EduStanfordNlpTreesTregexTsurgeonAdjoinNode *create_EduStanfordNlpTreesTregexTsurgeonAdjoinNode_initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *t, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *p) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonAdjoinNode, initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_, t, p)
}

void EduStanfordNlpTreesTregexTsurgeonAdjoinNode_initWithNSString_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(EduStanfordNlpTreesTregexTsurgeonAdjoinNode *self, NSString *name, EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *t, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *p) {
  EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_initWithNSString_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(self, name, [IOSObjectArray newArrayWithObjects:(id[]){ p } count:1 type:EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_class_()]);
  if (t == nil || p == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(JreStrcat("$@$@", @"AdjoinNode: illegal null argument, t=", t, @", p=", p));
  }
  self->adjunctionTree_ = t;
}

EduStanfordNlpTreesTregexTsurgeonAdjoinNode *new_EduStanfordNlpTreesTregexTsurgeonAdjoinNode_initWithNSString_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(NSString *name, EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *t, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *p) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonAdjoinNode, initWithNSString_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_, name, t, p)
}

EduStanfordNlpTreesTregexTsurgeonAdjoinNode *create_EduStanfordNlpTreesTregexTsurgeonAdjoinNode_initWithNSString_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(NSString *name, EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *t, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *p) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonAdjoinNode, initWithNSString_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_, name, t, p)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTregexTsurgeonAdjoinNode)

@implementation EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonAdjoinNode:(EduStanfordNlpTreesTregexTsurgeonAdjoinNode *)outer$
                                                    withJavaUtilMap:(id<JavaUtilMap>)newNodeNames
         withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer {
  EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, outer$, newNodeNames, coindexer);
  return self;
}

- (EduStanfordNlpTreesTree *)evaluateWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                      withEduStanfordNlpTreesTregexTregexMatcher:(EduStanfordNlpTreesTregexTregexMatcher *)tregex {
  EduStanfordNlpTreesTree *targetNode = [((EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *) nil_chk(IOSObjectArray_Get(nil_chk(childMatcher_), 0))) evaluateWithEduStanfordNlpTreesTree:tree withEduStanfordNlpTreesTregexTregexMatcher:tregex];
  EduStanfordNlpTreesTree *parent = [((EduStanfordNlpTreesTree *) nil_chk(targetNode)) parentWithEduStanfordNlpTreesTree:tree];
  EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *ft = [((EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *) nil_chk(this$0_->adjunctionTree_)) copy__WithEduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher:self withEduStanfordNlpTreesTreeFactory:[((EduStanfordNlpTreesTree *) nil_chk(tree)) treeFactory] withEduStanfordNlpLingLabelFactory:[((id<EduStanfordNlpLingLabel>) nil_chk([tree label])) labelFactory]];
  [((EduStanfordNlpTreesTree *) nil_chk(((EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *) nil_chk(ft))->foot_)) setChildrenWithJavaUtilList:[targetNode getChildrenAsList]];
  if (parent == nil) {
    return ft->tree_;
  }
  else {
    jint i = [parent objectIndexOfWithEduStanfordNlpTreesTree:targetNode];
    (void) [parent setChildWithInt:i withEduStanfordNlpTreesTree:ft->tree_];
    return tree;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesTregexTsurgeonAdjoinNode:withJavaUtilMap:withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:);
  methods[1].selector = @selector(evaluateWithEduStanfordNlpTreesTree:withEduStanfordNlpTreesTregexTregexMatcher:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LEduStanfordNlpTreesTregexTsurgeonAdjoinNode;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTreesTregexTsurgeonAdjoinNode;LJavaUtilMap;LEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator;", "(Ledu/stanford/nlp/trees/tregex/tsurgeon/AdjoinNode;Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/trees/Tree;>;Ledu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator;)V", "evaluate", "LEduStanfordNlpTreesTree;LEduStanfordNlpTreesTregexTregexMatcher;", "LEduStanfordNlpTreesTregexTsurgeonAdjoinNode;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher = { "Matcher", "edu.stanford.nlp.trees.tregex.tsurgeon", ptrTable, methods, fields, 7, 0x2, 2, 1, 4, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher;
}

@end

void EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher *self, EduStanfordNlpTreesTregexTsurgeonAdjoinNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  self->this$0_ = outer$;
  EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, outer$, newNodeNames, coindexer);
}

EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher *new_EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonAdjoinNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher, initWithEduStanfordNlpTreesTregexTsurgeonAdjoinNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_, outer$, newNodeNames, coindexer)
}

EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher *create_EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonAdjoinNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher, initWithEduStanfordNlpTreesTregexTsurgeonAdjoinNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_, outer$, newNodeNames, coindexer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTregexTsurgeonAdjoinNode_Matcher)
