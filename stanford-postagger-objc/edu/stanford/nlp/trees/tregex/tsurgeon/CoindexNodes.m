//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/tregex/tsurgeon/CoindexNodes.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/tregex/TregexMatcher.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/CoindexNodes.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonMatcher.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPattern.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPatternRoot.h"
#include "java/util/Map.h"

inline NSString *EduStanfordNlpTreesTregexTsurgeonCoindexNodes_get_coindexationIntroductionString();
static NSString *EduStanfordNlpTreesTregexTsurgeonCoindexNodes_coindexationIntroductionString = @"-";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesTregexTsurgeonCoindexNodes, coindexationIntroductionString, NSString *)

@interface EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher : EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonCoindexNodes:(EduStanfordNlpTreesTregexTsurgeonCoindexNodes *)outer$
                                                      withJavaUtilMap:(id<JavaUtilMap>)newNodeNames
           withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer;

- (EduStanfordNlpTreesTree *)evaluateWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                      withEduStanfordNlpTreesTregexTregexMatcher:(EduStanfordNlpTreesTregexTregexMatcher *)tregex;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher)

__attribute__((unused)) static void EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonCoindexNodes_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher *self, EduStanfordNlpTreesTregexTsurgeonCoindexNodes *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer);

__attribute__((unused)) static EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher *new_EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonCoindexNodes_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonCoindexNodes *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher *create_EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonCoindexNodes_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonCoindexNodes *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher)

@implementation EduStanfordNlpTreesTregexTsurgeonCoindexNodes

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray:(IOSObjectArray *)children {
  EduStanfordNlpTreesTregexTsurgeonCoindexNodes_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(self, children);
  return self;
}

- (void)setRootWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternRoot:(EduStanfordNlpTreesTregexTsurgeonTsurgeonPatternRoot *)root {
  [super setRootWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternRoot:root];
  [((EduStanfordNlpTreesTregexTsurgeonTsurgeonPatternRoot *) nil_chk(root)) setCoindexes];
}

- (EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *)matcherWithJavaUtilMap:(id<JavaUtilMap>)newNodeNames
                  withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer {
  return new_EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonCoindexNodes_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, newNodeNames, coindexer);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher;", 0x1, 3, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray:);
  methods[1].selector = @selector(setRootWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternRoot:);
  methods[2].selector = @selector(matcherWithJavaUtilMap:withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "coindexationIntroductionString", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "[LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", "setRoot", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternRoot;", "matcher", "LJavaUtilMap;LEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator;", "(Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/trees/Tree;>;Ledu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator;)Ledu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonMatcher;", &EduStanfordNlpTreesTregexTsurgeonCoindexNodes_coindexationIntroductionString, "LEduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTregexTsurgeonCoindexNodes = { "CoindexNodes", "edu.stanford.nlp.trees.tregex.tsurgeon", ptrTable, methods, fields, 7, 0x0, 3, 1, -1, 7, -1, -1, -1 };
  return &_EduStanfordNlpTreesTregexTsurgeonCoindexNodes;
}

@end

void EduStanfordNlpTreesTregexTsurgeonCoindexNodes_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(EduStanfordNlpTreesTregexTsurgeonCoindexNodes *self, IOSObjectArray *children) {
  EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_initWithNSString_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(self, @"coindex", children);
}

EduStanfordNlpTreesTregexTsurgeonCoindexNodes *new_EduStanfordNlpTreesTregexTsurgeonCoindexNodes_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(IOSObjectArray *children) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonCoindexNodes, initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_, children)
}

EduStanfordNlpTreesTregexTsurgeonCoindexNodes *create_EduStanfordNlpTreesTregexTsurgeonCoindexNodes_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(IOSObjectArray *children) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonCoindexNodes, initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_, children)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTregexTsurgeonCoindexNodes)

@implementation EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonCoindexNodes:(EduStanfordNlpTreesTregexTsurgeonCoindexNodes *)outer$
                                                      withJavaUtilMap:(id<JavaUtilMap>)newNodeNames
           withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer {
  EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonCoindexNodes_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, outer$, newNodeNames, coindexer);
  return self;
}

- (EduStanfordNlpTreesTree *)evaluateWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                      withEduStanfordNlpTreesTregexTregexMatcher:(EduStanfordNlpTreesTregexTregexMatcher *)tregex {
  jint newIndex = [((EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *) nil_chk(coindexer_)) generateIndex];
  {
    IOSObjectArray *a__ = childMatcher_;
    EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *child = *b__++;
      EduStanfordNlpTreesTree *node = [((EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *) nil_chk(child)) evaluateWithEduStanfordNlpTreesTree:tree withEduStanfordNlpTreesTregexTregexMatcher:tregex];
      [((id<EduStanfordNlpLingLabel>) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(node)) label])) setValueWithNSString:JreStrcat("$$I", [((id<EduStanfordNlpLingLabel>) nil_chk([node label])) value], EduStanfordNlpTreesTregexTsurgeonCoindexNodes_coindexationIntroductionString, newIndex)];
    }
  }
  return tree;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesTregexTsurgeonCoindexNodes:withJavaUtilMap:withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:);
  methods[1].selector = @selector(evaluateWithEduStanfordNlpTreesTree:withEduStanfordNlpTreesTregexTregexMatcher:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpTreesTregexTsurgeonCoindexNodes;LJavaUtilMap;LEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator;", "(Ledu/stanford/nlp/trees/tregex/tsurgeon/CoindexNodes;Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/trees/Tree;>;Ledu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator;)V", "evaluate", "LEduStanfordNlpTreesTree;LEduStanfordNlpTreesTregexTregexMatcher;", "LEduStanfordNlpTreesTregexTsurgeonCoindexNodes;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher = { "Matcher", "edu.stanford.nlp.trees.tregex.tsurgeon", ptrTable, methods, NULL, 7, 0x2, 2, 0, 4, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher;
}

@end

void EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonCoindexNodes_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher *self, EduStanfordNlpTreesTregexTsurgeonCoindexNodes *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, outer$, newNodeNames, coindexer);
}

EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher *new_EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonCoindexNodes_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonCoindexNodes *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher, initWithEduStanfordNlpTreesTregexTsurgeonCoindexNodes_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_, outer$, newNodeNames, coindexer)
}

EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher *create_EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonCoindexNodes_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonCoindexNodes *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher, initWithEduStanfordNlpTreesTregexTsurgeonCoindexNodes_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_, outer$, newNodeNames, coindexer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTregexTsurgeonCoindexNodes_Matcher)
