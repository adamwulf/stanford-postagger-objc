//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/tregex/tsurgeon/AdjoinToFootNode.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/ling/LabelFactory.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeFactory.h"
#include "edu/stanford/nlp/trees/tregex/TregexMatcher.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/AdjoinNode.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/AdjoinToFootNode.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/AuxiliaryTree.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonMatcher.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPattern.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/util/Map.h"

@interface EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher : EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher {
 @public
  EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode *this$0_;
}

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode:(EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode *)outer$
                                                          withJavaUtilMap:(id<JavaUtilMap>)newNodeNames
               withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer;

- (EduStanfordNlpTreesTree *)evaluateWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                      withEduStanfordNlpTreesTregexTregexMatcher:(EduStanfordNlpTreesTregexTregexMatcher *)tregex;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher)

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher, this$0_, EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode *)

__attribute__((unused)) static void EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher *self, EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer);

__attribute__((unused)) static EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher *new_EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher *create_EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher)

@implementation EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree:(EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *)t
                  withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern:(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)p {
  EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(self, t, p);
  return self;
}

- (EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *)matcherWithJavaUtilMap:(id<JavaUtilMap>)newNodeNames
                  withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer {
  return new_EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, newNodeNames, coindexer);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher;", 0x1, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree:withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern:);
  methods[1].selector = @selector(matcherWithJavaUtilMap:withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree;LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", "matcher", "LJavaUtilMap;LEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator;", "(Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/trees/Tree;>;Ledu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator;)Ledu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonMatcher;", "LEduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode = { "AdjoinToFootNode", "edu.stanford.nlp.trees.tregex.tsurgeon", ptrTable, methods, NULL, 7, 0x0, 2, 0, -1, 4, -1, -1, -1 };
  return &_EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode;
}

@end

void EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode *self, EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *t, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *p) {
  EduStanfordNlpTreesTregexTsurgeonAdjoinNode_initWithNSString_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(self, @"adjoinF", t, p);
}

EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode *new_EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *t, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *p) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode, initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_, t, p)
}

EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode *create_EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *t, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *p) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode, initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_, t, p)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode)

@implementation EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode:(EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode *)outer$
                                                          withJavaUtilMap:(id<JavaUtilMap>)newNodeNames
               withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer {
  EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, outer$, newNodeNames, coindexer);
  return self;
}

- (EduStanfordNlpTreesTree *)evaluateWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                      withEduStanfordNlpTreesTregexTregexMatcher:(EduStanfordNlpTreesTregexTregexMatcher *)tregex {
  EduStanfordNlpTreesTree *targetNode = [((EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *) nil_chk(IOSObjectArray_Get(nil_chk(childMatcher_), 0))) evaluateWithEduStanfordNlpTreesTree:tree withEduStanfordNlpTreesTregexTregexMatcher:tregex];
  EduStanfordNlpTreesTree *parent = [((EduStanfordNlpTreesTree *) nil_chk(targetNode)) parentWithEduStanfordNlpTreesTree:tree];
  EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *ft = [((EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *) nil_chk([this$0_ adjunctionTree])) copy__WithEduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher:self withEduStanfordNlpTreesTreeFactory:[((EduStanfordNlpTreesTree *) nil_chk(tree)) treeFactory] withEduStanfordNlpLingLabelFactory:[((id<EduStanfordNlpLingLabel>) nil_chk([tree label])) labelFactory]];
  EduStanfordNlpTreesTree *parentOfFoot = [((EduStanfordNlpTreesTree *) nil_chk(((EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *) nil_chk(ft))->foot_)) parentWithEduStanfordNlpTreesTree:ft->tree_];
  if (parentOfFoot == nil) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"Warning: adjoin to foot for depth-1 auxiliary tree has no effect."];
    return tree;
  }
  jint i = [parentOfFoot objectIndexOfWithEduStanfordNlpTreesTree:ft->foot_];
  if (parent == nil) {
    (void) [parentOfFoot setChildWithInt:i withEduStanfordNlpTreesTree:targetNode];
    return ft->tree_;
  }
  else {
    jint j = [parent objectIndexOfWithEduStanfordNlpTreesTree:targetNode];
    (void) [parent setChildWithInt:j withEduStanfordNlpTreesTree:ft->tree_];
    (void) [parentOfFoot setChildWithInt:i withEduStanfordNlpTreesTree:targetNode];
    return tree;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode:withJavaUtilMap:withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:);
  methods[1].selector = @selector(evaluateWithEduStanfordNlpTreesTree:withEduStanfordNlpTreesTregexTregexMatcher:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LEduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode;LJavaUtilMap;LEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator;", "(Ledu/stanford/nlp/trees/tregex/tsurgeon/AdjoinToFootNode;Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/trees/Tree;>;Ledu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator;)V", "evaluate", "LEduStanfordNlpTreesTree;LEduStanfordNlpTreesTregexTregexMatcher;", "LEduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher = { "Matcher", "edu.stanford.nlp.trees.tregex.tsurgeon", ptrTable, methods, fields, 7, 0x2, 2, 1, 4, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher;
}

@end

void EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher *self, EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  self->this$0_ = outer$;
  EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, outer$, newNodeNames, coindexer);
}

EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher *new_EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher, initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_, outer$, newNodeNames, coindexer)
}

EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher *create_EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher, initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_, outer$, newNodeNames, coindexer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTregexTsurgeonAdjoinToFootNode_Matcher)
