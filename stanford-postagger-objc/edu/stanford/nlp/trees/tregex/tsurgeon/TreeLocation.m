//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/tregex/tsurgeon/TreeLocation.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/tregex/TregexMatcher.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TreeLocation.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonMatcher.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPattern.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPatternRoot.h"
#include "edu/stanford/nlp/util/Pair.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/util/Map.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

@interface EduStanfordNlpTreesTregexTsurgeonTreeLocation () {
 @public
  NSString *relation_;
  EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *child_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTsurgeonTreeLocation, relation_, NSString *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTsurgeonTreeLocation, child_, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)

inline JavaUtilRegexPattern *EduStanfordNlpTreesTregexTsurgeonTreeLocation_get_daughterPattern();
static JavaUtilRegexPattern *EduStanfordNlpTreesTregexTsurgeonTreeLocation_daughterPattern;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesTregexTsurgeonTreeLocation, daughterPattern, JavaUtilRegexPattern *)

@interface EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher () {
 @public
  EduStanfordNlpTreesTregexTsurgeonTreeLocation *this$0_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher, this$0_, EduStanfordNlpTreesTregexTsurgeonTreeLocation *)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesTregexTsurgeonTreeLocation)

@implementation EduStanfordNlpTreesTregexTsurgeonTreeLocation

- (instancetype)initWithNSString:(NSString *)relation
withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern:(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)p {
  EduStanfordNlpTreesTregexTsurgeonTreeLocation_initWithNSString_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(self, relation, p);
  return self;
}

- (void)setRootWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternRoot:(EduStanfordNlpTreesTregexTsurgeonTsurgeonPatternRoot *)root {
  [((EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *) nil_chk(child_)) setRootWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternRoot:root];
}

- (EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher *)matcherWithJavaUtilMap:(id<JavaUtilMap>)newNodeNames
                               withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer {
  return new_EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher_initWithEduStanfordNlpTreesTregexTsurgeonTreeLocation_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, newNodeNames, coindexer);
}

- (NSString *)description {
  return JreStrcat("$C@", relation_, ' ', child_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern:);
  methods[1].selector = @selector(setRootWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternRoot:);
  methods[2].selector = @selector(matcherWithJavaUtilMap:withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "relation_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "child_", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "daughterPattern", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", "setRoot", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternRoot;", "matcher", "LJavaUtilMap;LEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator;", "(Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/trees/Tree;>;Ledu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator;)Ledu/stanford/nlp/trees/tregex/tsurgeon/TreeLocation$LocationMatcher;", "toString", &EduStanfordNlpTreesTregexTsurgeonTreeLocation_daughterPattern, "LEduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTregexTsurgeonTreeLocation = { "TreeLocation", "edu.stanford.nlp.trees.tregex.tsurgeon", ptrTable, methods, fields, 7, 0x0, 4, 3, -1, 8, -1, -1, -1 };
  return &_EduStanfordNlpTreesTregexTsurgeonTreeLocation;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesTregexTsurgeonTreeLocation class]) {
    EduStanfordNlpTreesTregexTsurgeonTreeLocation_daughterPattern = JavaUtilRegexPattern_compileWithNSString_(@">-?([0-9]+)");
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesTregexTsurgeonTreeLocation)
  }
}

@end

void EduStanfordNlpTreesTregexTsurgeonTreeLocation_initWithNSString_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(EduStanfordNlpTreesTregexTsurgeonTreeLocation *self, NSString *relation, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *p) {
  NSObject_init(self);
  self->relation_ = relation;
  self->child_ = p;
}

EduStanfordNlpTreesTregexTsurgeonTreeLocation *new_EduStanfordNlpTreesTregexTsurgeonTreeLocation_initWithNSString_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(NSString *relation, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *p) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonTreeLocation, initWithNSString_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_, relation, p)
}

EduStanfordNlpTreesTregexTsurgeonTreeLocation *create_EduStanfordNlpTreesTregexTsurgeonTreeLocation_initWithNSString_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(NSString *relation, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *p) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonTreeLocation, initWithNSString_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_, relation, p)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTregexTsurgeonTreeLocation)

@implementation EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonTreeLocation:(EduStanfordNlpTreesTregexTsurgeonTreeLocation *)outer$
                                                      withJavaUtilMap:(id<JavaUtilMap>)newNodeNames
           withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer {
  EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher_initWithEduStanfordNlpTreesTregexTsurgeonTreeLocation_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, outer$, newNodeNames, coindexer);
  return self;
}

- (EduStanfordNlpUtilPair *)evaluateWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                     withEduStanfordNlpTreesTregexTregexMatcher:(EduStanfordNlpTreesTregexTregexMatcher *)tregex {
  jint newIndex = -1;
  EduStanfordNlpTreesTree *parent = nil;
  EduStanfordNlpTreesTree *relativeNode = [((EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *) nil_chk(childMatcher_)) evaluateWithEduStanfordNlpTreesTree:tree withEduStanfordNlpTreesTregexTregexMatcher:tregex];
  JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(JreLoadStatic(EduStanfordNlpTreesTregexTsurgeonTreeLocation, daughterPattern))) matcherWithJavaLangCharSequence:this$0_->relation_];
  if ([((JavaUtilRegexMatcher *) nil_chk(m)) matches]) {
    newIndex = JavaLangInteger_parseIntWithNSString_([m groupWithInt:1]) - 1;
    parent = relativeNode;
    if ([((NSString *) nil_chk(this$0_->relation_)) charAtWithInt:1] == '-') newIndex = ((IOSObjectArray *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(parent)) children]))->size_ - newIndex;
  }
  else {
    parent = [((EduStanfordNlpTreesTree *) nil_chk(relativeNode)) parentWithEduStanfordNlpTreesTree:tree];
    if (parent == nil) {
      @throw new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$@$$C", @"Error: looking for a non-existent parent in tree ", tree, @" for \"", [self description], '"'));
    }
    jint index = [parent objectIndexOfWithEduStanfordNlpTreesTree:relativeNode];
    if ([((NSString *) nil_chk(this$0_->relation_)) isEqual:@"$+"]) {
      newIndex = index;
    }
    else if ([this$0_->relation_ isEqual:@"$-"]) {
      newIndex = index + 1;
    }
    else {
      @throw new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$$", @"Error: Haven't dealt with relation ", this$0_->relation_, @" yet."));
    }
  }
  return new_EduStanfordNlpUtilPair_initWithId_withId_(parent, JavaLangInteger_valueOfWithInt_(newIndex));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LEduStanfordNlpUtilPair;", 0x0, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesTregexTsurgeonTreeLocation:withJavaUtilMap:withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:);
  methods[1].selector = @selector(evaluateWithEduStanfordNlpTreesTree:withEduStanfordNlpTreesTregexTregexMatcher:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LEduStanfordNlpTreesTregexTsurgeonTreeLocation;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "newNodeNames_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x0, -1, -1, 5, -1 },
    { "coindexer_", "LEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "childMatcher_", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTreesTregexTsurgeonTreeLocation;LJavaUtilMap;LEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator;", "(Ledu/stanford/nlp/trees/tregex/tsurgeon/TreeLocation;Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/trees/Tree;>;Ledu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator;)V", "evaluate", "LEduStanfordNlpTreesTree;LEduStanfordNlpTreesTregexTregexMatcher;", "(Ledu/stanford/nlp/trees/Tree;Ledu/stanford/nlp/trees/tregex/TregexMatcher;)Ledu/stanford/nlp/util/Pair<Ledu/stanford/nlp/trees/Tree;Ljava/lang/Integer;>;", "Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/trees/Tree;>;", "LEduStanfordNlpTreesTregexTsurgeonTreeLocation;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher = { "LocationMatcher", "edu.stanford.nlp.trees.tregex.tsurgeon", ptrTable, methods, fields, 7, 0x0, 2, 4, 6, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher;
}

@end

void EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher_initWithEduStanfordNlpTreesTregexTsurgeonTreeLocation_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher *self, EduStanfordNlpTreesTregexTsurgeonTreeLocation *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->newNodeNames_ = newNodeNames;
  self->coindexer_ = coindexer;
  self->childMatcher_ = [((EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *) nil_chk(outer$->child_)) matcherWithJavaUtilMap:newNodeNames withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:coindexer];
}

EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher *new_EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher_initWithEduStanfordNlpTreesTregexTsurgeonTreeLocation_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonTreeLocation *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher, initWithEduStanfordNlpTreesTregexTsurgeonTreeLocation_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_, outer$, newNodeNames, coindexer)
}

EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher *create_EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher_initWithEduStanfordNlpTreesTregexTsurgeonTreeLocation_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonTreeLocation *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher, initWithEduStanfordNlpTreesTregexTsurgeonTreeLocation_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_, outer$, newNodeNames, coindexer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher)
