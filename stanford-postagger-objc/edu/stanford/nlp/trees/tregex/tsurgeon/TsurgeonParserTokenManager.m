//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/SimpleCharStream.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/Token.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TokenMgrError.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonParserTokenManager.h"
#include "java/io/IOException.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"

@interface EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager () {
 @public
  IOSIntArray *jjrounds_;
  IOSIntArray *jjstateSet_;
}

- (jint)jjStopAtPosWithInt:(jint)pos
                   withInt:(jint)kind;

- (jint)jjMoveStringLiteralDfa0_2;

- (jint)jjMoveStringLiteralDfa1_2WithLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa2_2WithLong:(jlong)old0
                                 withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa3_2WithLong:(jlong)old0
                                 withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa4_2WithLong:(jlong)old0
                                 withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa5_2WithLong:(jlong)old0
                                 withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa6_2WithLong:(jlong)old0
                                 withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa7_2WithLong:(jlong)old0
                                 withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa8_2WithLong:(jlong)old0
                                 withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa9_2WithLong:(jlong)old0
                                 withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa10_2WithLong:(jlong)old0
                                  withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa11_2WithLong:(jlong)old0
                                  withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa12_2WithLong:(jlong)old0
                                  withLong:(jlong)active0;

- (jint)jjStopStringLiteralDfa_0WithInt:(jint)pos
                               withLong:(jlong)active0;

- (jint)jjStartNfa_0WithInt:(jint)pos
                   withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa0_0;

- (jint)jjStartNfaWithStates_0WithInt:(jint)pos
                              withInt:(jint)kind
                              withInt:(jint)state;

- (jint)jjMoveNfa_0WithInt:(jint)startState
                   withInt:(jint)curPos;

- (jint)jjStopStringLiteralDfa_1WithInt:(jint)pos
                               withLong:(jlong)active0;

- (jint)jjStartNfa_1WithInt:(jint)pos
                   withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa0_1;

- (jint)jjStartNfaWithStates_1WithInt:(jint)pos
                              withInt:(jint)kind
                              withInt:(jint)state;

- (jint)jjMoveNfa_1WithInt:(jint)startState
                   withInt:(jint)curPos;

+ (jboolean)jjCanMove_0WithInt:(jint)hiByte
                       withInt:(jint)i1
                       withInt:(jint)i2
                      withLong:(jlong)l1
                      withLong:(jlong)l2;

- (void)jjCheckNAddWithInt:(jint)state;

- (void)jjAddStatesWithInt:(jint)start
                   withInt:(jint)end;

- (void)jjCheckNAddTwoStatesWithInt:(jint)state1
                            withInt:(jint)state2;

- (void)jjCheckNAddStatesWithInt:(jint)start
                         withInt:(jint)end;

- (void)ReInitRounds;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager, jjrounds_, IOSIntArray *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager, jjstateSet_, IOSIntArray *)

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint pos, jint kind);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa0_2(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa1_2WithLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa2_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa3_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa4_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa5_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa6_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa7_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa8_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa9_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa10_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa11_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa12_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint pos, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa0_0(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStartNfaWithStates_0WithInt_withInt_withInt_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint pos, jint kind, jint state);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveNfa_0WithInt_withInt_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint startState, jint curPos);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopStringLiteralDfa_1WithInt_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint pos, jlong active0);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa0_1(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStartNfaWithStates_1WithInt_withInt_withInt_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint pos, jint kind, jint state);

__attribute__((unused)) static jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveNfa_1WithInt_withInt_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint startState, jint curPos);

__attribute__((unused)) static jboolean EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(jint hiByte, jint i1, jint i2, jlong l1, jlong l2);

__attribute__((unused)) static void EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint state);

__attribute__((unused)) static void EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjAddStatesWithInt_withInt_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint start, jint end);

__attribute__((unused)) static void EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint state1, jint state2);

__attribute__((unused)) static void EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint start, jint end);

__attribute__((unused)) static void EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_ReInitRounds(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self);

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager)

IOSLongArray *EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjbitVec0;
IOSLongArray *EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjbitVec2;
IOSIntArray *EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjnextStates;
IOSObjectArray *EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjstrLiteralImages;
IOSObjectArray *EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_lexStateNames;
IOSIntArray *EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjnewLexState;
IOSLongArray *EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjtoToken;
IOSLongArray *EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjtoSkip;

@implementation EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager

- (void)setDebugStreamWithJavaIoPrintStream:(JavaIoPrintStream *)ds {
  debugStream_ = ds;
}

- (jint)jjStopAtPosWithInt:(jint)pos
                   withInt:(jint)kind {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(self, pos, kind);
}

- (jint)jjMoveStringLiteralDfa0_2 {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa0_2(self);
}

- (jint)jjMoveStringLiteralDfa1_2WithLong:(jlong)active0 {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa1_2WithLong_(self, active0);
}

- (jint)jjMoveStringLiteralDfa2_2WithLong:(jlong)old0
                                 withLong:(jlong)active0 {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa2_2WithLong_withLong_(self, old0, active0);
}

- (jint)jjMoveStringLiteralDfa3_2WithLong:(jlong)old0
                                 withLong:(jlong)active0 {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa3_2WithLong_withLong_(self, old0, active0);
}

- (jint)jjMoveStringLiteralDfa4_2WithLong:(jlong)old0
                                 withLong:(jlong)active0 {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa4_2WithLong_withLong_(self, old0, active0);
}

- (jint)jjMoveStringLiteralDfa5_2WithLong:(jlong)old0
                                 withLong:(jlong)active0 {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa5_2WithLong_withLong_(self, old0, active0);
}

- (jint)jjMoveStringLiteralDfa6_2WithLong:(jlong)old0
                                 withLong:(jlong)active0 {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa6_2WithLong_withLong_(self, old0, active0);
}

- (jint)jjMoveStringLiteralDfa7_2WithLong:(jlong)old0
                                 withLong:(jlong)active0 {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa7_2WithLong_withLong_(self, old0, active0);
}

- (jint)jjMoveStringLiteralDfa8_2WithLong:(jlong)old0
                                 withLong:(jlong)active0 {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa8_2WithLong_withLong_(self, old0, active0);
}

- (jint)jjMoveStringLiteralDfa9_2WithLong:(jlong)old0
                                 withLong:(jlong)active0 {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa9_2WithLong_withLong_(self, old0, active0);
}

- (jint)jjMoveStringLiteralDfa10_2WithLong:(jlong)old0
                                  withLong:(jlong)active0 {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa10_2WithLong_withLong_(self, old0, active0);
}

- (jint)jjMoveStringLiteralDfa11_2WithLong:(jlong)old0
                                  withLong:(jlong)active0 {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa11_2WithLong_withLong_(self, old0, active0);
}

- (jint)jjMoveStringLiteralDfa12_2WithLong:(jlong)old0
                                  withLong:(jlong)active0 {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa12_2WithLong_withLong_(self, old0, active0);
}

- (jint)jjStopStringLiteralDfa_0WithInt:(jint)pos
                               withLong:(jlong)active0 {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, pos, active0);
}

- (jint)jjStartNfa_0WithInt:(jint)pos
                   withLong:(jlong)active0 {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveNfa_0WithInt_withInt_(self, EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(self, pos, active0), pos + 1);
}

- (jint)jjMoveStringLiteralDfa0_0 {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa0_0(self);
}

- (jint)jjStartNfaWithStates_0WithInt:(jint)pos
                              withInt:(jint)kind
                              withInt:(jint)state {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStartNfaWithStates_0WithInt_withInt_withInt_(self, pos, kind, state);
}

- (jint)jjMoveNfa_0WithInt:(jint)startState
                   withInt:(jint)curPos {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveNfa_0WithInt_withInt_(self, startState, curPos);
}

- (jint)jjStopStringLiteralDfa_1WithInt:(jint)pos
                               withLong:(jlong)active0 {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopStringLiteralDfa_1WithInt_withLong_(self, pos, active0);
}

- (jint)jjStartNfa_1WithInt:(jint)pos
                   withLong:(jlong)active0 {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveNfa_1WithInt_withInt_(self, EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopStringLiteralDfa_1WithInt_withLong_(self, pos, active0), pos + 1);
}

- (jint)jjMoveStringLiteralDfa0_1 {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa0_1(self);
}

- (jint)jjStartNfaWithStates_1WithInt:(jint)pos
                              withInt:(jint)kind
                              withInt:(jint)state {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStartNfaWithStates_1WithInt_withInt_withInt_(self, pos, kind, state);
}

- (jint)jjMoveNfa_1WithInt:(jint)startState
                   withInt:(jint)curPos {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveNfa_1WithInt_withInt_(self, startState, curPos);
}

+ (jboolean)jjCanMove_0WithInt:(jint)hiByte
                       withInt:(jint)i1
                       withInt:(jint)i2
                      withLong:(jlong)l1
                      withLong:(jlong)l2 {
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2);
}

- (EduStanfordNlpTreesTregexTsurgeonToken *)jjFillToken {
  __unused EduStanfordNlpTreesTregexTsurgeonToken *t;
  __unused NSString *curTokenImage;
  __unused jint beginLine;
  __unused jint endLine;
  __unused jint beginColumn;
  __unused jint endColumn;
  __unused NSString *im = IOSObjectArray_Get(nil_chk(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjstrLiteralImages), jjmatchedKind_);
  curTokenImage = (im == nil) ? [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(input_stream_)) GetImage] : im;
  beginLine = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(input_stream_)) getBeginLine];
  beginColumn = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(input_stream_)) getBeginColumn];
  endLine = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(input_stream_)) getEndLine];
  endColumn = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(input_stream_)) getEndColumn];
  t = EduStanfordNlpTreesTregexTsurgeonToken_newTokenWithInt_withNSString_(jjmatchedKind_, curTokenImage);
  ((EduStanfordNlpTreesTregexTsurgeonToken *) nil_chk(t))->beginLine_ = beginLine;
  t->endLine_ = endLine;
  t->beginColumn_ = beginColumn;
  t->endColumn_ = endColumn;
  return t;
}

- (EduStanfordNlpTreesTregexTsurgeonToken *)getNextToken {
  __unused EduStanfordNlpTreesTregexTsurgeonToken *matchedToken;
  __unused jint curPos = 0;
  for (; ; ) {
    {
      @try {
        curChar_ = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(input_stream_)) BeginToken];
      }
      @catch (JavaIoIOException *e) {
        jjmatchedKind_ = 0;
        jjmatchedPos_ = -1;
        matchedToken = [self jjFillToken];
        return matchedToken;
      }
      switch (curLexState_) {
        case 0:
        @try {
          [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(input_stream_)) backupWithInt:0];
          while (curChar_ <= 32 && ((jlong) 0x100002400LL & (JreLShift64(1LL, curChar_))) != 0LL) curChar_ = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(input_stream_)) BeginToken];
        }
        @catch (JavaIoIOException *e1) {
          goto continue_EOFLoop;
        }
        jjmatchedKind_ = (jint) 0x7fffffff;
        jjmatchedPos_ = 0;
        curPos = EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa0_0(self);
        break;
        case 1:
        @try {
          [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(input_stream_)) backupWithInt:0];
          while (curChar_ <= 32 && ((jlong) 0x100002400LL & (JreLShift64(1LL, curChar_))) != 0LL) curChar_ = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(input_stream_)) BeginToken];
        }
        @catch (JavaIoIOException *e1) {
          goto continue_EOFLoop;
        }
        jjmatchedKind_ = (jint) 0x7fffffff;
        jjmatchedPos_ = 0;
        curPos = EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa0_1(self);
        break;
        case 2:
        @try {
          [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(input_stream_)) backupWithInt:0];
          while (curChar_ <= 32 && ((jlong) 0x100002600LL & (JreLShift64(1LL, curChar_))) != 0LL) curChar_ = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(input_stream_)) BeginToken];
        }
        @catch (JavaIoIOException *e1) {
          goto continue_EOFLoop;
        }
        jjmatchedKind_ = (jint) 0x7fffffff;
        jjmatchedPos_ = 0;
        curPos = EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa0_2(self);
        break;
      }
      if (jjmatchedKind_ != (jint) 0x7fffffff) {
        if (jjmatchedPos_ + 1 < curPos) [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(input_stream_)) backupWithInt:curPos - jjmatchedPos_ - 1];
        if ((IOSLongArray_Get(nil_chk(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjtoToken), JreRShift32(jjmatchedKind_, 6)) & (JreLShift64(1LL, (jjmatchedKind_ & 077)))) != 0LL) {
          matchedToken = [self jjFillToken];
          if (IOSIntArray_Get(nil_chk(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjnewLexState), jjmatchedKind_) != -1) curLexState_ = IOSIntArray_Get(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjnewLexState, jjmatchedKind_);
          return matchedToken;
        }
        else {
          if (IOSIntArray_Get(nil_chk(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjnewLexState), jjmatchedKind_) != -1) curLexState_ = IOSIntArray_Get(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjnewLexState, jjmatchedKind_);
          goto continue_EOFLoop;
        }
      }
      __unused jint error_line = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(input_stream_)) getEndLine];
      __unused jint error_column = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(input_stream_)) getEndColumn];
      __unused NSString *error_after = nil;
      __unused jboolean EOFSeen = false;
      @try {
        [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(input_stream_)) readChar];
        [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(input_stream_)) backupWithInt:1];
      }
      @catch (JavaIoIOException *e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? @"" : [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(input_stream_)) GetImage];
        if (curChar_ == 0x000a || curChar_ == 0x000d) {
          error_line++;
          error_column = 0;
        }
        else error_column++;
      }
      if (!EOFSeen) {
        [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(input_stream_)) backupWithInt:1];
        error_after = curPos <= 1 ? @"" : [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(input_stream_)) GetImage];
      }
      @throw new_EduStanfordNlpTreesTregexTsurgeonTokenMgrError_initWithBoolean_withInt_withInt_withInt_withNSString_withChar_withInt_(EOFSeen, curLexState_, error_line, error_column, error_after, curChar_, EduStanfordNlpTreesTregexTsurgeonTokenMgrError_LEXICAL_ERROR);
    }
    continue_EOFLoop: ;
  }
}

- (void)jjCheckNAddWithInt:(jint)state {
  EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, state);
}

- (void)jjAddStatesWithInt:(jint)start
                   withInt:(jint)end {
  EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjAddStatesWithInt_withInt_(self, start, end);
}

- (void)jjCheckNAddTwoStatesWithInt:(jint)state1
                            withInt:(jint)state2 {
  EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, state1, state2);
}

- (void)jjCheckNAddStatesWithInt:(jint)start
                         withInt:(jint)end {
  EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, start, end);
}

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream:(EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *)stream {
  EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_initWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream_(self, stream);
  return self;
}

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream:(EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *)stream
                                                                  withInt:(jint)lexState {
  EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_initWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream_withInt_(self, stream, lexState);
  return self;
}

- (void)ReInitWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream:(EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *)stream {
  jjmatchedPos_ = jjnewStateCnt_ = 0;
  curLexState_ = defaultLexState_;
  input_stream_ = stream;
  EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_ReInitRounds(self);
}

- (void)ReInitRounds {
  EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_ReInitRounds(self);
}

- (void)ReInitWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream:(EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *)stream
                                                            withInt:(jint)lexState {
  [self ReInitWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream:stream];
  [self SwitchToWithInt:lexState];
}

- (void)SwitchToWithInt:(jint)lexState {
  if (lexState >= 3 || lexState < 0) @throw new_EduStanfordNlpTreesTregexTsurgeonTokenMgrError_initWithNSString_withInt_(JreStrcat("$I$", @"Error: Ignoring invalid lexical state : ", lexState, @". State unchanged."), EduStanfordNlpTreesTregexTsurgeonTokenMgrError_INVALID_LEXICAL_STATE);
  else curLexState_ = lexState;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 8, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 9, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 10, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 11, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 12, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 13, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 14, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 15, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 16, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 17, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 18, 19, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 20, 19, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 21, 22, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 23, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 24, 19, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 25, 19, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 26, 22, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 27, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1a, 28, 29, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTregexTsurgeonToken;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTregexTsurgeonToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 30, 31, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 32, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 33, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 34, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 35, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 36, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 37, 35, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 37, 36, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 38, 31, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(setDebugStreamWithJavaIoPrintStream:);
  methods[1].selector = @selector(jjStopAtPosWithInt:withInt:);
  methods[2].selector = @selector(jjMoveStringLiteralDfa0_2);
  methods[3].selector = @selector(jjMoveStringLiteralDfa1_2WithLong:);
  methods[4].selector = @selector(jjMoveStringLiteralDfa2_2WithLong:withLong:);
  methods[5].selector = @selector(jjMoveStringLiteralDfa3_2WithLong:withLong:);
  methods[6].selector = @selector(jjMoveStringLiteralDfa4_2WithLong:withLong:);
  methods[7].selector = @selector(jjMoveStringLiteralDfa5_2WithLong:withLong:);
  methods[8].selector = @selector(jjMoveStringLiteralDfa6_2WithLong:withLong:);
  methods[9].selector = @selector(jjMoveStringLiteralDfa7_2WithLong:withLong:);
  methods[10].selector = @selector(jjMoveStringLiteralDfa8_2WithLong:withLong:);
  methods[11].selector = @selector(jjMoveStringLiteralDfa9_2WithLong:withLong:);
  methods[12].selector = @selector(jjMoveStringLiteralDfa10_2WithLong:withLong:);
  methods[13].selector = @selector(jjMoveStringLiteralDfa11_2WithLong:withLong:);
  methods[14].selector = @selector(jjMoveStringLiteralDfa12_2WithLong:withLong:);
  methods[15].selector = @selector(jjStopStringLiteralDfa_0WithInt:withLong:);
  methods[16].selector = @selector(jjStartNfa_0WithInt:withLong:);
  methods[17].selector = @selector(jjMoveStringLiteralDfa0_0);
  methods[18].selector = @selector(jjStartNfaWithStates_0WithInt:withInt:withInt:);
  methods[19].selector = @selector(jjMoveNfa_0WithInt:withInt:);
  methods[20].selector = @selector(jjStopStringLiteralDfa_1WithInt:withLong:);
  methods[21].selector = @selector(jjStartNfa_1WithInt:withLong:);
  methods[22].selector = @selector(jjMoveStringLiteralDfa0_1);
  methods[23].selector = @selector(jjStartNfaWithStates_1WithInt:withInt:withInt:);
  methods[24].selector = @selector(jjMoveNfa_1WithInt:withInt:);
  methods[25].selector = @selector(jjCanMove_0WithInt:withInt:withInt:withLong:withLong:);
  methods[26].selector = @selector(jjFillToken);
  methods[27].selector = @selector(getNextToken);
  methods[28].selector = @selector(jjCheckNAddWithInt:);
  methods[29].selector = @selector(jjAddStatesWithInt:withInt:);
  methods[30].selector = @selector(jjCheckNAddTwoStatesWithInt:withInt:);
  methods[31].selector = @selector(jjCheckNAddStatesWithInt:withInt:);
  methods[32].selector = @selector(initWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream:);
  methods[33].selector = @selector(initWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream:withInt:);
  methods[34].selector = @selector(ReInitWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream:);
  methods[35].selector = @selector(ReInitRounds);
  methods[36].selector = @selector(ReInitWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream:withInt:);
  methods[37].selector = @selector(SwitchToWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "debugStream_", "LJavaIoPrintStream;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "jjbitVec0", "[J", .constantValue.asLong = 0, 0x18, -1, 39, -1, -1 },
    { "jjbitVec2", "[J", .constantValue.asLong = 0, 0x18, -1, 40, -1, -1 },
    { "jjnextStates", "[I", .constantValue.asLong = 0, 0x18, -1, 41, -1, -1 },
    { "jjstrLiteralImages", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 42, -1, -1 },
    { "curLexState_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "defaultLexState_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjnewStateCnt_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjround_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjmatchedPos_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjmatchedKind_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "lexStateNames", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 43, -1, -1 },
    { "jjnewLexState", "[I", .constantValue.asLong = 0, 0x19, -1, 44, -1, -1 },
    { "jjtoToken", "[J", .constantValue.asLong = 0, 0x18, -1, 45, -1, -1 },
    { "jjtoSkip", "[J", .constantValue.asLong = 0, 0x18, -1, 46, -1, -1 },
    { "input_stream_", "LEduStanfordNlpTreesTregexTsurgeonSimpleCharStream;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "jjrounds_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "jjstateSet_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "curChar_", "C", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setDebugStream", "LJavaIoPrintStream;", "jjStopAtPos", "II", "jjMoveStringLiteralDfa1_2", "J", "jjMoveStringLiteralDfa2_2", "JJ", "jjMoveStringLiteralDfa3_2", "jjMoveStringLiteralDfa4_2", "jjMoveStringLiteralDfa5_2", "jjMoveStringLiteralDfa6_2", "jjMoveStringLiteralDfa7_2", "jjMoveStringLiteralDfa8_2", "jjMoveStringLiteralDfa9_2", "jjMoveStringLiteralDfa10_2", "jjMoveStringLiteralDfa11_2", "jjMoveStringLiteralDfa12_2", "jjStopStringLiteralDfa_0", "IJ", "jjStartNfa_0", "jjStartNfaWithStates_0", "III", "jjMoveNfa_0", "jjStopStringLiteralDfa_1", "jjStartNfa_1", "jjStartNfaWithStates_1", "jjMoveNfa_1", "jjCanMove_0", "IIIJJ", "jjCheckNAdd", "I", "jjAddStates", "jjCheckNAddTwoStates", "jjCheckNAddStates", "LEduStanfordNlpTreesTregexTsurgeonSimpleCharStream;", "LEduStanfordNlpTreesTregexTsurgeonSimpleCharStream;I", "ReInit", "SwitchTo", &EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjbitVec0, &EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjbitVec2, &EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjnextStates, &EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjstrLiteralImages, &EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_lexStateNames, &EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjnewLexState, &EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjtoToken, &EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjtoSkip };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager = { "TsurgeonParserTokenManager", "edu.stanford.nlp.trees.tregex.tsurgeon", ptrTable, methods, fields, 7, 0x0, 38, 19, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager class]) {
    EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjbitVec0 = [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0xfffffffffffffffeLL, (jlong) 0xffffffffffffffffLL, (jlong) 0xffffffffffffffffLL, (jlong) 0xffffffffffffffffLL } count:4];
    EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjbitVec2 = [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0x0LL, (jlong) 0x0LL, (jlong) 0xffffffffffffffffLL, (jlong) 0xffffffffffffffffLL } count:4];
    EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjnextStates = [IOSIntArray newArrayWithInts:(jint[]){ 38, 39, 40, 52, 53, 54, 28, 35, 17, 18, 6, 7, 8, 38, 39, 40, 41, 43, 45, 41, 42, 43, 45, 41, 43, 44, 45, 46, 47, 48, 52, 53, 54, 9, 10, 49, 50, 51, 55, 56, 57 } count:41];
    EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjstrLiteralImages = [IOSObjectArray newArrayWithObjects:(id[]){ @"", nil, nil, nil, nil, @"[", @"if", @"not", @"exists", @"delete", @"prune", @"relabel", @"excise", @"insert", @"move", @"replace", @"createSubtree", @"adjoin", @"adjoinH", @"adjoinF", @"coindex", nil, @"]", nil, nil, nil, nil, nil, nil, nil, nil, nil, @")" } count:33 type:NSString_class_()];
    EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_lexStateNames = [IOSObjectArray newArrayWithObjects:(id[]){ @"OPERATION", @"CONDITIONAL", @"DEFAULT" } count:3 type:NSString_class_()];
    EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjnewLexState = [IOSIntArray newArrayWithInts:(jint[]){ -1, -1, -1, -1, -1, 2, -1, -1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 } count:33];
    EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjtoToken = [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0x1ffffffe1LL } count:1];
    EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjtoSkip = [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0x1eLL } count:1];
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager)
  }
}

@end

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint pos, jint kind) {
  self->jjmatchedKind_ = kind;
  self->jjmatchedPos_ = pos;
  return pos + 1;
}

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa0_2(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self) {
  switch (self->curChar_) {
    case 91:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 5);
    case 97:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa1_2WithLong_(self, (jlong) 0xe0000LL);
    case 99:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa1_2WithLong_(self, (jlong) 0x110000LL);
    case 100:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa1_2WithLong_(self, (jlong) 0x200LL);
    case 101:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa1_2WithLong_(self, (jlong) 0x1100LL);
    case 105:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa1_2WithLong_(self, (jlong) 0x2040LL);
    case 109:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa1_2WithLong_(self, (jlong) 0x4000LL);
    case 110:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa1_2WithLong_(self, (jlong) 0x80LL);
    case 112:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa1_2WithLong_(self, (jlong) 0x400LL);
    case 114:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa1_2WithLong_(self, (jlong) 0x8800LL);
    default:
    return 1;
  }
}

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa1_2WithLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong active0) {
  @try {
    self->curChar_ = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    return 1;
  }
  switch (self->curChar_) {
    case 100:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa2_2WithLong_withLong_(self, active0, (jlong) 0xe0000LL);
    case 101:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa2_2WithLong_withLong_(self, active0, (jlong) 0x8a00LL);
    case 102:
    if ((active0 & (jlong) 0x40LL) != 0LL) return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(self, 1, 6);
    break;
    case 110:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa2_2WithLong_withLong_(self, active0, (jlong) 0x2000LL);
    case 111:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa2_2WithLong_withLong_(self, active0, (jlong) 0x104080LL);
    case 114:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa2_2WithLong_withLong_(self, active0, (jlong) 0x10400LL);
    case 120:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa2_2WithLong_withLong_(self, active0, (jlong) 0x1100LL);
    default:
    return 2;
  }
  return 2;
}

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa2_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0) {
  if (((active0 &= old0)) == 0LL) return 2;
  @try {
    self->curChar_ = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    return 2;
  }
  switch (self->curChar_) {
    case 99:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa3_2WithLong_withLong_(self, active0, (jlong) 0x1000LL);
    case 101:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa3_2WithLong_withLong_(self, active0, (jlong) 0x10000LL);
    case 105:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa3_2WithLong_withLong_(self, active0, (jlong) 0x100100LL);
    case 106:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa3_2WithLong_withLong_(self, active0, (jlong) 0xe0000LL);
    case 108:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa3_2WithLong_withLong_(self, active0, (jlong) 0xa00LL);
    case 112:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa3_2WithLong_withLong_(self, active0, (jlong) 0x8000LL);
    case 115:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa3_2WithLong_withLong_(self, active0, (jlong) 0x2000LL);
    case 116:
    if ((active0 & (jlong) 0x80LL) != 0LL) return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(self, 2, 7);
    break;
    case 117:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa3_2WithLong_withLong_(self, active0, (jlong) 0x400LL);
    case 118:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa3_2WithLong_withLong_(self, active0, (jlong) 0x4000LL);
    default:
    return 3;
  }
  return 3;
}

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa3_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0) {
  if (((active0 &= old0)) == 0LL) return 3;
  @try {
    self->curChar_ = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    return 3;
  }
  switch (self->curChar_) {
    case 97:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa4_2WithLong_withLong_(self, active0, (jlong) 0x10800LL);
    case 101:
    if ((active0 & (jlong) 0x4000LL) != 0LL) return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(self, 3, 14);
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa4_2WithLong_withLong_(self, active0, (jlong) 0x2200LL);
    case 105:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa4_2WithLong_withLong_(self, active0, (jlong) 0x1000LL);
    case 108:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa4_2WithLong_withLong_(self, active0, (jlong) 0x8000LL);
    case 110:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa4_2WithLong_withLong_(self, active0, (jlong) 0x100400LL);
    case 111:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa4_2WithLong_withLong_(self, active0, (jlong) 0xe0000LL);
    case 115:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa4_2WithLong_withLong_(self, active0, (jlong) 0x100LL);
    default:
    return 4;
  }
}

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa4_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0) {
  if (((active0 &= old0)) == 0LL) return 4;
  @try {
    self->curChar_ = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    return 4;
  }
  switch (self->curChar_) {
    case 97:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa5_2WithLong_withLong_(self, active0, (jlong) 0x8000LL);
    case 98:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa5_2WithLong_withLong_(self, active0, (jlong) 0x800LL);
    case 100:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa5_2WithLong_withLong_(self, active0, (jlong) 0x100000LL);
    case 101:
    if ((active0 & (jlong) 0x400LL) != 0LL) return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(self, 4, 10);
    break;
    case 105:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa5_2WithLong_withLong_(self, active0, (jlong) 0xe0000LL);
    case 114:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa5_2WithLong_withLong_(self, active0, (jlong) 0x2000LL);
    case 115:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa5_2WithLong_withLong_(self, active0, (jlong) 0x1000LL);
    case 116:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa5_2WithLong_withLong_(self, active0, (jlong) 0x10300LL);
    default:
    return 5;
  }
  return 5;
}

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa5_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0) {
  if (((active0 &= old0)) == 0LL) return 5;
  @try {
    self->curChar_ = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    return 5;
  }
  switch (self->curChar_) {
    case 99:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa6_2WithLong_withLong_(self, active0, (jlong) 0x8000LL);
    case 101:
    if ((active0 & (jlong) 0x200LL) != 0LL) return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(self, 5, 9);
    else if ((active0 & (jlong) 0x1000LL) != 0LL) return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(self, 5, 12);
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa6_2WithLong_withLong_(self, active0, (jlong) 0x110800LL);
    case 110:
    if ((active0 & (jlong) 0x20000LL) != 0LL) {
      self->jjmatchedKind_ = 17;
      self->jjmatchedPos_ = 5;
    }
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa6_2WithLong_withLong_(self, active0, (jlong) 0xc0000LL);
    case 115:
    if ((active0 & (jlong) 0x100LL) != 0LL) return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(self, 5, 8);
    break;
    case 116:
    if ((active0 & (jlong) 0x2000LL) != 0LL) return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(self, 5, 13);
    break;
    default:
    return 6;
  }
  return 6;
}

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa6_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0) {
  if (((active0 &= old0)) == 0LL) return 6;
  @try {
    self->curChar_ = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    return 6;
  }
  switch (self->curChar_) {
    case 70:
    if ((active0 & (jlong) 0x80000LL) != 0LL) return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(self, 6, 19);
    break;
    case 72:
    if ((active0 & (jlong) 0x40000LL) != 0LL) return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(self, 6, 18);
    break;
    case 83:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa7_2WithLong_withLong_(self, active0, (jlong) 0x10000LL);
    case 101:
    if ((active0 & (jlong) 0x8000LL) != 0LL) return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(self, 6, 15);
    break;
    case 108:
    if ((active0 & (jlong) 0x800LL) != 0LL) return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(self, 6, 11);
    break;
    case 120:
    if ((active0 & (jlong) 0x100000LL) != 0LL) return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(self, 6, 20);
    break;
    default:
    return 7;
  }
  return 7;
}

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa7_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0) {
  if (((active0 &= old0)) == 0LL) return 7;
  @try {
    self->curChar_ = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    return 7;
  }
  switch (self->curChar_) {
    case 117:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa8_2WithLong_withLong_(self, active0, (jlong) 0x10000LL);
    default:
    return 8;
  }
}

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa8_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0) {
  if (((active0 &= old0)) == 0LL) return 8;
  @try {
    self->curChar_ = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    return 8;
  }
  switch (self->curChar_) {
    case 98:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa9_2WithLong_withLong_(self, active0, (jlong) 0x10000LL);
    default:
    return 9;
  }
}

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa9_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0) {
  if (((active0 &= old0)) == 0LL) return 9;
  @try {
    self->curChar_ = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    return 9;
  }
  switch (self->curChar_) {
    case 116:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa10_2WithLong_withLong_(self, active0, (jlong) 0x10000LL);
    default:
    return 10;
  }
}

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa10_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0) {
  if (((active0 &= old0)) == 0LL) return 10;
  @try {
    self->curChar_ = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    return 10;
  }
  switch (self->curChar_) {
    case 114:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa11_2WithLong_withLong_(self, active0, (jlong) 0x10000LL);
    default:
    return 11;
  }
}

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa11_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0) {
  if (((active0 &= old0)) == 0LL) return 11;
  @try {
    self->curChar_ = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    return 11;
  }
  switch (self->curChar_) {
    case 101:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa12_2WithLong_withLong_(self, active0, (jlong) 0x10000LL);
    default:
    return 12;
  }
}

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa12_2WithLong_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jlong old0, jlong active0) {
  if (((active0 &= old0)) == 0LL) return 12;
  @try {
    self->curChar_ = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    return 12;
  }
  switch (self->curChar_) {
    case 101:
    if ((active0 & (jlong) 0x10000LL) != 0LL) return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(self, 12, 16);
    break;
    default:
    return 13;
  }
  return 13;
}

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopStringLiteralDfa_0WithInt_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint pos, jlong active0) {
  switch (pos) {
    default:
    return -1;
  }
}

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa0_0(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self) {
  switch (self->curChar_) {
    case 9:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStartNfaWithStates_0WithInt_withInt_withInt_(self, 0, 3, 58);
    case 41:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 32);
    case 91:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 5);
    case 93:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 22);
    default:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveNfa_0WithInt_withInt_(self, 0, 0);
  }
}

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStartNfaWithStates_0WithInt_withInt_withInt_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint pos, jint kind, jint state) {
  self->jjmatchedKind_ = kind;
  self->jjmatchedPos_ = pos;
  @try {
    self->curChar_ = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    return pos + 1;
  }
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveNfa_0WithInt_withInt_(self, state, pos + 1);
}

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveNfa_0WithInt_withInt_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint startState, jint curPos) {
  __unused jint startsAt = 0;
  self->jjnewStateCnt_ = 58;
  __unused jint i = 1;
  *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), 0) = startState;
  __unused jint kind = (jint) 0x7fffffff;
  for (; ; ) {
    if (++self->jjround_ == (jint) 0x7fffffff) EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_ReInitRounds(self);
    if (self->curChar_ < 64) {
      __unused jlong l = JreLShift64(1LL, self->curChar_);
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 58:
          if (((jlong) 0xfbfffcfeffffdbffLL & l) != 0LL) {
            if (kind > 30) kind = 30;
            {
              EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 13);
            }
          }
          if (((jlong) 0xbff2c84ffffdbffLL & l) != 0LL) {
            if (kind > 25) kind = 25;
            {
              EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 1);
            }
          }
          break;
          case 0:
          if (((jlong) 0xfbfffcfeffffdbffLL & l) != 0LL) {
            if (kind > 30) kind = 30;
            {
              EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 13);
            }
          }
          else if (self->curChar_ == 40) {
            if (kind > 31) kind = 31;
            {
              EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 15);
            }
          }
          if (((jlong) 0x2c84ffffdbffLL & l) != 0LL) {
            if (kind > 25) kind = 25;
            {
              EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 1);
            }
          }
          else if (self->curChar_ == 47) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 0, 5);
          }
          else if (self->curChar_ == 35) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjAddStatesWithInt_withInt_(self, 6, 7);
          }
          else if (self->curChar_ == 36) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjAddStatesWithInt_withInt_(self, 8, 9);
          }
          else if (self->curChar_ == 62) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 3, 4);
          }
          if (self->curChar_ == 35) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 12);
          }
          break;
          case 1:
          if (((jlong) 0xbff2c84ffffdbffLL & l) == 0LL) break;
          if (kind > 25) kind = 25;
          {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 1);
          }
          break;
          case 2:
          if (self->curChar_ == 62) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 3, 4);
          }
          break;
          case 3:
          if (self->curChar_ == 45) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 4);
          }
          break;
          case 4:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 26) kind = 26;
          {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 4);
          }
          break;
          case 6:
          if (((jlong) 0xffffffffffffdbffLL & l) != 0LL) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjAddStatesWithInt_withInt_(self, 10, 12);
          }
          break;
          case 11:
          if (self->curChar_ == 35) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 12);
          }
          break;
          case 12:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 29) kind = 29;
          {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 12);
          }
          break;
          case 13:
          if (((jlong) 0xfbfffcfeffffdbffLL & l) == 0LL) break;
          if (kind > 30) kind = 30;
          {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 13);
          }
          break;
          case 14:
          if (self->curChar_ != 40) break;
          if (kind > 31) kind = 31;
          {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 15);
          }
          break;
          case 15:
          if (((jlong) 0xf3fffcfa00000000LL & l) == 0LL) break;
          if (kind > 31) kind = 31;
          {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 15);
          }
          break;
          case 16:
          if (self->curChar_ == 36) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjAddStatesWithInt_withInt_(self, 8, 9);
          }
          break;
          case 17:
          if (self->curChar_ == 45 && kind > 26) kind = 26;
          break;
          case 18:
          if (self->curChar_ == 43 && kind > 26) kind = 26;
          break;
          case 19:
          if (self->curChar_ == 35) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjAddStatesWithInt_withInt_(self, 6, 7);
          }
          break;
          case 36:
          if (self->curChar_ == 47) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 0, 5);
          }
          break;
          case 37:
          if (self->curChar_ == 47) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 13, 15);
          }
          break;
          case 39:
          if (((jlong) 0xffffffffffffdbffLL & l) != 0LL) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 13, 15);
          }
          break;
          case 40:
          if (self->curChar_ == 47) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 16, 18);
          }
          break;
          case 41:
          if (self->curChar_ == 61) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 42);
          }
          break;
          case 42:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 24) kind = 24;
          {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 19, 22);
          }
          break;
          case 43:
          if (self->curChar_ == 37) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 44);
          }
          break;
          case 44:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 24) kind = 24;
          {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 23, 26);
          }
          break;
          case 45:
          case 49:
          if (self->curChar_ == 47) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 27, 29);
          }
          break;
          case 46:
          if (((jlong) 0xffffffffffffdbffLL & l) != 0LL) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 27, 29);
          }
          break;
          case 47:
          if (self->curChar_ != 47) break;
          if (kind > 24) kind = 24;
          {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 16, 18);
          }
          break;
          case 52:
          if (((jlong) 0xffffffffffffdbffLL & l) != 0LL) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 30, 32);
          }
          break;
          case 53:
          if (self->curChar_ == 47 && kind > 27) kind = 27;
          break;
          case 55:
          if (self->curChar_ == 47) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 30, 32);
          }
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else if (self->curChar_ < 128) {
      __unused jlong l = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 58:
          if (((jlong) 0xffffffffd7ffffffLL & l) != 0LL) {
            if (kind > 30) kind = 30;
            {
              EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 13);
            }
          }
          if (((jlong) 0xbfffffffd7fffffeLL & l) != 0LL) {
            if (kind > 25) kind = 25;
            {
              EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 1);
            }
          }
          break;
          case 0:
          if (((jlong) 0xffffffffd7ffffffLL & l) != 0LL) {
            if (kind > 30) kind = 30;
            {
              EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 13);
            }
          }
          if (((jlong) 0x87ffffff57fffffeLL & l) != 0LL) {
            if (kind > 25) kind = 25;
            {
              EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 1);
            }
          }
          else if (self->curChar_ == 124) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 10, 12);
          }
          break;
          case 1:
          if (((jlong) 0xbfffffffd7fffffeLL & l) == 0LL) break;
          if (kind > 25) kind = 25;
          {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 1);
          }
          break;
          case 5:
          case 9:
          if (self->curChar_ == 124) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 10, 12);
          }
          break;
          case 6:
          if (((jlong) 0xefffffffefffffffLL & l) != 0LL) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 10, 12);
          }
          break;
          case 7:
          if (self->curChar_ == 124 && kind > 28) kind = 28;
          break;
          case 8:
          if (self->curChar_ == 92) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjAddStatesWithInt_withInt_(self, 33, 34);
          }
          break;
          case 10:
          if (self->curChar_ == 92) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 10, 12);
          }
          break;
          case 13:
          if (((jlong) 0xffffffffd7ffffffLL & l) == 0LL) break;
          if (kind > 30) kind = 30;
          {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 13);
          }
          break;
          case 15:
          if (((jlong) 0x7fffffffffffffffLL & l) == 0LL) break;
          if (kind > 31) kind = 31;
          *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 15;
          break;
          case 20:
          if (self->curChar_ == 116 && kind > 23) kind = 23;
          break;
          case 21:
          case 29:
          if (self->curChar_ == 115) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 20);
          }
          break;
          case 22:
          if (self->curChar_ == 111) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 21;
          break;
          case 23:
          if (self->curChar_ == 109) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 22;
          break;
          case 24:
          if (self->curChar_ == 116) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 23;
          break;
          case 25:
          if (self->curChar_ == 104) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 24;
          break;
          case 26:
          if (self->curChar_ == 103) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 25;
          break;
          case 27:
          if (self->curChar_ == 105) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 26;
          break;
          case 28:
          if (self->curChar_ == 114) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 27;
          break;
          case 30:
          if (self->curChar_ == 111) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 29;
          break;
          case 31:
          if (self->curChar_ == 109) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 30;
          break;
          case 32:
          if (self->curChar_ == 116) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 31;
          break;
          case 33:
          if (self->curChar_ == 102) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 32;
          break;
          case 34:
          if (self->curChar_ == 101) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 33;
          break;
          case 35:
          if (self->curChar_ == 108) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 34;
          break;
          case 38:
          if (self->curChar_ == 92) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 37;
          break;
          case 39:
          {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjAddStatesWithInt_withInt_(self, 13, 15);
          }
          break;
          case 42:
          if (((jlong) 0x7fffffe87fffffeLL & l) == 0LL) break;
          if (kind > 24) kind = 24;
          {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 19, 22);
          }
          break;
          case 44:
          if (((jlong) 0x7fffffe87fffffeLL & l) == 0LL) break;
          if (kind > 24) kind = 24;
          {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 23, 26);
          }
          break;
          case 46:
          if (((jlong) 0xffffffffcfffffffLL & l) != 0LL) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 27, 29);
          }
          break;
          case 48:
          if (self->curChar_ == 92) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjAddStatesWithInt_withInt_(self, 35, 37);
          }
          break;
          case 50:
          if (self->curChar_ == 93) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 27, 29);
          }
          break;
          case 51:
          if (self->curChar_ == 92) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 27, 29);
          }
          break;
          case 52:
          if (((jlong) 0xffffffffcfffffffLL & l) != 0LL) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 30, 32);
          }
          break;
          case 54:
          if (self->curChar_ == 92) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjAddStatesWithInt_withInt_(self, 38, 40);
          }
          break;
          case 56:
          if (self->curChar_ == 93) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 30, 32);
          }
          break;
          case 57:
          if (self->curChar_ == 92) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 30, 32);
          }
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else {
      __unused jint hiByte = (JreRShift32(self->curChar_, 8));
      __unused jint i1 = JreRShift32(hiByte, 6);
      __unused jlong l1 = JreLShift64(1LL, (hiByte & 077));
      __unused jint i2 = JreRShift32((self->curChar_ & (jint) 0xff), 6);
      __unused jlong l2 = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 58:
          if (EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) {
            if (kind > 25) kind = 25;
            {
              EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 1);
            }
          }
          if (EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) {
            if (kind > 30) kind = 30;
            {
              EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 13);
            }
          }
          break;
          case 0:
          if (EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) {
            if (kind > 25) kind = 25;
            {
              EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 1);
            }
          }
          if (EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) {
            if (kind > 30) kind = 30;
            {
              EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 13);
            }
          }
          break;
          case 1:
          if (!EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) break;
          if (kind > 25) kind = 25;
          {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 1);
          }
          break;
          case 6:
          if (EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjAddStatesWithInt_withInt_(self, 10, 12);
          }
          break;
          case 13:
          if (!EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) break;
          if (kind > 30) kind = 30;
          {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, 13);
          }
          break;
          case 39:
          if (EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjAddStatesWithInt_withInt_(self, 13, 15);
          }
          break;
          case 46:
          if (EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjAddStatesWithInt_withInt_(self, 27, 29);
          }
          break;
          case 52:
          if (EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) {
            EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjAddStatesWithInt_withInt_(self, 30, 32);
          }
          break;
          default:
          if (i1 == 0 || l1 == 0 || i2 == 0 || l2 == 0) break;
          else break;
        }
      }
      while (i != startsAt);
    }
    if (kind != (jint) 0x7fffffff) {
      self->jjmatchedKind_ = kind;
      self->jjmatchedPos_ = curPos;
      kind = (jint) 0x7fffffff;
    }
    ++curPos;
    if ((i = self->jjnewStateCnt_) == (startsAt = 58 - (self->jjnewStateCnt_ = startsAt))) return curPos;
    @try {
      self->curChar_ = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
    }
    @catch (JavaIoIOException *e) {
      return curPos;
    }
  }
}

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopStringLiteralDfa_1WithInt_withLong_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint pos, jlong active0) {
  switch (pos) {
    default:
    return -1;
  }
}

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveStringLiteralDfa0_1(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self) {
  switch (self->curChar_) {
    case 9:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStartNfaWithStates_1WithInt_withInt_withInt_(self, 0, 3, 0);
    case 91:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 5);
    default:
    return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveNfa_1WithInt_withInt_(self, 0, 0);
  }
}

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjStartNfaWithStates_1WithInt_withInt_withInt_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint pos, jint kind, jint state) {
  self->jjmatchedKind_ = kind;
  self->jjmatchedPos_ = pos;
  @try {
    self->curChar_ = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    return pos + 1;
  }
  return EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveNfa_1WithInt_withInt_(self, state, pos + 1);
}

jint EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjMoveNfa_1WithInt_withInt_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint startState, jint curPos) {
  __unused jint startsAt = 0;
  self->jjnewStateCnt_ = 1;
  __unused jint i = 1;
  *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), 0) = startState;
  __unused jint kind = (jint) 0x7fffffff;
  for (; ; ) {
    if (++self->jjround_ == (jint) 0x7fffffff) EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_ReInitRounds(self);
    if (self->curChar_ < 64) {
      __unused jlong l = JreLShift64(1LL, self->curChar_);
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 0:
          if (((jlong) 0xfbfffcfeffffdbffLL & l) == 0LL) break;
          kind = 21;
          *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 0;
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else if (self->curChar_ < 128) {
      __unused jlong l = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 0:
          if (((jlong) 0xffffffffd7ffffffLL & l) == 0LL) break;
          kind = 21;
          *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 0;
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else {
      __unused jint hiByte = (JreRShift32(self->curChar_, 8));
      __unused jint i1 = JreRShift32(hiByte, 6);
      __unused jlong l1 = JreLShift64(1LL, (hiByte & 077));
      __unused jint i2 = JreRShift32((self->curChar_ & (jint) 0xff), 6);
      __unused jlong l2 = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 0:
          if (!EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) break;
          if (kind > 21) kind = 21;
          *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 0;
          break;
          default:
          if (i1 == 0 || l1 == 0 || i2 == 0 || l2 == 0) break;
          else break;
        }
      }
      while (i != startsAt);
    }
    if (kind != (jint) 0x7fffffff) {
      self->jjmatchedKind_ = kind;
      self->jjmatchedPos_ = curPos;
      kind = (jint) 0x7fffffff;
    }
    ++curPos;
    if ((i = self->jjnewStateCnt_) == (startsAt = 1 - (self->jjnewStateCnt_ = startsAt))) return curPos;
    @try {
      self->curChar_ = [((EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *) nil_chk(self->input_stream_)) readChar];
    }
    @catch (JavaIoIOException *e) {
      return curPos;
    }
  }
}

jboolean EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(jint hiByte, jint i1, jint i2, jlong l1, jlong l2) {
  EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_initialize();
  switch (hiByte) {
    case 0:
    return ((IOSLongArray_Get(nil_chk(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjbitVec2), i2) & l2) != 0LL);
    default:
    if ((IOSLongArray_Get(nil_chk(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjbitVec0), i1) & l1) != 0LL) return true;
    return false;
  }
}

void EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint state) {
  if (IOSIntArray_Get(nil_chk(self->jjrounds_), state) != self->jjround_) {
    *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), self->jjnewStateCnt_++) = state;
    *IOSIntArray_GetRef(self->jjrounds_, state) = self->jjround_;
  }
}

void EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjAddStatesWithInt_withInt_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint start, jint end) {
  do {
    *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), self->jjnewStateCnt_++) = IOSIntArray_Get(nil_chk(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjnextStates), start);
  }
  while (start++ != end);
}

void EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint state1, jint state2) {
  EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, state1);
  EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, state2);
}

void EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddStatesWithInt_withInt_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, jint start, jint end) {
  do {
    EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjCheckNAddWithInt_(self, IOSIntArray_Get(nil_chk(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_jjnextStates), start));
  }
  while (start++ != end);
}

void EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_initWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *stream) {
  NSObject_init(self);
  self->debugStream_ = JreLoadStatic(JavaLangSystem, out);
  self->curLexState_ = 2;
  self->defaultLexState_ = 2;
  self->jjrounds_ = [IOSIntArray newArrayWithLength:58];
  self->jjstateSet_ = [IOSIntArray newArrayWithLength:2 * 58];
  self->input_stream_ = stream;
}

EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *new_EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_initWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream_(EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *stream) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager, initWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream_, stream)
}

EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *create_EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_initWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream_(EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *stream) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager, initWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream_, stream)
}

void EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_initWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream_withInt_(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self, EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *stream, jint lexState) {
  NSObject_init(self);
  self->debugStream_ = JreLoadStatic(JavaLangSystem, out);
  self->curLexState_ = 2;
  self->defaultLexState_ = 2;
  self->jjrounds_ = [IOSIntArray newArrayWithLength:58];
  self->jjstateSet_ = [IOSIntArray newArrayWithLength:2 * 58];
  [self ReInitWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream:stream];
  [self SwitchToWithInt:lexState];
}

EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *new_EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_initWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream_withInt_(EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *stream, jint lexState) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager, initWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream_withInt_, stream, lexState)
}

EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *create_EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_initWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream_withInt_(EduStanfordNlpTreesTregexTsurgeonSimpleCharStream *stream, jint lexState) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager, initWithEduStanfordNlpTreesTregexTsurgeonSimpleCharStream_withInt_, stream, lexState)
}

void EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager_ReInitRounds(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager *self) {
  __unused jint i;
  self->jjround_ = (jint) 0x80000001;
  for (i = 58; i-- > 0; ) *IOSIntArray_GetRef(nil_chk(self->jjrounds_), i) = -0x7fffffff - 1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTregexTsurgeonTsurgeonParserTokenManager)
