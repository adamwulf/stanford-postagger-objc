//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/tregex/tsurgeon/IfExistsNode.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpTreesTregexTsurgeonIfExistsNode")
#ifdef RESTRICT_EduStanfordNlpTreesTregexTsurgeonIfExistsNode
#define INCLUDE_ALL_EduStanfordNlpTreesTregexTsurgeonIfExistsNode 0
#else
#define INCLUDE_ALL_EduStanfordNlpTreesTregexTsurgeonIfExistsNode 1
#endif
#undef RESTRICT_EduStanfordNlpTreesTregexTsurgeonIfExistsNode

#if !defined (EduStanfordNlpTreesTregexTsurgeonIfExistsNode_) && (INCLUDE_ALL_EduStanfordNlpTreesTregexTsurgeonIfExistsNode || defined(INCLUDE_EduStanfordNlpTreesTregexTsurgeonIfExistsNode))
#define EduStanfordNlpTreesTregexTsurgeonIfExistsNode_

#define RESTRICT_EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern 1
#define INCLUDE_EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern 1
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPattern.h"

@class EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator;
@class EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher;
@class IOSObjectArray;
@protocol JavaUtilMap;

@interface EduStanfordNlpTreesTregexTsurgeonIfExistsNode : EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern {
 @public
  NSString *name_;
  jboolean invert_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)name
                     withBoolean:(jboolean)invert
withEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray:(IOSObjectArray *)children;

- (EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *)matcherWithJavaUtilMap:(id<JavaUtilMap>)newNodeNames
                  withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesTregexTsurgeonIfExistsNode)

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTsurgeonIfExistsNode, name_, NSString *)

FOUNDATION_EXPORT void EduStanfordNlpTreesTregexTsurgeonIfExistsNode_initWithNSString_withBoolean_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(EduStanfordNlpTreesTregexTsurgeonIfExistsNode *self, NSString *name, jboolean invert, IOSObjectArray *children);

FOUNDATION_EXPORT EduStanfordNlpTreesTregexTsurgeonIfExistsNode *new_EduStanfordNlpTreesTregexTsurgeonIfExistsNode_initWithNSString_withBoolean_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(NSString *name, jboolean invert, IOSObjectArray *children) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTreesTregexTsurgeonIfExistsNode *create_EduStanfordNlpTreesTregexTsurgeonIfExistsNode_initWithNSString_withBoolean_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternArray_(NSString *name, jboolean invert, IOSObjectArray *children);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesTregexTsurgeonIfExistsNode)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpTreesTregexTsurgeonIfExistsNode")
