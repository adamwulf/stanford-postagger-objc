//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/tregex/tsurgeon/AdjoinToHeadNode.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/ling/LabelFactory.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeFactory.h"
#include "edu/stanford/nlp/trees/tregex/TregexMatcher.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/AdjoinNode.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/AdjoinToHeadNode.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/AuxiliaryTree.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonMatcher.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPattern.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@interface EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher : EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher {
 @public
  EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode *this$0_;
}

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode:(EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode *)outer$
                                                          withJavaUtilMap:(id<JavaUtilMap>)newNodeNames
               withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer;

- (EduStanfordNlpTreesTree *)evaluateWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                      withEduStanfordNlpTreesTregexTregexMatcher:(EduStanfordNlpTreesTregexTregexMatcher *)tregex;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher)

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher, this$0_, EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode *)

__attribute__((unused)) static void EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher *self, EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer);

__attribute__((unused)) static EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher *new_EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher *create_EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher)

@implementation EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree:(EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *)t
                  withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern:(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)p {
  EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(self, t, p);
  return self;
}

- (EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *)matcherWithJavaUtilMap:(id<JavaUtilMap>)newNodeNames
                  withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer {
  return new_EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, newNodeNames, coindexer);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher;", 0x1, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree:withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern:);
  methods[1].selector = @selector(matcherWithJavaUtilMap:withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree;LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", "matcher", "LJavaUtilMap;LEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator;", "(Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/trees/Tree;>;Ledu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator;)Ledu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonMatcher;", "LEduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode = { "AdjoinToHeadNode", "edu.stanford.nlp.trees.tregex.tsurgeon", ptrTable, methods, NULL, 7, 0x0, 2, 0, -1, 4, -1, -1, -1 };
  return &_EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode;
}

@end

void EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode *self, EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *t, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *p) {
  EduStanfordNlpTreesTregexTsurgeonAdjoinNode_initWithNSString_withEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(self, @"adjoinH", t, p);
}

EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode *new_EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *t, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *p) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode, initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_, t, p)
}

EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode *create_EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *t, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *p) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode, initWithEduStanfordNlpTreesTregexTsurgeonAuxiliaryTree_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_, t, p)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode)

@implementation EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode:(EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode *)outer$
                                                          withJavaUtilMap:(id<JavaUtilMap>)newNodeNames
               withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer {
  EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, outer$, newNodeNames, coindexer);
  return self;
}

- (EduStanfordNlpTreesTree *)evaluateWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                      withEduStanfordNlpTreesTregexTregexMatcher:(EduStanfordNlpTreesTregexTregexMatcher *)tregex {
  EduStanfordNlpTreesTree *targetNode = [((EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *) nil_chk(IOSObjectArray_Get(nil_chk(childMatcher_), 0))) evaluateWithEduStanfordNlpTreesTree:tree withEduStanfordNlpTreesTregexTregexMatcher:tregex];
  EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *ft = [((EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *) nil_chk([this$0_ adjunctionTree])) copy__WithEduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher:self withEduStanfordNlpTreesTreeFactory:[((EduStanfordNlpTreesTree *) nil_chk(tree)) treeFactory] withEduStanfordNlpLingLabelFactory:[((id<EduStanfordNlpLingLabel>) nil_chk([tree label])) labelFactory]];
  [((EduStanfordNlpTreesTree *) nil_chk(((EduStanfordNlpTreesTregexTsurgeonAuxiliaryTree *) nil_chk(ft))->foot_)) setChildrenWithJavaUtilList:[((EduStanfordNlpTreesTree *) nil_chk(targetNode)) getChildrenAsList]];
  [targetNode setChildrenWithJavaUtilList:[((EduStanfordNlpTreesTree *) nil_chk(ft->tree_)) getChildrenAsList]];
  return tree;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode:withJavaUtilMap:withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:);
  methods[1].selector = @selector(evaluateWithEduStanfordNlpTreesTree:withEduStanfordNlpTreesTregexTregexMatcher:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LEduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode;LJavaUtilMap;LEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator;", "(Ledu/stanford/nlp/trees/tregex/tsurgeon/AdjoinToHeadNode;Ljava/util/Map<Ljava/lang/String;Ledu/stanford/nlp/trees/Tree;>;Ledu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator;)V", "evaluate", "LEduStanfordNlpTreesTree;LEduStanfordNlpTreesTregexTregexMatcher;", "LEduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher = { "Matcher", "edu.stanford.nlp.trees.tregex.tsurgeon", ptrTable, methods, fields, 7, 0x2, 2, 1, 4, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher;
}

@end

void EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher *self, EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  self->this$0_ = outer$;
  EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher_initWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(self, outer$, newNodeNames, coindexer);
}

EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher *new_EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher, initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_, outer$, newNodeNames, coindexer)
}

EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher *create_EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher_initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher, initWithEduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_, outer$, newNodeNames, coindexer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTregexTsurgeonAdjoinToHeadNode_Matcher)
