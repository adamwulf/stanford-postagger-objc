//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/tregex/tsurgeon/TreeLocation.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpTreesTregexTsurgeonTreeLocation")
#ifdef RESTRICT_EduStanfordNlpTreesTregexTsurgeonTreeLocation
#define INCLUDE_ALL_EduStanfordNlpTreesTregexTsurgeonTreeLocation 0
#else
#define INCLUDE_ALL_EduStanfordNlpTreesTregexTsurgeonTreeLocation 1
#endif
#undef RESTRICT_EduStanfordNlpTreesTregexTsurgeonTreeLocation

#if !defined (EduStanfordNlpTreesTregexTsurgeonTreeLocation_) && (INCLUDE_ALL_EduStanfordNlpTreesTregexTsurgeonTreeLocation || defined(INCLUDE_EduStanfordNlpTreesTregexTsurgeonTreeLocation))
#define EduStanfordNlpTreesTregexTsurgeonTreeLocation_

@class EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator;
@class EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher;
@class EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;
@class EduStanfordNlpTreesTregexTsurgeonTsurgeonPatternRoot;
@protocol JavaUtilMap;

@interface EduStanfordNlpTreesTregexTsurgeonTreeLocation : NSObject

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)relation
withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern:(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)p;

- (EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher *)matcherWithJavaUtilMap:(id<JavaUtilMap>)newNodeNames
                               withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer;

- (NSString *)description;

#pragma mark Package-Private

- (void)setRootWithEduStanfordNlpTreesTregexTsurgeonTsurgeonPatternRoot:(EduStanfordNlpTreesTregexTsurgeonTsurgeonPatternRoot *)root;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpTreesTregexTsurgeonTreeLocation)

FOUNDATION_EXPORT void EduStanfordNlpTreesTregexTsurgeonTreeLocation_initWithNSString_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(EduStanfordNlpTreesTregexTsurgeonTreeLocation *self, NSString *relation, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *p);

FOUNDATION_EXPORT EduStanfordNlpTreesTregexTsurgeonTreeLocation *new_EduStanfordNlpTreesTregexTsurgeonTreeLocation_initWithNSString_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(NSString *relation, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *p) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTreesTregexTsurgeonTreeLocation *create_EduStanfordNlpTreesTregexTsurgeonTreeLocation_initWithNSString_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_(NSString *relation, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *p);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesTregexTsurgeonTreeLocation)

#endif

#if !defined (EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher_) && (INCLUDE_ALL_EduStanfordNlpTreesTregexTsurgeonTreeLocation || defined(INCLUDE_EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher))
#define EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher_

@class EduStanfordNlpTreesTree;
@class EduStanfordNlpTreesTregexTregexMatcher;
@class EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator;
@class EduStanfordNlpTreesTregexTsurgeonTreeLocation;
@class EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher;
@class EduStanfordNlpUtilPair;
@protocol JavaUtilMap;

@interface EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher : NSObject {
 @public
  id<JavaUtilMap> newNodeNames_;
  EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer_;
  EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *childMatcher_;
}

#pragma mark Package-Private

- (instancetype)initWithEduStanfordNlpTreesTregexTsurgeonTreeLocation:(EduStanfordNlpTreesTregexTsurgeonTreeLocation *)outer$
                                                      withJavaUtilMap:(id<JavaUtilMap>)newNodeNames
           withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator:(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)coindexer;

- (EduStanfordNlpUtilPair *)evaluateWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                     withEduStanfordNlpTreesTregexTregexMatcher:(EduStanfordNlpTreesTregexTregexMatcher *)tregex;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher)

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher, newNodeNames_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher, coindexer_, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher, childMatcher_, EduStanfordNlpTreesTregexTsurgeonTsurgeonMatcher *)

FOUNDATION_EXPORT void EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher_initWithEduStanfordNlpTreesTregexTsurgeonTreeLocation_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher *self, EduStanfordNlpTreesTregexTsurgeonTreeLocation *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer);

FOUNDATION_EXPORT EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher *new_EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher_initWithEduStanfordNlpTreesTregexTsurgeonTreeLocation_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonTreeLocation *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher *create_EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher_initWithEduStanfordNlpTreesTregexTsurgeonTreeLocation_withJavaUtilMap_withEduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_(EduStanfordNlpTreesTregexTsurgeonTreeLocation *outer$, id<JavaUtilMap> newNodeNames, EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *coindexer);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesTregexTsurgeonTreeLocation_LocationMatcher)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpTreesTregexTsurgeonTreeLocation")
