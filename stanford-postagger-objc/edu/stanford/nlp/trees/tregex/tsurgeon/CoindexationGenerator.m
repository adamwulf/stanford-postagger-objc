//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/CoindexationGenerator.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/NumberFormatException.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

@interface EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator () {
 @public
  jint lastIndex_;
}

@end

inline JavaUtilRegexPattern *EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_get_coindexationPattern();
static JavaUtilRegexPattern *EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_coindexationPattern;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator, coindexationPattern, JavaUtilRegexPattern *)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator)

@implementation EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator

- (void)setLastIndexWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  lastIndex_ = 0;
  for (EduStanfordNlpTreesTree * __strong node in nil_chk(t)) {
    NSString *value = [((id<EduStanfordNlpLingLabel>) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(node)) label])) value];
    if (value != nil) {
      JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_coindexationPattern)) matcherWithJavaLangCharSequence:value];
      if ([((JavaUtilRegexMatcher *) nil_chk(m)) find]) {
        jint thisIndex = 0;
        @try {
          thisIndex = JavaLangInteger_parseIntWithNSString_([m groupWithInt:1]);
        }
        @catch (JavaLangNumberFormatException *e) {
        }
        lastIndex_ = JavaLangMath_maxWithInt_withInt_(thisIndex, lastIndex_);
      }
    }
  }
}

- (jint)generateIndex {
  lastIndex_ = lastIndex_ + 1;
  return lastIndex_;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(setLastIndexWithEduStanfordNlpTreesTree:);
  methods[1].selector = @selector(generateIndex);
  methods[2].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "coindexationPattern", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
    { "lastIndex_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setLastIndex", "LEduStanfordNlpTreesTree;", &EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_coindexationPattern };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator = { "CoindexationGenerator", "edu.stanford.nlp.trees.tregex.tsurgeon", ptrTable, methods, fields, 7, 0x0, 3, 2, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator class]) {
    EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_coindexationPattern = JavaUtilRegexPattern_compileWithNSString_(@".+?-([0-9]+)$");
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator)
  }
}

@end

void EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_init(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *new_EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator, init)
}

EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator *create_EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTregexTsurgeonCoindexationGenerator)
