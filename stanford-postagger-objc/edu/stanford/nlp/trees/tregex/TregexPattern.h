//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/tregex/TregexPattern.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpTreesTregexTregexPattern")
#ifdef RESTRICT_EduStanfordNlpTreesTregexTregexPattern
#define INCLUDE_ALL_EduStanfordNlpTreesTregexTregexPattern 0
#else
#define INCLUDE_ALL_EduStanfordNlpTreesTregexTregexPattern 1
#endif
#undef RESTRICT_EduStanfordNlpTreesTregexTregexPattern

#if !defined (EduStanfordNlpTreesTregexTregexPattern_) && (INCLUDE_ALL_EduStanfordNlpTreesTregexTregexPattern || defined(INCLUDE_EduStanfordNlpTreesTregexTregexPattern))
#define EduStanfordNlpTreesTregexTregexPattern_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class EduStanfordNlpTreesTree;
@class EduStanfordNlpTreesTregexTregexMatcher;
@class EduStanfordNlpTreesTregexVariableStrings;
@class IOSObjectArray;
@class JavaIoPrintStream;
@class JavaIoPrintWriter;
@class JavaUtilIdentityHashMap;
@protocol EduStanfordNlpTreesHeadFinder;
@protocol JavaUtilList;
@protocol JavaUtilMap;

@interface EduStanfordNlpTreesTregexTregexPattern : NSObject < JavaIoSerializable >

#pragma mark Public

+ (EduStanfordNlpTreesTregexTregexPattern *)compileWithNSString:(NSString *)tregex;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (EduStanfordNlpTreesTregexTregexMatcher *)matcherWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

- (EduStanfordNlpTreesTregexTregexMatcher *)matcherWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                             withEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)headFinder;

- (NSString *)pattern;

- (void)prettyPrint;

- (void)prettyPrintWithJavaIoPrintStream:(JavaIoPrintStream *)ps;

- (void)prettyPrintWithJavaIoPrintWriter:(JavaIoPrintWriter *)pw;

+ (EduStanfordNlpTreesTregexTregexPattern *)safeCompileWithNSString:(NSString *)tregex
                                                        withBoolean:(jboolean)verbose;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)init;

- (id<JavaUtilList>)getChildren;

- (jboolean)isNegated;

- (jboolean)isOptional;

- (NSString *)localString;

- (void)makeOptional;

- (EduStanfordNlpTreesTregexTregexMatcher *)matcherWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)root
                                                   withEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)tree
                                                   withJavaUtilIdentityHashMap:(JavaUtilIdentityHashMap *)nodesToParents
                                                               withJavaUtilMap:(id<JavaUtilMap>)namesToNodes
                                  withEduStanfordNlpTreesTregexVariableStrings:(EduStanfordNlpTreesTregexVariableStrings *)variableStrings
                                             withEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)headFinder;

- (void)negate;

- (void)setPatternStringWithNSString:(NSString *)patternString;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpTreesTregexTregexPattern)

FOUNDATION_EXPORT void EduStanfordNlpTreesTregexTregexPattern_init(EduStanfordNlpTreesTregexTregexPattern *self);

FOUNDATION_EXPORT EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(NSString *tregex);

FOUNDATION_EXPORT EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesTregexTregexPattern_safeCompileWithNSString_withBoolean_(NSString *tregex, jboolean verbose);

FOUNDATION_EXPORT void EduStanfordNlpTreesTregexTregexPattern_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesTregexTregexPattern)

#endif

#if !defined (EduStanfordNlpTreesTregexTregexPattern_TRegexTreeReaderFactory_) && (INCLUDE_ALL_EduStanfordNlpTreesTregexTregexPattern || defined(INCLUDE_EduStanfordNlpTreesTregexTregexPattern_TRegexTreeReaderFactory))
#define EduStanfordNlpTreesTregexTregexPattern_TRegexTreeReaderFactory_

#define RESTRICT_EduStanfordNlpTreesTreeReaderFactory 1
#define INCLUDE_EduStanfordNlpTreesTreeReaderFactory 1
#include "edu/stanford/nlp/trees/TreeReaderFactory.h"

@class EduStanfordNlpTreesTreeNormalizer;
@class JavaIoReader;
@protocol EduStanfordNlpTreesTreeReader;

@interface EduStanfordNlpTreesTregexTregexPattern_TRegexTreeReaderFactory : NSObject < EduStanfordNlpTreesTreeReaderFactory >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithEduStanfordNlpTreesTreeNormalizer:(EduStanfordNlpTreesTreeNormalizer *)tn;

- (id<EduStanfordNlpTreesTreeReader>)newTreeReaderWithJavaIoReader:(JavaIoReader *)inArg OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesTregexTregexPattern_TRegexTreeReaderFactory)

FOUNDATION_EXPORT void EduStanfordNlpTreesTregexTregexPattern_TRegexTreeReaderFactory_init(EduStanfordNlpTreesTregexTregexPattern_TRegexTreeReaderFactory *self);

FOUNDATION_EXPORT EduStanfordNlpTreesTregexTregexPattern_TRegexTreeReaderFactory *new_EduStanfordNlpTreesTregexTregexPattern_TRegexTreeReaderFactory_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTreesTregexTregexPattern_TRegexTreeReaderFactory *create_EduStanfordNlpTreesTregexTregexPattern_TRegexTreeReaderFactory_init();

FOUNDATION_EXPORT void EduStanfordNlpTreesTregexTregexPattern_TRegexTreeReaderFactory_initWithEduStanfordNlpTreesTreeNormalizer_(EduStanfordNlpTreesTregexTregexPattern_TRegexTreeReaderFactory *self, EduStanfordNlpTreesTreeNormalizer *tn);

FOUNDATION_EXPORT EduStanfordNlpTreesTregexTregexPattern_TRegexTreeReaderFactory *new_EduStanfordNlpTreesTregexTregexPattern_TRegexTreeReaderFactory_initWithEduStanfordNlpTreesTreeNormalizer_(EduStanfordNlpTreesTreeNormalizer *tn) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTreesTregexTregexPattern_TRegexTreeReaderFactory *create_EduStanfordNlpTreesTregexTregexPattern_TRegexTreeReaderFactory_initWithEduStanfordNlpTreesTreeNormalizer_(EduStanfordNlpTreesTreeNormalizer *tn);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesTregexTregexPattern_TRegexTreeReaderFactory)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpTreesTregexTregexPattern")
