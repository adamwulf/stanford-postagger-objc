//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/SimpleTree.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/trees/SimpleTree.h"
#include "edu/stanford/nlp/trees/SimpleTreeFactory.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeFactory.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/util/List.h"

@interface EduStanfordNlpTreesSimpleTree () {
 @public
  IOSObjectArray *daughterTrees_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesSimpleTree, daughterTrees_, IOSObjectArray *)

inline jlong EduStanfordNlpTreesSimpleTree_get_serialVersionUID();
#define EduStanfordNlpTreesSimpleTree_serialVersionUID -8075763706877132926LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTreesSimpleTree, serialVersionUID, jlong)

@interface EduStanfordNlpTreesSimpleTree_TreeFactoryHolder : NSObject

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpTreesSimpleTree_TreeFactoryHolder)

inline id<EduStanfordNlpTreesTreeFactory> EduStanfordNlpTreesSimpleTree_TreeFactoryHolder_get_tf();
static id<EduStanfordNlpTreesTreeFactory> EduStanfordNlpTreesSimpleTree_TreeFactoryHolder_tf;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesSimpleTree_TreeFactoryHolder, tf, id<EduStanfordNlpTreesTreeFactory>)

__attribute__((unused)) static void EduStanfordNlpTreesSimpleTree_TreeFactoryHolder_init(EduStanfordNlpTreesSimpleTree_TreeFactoryHolder *self);

__attribute__((unused)) static EduStanfordNlpTreesSimpleTree_TreeFactoryHolder *new_EduStanfordNlpTreesSimpleTree_TreeFactoryHolder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesSimpleTree_TreeFactoryHolder *create_EduStanfordNlpTreesSimpleTree_TreeFactoryHolder_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesSimpleTree_TreeFactoryHolder)

@implementation EduStanfordNlpTreesSimpleTree

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesSimpleTree_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)label {
  EduStanfordNlpTreesSimpleTree_initWithEduStanfordNlpLingLabel_(self, label);
  return self;
}

- (instancetype)initWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)label
                               withJavaUtilList:(id<JavaUtilList>)daughterTreesList {
  EduStanfordNlpTreesSimpleTree_initWithEduStanfordNlpLingLabel_withJavaUtilList_(self, label, daughterTreesList);
  return self;
}

- (IOSObjectArray *)children {
  return daughterTrees_;
}

- (void)setChildrenWithEduStanfordNlpTreesTreeArray:(IOSObjectArray *)children {
  if (children == nil) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"Warning -- you tried to set the children of a SimpleTree to null.\nYou should be really using a zero-length array instead."];
    daughterTrees_ = JreLoadStatic(EduStanfordNlpTreesTree, EMPTY_TREE_ARRAY);
  }
  else {
    daughterTrees_ = children;
  }
}

- (id<EduStanfordNlpTreesTreeFactory>)treeFactory {
  return JreLoadStatic(EduStanfordNlpTreesSimpleTree_TreeFactoryHolder, tf);
}

+ (id<EduStanfordNlpTreesTreeFactory>)factory {
  return EduStanfordNlpTreesSimpleTree_factory();
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, 2, -1, -1 },
    { NULL, "[LEduStanfordNlpTreesTree;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTreeFactory;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTreeFactory;", 0x9, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithEduStanfordNlpLingLabel:);
  methods[2].selector = @selector(initWithEduStanfordNlpLingLabel:withJavaUtilList:);
  methods[3].selector = @selector(children);
  methods[4].selector = @selector(setChildrenWithEduStanfordNlpTreesTreeArray:);
  methods[5].selector = @selector(treeFactory);
  methods[6].selector = @selector(factory);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTreesSimpleTree_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "daughterTrees_", "[LEduStanfordNlpTreesTree;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpLingLabel;", "LEduStanfordNlpLingLabel;LJavaUtilList;", "(Ledu/stanford/nlp/ling/Label;Ljava/util/List<Ledu/stanford/nlp/trees/Tree;>;)V", "setChildren", "[LEduStanfordNlpTreesTree;", "LEduStanfordNlpTreesSimpleTree_TreeFactoryHolder;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesSimpleTree = { "SimpleTree", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, 5, -1, -1, -1 };
  return &_EduStanfordNlpTreesSimpleTree;
}

@end

void EduStanfordNlpTreesSimpleTree_init(EduStanfordNlpTreesSimpleTree *self) {
  EduStanfordNlpTreesTree_init(self);
  self->daughterTrees_ = JreLoadStatic(EduStanfordNlpTreesTree, EMPTY_TREE_ARRAY);
}

EduStanfordNlpTreesSimpleTree *new_EduStanfordNlpTreesSimpleTree_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesSimpleTree, init)
}

EduStanfordNlpTreesSimpleTree *create_EduStanfordNlpTreesSimpleTree_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesSimpleTree, init)
}

void EduStanfordNlpTreesSimpleTree_initWithEduStanfordNlpLingLabel_(EduStanfordNlpTreesSimpleTree *self, id<EduStanfordNlpLingLabel> label) {
  EduStanfordNlpTreesSimpleTree_init(self);
}

EduStanfordNlpTreesSimpleTree *new_EduStanfordNlpTreesSimpleTree_initWithEduStanfordNlpLingLabel_(id<EduStanfordNlpLingLabel> label) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesSimpleTree, initWithEduStanfordNlpLingLabel_, label)
}

EduStanfordNlpTreesSimpleTree *create_EduStanfordNlpTreesSimpleTree_initWithEduStanfordNlpLingLabel_(id<EduStanfordNlpLingLabel> label) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesSimpleTree, initWithEduStanfordNlpLingLabel_, label)
}

void EduStanfordNlpTreesSimpleTree_initWithEduStanfordNlpLingLabel_withJavaUtilList_(EduStanfordNlpTreesSimpleTree *self, id<EduStanfordNlpLingLabel> label, id<JavaUtilList> daughterTreesList) {
  EduStanfordNlpTreesTree_init(self);
  [self setChildrenWithJavaUtilList:daughterTreesList];
}

EduStanfordNlpTreesSimpleTree *new_EduStanfordNlpTreesSimpleTree_initWithEduStanfordNlpLingLabel_withJavaUtilList_(id<EduStanfordNlpLingLabel> label, id<JavaUtilList> daughterTreesList) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesSimpleTree, initWithEduStanfordNlpLingLabel_withJavaUtilList_, label, daughterTreesList)
}

EduStanfordNlpTreesSimpleTree *create_EduStanfordNlpTreesSimpleTree_initWithEduStanfordNlpLingLabel_withJavaUtilList_(id<EduStanfordNlpLingLabel> label, id<JavaUtilList> daughterTreesList) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesSimpleTree, initWithEduStanfordNlpLingLabel_withJavaUtilList_, label, daughterTreesList)
}

id<EduStanfordNlpTreesTreeFactory> EduStanfordNlpTreesSimpleTree_factory() {
  EduStanfordNlpTreesSimpleTree_initialize();
  return JreLoadStatic(EduStanfordNlpTreesSimpleTree_TreeFactoryHolder, tf);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesSimpleTree)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesSimpleTree_TreeFactoryHolder)

@implementation EduStanfordNlpTreesSimpleTree_TreeFactoryHolder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesSimpleTree_TreeFactoryHolder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "tf", "LEduStanfordNlpTreesTreeFactory;", .constantValue.asLong = 0, 0x18, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &EduStanfordNlpTreesSimpleTree_TreeFactoryHolder_tf, "LEduStanfordNlpTreesSimpleTree;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesSimpleTree_TreeFactoryHolder = { "TreeFactoryHolder", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesSimpleTree_TreeFactoryHolder;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesSimpleTree_TreeFactoryHolder class]) {
    EduStanfordNlpTreesSimpleTree_TreeFactoryHolder_tf = new_EduStanfordNlpTreesSimpleTreeFactory_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesSimpleTree_TreeFactoryHolder)
  }
}

@end

void EduStanfordNlpTreesSimpleTree_TreeFactoryHolder_init(EduStanfordNlpTreesSimpleTree_TreeFactoryHolder *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesSimpleTree_TreeFactoryHolder *new_EduStanfordNlpTreesSimpleTree_TreeFactoryHolder_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesSimpleTree_TreeFactoryHolder, init)
}

EduStanfordNlpTreesSimpleTree_TreeFactoryHolder *create_EduStanfordNlpTreesSimpleTree_TreeFactoryHolder_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesSimpleTree_TreeFactoryHolder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesSimpleTree_TreeFactoryHolder)
