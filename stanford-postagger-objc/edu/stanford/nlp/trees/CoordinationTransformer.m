//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/CoordinationTransformer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/ling/LabelFactory.h"
#include "edu/stanford/nlp/trees/CoordinationTransformer.h"
#include "edu/stanford/nlp/trees/CopulaHeadFinder.h"
#include "edu/stanford/nlp/trees/DateTreeTransformer.h"
#include "edu/stanford/nlp/trees/DependencyTreeTransformer.h"
#include "edu/stanford/nlp/trees/EnglishPatterns.h"
#include "edu/stanford/nlp/trees/HeadFinder.h"
#include "edu/stanford/nlp/trees/LabeledScoredTreeFactory.h"
#include "edu/stanford/nlp/trees/MemoryTreebank.h"
#include "edu/stanford/nlp/trees/PennTreeReader.h"
#include "edu/stanford/nlp/trees/QPTreeTransformer.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeFactory.h"
#include "edu/stanford/nlp/trees/TreeReader.h"
#include "edu/stanford/nlp/trees/TreeTransformer.h"
#include "edu/stanford/nlp/trees/Treebank.h"
#include "edu/stanford/nlp/trees/tregex/TregexPattern.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/Tsurgeon.h"
#include "edu/stanford/nlp/trees/tregex/tsurgeon/TsurgeonPattern.h"
#include "edu/stanford/nlp/util/StringUtils.h"
#include "java/io/BufferedReader.h"
#include "java/io/FileInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStreamReader.h"
#include "java/io/PrintStream.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/Properties.h"

@interface EduStanfordNlpTreesCoordinationTransformer () {
 @public
  id<EduStanfordNlpTreesTreeTransformer> tn_;
  id<EduStanfordNlpTreesTreeTransformer> dates_;
  id<EduStanfordNlpTreesTreeTransformer> qp_;
  id<EduStanfordNlpTreesHeadFinder> headFinder_;
  jboolean performMWETransformation_;
}

+ (EduStanfordNlpTreesTree *)rearrangeNowThatWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

+ (EduStanfordNlpTreesTree *)changeSbarToPPWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

+ (EduStanfordNlpTreesTree *)combineConjpWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

+ (NSString *)getHeadTagWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

+ (EduStanfordNlpTreesTree *)transformCCWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                                            withInt:(jint)ccIndex;

+ (jboolean)notNPWithJavaUtilList:(id<JavaUtilList>)children
                          withInt:(jint)ccIndex;

+ (EduStanfordNlpTreesTree *)findCCparentWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                         withEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)root;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesCoordinationTransformer, tn_, id<EduStanfordNlpTreesTreeTransformer>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesCoordinationTransformer, dates_, id<EduStanfordNlpTreesTreeTransformer>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesCoordinationTransformer, qp_, id<EduStanfordNlpTreesTreeTransformer>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesCoordinationTransformer, headFinder_, id<EduStanfordNlpTreesHeadFinder>)

inline jboolean EduStanfordNlpTreesCoordinationTransformer_get_VERBOSE();
static jboolean EduStanfordNlpTreesCoordinationTransformer_VERBOSE;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(EduStanfordNlpTreesCoordinationTransformer, VERBOSE, jboolean)

inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_get_rearrangeNowThatTregex();
inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_set_rearrangeNowThatTregex(EduStanfordNlpTreesTregexTregexPattern *value);
static EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_rearrangeNowThatTregex;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, rearrangeNowThatTregex, EduStanfordNlpTreesTregexTregexPattern *)

inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_get_rearrangeNowThatTsurgeon();
inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_set_rearrangeNowThatTsurgeon(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *value);
static EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_rearrangeNowThatTsurgeon;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, rearrangeNowThatTsurgeon, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)

inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_get_changeSbarToPPTregex();
inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_set_changeSbarToPPTregex(EduStanfordNlpTreesTregexTregexPattern *value);
static EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_changeSbarToPPTregex;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, changeSbarToPPTregex, EduStanfordNlpTreesTregexTregexPattern *)

inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_get_changeSbarToPPTsurgeon();
inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_set_changeSbarToPPTsurgeon(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *value);
static EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_changeSbarToPPTsurgeon;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, changeSbarToPPTsurgeon, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)

inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_get_findFlatConjpTregex();
inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_set_findFlatConjpTregex(EduStanfordNlpTreesTregexTregexPattern *value);
static EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_findFlatConjpTregex;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, findFlatConjpTregex, EduStanfordNlpTreesTregexTregexPattern *)

inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_get_addConjpTsurgeon();
inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_set_addConjpTsurgeon(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *value);
static EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_addConjpTsurgeon;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, addConjpTsurgeon, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)

inline IOSObjectArray *EduStanfordNlpTreesCoordinationTransformer_get_moveRBTregex();
inline IOSObjectArray *EduStanfordNlpTreesCoordinationTransformer_set_moveRBTregex(IOSObjectArray *value);
static IOSObjectArray *EduStanfordNlpTreesCoordinationTransformer_moveRBTregex;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, moveRBTregex, IOSObjectArray *)

inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_get_moveRBTsurgeon();
inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_set_moveRBTsurgeon(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *value);
static EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_moveRBTsurgeon;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, moveRBTsurgeon, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)

inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_get_flattenSQTregex();
inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_set_flattenSQTregex(EduStanfordNlpTreesTregexTregexPattern *value);
static EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_flattenSQTregex;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, flattenSQTregex, EduStanfordNlpTreesTregexTregexPattern *)

inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_get_flattenSQTsurgeon();
inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_set_flattenSQTsurgeon(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *value);
static EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_flattenSQTsurgeon;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, flattenSQTsurgeon, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)

inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_get_removeXOverXTregex();
inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_set_removeXOverXTregex(EduStanfordNlpTreesTregexTregexPattern *value);
static EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_removeXOverXTregex;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, removeXOverXTregex, EduStanfordNlpTreesTregexTregexPattern *)

inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_get_removeXOverXTsurgeon();
inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_set_removeXOverXTsurgeon(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *value);
static EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_removeXOverXTsurgeon;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, removeXOverXTsurgeon, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)

inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_get_ucpRenameTregex();
static EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_ucpRenameTregex;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesCoordinationTransformer, ucpRenameTregex, EduStanfordNlpTreesTregexTregexPattern *)

inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_get_ucpRenameTsurgeon();
static EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_ucpRenameTsurgeon;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesCoordinationTransformer, ucpRenameTsurgeon, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)

inline IOSObjectArray *EduStanfordNlpTreesCoordinationTransformer_get_MWE_PATTERNS();
inline IOSObjectArray *EduStanfordNlpTreesCoordinationTransformer_set_MWE_PATTERNS(IOSObjectArray *value);
static IOSObjectArray *EduStanfordNlpTreesCoordinationTransformer_MWE_PATTERNS;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, MWE_PATTERNS, IOSObjectArray *)

inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_get_MWE_OPERATION();
inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_set_MWE_OPERATION(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *value);
static EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_MWE_OPERATION;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, MWE_OPERATION, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)

inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_get_ACCORDING_TO_PATTERN();
inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_set_ACCORDING_TO_PATTERN(EduStanfordNlpTreesTregexTregexPattern *value);
static EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_ACCORDING_TO_PATTERN;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, ACCORDING_TO_PATTERN, EduStanfordNlpTreesTregexTregexPattern *)

inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_get_ACCORDING_TO_OPERATION();
inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_set_ACCORDING_TO_OPERATION(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *value);
static EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_ACCORDING_TO_OPERATION;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, ACCORDING_TO_OPERATION, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)

inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_get_BUT_ALSO_PATTERN();
inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_set_BUT_ALSO_PATTERN(EduStanfordNlpTreesTregexTregexPattern *value);
static EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_BUT_ALSO_PATTERN;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, BUT_ALSO_PATTERN, EduStanfordNlpTreesTregexTregexPattern *)

inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_get_BUT_ALSO_OPERATION();
inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_set_BUT_ALSO_OPERATION(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *value);
static EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_BUT_ALSO_OPERATION;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, BUT_ALSO_OPERATION, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)

inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_get_AT_RBS_PATTERN();
inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_set_AT_RBS_PATTERN(EduStanfordNlpTreesTregexTregexPattern *value);
static EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_AT_RBS_PATTERN;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, AT_RBS_PATTERN, EduStanfordNlpTreesTregexTregexPattern *)

inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_get_AT_RBS_OPERATION();
inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_set_AT_RBS_OPERATION(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *value);
static EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_AT_RBS_OPERATION;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, AT_RBS_OPERATION, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)

inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_get_AT_ALL_PATTERN();
inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_set_AT_ALL_PATTERN(EduStanfordNlpTreesTregexTregexPattern *value);
static EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_AT_ALL_PATTERN;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, AT_ALL_PATTERN, EduStanfordNlpTreesTregexTregexPattern *)

inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_get_AT_ALL_OPERATION();
inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_set_AT_ALL_OPERATION(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *value);
static EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_AT_ALL_OPERATION;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, AT_ALL_OPERATION, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)

inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_get_FLAT_PREP_CC_PATTERN();
inline EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_set_FLAT_PREP_CC_PATTERN(EduStanfordNlpTreesTregexTregexPattern *value);
static EduStanfordNlpTreesTregexTregexPattern *EduStanfordNlpTreesCoordinationTransformer_FLAT_PREP_CC_PATTERN;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, FLAT_PREP_CC_PATTERN, EduStanfordNlpTreesTregexTregexPattern *)

inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_get_FLAT_PREP_CC_OPERATION();
inline EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_set_FLAT_PREP_CC_OPERATION(EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *value);
static EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *EduStanfordNlpTreesCoordinationTransformer_FLAT_PREP_CC_OPERATION;
J2OBJC_STATIC_FIELD_OBJ(EduStanfordNlpTreesCoordinationTransformer, FLAT_PREP_CC_OPERATION, EduStanfordNlpTreesTregexTsurgeonTsurgeonPattern *)

__attribute__((unused)) static EduStanfordNlpTreesTree *EduStanfordNlpTreesCoordinationTransformer_rearrangeNowThatWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t);

__attribute__((unused)) static EduStanfordNlpTreesTree *EduStanfordNlpTreesCoordinationTransformer_changeSbarToPPWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t);

__attribute__((unused)) static EduStanfordNlpTreesTree *EduStanfordNlpTreesCoordinationTransformer_combineConjpWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t);

__attribute__((unused)) static NSString *EduStanfordNlpTreesCoordinationTransformer_getHeadTagWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t);

__attribute__((unused)) static EduStanfordNlpTreesTree *EduStanfordNlpTreesCoordinationTransformer_transformCCWithEduStanfordNlpTreesTree_withInt_(EduStanfordNlpTreesTree *t, jint ccIndex);

__attribute__((unused)) static jboolean EduStanfordNlpTreesCoordinationTransformer_notNPWithJavaUtilList_withInt_(id<JavaUtilList> children, jint ccIndex);

__attribute__((unused)) static EduStanfordNlpTreesTree *EduStanfordNlpTreesCoordinationTransformer_findCCparentWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t, EduStanfordNlpTreesTree *root);

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesCoordinationTransformer)

@implementation EduStanfordNlpTreesCoordinationTransformer

- (instancetype)initWithEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)hf {
  EduStanfordNlpTreesCoordinationTransformer_initWithEduStanfordNlpTreesHeadFinder_(self, hf);
  return self;
}

- (instancetype)initWithEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)hf
                                          withBoolean:(jboolean)performMWETransformation {
  EduStanfordNlpTreesCoordinationTransformer_initWithEduStanfordNlpTreesHeadFinder_withBoolean_(self, hf, performMWETransformation);
  return self;
}

- (EduStanfordNlpTreesTree *)transformTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"Input to CoordinationTransformer: ", t)];
  }
  t = [((id<EduStanfordNlpTreesTreeTransformer>) nil_chk(tn_)) transformTreeWithEduStanfordNlpTreesTree:t];
  if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"After DependencyTreeTransformer:  ", t)];
  }
  if (t == nil) {
    return t;
  }
  if (performMWETransformation_) {
    t = EduStanfordNlpTreesCoordinationTransformer_MWETransformWithEduStanfordNlpTreesTree_(t);
    if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"After MWETransform:               ", t)];
    }
    t = EduStanfordNlpTreesCoordinationTransformer_prepCCTransformWithEduStanfordNlpTreesTree_(t);
    if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"After prepCCTransform:               ", t)];
    }
  }
  t = EduStanfordNlpTreesCoordinationTransformer_UCPtransformWithEduStanfordNlpTreesTree_(t);
  if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"After UCPTransformer:             ", t)];
  }
  t = EduStanfordNlpTreesCoordinationTransformer_CCtransformWithEduStanfordNlpTreesTree_(t);
  if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"After CCTransformer:              ", t)];
  }
  t = [((id<EduStanfordNlpTreesTreeTransformer>) nil_chk(qp_)) transformTreeWithEduStanfordNlpTreesTree:t];
  if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"After QPTreeTransformer:          ", t)];
  }
  t = [self SQflattenWithEduStanfordNlpTreesTree:t];
  if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"After SQ flattening:              ", t)];
  }
  t = [((id<EduStanfordNlpTreesTreeTransformer>) nil_chk(dates_)) transformTreeWithEduStanfordNlpTreesTree:t];
  if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"After DateTreeTransformer:        ", t)];
  }
  t = EduStanfordNlpTreesCoordinationTransformer_removeXOverXWithEduStanfordNlpTreesTree_(t);
  if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"After removeXoverX:               ", t)];
  }
  t = EduStanfordNlpTreesCoordinationTransformer_combineConjpWithEduStanfordNlpTreesTree_(t);
  if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"After combineConjp:               ", t)];
  }
  t = EduStanfordNlpTreesCoordinationTransformer_moveRBWithEduStanfordNlpTreesTree_(t);
  if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"After moveRB:                     ", t)];
  }
  t = EduStanfordNlpTreesCoordinationTransformer_changeSbarToPPWithEduStanfordNlpTreesTree_(t);
  if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"After changeSbarToPP:             ", t)];
  }
  t = EduStanfordNlpTreesCoordinationTransformer_rearrangeNowThatWithEduStanfordNlpTreesTree_(t);
  if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"After rearrangeNowThat:           ", t)];
  }
  return t;
}

+ (EduStanfordNlpTreesTree *)rearrangeNowThatWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  return EduStanfordNlpTreesCoordinationTransformer_rearrangeNowThatWithEduStanfordNlpTreesTree_(t);
}

+ (EduStanfordNlpTreesTree *)changeSbarToPPWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  return EduStanfordNlpTreesCoordinationTransformer_changeSbarToPPWithEduStanfordNlpTreesTree_(t);
}

+ (EduStanfordNlpTreesTree *)combineConjpWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  return EduStanfordNlpTreesCoordinationTransformer_combineConjpWithEduStanfordNlpTreesTree_(t);
}

+ (EduStanfordNlpTreesTree *)moveRBWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  return EduStanfordNlpTreesCoordinationTransformer_moveRBWithEduStanfordNlpTreesTree_(t);
}

- (EduStanfordNlpTreesTree *)SQflattenWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  if (headFinder_ != nil && ([EduStanfordNlpTreesCopulaHeadFinder_class_() isInstance:headFinder_])) {
    if ([((id<EduStanfordNlpTreesCopulaHeadFinder>) cast_check(headFinder_, EduStanfordNlpTreesCopulaHeadFinder_class_())) makesCopulaHead]) {
      return t;
    }
  }
  if (t == nil) {
    return nil;
  }
  return EduStanfordNlpTreesTregexTsurgeonTsurgeon_processPatternWithEduStanfordNlpTreesTregexTregexPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesCoordinationTransformer_flattenSQTregex, EduStanfordNlpTreesCoordinationTransformer_flattenSQTsurgeon, t);
}

+ (EduStanfordNlpTreesTree *)removeXOverXWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  return EduStanfordNlpTreesCoordinationTransformer_removeXOverXWithEduStanfordNlpTreesTree_(t);
}

+ (EduStanfordNlpTreesTree *)UCPtransformWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  return EduStanfordNlpTreesCoordinationTransformer_UCPtransformWithEduStanfordNlpTreesTree_(t);
}

+ (EduStanfordNlpTreesTree *)CCtransformWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  return EduStanfordNlpTreesCoordinationTransformer_CCtransformWithEduStanfordNlpTreesTree_(t);
}

+ (NSString *)getHeadTagWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  return EduStanfordNlpTreesCoordinationTransformer_getHeadTagWithEduStanfordNlpTreesTree_(t);
}

+ (EduStanfordNlpTreesTree *)transformCCWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                                            withInt:(jint)ccIndex {
  return EduStanfordNlpTreesCoordinationTransformer_transformCCWithEduStanfordNlpTreesTree_withInt_(t, ccIndex);
}

+ (jboolean)notNPWithJavaUtilList:(id<JavaUtilList>)children
                          withInt:(jint)ccIndex {
  return EduStanfordNlpTreesCoordinationTransformer_notNPWithJavaUtilList_withInt_(children, ccIndex);
}

+ (EduStanfordNlpTreesTree *)findCCparentWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                         withEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)root {
  return EduStanfordNlpTreesCoordinationTransformer_findCCparentWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTree_(t, root);
}

+ (EduStanfordNlpTreesTree *)MWETransformWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  return EduStanfordNlpTreesCoordinationTransformer_MWETransformWithEduStanfordNlpTreesTree_(t);
}

+ (EduStanfordNlpTreesTree *)prepCCTransformWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  return EduStanfordNlpTreesCoordinationTransformer_prepCCTransformWithEduStanfordNlpTreesTree_(t);
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduStanfordNlpTreesCoordinationTransformer_mainWithNSStringArray_(args);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0xa, 4, 3, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0xa, 5, 3, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0xa, 6, 3, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x8, 7, 3, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 8, 3, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x9, 9, 3, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x9, 10, 3, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x9, 11, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 12, 3, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0xa, 13, 14, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 15, 16, -1, 17, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0xa, 18, 19, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x9, 20, 3, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x9, 21, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 22, 23, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesHeadFinder:);
  methods[1].selector = @selector(initWithEduStanfordNlpTreesHeadFinder:withBoolean:);
  methods[2].selector = @selector(transformTreeWithEduStanfordNlpTreesTree:);
  methods[3].selector = @selector(rearrangeNowThatWithEduStanfordNlpTreesTree:);
  methods[4].selector = @selector(changeSbarToPPWithEduStanfordNlpTreesTree:);
  methods[5].selector = @selector(combineConjpWithEduStanfordNlpTreesTree:);
  methods[6].selector = @selector(moveRBWithEduStanfordNlpTreesTree:);
  methods[7].selector = @selector(SQflattenWithEduStanfordNlpTreesTree:);
  methods[8].selector = @selector(removeXOverXWithEduStanfordNlpTreesTree:);
  methods[9].selector = @selector(UCPtransformWithEduStanfordNlpTreesTree:);
  methods[10].selector = @selector(CCtransformWithEduStanfordNlpTreesTree:);
  methods[11].selector = @selector(getHeadTagWithEduStanfordNlpTreesTree:);
  methods[12].selector = @selector(transformCCWithEduStanfordNlpTreesTree:withInt:);
  methods[13].selector = @selector(notNPWithJavaUtilList:withInt:);
  methods[14].selector = @selector(findCCparentWithEduStanfordNlpTreesTree:withEduStanfordNlpTreesTree:);
  methods[15].selector = @selector(MWETransformWithEduStanfordNlpTreesTree:);
  methods[16].selector = @selector(prepCCTransformWithEduStanfordNlpTreesTree:);
  methods[17].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "VERBOSE", "Z", .constantValue.asLong = 0, 0x1a, -1, 24, -1, -1 },
    { "tn_", "LEduStanfordNlpTreesTreeTransformer;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "dates_", "LEduStanfordNlpTreesTreeTransformer;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "qp_", "LEduStanfordNlpTreesTreeTransformer;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "headFinder_", "LEduStanfordNlpTreesHeadFinder;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "performMWETransformation_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "rearrangeNowThatTregex", "LEduStanfordNlpTreesTregexTregexPattern;", .constantValue.asLong = 0, 0xa, -1, 25, -1, -1 },
    { "rearrangeNowThatTsurgeon", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", .constantValue.asLong = 0, 0xa, -1, 26, -1, -1 },
    { "changeSbarToPPTregex", "LEduStanfordNlpTreesTregexTregexPattern;", .constantValue.asLong = 0, 0xa, -1, 27, -1, -1 },
    { "changeSbarToPPTsurgeon", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", .constantValue.asLong = 0, 0xa, -1, 28, -1, -1 },
    { "findFlatConjpTregex", "LEduStanfordNlpTreesTregexTregexPattern;", .constantValue.asLong = 0, 0xa, -1, 29, -1, -1 },
    { "addConjpTsurgeon", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", .constantValue.asLong = 0, 0xa, -1, 30, -1, -1 },
    { "moveRBTregex", "[LEduStanfordNlpTreesTregexTregexPattern;", .constantValue.asLong = 0, 0xa, -1, 31, -1, -1 },
    { "moveRBTsurgeon", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", .constantValue.asLong = 0, 0xa, -1, 32, -1, -1 },
    { "flattenSQTregex", "LEduStanfordNlpTreesTregexTregexPattern;", .constantValue.asLong = 0, 0xa, -1, 33, -1, -1 },
    { "flattenSQTsurgeon", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", .constantValue.asLong = 0, 0xa, -1, 34, -1, -1 },
    { "removeXOverXTregex", "LEduStanfordNlpTreesTregexTregexPattern;", .constantValue.asLong = 0, 0xa, -1, 35, -1, -1 },
    { "removeXOverXTsurgeon", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", .constantValue.asLong = 0, 0xa, -1, 36, -1, -1 },
    { "ucpRenameTregex", "LEduStanfordNlpTreesTregexTregexPattern;", .constantValue.asLong = 0, 0x1a, -1, 37, -1, -1 },
    { "ucpRenameTsurgeon", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", .constantValue.asLong = 0, 0x1a, -1, 38, -1, -1 },
    { "MWE_PATTERNS", "[LEduStanfordNlpTreesTregexTregexPattern;", .constantValue.asLong = 0, 0xa, -1, 39, -1, -1 },
    { "MWE_OPERATION", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", .constantValue.asLong = 0, 0xa, -1, 40, -1, -1 },
    { "ACCORDING_TO_PATTERN", "LEduStanfordNlpTreesTregexTregexPattern;", .constantValue.asLong = 0, 0xa, -1, 41, -1, -1 },
    { "ACCORDING_TO_OPERATION", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", .constantValue.asLong = 0, 0xa, -1, 42, -1, -1 },
    { "BUT_ALSO_PATTERN", "LEduStanfordNlpTreesTregexTregexPattern;", .constantValue.asLong = 0, 0xa, -1, 43, -1, -1 },
    { "BUT_ALSO_OPERATION", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", .constantValue.asLong = 0, 0xa, -1, 44, -1, -1 },
    { "AT_RBS_PATTERN", "LEduStanfordNlpTreesTregexTregexPattern;", .constantValue.asLong = 0, 0xa, -1, 45, -1, -1 },
    { "AT_RBS_OPERATION", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", .constantValue.asLong = 0, 0xa, -1, 46, -1, -1 },
    { "AT_ALL_PATTERN", "LEduStanfordNlpTreesTregexTregexPattern;", .constantValue.asLong = 0, 0xa, -1, 47, -1, -1 },
    { "AT_ALL_OPERATION", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", .constantValue.asLong = 0, 0xa, -1, 48, -1, -1 },
    { "FLAT_PREP_CC_PATTERN", "LEduStanfordNlpTreesTregexTregexPattern;", .constantValue.asLong = 0, 0xa, -1, 49, -1, -1 },
    { "FLAT_PREP_CC_OPERATION", "LEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern;", .constantValue.asLong = 0, 0xa, -1, 50, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTreesHeadFinder;", "LEduStanfordNlpTreesHeadFinder;Z", "transformTree", "LEduStanfordNlpTreesTree;", "rearrangeNowThat", "changeSbarToPP", "combineConjp", "moveRB", "SQflatten", "removeXOverX", "UCPtransform", "CCtransform", "getHeadTag", "transformCC", "LEduStanfordNlpTreesTree;I", "notNP", "LJavaUtilList;I", "(Ljava/util/List<Ledu/stanford/nlp/trees/Tree;>;I)Z", "findCCparent", "LEduStanfordNlpTreesTree;LEduStanfordNlpTreesTree;", "MWETransform", "prepCCTransform", "main", "[LNSString;", &EduStanfordNlpTreesCoordinationTransformer_VERBOSE, &EduStanfordNlpTreesCoordinationTransformer_rearrangeNowThatTregex, &EduStanfordNlpTreesCoordinationTransformer_rearrangeNowThatTsurgeon, &EduStanfordNlpTreesCoordinationTransformer_changeSbarToPPTregex, &EduStanfordNlpTreesCoordinationTransformer_changeSbarToPPTsurgeon, &EduStanfordNlpTreesCoordinationTransformer_findFlatConjpTregex, &EduStanfordNlpTreesCoordinationTransformer_addConjpTsurgeon, &EduStanfordNlpTreesCoordinationTransformer_moveRBTregex, &EduStanfordNlpTreesCoordinationTransformer_moveRBTsurgeon, &EduStanfordNlpTreesCoordinationTransformer_flattenSQTregex, &EduStanfordNlpTreesCoordinationTransformer_flattenSQTsurgeon, &EduStanfordNlpTreesCoordinationTransformer_removeXOverXTregex, &EduStanfordNlpTreesCoordinationTransformer_removeXOverXTsurgeon, &EduStanfordNlpTreesCoordinationTransformer_ucpRenameTregex, &EduStanfordNlpTreesCoordinationTransformer_ucpRenameTsurgeon, &EduStanfordNlpTreesCoordinationTransformer_MWE_PATTERNS, &EduStanfordNlpTreesCoordinationTransformer_MWE_OPERATION, &EduStanfordNlpTreesCoordinationTransformer_ACCORDING_TO_PATTERN, &EduStanfordNlpTreesCoordinationTransformer_ACCORDING_TO_OPERATION, &EduStanfordNlpTreesCoordinationTransformer_BUT_ALSO_PATTERN, &EduStanfordNlpTreesCoordinationTransformer_BUT_ALSO_OPERATION, &EduStanfordNlpTreesCoordinationTransformer_AT_RBS_PATTERN, &EduStanfordNlpTreesCoordinationTransformer_AT_RBS_OPERATION, &EduStanfordNlpTreesCoordinationTransformer_AT_ALL_PATTERN, &EduStanfordNlpTreesCoordinationTransformer_AT_ALL_OPERATION, &EduStanfordNlpTreesCoordinationTransformer_FLAT_PREP_CC_PATTERN, &EduStanfordNlpTreesCoordinationTransformer_FLAT_PREP_CC_OPERATION };
  static const J2ObjcClassInfo _EduStanfordNlpTreesCoordinationTransformer = { "CoordinationTransformer", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0x1, 18, 32, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesCoordinationTransformer;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesCoordinationTransformer class]) {
    EduStanfordNlpTreesCoordinationTransformer_VERBOSE = (JavaLangSystem_getPropertyWithNSString_withNSString_(@"CoordinationTransformer", nil) != nil);
    EduStanfordNlpTreesCoordinationTransformer_rearrangeNowThatTregex = EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"ADVP=advp <1 (RB < /^(?i:now)$/) <2 (SBAR=sbar <1 (IN < /^(?i:that)$/))");
    EduStanfordNlpTreesCoordinationTransformer_rearrangeNowThatTsurgeon = EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(@"[relabel advp SBAR] [excise sbar sbar]");
    EduStanfordNlpTreesCoordinationTransformer_changeSbarToPPTregex = EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"NP < (NP $++ (SBAR=sbar < (IN < /^(?i:after|before|until|since|during)$/ $++ S)))");
    EduStanfordNlpTreesCoordinationTransformer_changeSbarToPPTsurgeon = EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(@"relabel sbar PP");
    EduStanfordNlpTreesCoordinationTransformer_findFlatConjpTregex = EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"/^(S|PP|VP)/ < (/^(S(?!YM)|PP|VP)/ $++ (CC=start $+ (RB|ADVP $+ /^(S(?!YM)|PP|VP)/) [ (< and $+ (RB=end < yet)) |   (< and $+ (RB=end < so)) |   (< and $+ (ADVP=end < (RB|IN < so))) ] ))");
    EduStanfordNlpTreesCoordinationTransformer_addConjpTsurgeon = EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(@"createSubtree CONJP start end");
    EduStanfordNlpTreesCoordinationTransformer_moveRBTregex = [IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"/^S|PP|VP|NP/ < (/^(S|PP|VP|NP)/ $++ (/^(,|CC|CONJP)$/ [ $+ (RB=adv [ < not | < then ]) | $+ (ADVP=adv <: RB) ])) : (=adv $+ /^(S(?!YM)|PP|VP|NP)/=dest) "), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"/^ADVP/ < (/^ADVP/ $++ (/^(,|CC|CONJP)$/ [$+ (RB=adv [ < not | < then ]) | $+ (ADVP=adv <: RB)])) : (=adv $+ /^NP-ADV|ADVP|PP/=dest)"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"/^FRAG/ < (ADVP|RB=adv $+ VP=dest)") } count:3 type:EduStanfordNlpTreesTregexTregexPattern_class_()];
    EduStanfordNlpTreesCoordinationTransformer_moveRBTsurgeon = EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(@"move adv >0 dest");
    EduStanfordNlpTreesCoordinationTransformer_flattenSQTregex = EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(JreStrcat("$$$$$$$$$", @"SBARQ < ((WHNP=what < WP) $+ (SQ=sq < (/^VB/=verb < ", JreLoadStatic(EduStanfordNlpTreesEnglishPatterns, copularWordRegex), @")  !< (/^VB/ < !", JreLoadStatic(EduStanfordNlpTreesEnglishPatterns, copularWordRegex), @")  !< (/^V/ < /^VB/ < !", JreLoadStatic(EduStanfordNlpTreesEnglishPatterns, copularWordRegex), @")  !< (PP $- =verb)  !<, (/^VB/ < ", JreLoadStatic(EduStanfordNlpTreesEnglishPatterns, copularWordRegex), @" $+ (NP < (EX < there))) !< (ADJP < (PP <: IN|TO))))"));
    EduStanfordNlpTreesCoordinationTransformer_flattenSQTsurgeon = EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(@"excise sq sq");
    EduStanfordNlpTreesCoordinationTransformer_removeXOverXTregex = EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"__=repeat <: (~repeat < __)");
    EduStanfordNlpTreesCoordinationTransformer_removeXOverXTsurgeon = EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(@"excise repeat repeat");
    EduStanfordNlpTreesCoordinationTransformer_ucpRenameTregex = EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"/^UCP/=ucp [ <, /^JJ|ADJP/=adjp | ( <1 DT <2 /^JJ|ADJP/=adjp ) | <- (ADJP=adjp < (JJR < /^(?i:younger|older)$/)) | <, /^N/=np | ( <1 DT <2 /^N/=np ) |  <, /^ADVP/=advp ]");
    EduStanfordNlpTreesCoordinationTransformer_ucpRenameTsurgeon = EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(@"[if exists adjp relabel ucp /^UCP(.*)$/ADJP$1/] [if exists np relabel ucp /^UCP(.*)$/NP$1/] [if exists advp relabel ucp /^UCP(.*)$/ADVP/]");
    EduStanfordNlpTreesCoordinationTransformer_MWE_PATTERNS = [IOSObjectArray newArrayWithObjects:(id[]){ EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@CONJP <1 (RB=node1 < /^(?i)as$/) <2 (RB=node2 < /^(?i)well$/) <- (IN=node3 < /^(?i)as$/)"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@ADVP|CONJP <1 (RB=node1 < /^(?i)as$/) <- (IN|RB=node2 < /^(?i)well$/)"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@PP < ((JJ=node1 < /^(?i)such$/) $+ (IN=node2 < /^(?i)as$/))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@PP < ((JJ|IN=node1 < /^(?i)due$/) $+ (IN|TO=node2 < /^(?i)to$/))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@PP|CONJP < ((IN|RB=node1 < /^(?i)(because|instead)$/) $+ (IN=node2 < of))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@ADVP|SBAR < ((IN|RB=node1 < /^(?i)in$/) $+ (NN=node2 < /^(?i)case$/))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@ADVP|PP < ((IN|RB=node1 < /^(?i)of$/) $+ (NN|RB=node2 < /^(?i)course$/))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@SBAR|PP < ((IN|RB=node1 < /^(?i)in$/) $+ (NN|NP|RB=node2 [< /^(?i)order$/ | <: (NN < /^(?i)order$/)]))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@PP|CONJP|SBAR < ((IN|RB=node1 < /^(?i)rather$/) $+ (IN=node2 < /^(?i)than$/))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@CONJP < ((IN|RB=node1 < /^(?i)not$/) $+ (TO=node2 < /^(?i)to$/ $+ (VB|RB=node3 < /^(?i)mention$/)))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@PP|SBAR < ((JJ|IN|RB=node1 < /^(?i)so$/) $+ (IN|TO=node2 < /^(?i)that$/))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@SBAR < ((IN|RB=node1 < /^(?i)as$/) $+ (IN=node2 < /^(?i)if$/))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@PP < ((JJ|RB=node1 < /^(?i)prior$/) $+ (TO|IN=node2 < /^(?i)to$/))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@PP < ((IN=node1 < /^(?i)as$/) $+ (TO|IN=node2 < /^(?i)to$/))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@ADVP < ((RB|NN=node1 < /^(?i)kind$/) $+ (IN|RB=node2 < /^(?i)of$/))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@SBAR < ((IN|RB=node1 < /^(?i)whether$/) $+ (CC=node2 < /^(?i)or$/ $+ (RB=node3 < /^(?i)not$/)))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@CONJP < ((IN=node1 < /^(?i)as$/) $+ (VBN=node2 < /^(?i)opposed$/ $+ (TO|IN=node3 < /^(?i)to$/)))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@ADVP|CONJP < ((VB|RB|VBD=node1 < /^(?i)let$/) $+ (RB|JJ=node2 < /^(?i)alone$/))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@ADVP|PP < ((IN|RB=node1 < /^(?i)in$/) $+ (IN|NP|PP|RB|ADVP=node2 [< /^(?i)between$/ | <: (IN|RB < /^(?i)between$/)]))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@ADVP|QP|ADJP < ((DT|RB=node1 < /^(?i)all$/) $+ (CC|RB|IN=node2 < /^(?i)but$/))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@ADVP|INTJ < ((NN|DT|RB=node1 < /^(?i)that$/) $+ (VBZ|RB=node2 < /^(?i)is$/))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@WHADVP < ((WRB=node1 < /^(?i:how)$/) $+ (VB=node2 < /^(?i)come$/))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@VP < ((VBD=node1 < had|'d) $+ (@PRT|ADVP=node2 <: (RBR < /^(?i)better$/)))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@QP|XS < ((JJR|RBR|IN=node1 < /^(?i)(more|less)$/) $+ (IN=node2 < /^(?i)than$/))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@QP < ((JJR|RBR|IN=node1 < /^(?i)up$/) $+ (IN|TO=node2 < /^(?i)to$/))"), EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@S|SQ|VP|ADVP|PP < (@ADVP < ((IN|RB=node1 < /^(?i)at$/) $+ (JJS|RBS=node2 < /^(?i)least$/)) !$+ (RB < /(?i)(once|twice)/))") } count:26 type:EduStanfordNlpTreesTregexTregexPattern_class_()];
    EduStanfordNlpTreesCoordinationTransformer_MWE_OPERATION = EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(@"[createSubtree MWE node1 node2] [if exists node3 move node3 $- node2]");
    EduStanfordNlpTreesCoordinationTransformer_ACCORDING_TO_PATTERN = EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"PP=pp1 < (VBG=node1 < /^(?i)according$/ $+ (PP=pp2 < (TO|IN=node2 < to)))");
    EduStanfordNlpTreesCoordinationTransformer_ACCORDING_TO_OPERATION = EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(@"[createSubtree MWE node1] [move node2 $- node1] [excise pp2 pp2]");
    EduStanfordNlpTreesCoordinationTransformer_BUT_ALSO_PATTERN = EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"CONJP=conjp < (CC=cc < but) < (RB=rb < also) ?$+ (__=nextNode < (__ < __))");
    EduStanfordNlpTreesCoordinationTransformer_BUT_ALSO_OPERATION = EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(@"[move cc $- conjp] [move rb $- cc] [if exists nextNode move rb >1 nextNode] [createSubtree ADVP rb] [delete conjp]");
    EduStanfordNlpTreesCoordinationTransformer_AT_RBS_PATTERN = EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@ADVP|QP < ((IN|RB=node1 < /^(?i)at$/) $+ (JJS|RBS=node2))");
    EduStanfordNlpTreesCoordinationTransformer_AT_RBS_OPERATION = EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(@"[relabel node1 IN] [createSubtree ADVP node1] [move node2 $- node1] [createSubtree NP node2]");
    EduStanfordNlpTreesCoordinationTransformer_AT_ALL_PATTERN = EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"@ADVP=head < (RB|IN=node1 < /^(?i)at$/ $+ (RB|DT=node2 < /^(?i)all$/))");
    EduStanfordNlpTreesCoordinationTransformer_AT_ALL_OPERATION = EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(@"[relabel head PP] [relabel node1 IN] [createSubtree NP node2]");
    EduStanfordNlpTreesCoordinationTransformer_FLAT_PREP_CC_PATTERN = EduStanfordNlpTreesTregexTregexPattern_compileWithNSString_(@"PP <, (/^(IN|TO)$/=p1 $+ (CC=cc $+ /^(IN|TO)$/=p2))");
    EduStanfordNlpTreesCoordinationTransformer_FLAT_PREP_CC_OPERATION = EduStanfordNlpTreesTregexTsurgeonTsurgeon_parseOperationWithNSString_(@"[createSubtree PCONJP p1 cc] [move p2 $- cc]");
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesCoordinationTransformer)
  }
}

@end

void EduStanfordNlpTreesCoordinationTransformer_initWithEduStanfordNlpTreesHeadFinder_(EduStanfordNlpTreesCoordinationTransformer *self, id<EduStanfordNlpTreesHeadFinder> hf) {
  EduStanfordNlpTreesCoordinationTransformer_initWithEduStanfordNlpTreesHeadFinder_withBoolean_(self, hf, false);
}

EduStanfordNlpTreesCoordinationTransformer *new_EduStanfordNlpTreesCoordinationTransformer_initWithEduStanfordNlpTreesHeadFinder_(id<EduStanfordNlpTreesHeadFinder> hf) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesCoordinationTransformer, initWithEduStanfordNlpTreesHeadFinder_, hf)
}

EduStanfordNlpTreesCoordinationTransformer *create_EduStanfordNlpTreesCoordinationTransformer_initWithEduStanfordNlpTreesHeadFinder_(id<EduStanfordNlpTreesHeadFinder> hf) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesCoordinationTransformer, initWithEduStanfordNlpTreesHeadFinder_, hf)
}

void EduStanfordNlpTreesCoordinationTransformer_initWithEduStanfordNlpTreesHeadFinder_withBoolean_(EduStanfordNlpTreesCoordinationTransformer *self, id<EduStanfordNlpTreesHeadFinder> hf, jboolean performMWETransformation) {
  NSObject_init(self);
  self->tn_ = new_EduStanfordNlpTreesDependencyTreeTransformer_init();
  self->dates_ = new_EduStanfordNlpTreesDateTreeTransformer_init();
  self->headFinder_ = hf;
  self->performMWETransformation_ = performMWETransformation;
  self->qp_ = new_EduStanfordNlpTreesQPTreeTransformer_initWithBoolean_(performMWETransformation);
}

EduStanfordNlpTreesCoordinationTransformer *new_EduStanfordNlpTreesCoordinationTransformer_initWithEduStanfordNlpTreesHeadFinder_withBoolean_(id<EduStanfordNlpTreesHeadFinder> hf, jboolean performMWETransformation) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesCoordinationTransformer, initWithEduStanfordNlpTreesHeadFinder_withBoolean_, hf, performMWETransformation)
}

EduStanfordNlpTreesCoordinationTransformer *create_EduStanfordNlpTreesCoordinationTransformer_initWithEduStanfordNlpTreesHeadFinder_withBoolean_(id<EduStanfordNlpTreesHeadFinder> hf, jboolean performMWETransformation) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesCoordinationTransformer, initWithEduStanfordNlpTreesHeadFinder_withBoolean_, hf, performMWETransformation)
}

EduStanfordNlpTreesTree *EduStanfordNlpTreesCoordinationTransformer_rearrangeNowThatWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t) {
  EduStanfordNlpTreesCoordinationTransformer_initialize();
  if (t == nil) {
    return t;
  }
  return EduStanfordNlpTreesTregexTsurgeonTsurgeon_processPatternWithEduStanfordNlpTreesTregexTregexPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesCoordinationTransformer_rearrangeNowThatTregex, EduStanfordNlpTreesCoordinationTransformer_rearrangeNowThatTsurgeon, t);
}

EduStanfordNlpTreesTree *EduStanfordNlpTreesCoordinationTransformer_changeSbarToPPWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t) {
  EduStanfordNlpTreesCoordinationTransformer_initialize();
  if (t == nil) {
    return nil;
  }
  return EduStanfordNlpTreesTregexTsurgeonTsurgeon_processPatternWithEduStanfordNlpTreesTregexTregexPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesCoordinationTransformer_changeSbarToPPTregex, EduStanfordNlpTreesCoordinationTransformer_changeSbarToPPTsurgeon, t);
}

EduStanfordNlpTreesTree *EduStanfordNlpTreesCoordinationTransformer_combineConjpWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t) {
  EduStanfordNlpTreesCoordinationTransformer_initialize();
  if (t == nil) {
    return nil;
  }
  return EduStanfordNlpTreesTregexTsurgeonTsurgeon_processPatternWithEduStanfordNlpTreesTregexTregexPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesCoordinationTransformer_findFlatConjpTregex, EduStanfordNlpTreesCoordinationTransformer_addConjpTsurgeon, t);
}

EduStanfordNlpTreesTree *EduStanfordNlpTreesCoordinationTransformer_moveRBWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t) {
  EduStanfordNlpTreesCoordinationTransformer_initialize();
  if (t == nil) {
    return nil;
  }
  {
    IOSObjectArray *a__ = EduStanfordNlpTreesCoordinationTransformer_moveRBTregex;
    EduStanfordNlpTreesTregexTregexPattern * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    EduStanfordNlpTreesTregexTregexPattern * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      EduStanfordNlpTreesTregexTregexPattern *pattern = *b__++;
      t = EduStanfordNlpTreesTregexTsurgeonTsurgeon_processPatternWithEduStanfordNlpTreesTregexTregexPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTree_(pattern, EduStanfordNlpTreesCoordinationTransformer_moveRBTsurgeon, t);
    }
  }
  return t;
}

EduStanfordNlpTreesTree *EduStanfordNlpTreesCoordinationTransformer_removeXOverXWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t) {
  EduStanfordNlpTreesCoordinationTransformer_initialize();
  return EduStanfordNlpTreesTregexTsurgeonTsurgeon_processPatternWithEduStanfordNlpTreesTregexTregexPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesCoordinationTransformer_removeXOverXTregex, EduStanfordNlpTreesCoordinationTransformer_removeXOverXTsurgeon, t);
}

EduStanfordNlpTreesTree *EduStanfordNlpTreesCoordinationTransformer_UCPtransformWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t) {
  EduStanfordNlpTreesCoordinationTransformer_initialize();
  if (t == nil) {
    return nil;
  }
  return EduStanfordNlpTreesTregexTsurgeonTsurgeon_processPatternWithEduStanfordNlpTreesTregexTregexPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesCoordinationTransformer_ucpRenameTregex, EduStanfordNlpTreesCoordinationTransformer_ucpRenameTsurgeon, t);
}

EduStanfordNlpTreesTree *EduStanfordNlpTreesCoordinationTransformer_CCtransformWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t) {
  EduStanfordNlpTreesCoordinationTransformer_initialize();
  jboolean notDone = true;
  while (notDone) {
    EduStanfordNlpTreesTree *cc = EduStanfordNlpTreesCoordinationTransformer_findCCparentWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTree_(t, t);
    if (cc != nil) {
      t = cc;
    }
    else {
      notDone = false;
    }
  }
  return t;
}

NSString *EduStanfordNlpTreesCoordinationTransformer_getHeadTagWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t) {
  EduStanfordNlpTreesCoordinationTransformer_initialize();
  if ([((NSString *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(t)) value])) hasPrefix:@"NN"]) {
    return @"NP";
  }
  else if ([((NSString *) nil_chk([t value])) hasPrefix:@"JJ"]) {
    return @"ADJP";
  }
  else {
    return @"NP";
  }
}

EduStanfordNlpTreesTree *EduStanfordNlpTreesCoordinationTransformer_transformCCWithEduStanfordNlpTreesTree_withInt_(EduStanfordNlpTreesTree *t, jint ccIndex) {
  EduStanfordNlpTreesCoordinationTransformer_initialize();
  if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"transformCC in:  ", t)];
  }
  id<EduStanfordNlpTreesTreeFactory> tf = [((EduStanfordNlpTreesTree *) nil_chk(t)) treeFactory];
  id<EduStanfordNlpLingLabelFactory> lf = [((id<EduStanfordNlpLingLabel>) nil_chk([t label])) labelFactory];
  IOSObjectArray *ccSiblings = [t children];
  id<JavaUtilList> ccPositions = new_JavaUtilArrayList_init();
  for (jint i = ccIndex + 1; i < ((IOSObjectArray *) nil_chk(ccSiblings))->size_; i++) {
    if ([((NSString *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(IOSObjectArray_Get(ccSiblings, i))) value])) hasPrefix:@"CC"] && i < ccSiblings->size_ - 1) {
      [ccPositions addWithId:JavaLangInteger_valueOfWithInt_(i)];
    }
  }
  NSString *beforeSibling = [((EduStanfordNlpTreesTree *) nil_chk(IOSObjectArray_Get(ccSiblings, ccIndex - 1))) value];
  if (ccIndex == 1 && ([((NSString *) nil_chk(beforeSibling)) isEqual:@"DT"] || [beforeSibling isEqual:@"JJ"] || [beforeSibling isEqual:@"RB"] || !([((NSString *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(IOSObjectArray_Get(ccSiblings, ccIndex + 1))) value])) isEqual:@"DT"])) && !([beforeSibling hasPrefix:@"NP"] || [beforeSibling isEqual:@"ADJP"] || [beforeSibling isEqual:@"NNS"])) {
    NSString *leftHead = EduStanfordNlpTreesCoordinationTransformer_getHeadTagWithEduStanfordNlpTreesTree_(IOSObjectArray_Get(ccSiblings, ccIndex - 1));
    EduStanfordNlpTreesTree *left = [((id<EduStanfordNlpTreesTreeFactory>) nil_chk(tf)) newTreeNodeWithEduStanfordNlpLingLabel:[((id<EduStanfordNlpLingLabelFactory>) nil_chk(lf)) newLabelWithNSString:leftHead] withJavaUtilList:nil];
    for (jint i = 0; i < ccIndex + 2; i++) {
      [((EduStanfordNlpTreesTree *) nil_chk(left)) addChildWithEduStanfordNlpTreesTree:IOSObjectArray_Get(ccSiblings, i)];
    }
    if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"print left tree"];
      [((EduStanfordNlpTreesTree *) nil_chk(left)) pennPrint];
      [JreLoadStatic(JavaLangSystem, out) println];
    }
    for (jint i = 0; i < ccIndex + 2; i++) {
      (void) [t removeChildWithInt:0];
    }
    if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
      if ([t numChildren] == 0) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"Youch! No t children"];
      }
    }
    if (![ccPositions isEmpty]) {
      jboolean comma = false;
      jint index = [((JavaLangInteger *) nil_chk([ccPositions getWithInt:0])) intValue];
      if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$I", @"more CC index ", index)];
      }
      if ([((NSString *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(IOSObjectArray_Get(ccSiblings, index - 1))) value])) isEqual:@","]) {
        index = index - 1;
        comma = true;
      }
      if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$I", @"more CC index ", index)];
      }
      NSString *head = EduStanfordNlpTreesCoordinationTransformer_getHeadTagWithEduStanfordNlpTreesTree_(IOSObjectArray_Get(ccSiblings, index - 1));
      if (ccIndex + 2 < index) {
        EduStanfordNlpTreesTree *tree = [tf newTreeNodeWithEduStanfordNlpLingLabel:[lf newLabelWithNSString:head] withJavaUtilList:nil];
        [((EduStanfordNlpTreesTree *) nil_chk(tree)) addChildWithInt:0 withEduStanfordNlpTreesTree:left];
        jint k = 1;
        for (jint j = ccIndex + 2; j < index; j++) {
          if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) [((EduStanfordNlpTreesTree *) nil_chk(IOSObjectArray_Get(ccSiblings, j))) pennPrint];
          (void) [t removeChildWithInt:0];
          [tree addChildWithInt:k withEduStanfordNlpTreesTree:IOSObjectArray_Get(ccSiblings, j)];
          k++;
        }
        if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
          [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"print t"];
          [t pennPrint];
          [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:@"print tree"];
          [tree pennPrint];
          [JreLoadStatic(JavaLangSystem, out) println];
        }
        [t addChildWithInt:0 withEduStanfordNlpTreesTree:tree];
      }
      else {
        [t addChildWithInt:0 withEduStanfordNlpTreesTree:left];
      }
      EduStanfordNlpTreesTree *rightTree = [tf newTreeNodeWithEduStanfordNlpLingLabel:[lf newLabelWithNSString:@"NP"] withJavaUtilList:nil];
      jint start = 2;
      if (comma) {
        start++;
      }
      while (start < [t numChildren]) {
        EduStanfordNlpTreesTree *sib = [t getChildWithInt:start];
        (void) [t removeChildWithInt:start];
        [((EduStanfordNlpTreesTree *) nil_chk(rightTree)) addChildWithEduStanfordNlpTreesTree:sib];
      }
      [t addChildWithEduStanfordNlpTreesTree:rightTree];
    }
    else {
      [t addChildWithInt:0 withEduStanfordNlpTreesTree:left];
    }
  }
  else if (ccIndex == 2 && [((NSString *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(IOSObjectArray_Get(ccSiblings, 0))) value])) hasPrefix:@"DT"] && ![((NSString *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(IOSObjectArray_Get(ccSiblings, ccIndex - 1))) value])) isEqual:@"NNS"] && (ccSiblings->size_ == 5 || (![ccPositions isEmpty] && [((JavaLangInteger *) nil_chk([ccPositions getWithInt:0])) intValue] == 5))) {
    NSString *head = EduStanfordNlpTreesCoordinationTransformer_getHeadTagWithEduStanfordNlpTreesTree_(IOSObjectArray_Get(ccSiblings, ccIndex - 1));
    EduStanfordNlpTreesTree *child = [((id<EduStanfordNlpTreesTreeFactory>) nil_chk(tf)) newTreeNodeWithEduStanfordNlpLingLabel:[((id<EduStanfordNlpLingLabelFactory>) nil_chk(lf)) newLabelWithNSString:head] withJavaUtilList:nil];
    for (jint i = 1; i < ccIndex + 2; i++) {
      [((EduStanfordNlpTreesTree *) nil_chk(child)) addChildWithEduStanfordNlpTreesTree:IOSObjectArray_Get(ccSiblings, i)];
    }
    if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
      if ([((EduStanfordNlpTreesTree *) nil_chk(child)) numChildren] == 0) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"Youch! No child children"];
      }
    }
    for (jint i = 1; i < ccIndex + 2; i++) {
      (void) [t removeChildWithInt:1];
    }
    [t addChildWithInt:1 withEduStanfordNlpTreesTree:child];
  }
  else if (ccIndex > 2 && [((NSString *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(IOSObjectArray_Get(ccSiblings, ccIndex - 2))) value])) isEqual:@","] && ![((NSString *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(IOSObjectArray_Get(ccSiblings, ccIndex - 1))) value])) isEqual:@"NNS"]) {
    NSString *head = EduStanfordNlpTreesCoordinationTransformer_getHeadTagWithEduStanfordNlpTreesTree_(IOSObjectArray_Get(ccSiblings, ccIndex - 1));
    EduStanfordNlpTreesTree *child = [((id<EduStanfordNlpTreesTreeFactory>) nil_chk(tf)) newTreeNodeWithEduStanfordNlpLingLabel:[((id<EduStanfordNlpLingLabelFactory>) nil_chk(lf)) newLabelWithNSString:head] withJavaUtilList:nil];
    for (jint i = ccIndex - 3; i < ccIndex + 2; i++) {
      [((EduStanfordNlpTreesTree *) nil_chk(child)) addChildWithEduStanfordNlpTreesTree:IOSObjectArray_Get(ccSiblings, i)];
    }
    if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
      if ([((EduStanfordNlpTreesTree *) nil_chk(child)) numChildren] == 0) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"Youch! No child children"];
      }
    }
    jint i = ccIndex - 4;
    while (i > 0 && [((NSString *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(IOSObjectArray_Get(ccSiblings, i))) value])) isEqual:@","]) {
      [((EduStanfordNlpTreesTree *) nil_chk(child)) addChildWithInt:0 withEduStanfordNlpTreesTree:IOSObjectArray_Get(ccSiblings, i)];
      [child addChildWithInt:0 withEduStanfordNlpTreesTree:IOSObjectArray_Get(ccSiblings, i - 1)];
      i = i - 2;
    }
    if (i < 0) {
      i = -1;
    }
    for (jint j = i + 1; j < ccIndex + 2; j++) {
      (void) [t removeChildWithInt:i + 1];
    }
    [t addChildWithInt:i + 1 withEduStanfordNlpTreesTree:child];
  }
  else {
    jboolean commaLeft = false;
    jboolean commaRight = false;
    jboolean preconj = false;
    jint indexBegin = 0;
    EduStanfordNlpTreesTree *conjT = [((id<EduStanfordNlpTreesTreeFactory>) nil_chk(tf)) newTreeNodeWithEduStanfordNlpLingLabel:[((id<EduStanfordNlpLingLabelFactory>) nil_chk(lf)) newLabelWithNSString:@"CC"] withJavaUtilList:nil];
    NSString *leftHead = EduStanfordNlpTreesCoordinationTransformer_getHeadTagWithEduStanfordNlpTreesTree_(IOSObjectArray_Get(ccSiblings, ccIndex - 1));
    EduStanfordNlpTreesTree *left = [tf newTreeNodeWithEduStanfordNlpLingLabel:[lf newLabelWithNSString:leftHead] withJavaUtilList:nil];
    EduStanfordNlpTreesTree *first = IOSObjectArray_Get(ccSiblings, 0);
    NSString *leaf = [((NSString *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(first)) firstChild])) value])) lowercaseString];
    if ([((NSString *) nil_chk(leaf)) isEqual:@"either"] || [leaf isEqual:@"neither"] || [leaf isEqual:@"both"]) {
      preconj = true;
      indexBegin = 1;
      [((EduStanfordNlpTreesTree *) nil_chk(conjT)) addChildWithEduStanfordNlpTreesTree:[first firstChild]];
    }
    for (jint i = indexBegin; i < ccIndex - 1; i++) {
      [((EduStanfordNlpTreesTree *) nil_chk(left)) addChildWithEduStanfordNlpTreesTree:IOSObjectArray_Get(ccSiblings, i)];
    }
    if ([((NSString *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(IOSObjectArray_Get(ccSiblings, ccIndex - 1))) value])) isEqual:@","]) {
      commaLeft = true;
    }
    else {
      [((EduStanfordNlpTreesTree *) nil_chk(left)) addChildWithEduStanfordNlpTreesTree:IOSObjectArray_Get(ccSiblings, ccIndex - 1)];
    }
    EduStanfordNlpTreesTree *cc = IOSObjectArray_Get(ccSiblings, ccIndex);
    jint nextCC;
    if ([ccPositions isEmpty]) {
      nextCC = ccSiblings->size_;
    }
    else {
      nextCC = [((JavaLangInteger *) nil_chk([ccPositions getWithInt:0])) intValue];
    }
    NSString *rightHead = EduStanfordNlpTreesCoordinationTransformer_getHeadTagWithEduStanfordNlpTreesTree_(IOSObjectArray_Get(ccSiblings, nextCC - 1));
    EduStanfordNlpTreesTree *right = [tf newTreeNodeWithEduStanfordNlpLingLabel:[lf newLabelWithNSString:rightHead] withJavaUtilList:nil];
    for (jint i = ccIndex + 1; i < nextCC - 1; i++) {
      [((EduStanfordNlpTreesTree *) nil_chk(right)) addChildWithEduStanfordNlpTreesTree:IOSObjectArray_Get(ccSiblings, i)];
    }
    if ([((NSString *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk(IOSObjectArray_Get(ccSiblings, nextCC - 1))) value])) isEqual:@","]) {
      commaRight = true;
    }
    else {
      [((EduStanfordNlpTreesTree *) nil_chk(right)) addChildWithEduStanfordNlpTreesTree:IOSObjectArray_Get(ccSiblings, nextCC - 1)];
    }
    if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
      if ([((EduStanfordNlpTreesTree *) nil_chk(left)) numChildren] == 0) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"Youch! No left children"];
      }
      if ([((EduStanfordNlpTreesTree *) nil_chk(right)) numChildren] == 0) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"Youch! No right children"];
      }
    }
    for (jint i = 0; i < nextCC; i++) {
      (void) [t removeChildWithInt:0];
    }
    if (![ccPositions isEmpty]) {
      EduStanfordNlpTreesTree *tree = [tf newTreeNodeWithEduStanfordNlpLingLabel:[lf newLabelWithNSString:@"NP"] withJavaUtilList:nil];
      if (preconj) {
        [((EduStanfordNlpTreesTree *) nil_chk(tree)) addChildWithEduStanfordNlpTreesTree:conjT];
      }
      if ([((EduStanfordNlpTreesTree *) nil_chk(left)) numChildren] > 0) {
        [((EduStanfordNlpTreesTree *) nil_chk(tree)) addChildWithEduStanfordNlpTreesTree:left];
      }
      if (commaLeft) {
        [((EduStanfordNlpTreesTree *) nil_chk(tree)) addChildWithEduStanfordNlpTreesTree:IOSObjectArray_Get(ccSiblings, ccIndex - 1)];
      }
      [((EduStanfordNlpTreesTree *) nil_chk(tree)) addChildWithEduStanfordNlpTreesTree:cc];
      if ([((EduStanfordNlpTreesTree *) nil_chk(right)) numChildren] > 0) {
        [tree addChildWithEduStanfordNlpTreesTree:right];
      }
      if (commaRight) {
        [t addChildWithInt:0 withEduStanfordNlpTreesTree:IOSObjectArray_Get(ccSiblings, nextCC - 1)];
      }
      [t addChildWithInt:0 withEduStanfordNlpTreesTree:tree];
    }
    else {
      if (preconj) {
        [t addChildWithEduStanfordNlpTreesTree:conjT];
      }
      if ([((EduStanfordNlpTreesTree *) nil_chk(left)) numChildren] > 0) {
        [t addChildWithEduStanfordNlpTreesTree:left];
      }
      if (commaLeft) {
        [t addChildWithEduStanfordNlpTreesTree:IOSObjectArray_Get(ccSiblings, ccIndex - 1)];
      }
      [t addChildWithEduStanfordNlpTreesTree:cc];
      if ([((EduStanfordNlpTreesTree *) nil_chk(right)) numChildren] > 0) {
        [t addChildWithEduStanfordNlpTreesTree:right];
      }
      if (commaRight) {
        [t addChildWithEduStanfordNlpTreesTree:IOSObjectArray_Get(ccSiblings, nextCC - 1)];
      }
    }
  }
  if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"transformCC out: ", t)];
  }
  return t;
}

jboolean EduStanfordNlpTreesCoordinationTransformer_notNPWithJavaUtilList_withInt_(id<JavaUtilList> children, jint ccIndex) {
  EduStanfordNlpTreesCoordinationTransformer_initialize();
  for (jint i = ccIndex, sz = [((id<JavaUtilList>) nil_chk(children)) size]; i < sz; i++) {
    if ([((NSString *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk([children getWithInt:i])) value])) hasPrefix:@"NP"]) {
      return false;
    }
  }
  return true;
}

EduStanfordNlpTreesTree *EduStanfordNlpTreesCoordinationTransformer_findCCparentWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t, EduStanfordNlpTreesTree *root) {
  EduStanfordNlpTreesCoordinationTransformer_initialize();
  if ([((EduStanfordNlpTreesTree *) nil_chk(t)) isPreTerminal]) {
    if ([((NSString *) nil_chk([t value])) hasPrefix:@"CC"]) {
      EduStanfordNlpTreesTree *parent = [t parentWithEduStanfordNlpTreesTree:root];
      if (parent != nil && [((NSString *) nil_chk([parent value])) hasPrefix:@"NP"]) {
        id<JavaUtilList> children = [parent getChildrenAsList];
        jint ccIndex = [((id<JavaUtilList>) nil_chk(children)) indexOfWithId:t];
        if ([children size] > ccIndex + 2 && EduStanfordNlpTreesCoordinationTransformer_notNPWithJavaUtilList_withInt_(children, ccIndex) && ccIndex != 0 && (ccIndex == [children size] - 1 || ![((NSString *) nil_chk([((EduStanfordNlpTreesTree *) nil_chk([children getWithInt:ccIndex + 1])) value])) hasPrefix:@"CC"])) {
          (void) EduStanfordNlpTreesCoordinationTransformer_transformCCWithEduStanfordNlpTreesTree_withInt_(parent, ccIndex);
          if (EduStanfordNlpTreesCoordinationTransformer_VERBOSE) {
            [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"After transformCC:             ", root)];
          }
          return root;
        }
      }
    }
  }
  else {
    for (EduStanfordNlpTreesTree * __strong child in nil_chk([t getChildrenAsList])) {
      EduStanfordNlpTreesTree *cur = EduStanfordNlpTreesCoordinationTransformer_findCCparentWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTree_(child, root);
      if (cur != nil) {
        return cur;
      }
    }
  }
  return nil;
}

EduStanfordNlpTreesTree *EduStanfordNlpTreesCoordinationTransformer_MWETransformWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t) {
  EduStanfordNlpTreesCoordinationTransformer_initialize();
  {
    IOSObjectArray *a__ = EduStanfordNlpTreesCoordinationTransformer_MWE_PATTERNS;
    EduStanfordNlpTreesTregexTregexPattern * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    EduStanfordNlpTreesTregexTregexPattern * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      EduStanfordNlpTreesTregexTregexPattern *p = *b__++;
      (void) EduStanfordNlpTreesTregexTsurgeonTsurgeon_processPatternWithEduStanfordNlpTreesTregexTregexPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTree_(p, EduStanfordNlpTreesCoordinationTransformer_MWE_OPERATION, t);
    }
  }
  (void) EduStanfordNlpTreesTregexTsurgeonTsurgeon_processPatternWithEduStanfordNlpTreesTregexTregexPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesCoordinationTransformer_ACCORDING_TO_PATTERN, EduStanfordNlpTreesCoordinationTransformer_ACCORDING_TO_OPERATION, t);
  (void) EduStanfordNlpTreesTregexTsurgeonTsurgeon_processPatternWithEduStanfordNlpTreesTregexTregexPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesCoordinationTransformer_BUT_ALSO_PATTERN, EduStanfordNlpTreesCoordinationTransformer_BUT_ALSO_OPERATION, t);
  (void) EduStanfordNlpTreesTregexTsurgeonTsurgeon_processPatternWithEduStanfordNlpTreesTregexTregexPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesCoordinationTransformer_AT_RBS_PATTERN, EduStanfordNlpTreesCoordinationTransformer_AT_RBS_OPERATION, t);
  (void) EduStanfordNlpTreesTregexTsurgeonTsurgeon_processPatternWithEduStanfordNlpTreesTregexTregexPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesCoordinationTransformer_AT_ALL_PATTERN, EduStanfordNlpTreesCoordinationTransformer_AT_ALL_OPERATION, t);
  return t;
}

EduStanfordNlpTreesTree *EduStanfordNlpTreesCoordinationTransformer_prepCCTransformWithEduStanfordNlpTreesTree_(EduStanfordNlpTreesTree *t) {
  EduStanfordNlpTreesCoordinationTransformer_initialize();
  (void) EduStanfordNlpTreesTregexTsurgeonTsurgeon_processPatternWithEduStanfordNlpTreesTregexTregexPattern_withEduStanfordNlpTreesTregexTsurgeonTsurgeonPattern_withEduStanfordNlpTreesTree_(EduStanfordNlpTreesCoordinationTransformer_FLAT_PREP_CC_PATTERN, EduStanfordNlpTreesCoordinationTransformer_FLAT_PREP_CC_OPERATION, t);
  return t;
}

void EduStanfordNlpTreesCoordinationTransformer_mainWithNSStringArray_(IOSObjectArray *args) {
  EduStanfordNlpTreesCoordinationTransformer_initialize();
  EduStanfordNlpTreesCoordinationTransformer *transformer = new_EduStanfordNlpTreesCoordinationTransformer_initWithEduStanfordNlpTreesHeadFinder_(nil);
  EduStanfordNlpTreesTreebank *tb = new_EduStanfordNlpTreesMemoryTreebank_init();
  JavaUtilProperties *props = EduStanfordNlpUtilStringUtils_argsToPropertiesWithNSStringArray_(args);
  NSString *treeFileName = [((JavaUtilProperties *) nil_chk(props)) getPropertyWithNSString:@"treeFile"];
  if (treeFileName != nil) {
    @try {
      id<EduStanfordNlpTreesTreeReader> tr = new_EduStanfordNlpTreesPennTreeReader_initWithJavaIoReader_withEduStanfordNlpTreesTreeFactory_(new_JavaIoBufferedReader_initWithJavaIoReader_(new_JavaIoInputStreamReader_initWithJavaIoInputStream_(new_JavaIoFileInputStream_initWithNSString_(treeFileName))), new_EduStanfordNlpTreesLabeledScoredTreeFactory_init());
      for (EduStanfordNlpTreesTree *t; (t = [tr readTree]) != nil; ) {
        [tb addWithId:t];
      }
    }
    @catch (JavaIoIOException *e) {
      @throw new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$@", @"File problem: ", e));
    }
  }
  for (EduStanfordNlpTreesTree * __strong t in tb) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"Original tree"];
    [((EduStanfordNlpTreesTree *) nil_chk(t)) pennPrint];
    [JreLoadStatic(JavaLangSystem, out) println];
    [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:@"Tree transformed"];
    EduStanfordNlpTreesTree *tree = [transformer transformTreeWithEduStanfordNlpTreesTree:t];
    [((EduStanfordNlpTreesTree *) nil_chk(tree)) pennPrint];
    [JreLoadStatic(JavaLangSystem, out) println];
    [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:@"----------------------------"];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesCoordinationTransformer)
