//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/PennTreebankTokenizer.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/process/TokenizerAdapter.h"
#include "edu/stanford/nlp/trees/PennTreebankTokenizer.h"
#include "java/io/Reader.h"
#include "java/io/StreamTokenizer.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer : JavaIoStreamTokenizer

- (instancetype)initWithJavaIoReader:(JavaIoReader *)r;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer)

__attribute__((unused)) static void EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer_initWithJavaIoReader_(EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer *self, JavaIoReader *r);

__attribute__((unused)) static EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer *new_EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer_initWithJavaIoReader_(JavaIoReader *r) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer *create_EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer_initWithJavaIoReader_(JavaIoReader *r);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer)

@implementation EduStanfordNlpTreesPennTreebankTokenizer

- (instancetype)initWithJavaIoReader:(JavaIoReader *)r {
  EduStanfordNlpTreesPennTreebankTokenizer_initWithJavaIoReader_(self, r);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaIoReader:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaIoReader;", "LEduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesPennTreebankTokenizer = { "PennTreebankTokenizer", "edu.stanford.nlp.trees", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 1, -1, -1, -1 };
  return &_EduStanfordNlpTreesPennTreebankTokenizer;
}

@end

void EduStanfordNlpTreesPennTreebankTokenizer_initWithJavaIoReader_(EduStanfordNlpTreesPennTreebankTokenizer *self, JavaIoReader *r) {
  EduStanfordNlpProcessTokenizerAdapter_initWithJavaIoStreamTokenizer_(self, new_EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer_initWithJavaIoReader_(r));
}

EduStanfordNlpTreesPennTreebankTokenizer *new_EduStanfordNlpTreesPennTreebankTokenizer_initWithJavaIoReader_(JavaIoReader *r) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesPennTreebankTokenizer, initWithJavaIoReader_, r)
}

EduStanfordNlpTreesPennTreebankTokenizer *create_EduStanfordNlpTreesPennTreebankTokenizer_initWithJavaIoReader_(JavaIoReader *r) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesPennTreebankTokenizer, initWithJavaIoReader_, r)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesPennTreebankTokenizer)

@implementation EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer

- (instancetype)initWithJavaIoReader:(JavaIoReader *)r {
  EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer_initWithJavaIoReader_(self, r);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaIoReader:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaIoReader;", "LEduStanfordNlpTreesPennTreebankTokenizer;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer = { "EnglishTreebankStreamTokenizer", "edu.stanford.nlp.trees", ptrTable, methods, NULL, 7, 0xa, 1, 0, 1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer;
}

@end

void EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer_initWithJavaIoReader_(EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer *self, JavaIoReader *r) {
  JavaIoStreamTokenizer_initWithJavaIoReader_(self, r);
  [self resetSyntax];
  [self wordCharsWithInt:'!' withInt:'\''];
  [self wordCharsWithInt:'*' withInt:'/'];
  [self wordCharsWithInt:'0' withInt:'9'];
  [self wordCharsWithInt:':' withInt:'@'];
  [self wordCharsWithInt:'A' withInt:'Z'];
  [self wordCharsWithInt:'[' withInt:'`'];
  [self wordCharsWithInt:'a' withInt:'z'];
  [self wordCharsWithInt:'{' withInt:'~'];
  [self wordCharsWithInt:128 withInt:255];
  [self whitespaceCharsWithInt:0 withInt:' '];
}

EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer *new_EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer_initWithJavaIoReader_(JavaIoReader *r) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer, initWithJavaIoReader_, r)
}

EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer *create_EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer_initWithJavaIoReader_(JavaIoReader *r) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer, initWithJavaIoReader_, r)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesPennTreebankTokenizer_EnglishTreebankStreamTokenizer)
