//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/TreePrint.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpTreesTreePrint")
#ifdef RESTRICT_EduStanfordNlpTreesTreePrint
#define INCLUDE_ALL_EduStanfordNlpTreesTreePrint 0
#else
#define INCLUDE_ALL_EduStanfordNlpTreesTreePrint 1
#endif
#undef RESTRICT_EduStanfordNlpTreesTreePrint

#if !defined (EduStanfordNlpTreesTreePrint_) && (INCLUDE_ALL_EduStanfordNlpTreesTreePrint || defined(INCLUDE_EduStanfordNlpTreesTreePrint))
#define EduStanfordNlpTreesTreePrint_

@class EduStanfordNlpTreesTree;
@class IOSObjectArray;
@class JavaIoPrintWriter;
@protocol EduStanfordNlpTreesHeadFinder;
@protocol EduStanfordNlpTreesTreebankLanguagePack;
@protocol JavaUtilCollection;
@protocol JavaUtilList;

@interface EduStanfordNlpTreesTreePrint : NSObject

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)formats;

- (instancetype)initWithNSString:(NSString *)formats
                    withNSString:(NSString *)options
withEduStanfordNlpTreesTreebankLanguagePack:(id<EduStanfordNlpTreesTreebankLanguagePack>)tlp;

- (instancetype)initWithNSString:(NSString *)formatString
                    withNSString:(NSString *)optionsString
withEduStanfordNlpTreesTreebankLanguagePack:(id<EduStanfordNlpTreesTreebankLanguagePack>)tlp
withEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)hf
withEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)typedDependencyHF;

- (instancetype)initWithNSString:(NSString *)formats
withEduStanfordNlpTreesTreebankLanguagePack:(id<EduStanfordNlpTreesTreebankLanguagePack>)tlp;

+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

- (EduStanfordNlpTreesTree *)markHeadNodesWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

+ (void)printWithJavaUtilCollection:(id<JavaUtilCollection>)dependencies
                        withBoolean:(jboolean)includeTags
              withJavaIoPrintWriter:(JavaIoPrintWriter *)pw;

+ (void)printWithJavaUtilCollection:(id<JavaUtilCollection>)dependencies
                       withNSString:(NSString *)format
                        withBoolean:(jboolean)includeTags
              withJavaIoPrintWriter:(JavaIoPrintWriter *)pw;

- (void)printFooterWithJavaIoPrintWriter:(JavaIoPrintWriter *)pw;

- (void)printHeaderWithJavaIoPrintWriter:(JavaIoPrintWriter *)pw
                            withNSString:(NSString *)charset;

- (void)printTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t;

- (void)printTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                       withJavaIoPrintWriter:(JavaIoPrintWriter *)pw;

- (void)printTreeWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
                                withNSString:(NSString *)id_
                       withJavaIoPrintWriter:(JavaIoPrintWriter *)pw;

- (void)printTreesWithJavaUtilList:(id<JavaUtilList>)trees
                      withNSString:(NSString *)id_
             withJavaIoPrintWriter:(JavaIoPrintWriter *)pw;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpTreesTreePrint)

inline NSString *EduStanfordNlpTreesTreePrint_get_rootLabelOnlyFormat();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpTreesTreePrint_rootLabelOnlyFormat;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesTreePrint, rootLabelOnlyFormat, NSString *)

inline NSString *EduStanfordNlpTreesTreePrint_get_headMark();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EduStanfordNlpTreesTreePrint_headMark;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesTreePrint, headMark, NSString *)

inline IOSObjectArray *EduStanfordNlpTreesTreePrint_get_outputTreeFormats();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *EduStanfordNlpTreesTreePrint_outputTreeFormats;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesTreePrint, outputTreeFormats, IOSObjectArray *)

FOUNDATION_EXPORT void EduStanfordNlpTreesTreePrint_initWithNSString_(EduStanfordNlpTreesTreePrint *self, NSString *formats);

FOUNDATION_EXPORT EduStanfordNlpTreesTreePrint *new_EduStanfordNlpTreesTreePrint_initWithNSString_(NSString *formats) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTreesTreePrint *create_EduStanfordNlpTreesTreePrint_initWithNSString_(NSString *formats);

FOUNDATION_EXPORT void EduStanfordNlpTreesTreePrint_initWithNSString_withEduStanfordNlpTreesTreebankLanguagePack_(EduStanfordNlpTreesTreePrint *self, NSString *formats, id<EduStanfordNlpTreesTreebankLanguagePack> tlp);

FOUNDATION_EXPORT EduStanfordNlpTreesTreePrint *new_EduStanfordNlpTreesTreePrint_initWithNSString_withEduStanfordNlpTreesTreebankLanguagePack_(NSString *formats, id<EduStanfordNlpTreesTreebankLanguagePack> tlp) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTreesTreePrint *create_EduStanfordNlpTreesTreePrint_initWithNSString_withEduStanfordNlpTreesTreebankLanguagePack_(NSString *formats, id<EduStanfordNlpTreesTreebankLanguagePack> tlp);

FOUNDATION_EXPORT void EduStanfordNlpTreesTreePrint_initWithNSString_withNSString_withEduStanfordNlpTreesTreebankLanguagePack_(EduStanfordNlpTreesTreePrint *self, NSString *formats, NSString *options, id<EduStanfordNlpTreesTreebankLanguagePack> tlp);

FOUNDATION_EXPORT EduStanfordNlpTreesTreePrint *new_EduStanfordNlpTreesTreePrint_initWithNSString_withNSString_withEduStanfordNlpTreesTreebankLanguagePack_(NSString *formats, NSString *options, id<EduStanfordNlpTreesTreebankLanguagePack> tlp) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTreesTreePrint *create_EduStanfordNlpTreesTreePrint_initWithNSString_withNSString_withEduStanfordNlpTreesTreebankLanguagePack_(NSString *formats, NSString *options, id<EduStanfordNlpTreesTreebankLanguagePack> tlp);

FOUNDATION_EXPORT void EduStanfordNlpTreesTreePrint_initWithNSString_withNSString_withEduStanfordNlpTreesTreebankLanguagePack_withEduStanfordNlpTreesHeadFinder_withEduStanfordNlpTreesHeadFinder_(EduStanfordNlpTreesTreePrint *self, NSString *formatString, NSString *optionsString, id<EduStanfordNlpTreesTreebankLanguagePack> tlp, id<EduStanfordNlpTreesHeadFinder> hf, id<EduStanfordNlpTreesHeadFinder> typedDependencyHF);

FOUNDATION_EXPORT EduStanfordNlpTreesTreePrint *new_EduStanfordNlpTreesTreePrint_initWithNSString_withNSString_withEduStanfordNlpTreesTreebankLanguagePack_withEduStanfordNlpTreesHeadFinder_withEduStanfordNlpTreesHeadFinder_(NSString *formatString, NSString *optionsString, id<EduStanfordNlpTreesTreebankLanguagePack> tlp, id<EduStanfordNlpTreesHeadFinder> hf, id<EduStanfordNlpTreesHeadFinder> typedDependencyHF) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTreesTreePrint *create_EduStanfordNlpTreesTreePrint_initWithNSString_withNSString_withEduStanfordNlpTreesTreebankLanguagePack_withEduStanfordNlpTreesHeadFinder_withEduStanfordNlpTreesHeadFinder_(NSString *formatString, NSString *optionsString, id<EduStanfordNlpTreesTreebankLanguagePack> tlp, id<EduStanfordNlpTreesHeadFinder> hf, id<EduStanfordNlpTreesHeadFinder> typedDependencyHF);

FOUNDATION_EXPORT void EduStanfordNlpTreesTreePrint_mainWithNSStringArray_(IOSObjectArray *args);

FOUNDATION_EXPORT void EduStanfordNlpTreesTreePrint_printWithJavaUtilCollection_withBoolean_withJavaIoPrintWriter_(id<JavaUtilCollection> dependencies, jboolean includeTags, JavaIoPrintWriter *pw);

FOUNDATION_EXPORT void EduStanfordNlpTreesTreePrint_printWithJavaUtilCollection_withNSString_withBoolean_withJavaIoPrintWriter_(id<JavaUtilCollection> dependencies, NSString *format, jboolean includeTags, JavaIoPrintWriter *pw);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesTreePrint)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpTreesTreePrint")
