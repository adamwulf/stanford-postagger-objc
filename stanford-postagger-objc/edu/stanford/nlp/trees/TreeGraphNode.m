//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/TreeGraphNode.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "edu/stanford/nlp/ling/CoreLabel.h"
#include "edu/stanford/nlp/ling/Label.h"
#include "edu/stanford/nlp/ling/LabelFactory.h"
#include "edu/stanford/nlp/trees/EnglishGrammaticalStructure.h"
#include "edu/stanford/nlp/trees/HeadFinder.h"
#include "edu/stanford/nlp/trees/LabeledScoredTreeFactory.h"
#include "edu/stanford/nlp/trees/PennTreeReader.h"
#include "edu/stanford/nlp/trees/SemanticHeadFinder.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeFactory.h"
#include "edu/stanford/nlp/trees/TreeGraphNode.h"
#include "edu/stanford/nlp/trees/TreeGraphNodeFactory.h"
#include "edu/stanford/nlp/trees/TreeReader.h"
#include "java/io/PrintStream.h"
#include "java/io/StringReader.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/util/List.h"

@interface EduStanfordNlpTreesTreeGraphNode () {
 @public
  EduStanfordNlpTreesTreeGraphNode *headWordNode_;
}

- (void)setHeadWordNodeWithEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)hwn;

+ (EduStanfordNlpTreesTreeGraphNode *)safeCastWithId:(id)t;

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesTreeGraphNode, headWordNode_, EduStanfordNlpTreesTreeGraphNode *)

inline id<EduStanfordNlpLingLabelFactory> EduStanfordNlpTreesTreeGraphNode_get_mlf();
static id<EduStanfordNlpLingLabelFactory> EduStanfordNlpTreesTreeGraphNode_mlf;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesTreeGraphNode, mlf, id<EduStanfordNlpLingLabelFactory>)

inline jlong EduStanfordNlpTreesTreeGraphNode_get_serialVersionUID();
#define EduStanfordNlpTreesTreeGraphNode_serialVersionUID 5080098143617475328LL
J2OBJC_STATIC_FIELD_CONSTANT(EduStanfordNlpTreesTreeGraphNode, serialVersionUID, jlong)

__attribute__((unused)) static void EduStanfordNlpTreesTreeGraphNode_setHeadWordNodeWithEduStanfordNlpTreesTreeGraphNode_(EduStanfordNlpTreesTreeGraphNode *self, EduStanfordNlpTreesTreeGraphNode *hwn);

__attribute__((unused)) static EduStanfordNlpTreesTreeGraphNode *EduStanfordNlpTreesTreeGraphNode_safeCastWithId_(id t);

@interface EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder : NSObject

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder)

inline EduStanfordNlpTreesTreeGraphNodeFactory *EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder_get_tgnf();
static EduStanfordNlpTreesTreeGraphNodeFactory *EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder_tgnf;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder, tgnf, EduStanfordNlpTreesTreeGraphNodeFactory *)

__attribute__((unused)) static void EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder_init(EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder *self);

__attribute__((unused)) static EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder *new_EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder *create_EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder_init();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesTreeGraphNode)

IOSObjectArray *EduStanfordNlpTreesTreeGraphNode_ZERO_TGN_CHILDREN;

@implementation EduStanfordNlpTreesTreeGraphNode

- (instancetype)initWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)label {
  EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpLingLabel_(self, label);
  return self;
}

- (instancetype)initWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)label
                               withJavaUtilList:(id<JavaUtilList>)children {
  EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpLingLabel_withJavaUtilList_(self, label, children);
  return self;
}

- (instancetype)initWithEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t
           withEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)parent {
  EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTreeGraphNode_(self, t, parent);
  return self;
}

- (jboolean)isEqual:(id)o {
  return o == self;
}

- (NSUInteger)hash {
  return JavaLangSystem_identityHashCodeWithId_(self);
}

- (EduStanfordNlpLingCoreLabel *)label {
  return label_;
}

- (void)setLabelWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)label {
  if ([label isKindOfClass:[EduStanfordNlpLingCoreLabel class]]) {
    [self setLabelWithEduStanfordNlpLingCoreLabel:(EduStanfordNlpLingCoreLabel *) cast_chk(label, [EduStanfordNlpLingCoreLabel class])];
  }
  else {
    [self setLabelWithEduStanfordNlpLingCoreLabel:(EduStanfordNlpLingCoreLabel *) cast_chk([((id<EduStanfordNlpLingLabelFactory>) nil_chk(EduStanfordNlpTreesTreeGraphNode_mlf)) newLabelWithEduStanfordNlpLingLabel:label], [EduStanfordNlpLingCoreLabel class])];
  }
}

- (void)setLabelWithEduStanfordNlpLingCoreLabel:(EduStanfordNlpLingCoreLabel *)label {
  self->label_ = label;
}

- (jint)index {
  return [((EduStanfordNlpLingCoreLabel *) nil_chk(label_)) index];
}

- (void)setIndexWithInt:(jint)index {
  [((EduStanfordNlpLingCoreLabel *) nil_chk(label_)) setIndexWithInt:index];
}

- (EduStanfordNlpTreesTreeGraphNode *)parent {
  return parent_;
}

- (void)setParentWithEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)parent {
  self->parent_ = parent;
}

- (IOSObjectArray *)children {
  return children_;
}

- (void)setChildrenWithEduStanfordNlpTreesTreeArray:(IOSObjectArray *)children {
  if (children == nil || children->size_ == 0) {
    self->children_ = EduStanfordNlpTreesTreeGraphNode_ZERO_TGN_CHILDREN;
  }
  else {
    if ([IOSClass_arrayType(EduStanfordNlpTreesTreeGraphNode_class_(), 1) isInstance:children]) {
      self->children_ = (IOSObjectArray *) cast_check(children, IOSClass_arrayType(EduStanfordNlpTreesTreeGraphNode_class_(), 1));
      {
        IOSObjectArray *a__ = self->children_;
        EduStanfordNlpTreesTreeGraphNode * const *b__ = a__->buffer_;
        EduStanfordNlpTreesTreeGraphNode * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          EduStanfordNlpTreesTreeGraphNode *child = *b__++;
          [((EduStanfordNlpTreesTreeGraphNode *) nil_chk(child)) setParentWithEduStanfordNlpTreesTreeGraphNode:self];
        }
      }
    }
    else {
      self->children_ = [IOSObjectArray newArrayWithLength:children->size_ type:EduStanfordNlpTreesTreeGraphNode_class_()];
      for (jint i = 0; i < children->size_; i++) {
        (void) IOSObjectArray_Set(nil_chk(self->children_), i, (EduStanfordNlpTreesTreeGraphNode *) cast_chk(IOSObjectArray_Get(children, i), [EduStanfordNlpTreesTreeGraphNode class]));
        [((EduStanfordNlpTreesTreeGraphNode *) nil_chk(IOSObjectArray_Get(self->children_, i))) setParentWithEduStanfordNlpTreesTreeGraphNode:self];
      }
    }
  }
}

- (void)setChildrenWithJavaUtilList:(id<JavaUtilList>)childTreesList {
  if (childTreesList == nil || [childTreesList isEmpty]) {
    [self setChildrenWithEduStanfordNlpTreesTreeArray:EduStanfordNlpTreesTreeGraphNode_ZERO_TGN_CHILDREN];
  }
  else {
    jint leng = [childTreesList size];
    IOSObjectArray *childTrees = [IOSObjectArray newArrayWithLength:leng type:EduStanfordNlpTreesTreeGraphNode_class_()];
    (void) [childTreesList toArrayWithNSObjectArray:childTrees];
    [self setChildrenWithEduStanfordNlpTreesTreeArray:childTrees];
  }
}

- (EduStanfordNlpTreesTree *)setChildWithInt:(jint)i
                 withEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  if (!([t isKindOfClass:[EduStanfordNlpTreesTreeGraphNode class]])) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Horrible error");
  }
  [((EduStanfordNlpTreesTreeGraphNode *) nil_chk(((EduStanfordNlpTreesTreeGraphNode *) cast_chk(t, [EduStanfordNlpTreesTreeGraphNode class])))) setParentWithEduStanfordNlpTreesTreeGraphNode:self];
  return [super setChildWithInt:i withEduStanfordNlpTreesTree:t];
}

- (void)addChildWithInt:(jint)i
withEduStanfordNlpTreesTree:(EduStanfordNlpTreesTree *)t {
  if (!([t isKindOfClass:[EduStanfordNlpTreesTreeGraphNode class]])) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Horrible error");
  }
  [((EduStanfordNlpTreesTreeGraphNode *) nil_chk(((EduStanfordNlpTreesTreeGraphNode *) cast_chk(t, [EduStanfordNlpTreesTreeGraphNode class])))) setParentWithEduStanfordNlpTreesTreeGraphNode:self];
  IOSObjectArray *kids = self->children_;
  IOSObjectArray *newKids = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(kids))->size_ + 1 type:EduStanfordNlpTreesTreeGraphNode_class_()];
  if (i != 0) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(kids, 0, newKids, 0, i);
  }
  (void) IOSObjectArray_Set(newKids, i, (EduStanfordNlpTreesTreeGraphNode *) cast_chk(t, [EduStanfordNlpTreesTreeGraphNode class]));
  if (i != kids->size_) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(kids, i, newKids, i + 1, kids->size_ - i);
  }
  self->children_ = newKids;
}

- (EduStanfordNlpTreesTree *)removeChildWithInt:(jint)i {
  IOSObjectArray *kids = [self children];
  EduStanfordNlpTreesTreeGraphNode *kid = IOSObjectArray_Get(nil_chk(kids), i);
  IOSObjectArray *newKids = [IOSObjectArray newArrayWithLength:kids->size_ - 1 type:EduStanfordNlpTreesTreeGraphNode_class_()];
  for (jint j = 0; j < newKids->size_; j++) {
    if (j < i) {
      (void) IOSObjectArray_Set(newKids, j, IOSObjectArray_Get(kids, j));
    }
    else {
      (void) IOSObjectArray_Set(newKids, j, IOSObjectArray_Get(kids, j + 1));
    }
  }
  self->children_ = newKids;
  return kid;
}

- (void)percolateHeadsWithEduStanfordNlpTreesHeadFinder:(id<EduStanfordNlpTreesHeadFinder>)hf {
  if ([self isLeaf]) {
    EduStanfordNlpTreesTreeGraphNode *hwn = [self headWordNode];
    if (hwn == nil) {
      EduStanfordNlpTreesTreeGraphNode_setHeadWordNodeWithEduStanfordNlpTreesTreeGraphNode_(self, self);
    }
  }
  else {
    {
      IOSObjectArray *a__ = [self children];
      EduStanfordNlpTreesTreeGraphNode * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      EduStanfordNlpTreesTreeGraphNode * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        EduStanfordNlpTreesTree *child = *b__++;
        [((EduStanfordNlpTreesTree *) nil_chk(child)) percolateHeadsWithEduStanfordNlpTreesHeadFinder:hf];
      }
    }
    EduStanfordNlpTreesTreeGraphNode *head = EduStanfordNlpTreesTreeGraphNode_safeCastWithId_([((id<EduStanfordNlpTreesHeadFinder>) nil_chk(hf)) determineHeadWithEduStanfordNlpTreesTree:self withEduStanfordNlpTreesTree:parent_]);
    if (head != nil) {
      EduStanfordNlpTreesTreeGraphNode *hwn = [head headWordNode];
      if (hwn == nil && [head isLeaf]) {
        EduStanfordNlpTreesTreeGraphNode_setHeadWordNodeWithEduStanfordNlpTreesTreeGraphNode_(self, head);
      }
      else {
        EduStanfordNlpTreesTreeGraphNode_setHeadWordNodeWithEduStanfordNlpTreesTreeGraphNode_(self, hwn);
      }
    }
    else {
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"Head is null: ", self)];
    }
  }
}

- (EduStanfordNlpTreesTreeGraphNode *)headWordNode {
  return headWordNode_;
}

- (void)setHeadWordNodeWithEduStanfordNlpTreesTreeGraphNode:(EduStanfordNlpTreesTreeGraphNode *)hwn {
  EduStanfordNlpTreesTreeGraphNode_setHeadWordNodeWithEduStanfordNlpTreesTreeGraphNode_(self, hwn);
}

+ (EduStanfordNlpTreesTreeGraphNode *)safeCastWithId:(id)t {
  return EduStanfordNlpTreesTreeGraphNode_safeCastWithId_(t);
}

- (EduStanfordNlpTreesTreeGraphNode *)highestNodeWithSameHead {
  EduStanfordNlpTreesTreeGraphNode *node = self;
  while (true) {
    EduStanfordNlpTreesTreeGraphNode *parent = EduStanfordNlpTreesTreeGraphNode_safeCastWithId_([node parent]);
    if (parent == nil || [parent headWordNode] != [node headWordNode]) {
      return node;
    }
    node = parent;
  }
}

- (id<EduStanfordNlpTreesTreeFactory>)treeFactory {
  id<EduStanfordNlpLingLabelFactory> lf;
  if ([self label] != nil) {
    lf = [((EduStanfordNlpLingCoreLabel *) nil_chk([self label])) labelFactory];
  }
  else {
    lf = EduStanfordNlpLingCoreLabel_factory();
  }
  return new_EduStanfordNlpTreesTreeGraphNodeFactory_initWithEduStanfordNlpLingLabelFactory_(lf);
}

+ (id<EduStanfordNlpTreesTreeFactory>)factory {
  return EduStanfordNlpTreesTreeGraphNode_factory();
}

+ (id<EduStanfordNlpTreesTreeFactory>)factoryWithEduStanfordNlpLingLabelFactory:(id<EduStanfordNlpLingLabelFactory>)lf {
  return EduStanfordNlpTreesTreeGraphNode_factoryWithEduStanfordNlpLingLabelFactory_(lf);
}

- (NSString *)toPrettyStringWithInt:(jint)indentLevel {
  JavaLangStringBuilder *buf = new_JavaLangStringBuilder_initWithNSString_(@"\n");
  for (jint i = 0; i < indentLevel; i++) {
    (void) [buf appendWithNSString:@"  "];
  }
  if (children_ == nil || children_->size_ == 0) {
    (void) [buf appendWithNSString:[((EduStanfordNlpLingCoreLabel *) nil_chk(label_)) toStringWithEduStanfordNlpLingCoreLabel_OutputFormat:JreLoadEnum(EduStanfordNlpLingCoreLabel_OutputFormat, VALUE_INDEX_MAP)]];
  }
  else {
    (void) [((JavaLangStringBuilder *) nil_chk([buf appendWithChar:'('])) appendWithNSString:[((EduStanfordNlpLingCoreLabel *) nil_chk(label_)) toStringWithEduStanfordNlpLingCoreLabel_OutputFormat:JreLoadEnum(EduStanfordNlpLingCoreLabel_OutputFormat, VALUE_INDEX_MAP)]];
    {
      IOSObjectArray *a__ = children_;
      EduStanfordNlpTreesTreeGraphNode * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      EduStanfordNlpTreesTreeGraphNode * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        EduStanfordNlpTreesTreeGraphNode *child = *b__++;
        (void) [((JavaLangStringBuilder *) nil_chk([buf appendWithChar:' '])) appendWithNSString:[((EduStanfordNlpTreesTreeGraphNode *) nil_chk(child)) toPrettyStringWithInt:indentLevel + 1]];
      }
    }
    (void) [buf appendWithChar:')'];
  }
  return [buf description];
}

- (NSString *)toOneLineString {
  JavaLangStringBuilder *buf = new_JavaLangStringBuilder_init();
  if (children_ == nil || children_->size_ == 0) {
    (void) [buf appendWithId:label_];
  }
  else {
    (void) [((JavaLangStringBuilder *) nil_chk([buf appendWithChar:'('])) appendWithId:label_];
    {
      IOSObjectArray *a__ = children_;
      EduStanfordNlpTreesTreeGraphNode * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      EduStanfordNlpTreesTreeGraphNode * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        EduStanfordNlpTreesTreeGraphNode *child = *b__++;
        (void) [((JavaLangStringBuilder *) nil_chk([buf appendWithChar:' '])) appendWithNSString:[((EduStanfordNlpTreesTreeGraphNode *) nil_chk(child)) toOneLineString]];
      }
    }
    (void) [buf appendWithChar:')'];
  }
  return [buf description];
}

- (NSString *)description {
  return [self toStringWithEduStanfordNlpLingCoreLabel_OutputFormat:JreLoadStatic(EduStanfordNlpLingCoreLabel, DEFAULT_FORMAT)];
}

- (NSString *)toStringWithEduStanfordNlpLingCoreLabel_OutputFormat:(EduStanfordNlpLingCoreLabel_OutputFormat *)format {
  return [((EduStanfordNlpLingCoreLabel *) nil_chk(label_)) toStringWithEduStanfordNlpLingCoreLabel_OutputFormat:format];
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  EduStanfordNlpTreesTreeGraphNode_mainWithNSStringArray_(args);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x4, -1, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpLingCoreLabel;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 9, 10, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTreeGraphNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "[LEduStanfordNlpTreesTreeGraphNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 15, -1, 16, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 18, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, 20, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 22, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTreeGraphNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 23, 12, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTreeGraphNode;", 0xa, 24, 5, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTreeGraphNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTreeFactory;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTreeFactory;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTreeFactory;", 0x9, 25, 26, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 27, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 28, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 28, 29, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 30, 31, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpLingLabel:);
  methods[1].selector = @selector(initWithEduStanfordNlpLingLabel:withJavaUtilList:);
  methods[2].selector = @selector(initWithEduStanfordNlpTreesTree:withEduStanfordNlpTreesTreeGraphNode:);
  methods[3].selector = @selector(isEqual:);
  methods[4].selector = @selector(hash);
  methods[5].selector = @selector(label);
  methods[6].selector = @selector(setLabelWithEduStanfordNlpLingLabel:);
  methods[7].selector = @selector(setLabelWithEduStanfordNlpLingCoreLabel:);
  methods[8].selector = @selector(index);
  methods[9].selector = @selector(setIndexWithInt:);
  methods[10].selector = @selector(parent);
  methods[11].selector = @selector(setParentWithEduStanfordNlpTreesTreeGraphNode:);
  methods[12].selector = @selector(children);
  methods[13].selector = @selector(setChildrenWithEduStanfordNlpTreesTreeArray:);
  methods[14].selector = @selector(setChildrenWithJavaUtilList:);
  methods[15].selector = @selector(setChildWithInt:withEduStanfordNlpTreesTree:);
  methods[16].selector = @selector(addChildWithInt:withEduStanfordNlpTreesTree:);
  methods[17].selector = @selector(removeChildWithInt:);
  methods[18].selector = @selector(percolateHeadsWithEduStanfordNlpTreesHeadFinder:);
  methods[19].selector = @selector(headWordNode);
  methods[20].selector = @selector(setHeadWordNodeWithEduStanfordNlpTreesTreeGraphNode:);
  methods[21].selector = @selector(safeCastWithId:);
  methods[22].selector = @selector(highestNodeWithSameHead);
  methods[23].selector = @selector(treeFactory);
  methods[24].selector = @selector(factory);
  methods[25].selector = @selector(factoryWithEduStanfordNlpLingLabelFactory:);
  methods[26].selector = @selector(toPrettyStringWithInt:);
  methods[27].selector = @selector(toOneLineString);
  methods[28].selector = @selector(description);
  methods[29].selector = @selector(toStringWithEduStanfordNlpLingCoreLabel_OutputFormat:);
  methods[30].selector = @selector(mainWithNSStringArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "label_", "LEduStanfordNlpLingCoreLabel;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "parent_", "LEduStanfordNlpTreesTreeGraphNode;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "children_", "[LEduStanfordNlpTreesTreeGraphNode;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "headWordNode_", "LEduStanfordNlpTreesTreeGraphNode;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ZERO_TGN_CHILDREN", "[LEduStanfordNlpTreesTreeGraphNode;", .constantValue.asLong = 0, 0x1c, -1, 32, -1, -1 },
    { "mlf", "LEduStanfordNlpLingLabelFactory;", .constantValue.asLong = 0, 0x1a, -1, 33, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EduStanfordNlpTreesTreeGraphNode_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpLingLabel;", "LEduStanfordNlpLingLabel;LJavaUtilList;", "(Ledu/stanford/nlp/ling/Label;Ljava/util/List<Ledu/stanford/nlp/trees/Tree;>;)V", "LEduStanfordNlpTreesTree;LEduStanfordNlpTreesTreeGraphNode;", "equals", "LNSObject;", "hashCode", "setLabel", "LEduStanfordNlpLingCoreLabel;", "setIndex", "I", "setParent", "LEduStanfordNlpTreesTreeGraphNode;", "setChildren", "[LEduStanfordNlpTreesTree;", "LJavaUtilList;", "(Ljava/util/List<+Ledu/stanford/nlp/trees/Tree;>;)V", "setChild", "ILEduStanfordNlpTreesTree;", "addChild", "removeChild", "percolateHeads", "LEduStanfordNlpTreesHeadFinder;", "setHeadWordNode", "safeCast", "factory", "LEduStanfordNlpLingLabelFactory;", "toPrettyString", "toString", "LEduStanfordNlpLingCoreLabel_OutputFormat;", "main", "[LNSString;", &EduStanfordNlpTreesTreeGraphNode_ZERO_TGN_CHILDREN, &EduStanfordNlpTreesTreeGraphNode_mlf, "LEduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTreeGraphNode = { "TreeGraphNode", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0x1, 31, 7, -1, 34, -1, -1, -1 };
  return &_EduStanfordNlpTreesTreeGraphNode;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesTreeGraphNode class]) {
    EduStanfordNlpTreesTreeGraphNode_ZERO_TGN_CHILDREN = [IOSObjectArray newArrayWithLength:0 type:EduStanfordNlpTreesTreeGraphNode_class_()];
    EduStanfordNlpTreesTreeGraphNode_mlf = EduStanfordNlpLingCoreLabel_factory();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesTreeGraphNode)
  }
}

@end

void EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpLingLabel_(EduStanfordNlpTreesTreeGraphNode *self, id<EduStanfordNlpLingLabel> label) {
  EduStanfordNlpTreesTree_init(self);
  self->children_ = EduStanfordNlpTreesTreeGraphNode_ZERO_TGN_CHILDREN;
  self->label_ = (EduStanfordNlpLingCoreLabel *) cast_chk([((id<EduStanfordNlpLingLabelFactory>) nil_chk(EduStanfordNlpTreesTreeGraphNode_mlf)) newLabelWithEduStanfordNlpLingLabel:label], [EduStanfordNlpLingCoreLabel class]);
}

EduStanfordNlpTreesTreeGraphNode *new_EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpLingLabel_(id<EduStanfordNlpLingLabel> label) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTreeGraphNode, initWithEduStanfordNlpLingLabel_, label)
}

EduStanfordNlpTreesTreeGraphNode *create_EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpLingLabel_(id<EduStanfordNlpLingLabel> label) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTreeGraphNode, initWithEduStanfordNlpLingLabel_, label)
}

void EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpLingLabel_withJavaUtilList_(EduStanfordNlpTreesTreeGraphNode *self, id<EduStanfordNlpLingLabel> label, id<JavaUtilList> children) {
  EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpLingLabel_(self, label);
  [self setChildrenWithJavaUtilList:children];
}

EduStanfordNlpTreesTreeGraphNode *new_EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpLingLabel_withJavaUtilList_(id<EduStanfordNlpLingLabel> label, id<JavaUtilList> children) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTreeGraphNode, initWithEduStanfordNlpLingLabel_withJavaUtilList_, label, children)
}

EduStanfordNlpTreesTreeGraphNode *create_EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpLingLabel_withJavaUtilList_(id<EduStanfordNlpLingLabel> label, id<JavaUtilList> children) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTreeGraphNode, initWithEduStanfordNlpLingLabel_withJavaUtilList_, label, children)
}

void EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTreeGraphNode_(EduStanfordNlpTreesTreeGraphNode *self, EduStanfordNlpTreesTree *t, EduStanfordNlpTreesTreeGraphNode *parent) {
  EduStanfordNlpTreesTree_init(self);
  self->children_ = EduStanfordNlpTreesTreeGraphNode_ZERO_TGN_CHILDREN;
  self->parent_ = parent;
  IOSObjectArray *tKids = [((EduStanfordNlpTreesTree *) nil_chk(t)) children];
  jint numKids = ((IOSObjectArray *) nil_chk(tKids))->size_;
  self->children_ = [IOSObjectArray newArrayWithLength:numKids type:EduStanfordNlpTreesTreeGraphNode_class_()];
  for (jint i = 0; i < numKids; i++) {
    (void) IOSObjectArray_SetAndConsume(nil_chk(self->children_), i, new_EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTreeGraphNode_(IOSObjectArray_Get(tKids, i), self));
    if ([t isPreTerminal]) {
      [((EduStanfordNlpLingCoreLabel *) nil_chk(((EduStanfordNlpTreesTreeGraphNode *) nil_chk(IOSObjectArray_Get(nil_chk(self->children_), i)))->label_)) setTagWithNSString:[((id<EduStanfordNlpLingLabel>) nil_chk([t label])) value]];
    }
  }
  self->label_ = (EduStanfordNlpLingCoreLabel *) cast_chk([((id<EduStanfordNlpLingLabelFactory>) nil_chk(EduStanfordNlpTreesTreeGraphNode_mlf)) newLabelWithEduStanfordNlpLingLabel:[t label]], [EduStanfordNlpLingCoreLabel class]);
}

EduStanfordNlpTreesTreeGraphNode *new_EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTreeGraphNode_(EduStanfordNlpTreesTree *t, EduStanfordNlpTreesTreeGraphNode *parent) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTreeGraphNode, initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTreeGraphNode_, t, parent)
}

EduStanfordNlpTreesTreeGraphNode *create_EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTreeGraphNode_(EduStanfordNlpTreesTree *t, EduStanfordNlpTreesTreeGraphNode *parent) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTreeGraphNode, initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTreeGraphNode_, t, parent)
}

void EduStanfordNlpTreesTreeGraphNode_setHeadWordNodeWithEduStanfordNlpTreesTreeGraphNode_(EduStanfordNlpTreesTreeGraphNode *self, EduStanfordNlpTreesTreeGraphNode *hwn) {
  self->headWordNode_ = hwn;
}

EduStanfordNlpTreesTreeGraphNode *EduStanfordNlpTreesTreeGraphNode_safeCastWithId_(id t) {
  EduStanfordNlpTreesTreeGraphNode_initialize();
  if (t == nil || !([t isKindOfClass:[EduStanfordNlpTreesTreeGraphNode class]])) {
    return nil;
  }
  return (EduStanfordNlpTreesTreeGraphNode *) cast_chk(t, [EduStanfordNlpTreesTreeGraphNode class]);
}

id<EduStanfordNlpTreesTreeFactory> EduStanfordNlpTreesTreeGraphNode_factory() {
  EduStanfordNlpTreesTreeGraphNode_initialize();
  return JreLoadStatic(EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder, tgnf);
}

id<EduStanfordNlpTreesTreeFactory> EduStanfordNlpTreesTreeGraphNode_factoryWithEduStanfordNlpLingLabelFactory_(id<EduStanfordNlpLingLabelFactory> lf) {
  EduStanfordNlpTreesTreeGraphNode_initialize();
  return new_EduStanfordNlpTreesTreeGraphNodeFactory_initWithEduStanfordNlpLingLabelFactory_(lf);
}

void EduStanfordNlpTreesTreeGraphNode_mainWithNSStringArray_(IOSObjectArray *args) {
  EduStanfordNlpTreesTreeGraphNode_initialize();
  @try {
    id<EduStanfordNlpTreesTreeReader> tr = new_EduStanfordNlpTreesPennTreeReader_initWithJavaIoReader_withEduStanfordNlpTreesTreeFactory_(new_JavaIoStringReader_initWithNSString_(@"(S (NP (NNP Sam)) (VP (VBD died) (NP (NN today))))"), new_EduStanfordNlpTreesLabeledScoredTreeFactory_init());
    EduStanfordNlpTreesTree *t = [tr readTree];
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithId:t];
    EduStanfordNlpTreesTreeGraphNode *tgn = new_EduStanfordNlpTreesTreeGraphNode_initWithEduStanfordNlpTreesTree_withEduStanfordNlpTreesTreeGraphNode_(t, nil);
    [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:[tgn toPrettyStringWithInt:0]];
    EduStanfordNlpTreesEnglishGrammaticalStructure *gs = new_EduStanfordNlpTreesEnglishGrammaticalStructure_initWithEduStanfordNlpTreesTree_(tgn);
    [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:[tgn toPrettyStringWithInt:0]];
    [tgn percolateHeadsWithEduStanfordNlpTreesHeadFinder:new_EduStanfordNlpTreesSemanticHeadFinder_init()];
    [JreLoadStatic(JavaLangSystem, out) printlnWithNSString:[tgn toPrettyStringWithInt:0]];
  }
  @catch (JavaLangException *e) {
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$@", @"Horrible error: ", e)];
    [((JavaLangException *) nil_chk(e)) printStackTrace];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTreeGraphNode)

J2OBJC_INITIALIZED_DEFN(EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder)

@implementation EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "tgnf", "LEduStanfordNlpTreesTreeGraphNodeFactory;", .constantValue.asLong = 0, 0x18, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder_tgnf, "LEduStanfordNlpTreesTreeGraphNode;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder = { "TreeFactoryHolder", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder;
}

+ (void)initialize {
  if (self == [EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder class]) {
    EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder_tgnf = new_EduStanfordNlpTreesTreeGraphNodeFactory_init();
    J2OBJC_SET_INITIALIZED(EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder)
  }
}

@end

void EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder_init(EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder *self) {
  NSObject_init(self);
}

EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder *new_EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder_init() {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder, init)
}

EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder *create_EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder_init() {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTreeGraphNode_TreeFactoryHolder)
