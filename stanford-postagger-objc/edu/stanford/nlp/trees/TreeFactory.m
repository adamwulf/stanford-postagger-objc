//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/TreeFactory.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/trees/TreeFactory.h"

@interface EduStanfordNlpTreesTreeFactory : NSObject

@end

@implementation EduStanfordNlpTreesTreeFactory

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEduStanfordNlpTreesTree;", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x401, 2, 3, -1, 4, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x401, 0, 5, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x401, 2, 6, -1, 7, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(newLeafWithNSString:);
  methods[1].selector = @selector(newTreeNodeWithNSString:withJavaUtilList:);
  methods[2].selector = @selector(newLeafWithEduStanfordNlpLingLabel:);
  methods[3].selector = @selector(newTreeNodeWithEduStanfordNlpLingLabel:withJavaUtilList:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "newLeaf", "LNSString;", "newTreeNode", "LNSString;LJavaUtilList;", "(Ljava/lang/String;Ljava/util/List<Ledu/stanford/nlp/trees/Tree;>;)Ledu/stanford/nlp/trees/Tree;", "LEduStanfordNlpLingLabel;", "LEduStanfordNlpLingLabel;LJavaUtilList;", "(Ledu/stanford/nlp/ling/Label;Ljava/util/List<Ledu/stanford/nlp/trees/Tree;>;)Ledu/stanford/nlp/trees/Tree;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesTreeFactory = { "TreeFactory", "edu.stanford.nlp.trees", ptrTable, methods, NULL, 7, 0x609, 4, 0, -1, -1, -1, -1, -1 };
  return &_EduStanfordNlpTreesTreeFactory;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesTreeFactory)
