//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/CompositeTreebank.java
//

#include "J2ObjC_source.h"
#include "edu/stanford/nlp/trees/CompositeTreebank.h"
#include "edu/stanford/nlp/trees/Tree.h"
#include "edu/stanford/nlp/trees/TreeVisitor.h"
#include "edu/stanford/nlp/trees/Treebank.h"
#include "java/io/File.h"
#include "java/io/FileFilter.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "java/util/function/Consumer.h"

@interface EduStanfordNlpTreesCompositeTreebank () {
 @public
  EduStanfordNlpTreesTreebank *t1_;
  EduStanfordNlpTreesTreebank *t2_;
}

@end

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesCompositeTreebank, t1_, EduStanfordNlpTreesTreebank *)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesCompositeTreebank, t2_, EduStanfordNlpTreesTreebank *)

@interface EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator : NSObject < JavaUtilIterator > {
 @public
  id<JavaUtilIterator> it1_;
  id<JavaUtilIterator> it2_;
}

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)c1
                    withJavaUtilCollection:(id<JavaUtilCollection>)c2;

- (jboolean)hasNext;

- (EduStanfordNlpTreesTree *)next;

- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator)

J2OBJC_FIELD_SETTER(EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator, it1_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator, it2_, id<JavaUtilIterator>)

__attribute__((unused)) static void EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator_initWithJavaUtilCollection_withJavaUtilCollection_(EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator *self, id<JavaUtilCollection> c1, id<JavaUtilCollection> c2);

__attribute__((unused)) static EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator *new_EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator_initWithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> c1, id<JavaUtilCollection> c2) NS_RETURNS_RETAINED;

__attribute__((unused)) static EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator *create_EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator_initWithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> c1, id<JavaUtilCollection> c2);

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator)

@implementation EduStanfordNlpTreesCompositeTreebank

- (instancetype)initWithEduStanfordNlpTreesTreebank:(EduStanfordNlpTreesTreebank *)t1
                    withEduStanfordNlpTreesTreebank:(EduStanfordNlpTreesTreebank *)t2 {
  EduStanfordNlpTreesCompositeTreebank_initWithEduStanfordNlpTreesTreebank_withEduStanfordNlpTreesTreebank_(self, t1, t2);
  return self;
}

- (void)clear {
  [((EduStanfordNlpTreesTreebank *) nil_chk(t1_)) clear];
  [((EduStanfordNlpTreesTreebank *) nil_chk(t2_)) clear];
}

- (void)loadPathWithJavaIoFile:(JavaIoFile *)path
          withJavaIoFileFilter:(id<JavaIoFileFilter>)filt {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (void)applyWithEduStanfordNlpTreesTreeVisitor:(id<EduStanfordNlpTreesTreeVisitor>)tp {
  for (EduStanfordNlpTreesTree * __strong tree in self) {
    [((id<EduStanfordNlpTreesTreeVisitor>) nil_chk(tp)) visitTreeWithEduStanfordNlpTreesTree:tree];
  }
}

- (id<JavaUtilIterator>)iterator {
  return new_EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator_initWithJavaUtilCollection_withJavaUtilCollection_(t1_, t2_);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithEduStanfordNlpTreesTreebank:withEduStanfordNlpTreesTreebank:);
  methods[1].selector = @selector(clear);
  methods[2].selector = @selector(loadPathWithJavaIoFile:withJavaIoFileFilter:);
  methods[3].selector = @selector(applyWithEduStanfordNlpTreesTreeVisitor:);
  methods[4].selector = @selector(iterator);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "t1_", "LEduStanfordNlpTreesTreebank;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "t2_", "LEduStanfordNlpTreesTreebank;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEduStanfordNlpTreesTreebank;LEduStanfordNlpTreesTreebank;", "loadPath", "LJavaIoFile;LJavaIoFileFilter;", "apply", "LEduStanfordNlpTreesTreeVisitor;", "()Ljava/util/Iterator<Ledu/stanford/nlp/trees/Tree;>;", "LEduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesCompositeTreebank = { "CompositeTreebank", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0x1, 5, 2, -1, 6, -1, -1, -1 };
  return &_EduStanfordNlpTreesCompositeTreebank;
}

@end

void EduStanfordNlpTreesCompositeTreebank_initWithEduStanfordNlpTreesTreebank_withEduStanfordNlpTreesTreebank_(EduStanfordNlpTreesCompositeTreebank *self, EduStanfordNlpTreesTreebank *t1, EduStanfordNlpTreesTreebank *t2) {
  EduStanfordNlpTreesTreebank_init(self);
  self->t1_ = t1;
  self->t2_ = t2;
}

EduStanfordNlpTreesCompositeTreebank *new_EduStanfordNlpTreesCompositeTreebank_initWithEduStanfordNlpTreesTreebank_withEduStanfordNlpTreesTreebank_(EduStanfordNlpTreesTreebank *t1, EduStanfordNlpTreesTreebank *t2) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesCompositeTreebank, initWithEduStanfordNlpTreesTreebank_withEduStanfordNlpTreesTreebank_, t1, t2)
}

EduStanfordNlpTreesCompositeTreebank *create_EduStanfordNlpTreesCompositeTreebank_initWithEduStanfordNlpTreesTreebank_withEduStanfordNlpTreesTreebank_(EduStanfordNlpTreesTreebank *t1, EduStanfordNlpTreesTreebank *t2) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesCompositeTreebank, initWithEduStanfordNlpTreesTreebank_withEduStanfordNlpTreesTreebank_, t1, t2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesCompositeTreebank)

@implementation EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)c1
                    withJavaUtilCollection:(id<JavaUtilCollection>)c2 {
  EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator_initWithJavaUtilCollection_withJavaUtilCollection_(self, c1, c2);
  return self;
}

- (jboolean)hasNext {
  return ([((id<JavaUtilIterator>) nil_chk(it1_)) hasNext] || [((id<JavaUtilIterator>) nil_chk(it2_)) hasNext]);
}

- (EduStanfordNlpTreesTree *)next {
  EduStanfordNlpTreesTree *tree = [((id<JavaUtilIterator>) nil_chk(it1_)) hasNext] ? [it1_ next] : [((id<JavaUtilIterator>) nil_chk(it2_)) next];
  return tree;
}

- (void)remove {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEduStanfordNlpTreesTree;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilCollection:withJavaUtilCollection:);
  methods[1].selector = @selector(hasNext);
  methods[2].selector = @selector(next);
  methods[3].selector = @selector(remove);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "it1_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x12, -1, -1, 2, -1 },
    { "it2_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x12, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilCollection;LJavaUtilCollection;", "(Ljava/util/Collection<Ledu/stanford/nlp/trees/Tree;>;Ljava/util/Collection<Ledu/stanford/nlp/trees/Tree;>;)V", "Ljava/util/Iterator<Ledu/stanford/nlp/trees/Tree;>;", "LEduStanfordNlpTreesCompositeTreebank;", "Ljava/lang/Object;Ljava/util/Iterator<Ledu/stanford/nlp/trees/Tree;>;" };
  static const J2ObjcClassInfo _EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator = { "CompositeTreebankIterator", "edu.stanford.nlp.trees", ptrTable, methods, fields, 7, 0xa, 4, 2, 3, -1, -1, 4, -1 };
  return &_EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator;
}

@end

void EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator_initWithJavaUtilCollection_withJavaUtilCollection_(EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator *self, id<JavaUtilCollection> c1, id<JavaUtilCollection> c2) {
  NSObject_init(self);
  self->it1_ = [((id<JavaUtilCollection>) nil_chk(c1)) iterator];
  self->it2_ = [((id<JavaUtilCollection>) nil_chk(c2)) iterator];
}

EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator *new_EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator_initWithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> c1, id<JavaUtilCollection> c2) {
  J2OBJC_NEW_IMPL(EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator, initWithJavaUtilCollection_withJavaUtilCollection_, c1, c2)
}

EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator *create_EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator_initWithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> c1, id<JavaUtilCollection> c2) {
  J2OBJC_CREATE_IMPL(EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator, initWithJavaUtilCollection_withJavaUtilCollection_, c1, c2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EduStanfordNlpTreesCompositeTreebank_CompositeTreebankIterator)
