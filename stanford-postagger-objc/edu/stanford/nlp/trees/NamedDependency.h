//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: stanford-postagger-java/edu/stanford/nlp/trees/NamedDependency.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EduStanfordNlpTreesNamedDependency")
#ifdef RESTRICT_EduStanfordNlpTreesNamedDependency
#define INCLUDE_ALL_EduStanfordNlpTreesNamedDependency 0
#else
#define INCLUDE_ALL_EduStanfordNlpTreesNamedDependency 1
#endif
#undef RESTRICT_EduStanfordNlpTreesNamedDependency

#if !defined (EduStanfordNlpTreesNamedDependency_) && (INCLUDE_ALL_EduStanfordNlpTreesNamedDependency || defined(INCLUDE_EduStanfordNlpTreesNamedDependency))
#define EduStanfordNlpTreesNamedDependency_

#define RESTRICT_EduStanfordNlpTreesUnnamedDependency 1
#define INCLUDE_EduStanfordNlpTreesUnnamedDependency 1
#include "edu/stanford/nlp/trees/UnnamedDependency.h"

@protocol EduStanfordNlpLingLabel;
@protocol EduStanfordNlpTreesDependencyFactory;

@interface EduStanfordNlpTreesNamedDependency : EduStanfordNlpTreesUnnamedDependency

#pragma mark Public

- (instancetype)initWithEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)regent
                    withEduStanfordNlpLingLabel:(id<EduStanfordNlpLingLabel>)dependent
                                         withId:(id)name;

- (instancetype)initWithNSString:(NSString *)regent
                    withNSString:(NSString *)dependent
                          withId:(id)name;

- (id<EduStanfordNlpTreesDependencyFactory>)dependencyFactory;

- (jboolean)isEqual:(id)o;

+ (id<EduStanfordNlpTreesDependencyFactory>)factory;

- (NSUInteger)hash;

- (id)name;

- (NSString *)description;

- (NSString *)toStringWithNSString:(NSString *)format;

@end

J2OBJC_EMPTY_STATIC_INIT(EduStanfordNlpTreesNamedDependency)

FOUNDATION_EXPORT void EduStanfordNlpTreesNamedDependency_initWithNSString_withNSString_withId_(EduStanfordNlpTreesNamedDependency *self, NSString *regent, NSString *dependent, id name);

FOUNDATION_EXPORT EduStanfordNlpTreesNamedDependency *new_EduStanfordNlpTreesNamedDependency_initWithNSString_withNSString_withId_(NSString *regent, NSString *dependent, id name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTreesNamedDependency *create_EduStanfordNlpTreesNamedDependency_initWithNSString_withNSString_withId_(NSString *regent, NSString *dependent, id name);

FOUNDATION_EXPORT void EduStanfordNlpTreesNamedDependency_initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_withId_(EduStanfordNlpTreesNamedDependency *self, id<EduStanfordNlpLingLabel> regent, id<EduStanfordNlpLingLabel> dependent, id name);

FOUNDATION_EXPORT EduStanfordNlpTreesNamedDependency *new_EduStanfordNlpTreesNamedDependency_initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_withId_(id<EduStanfordNlpLingLabel> regent, id<EduStanfordNlpLingLabel> dependent, id name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EduStanfordNlpTreesNamedDependency *create_EduStanfordNlpTreesNamedDependency_initWithEduStanfordNlpLingLabel_withEduStanfordNlpLingLabel_withId_(id<EduStanfordNlpLingLabel> regent, id<EduStanfordNlpLingLabel> dependent, id name);

FOUNDATION_EXPORT id<EduStanfordNlpTreesDependencyFactory> EduStanfordNlpTreesNamedDependency_factory();

J2OBJC_TYPE_LITERAL_HEADER(EduStanfordNlpTreesNamedDependency)

#endif

#pragma pop_macro("INCLUDE_ALL_EduStanfordNlpTreesNamedDependency")
